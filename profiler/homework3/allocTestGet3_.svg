<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (5,976 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (3,791 samples, 63.44%)</title><rect x="10.2" y="803.0" width="748.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.2" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (14 samples, 0.23%)</title><rect x="10.2" y="787.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.2" y="798.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (14 samples, 0.23%)</title><rect x="10.2" y="771.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.2" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2081637855.linkToTargetMethod (14 samples, 0.23%)</title><rect x="10.2" y="755.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1439127040.invoke (14 samples, 0.23%)</title><rect x="10.2" y="739.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.23%)</title><rect x="10.2" y="723.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (5 samples, 0.08%)</title><rect x="10.2" y="707.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.08%)</title><rect x="10.2" y="691.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="13.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (9 samples, 0.15%)</title><rect x="11.2" y="707.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="14.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (9 samples, 0.15%)</title><rect x="11.2" y="691.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.2" y="702.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.15%)</title><rect x="11.2" y="675.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="14.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,777 samples, 63.20%)</title><rect x="13.0" y="787.0" width="745.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,777 samples, 63.20%)</title><rect x="13.0" y="771.0" width="745.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (88 samples, 1.47%)</title><rect x="13.0" y="755.0" width="17.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="16.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (88 samples, 1.47%)</title><rect x="13.0" y="739.0" width="17.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (88 samples, 1.47%)</title><rect x="13.0" y="723.0" width="17.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="16.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (88 samples, 1.47%)</title><rect x="13.0" y="707.0" width="17.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.0" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (88 samples, 1.47%)</title><rect x="13.0" y="691.0" width="17.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="16.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$123/1008778936.run (3,521 samples, 58.92%)</title><rect x="30.3" y="755.0" width="695.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="33.3" y="766.0">ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$123/1008778936.run</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityGet$1 (3,521 samples, 58.92%)</title><rect x="30.3" y="739.0" width="695.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="33.3" y="750.0">ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityGet$1</text>
</g>
<g>
<title>java/lang/String.getBytes (83 samples, 1.39%)</title><rect x="30.3" y="723.0" width="16.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="33.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (83 samples, 1.39%)</title><rect x="30.3" y="707.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (83 samples, 1.39%)</title><rect x="30.3" y="691.0" width="16.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="33.3" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (83 samples, 1.39%)</title><rect x="30.3" y="675.0" width="16.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="33.3" y="686.0"></text>
</g>
<g>
<title>byte[] (83 samples, 1.39%)</title><rect x="30.3" y="659.0" width="16.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="33.3" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (117 samples, 1.96%)</title><rect x="46.7" y="723.0" width="23.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="49.7" y="734.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (117 samples, 1.96%)</title><rect x="46.7" y="707.0" width="23.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.7" y="718.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (117 samples, 1.96%)</title><rect x="46.7" y="691.0" width="23.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="49.7" y="702.0">j..</text>
</g>
<g>
<title>one.nio.http.Response (50 samples, 0.84%)</title><rect x="69.8" y="723.0" width="9.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="72.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (314 samples, 5.25%)</title><rect x="79.7" y="723.0" width="62.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.7" y="734.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (314 samples, 5.25%)</title><rect x="79.7" y="707.0" width="62.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.7" y="718.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (221 samples, 3.70%)</title><rect x="79.7" y="691.0" width="43.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.7" y="702.0">one/..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (221 samples, 3.70%)</title><rect x="79.7" y="675.0" width="43.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="82.7" y="686.0">one/..</text>
</g>
<g>
<title>byte[] (221 samples, 3.70%)</title><rect x="79.7" y="659.0" width="43.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="82.7" y="670.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (93 samples, 1.56%)</title><rect x="123.3" y="691.0" width="18.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="126.3" y="702.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (93 samples, 1.56%)</title><rect x="123.3" y="675.0" width="18.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="126.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (228 samples, 3.82%)</title><rect x="141.7" y="723.0" width="45.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.7" y="734.0">one/..</text>
</g>
<g>
<title>byte[] (110 samples, 1.84%)</title><rect x="141.7" y="707.0" width="21.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="144.7" y="718.0">b..</text>
</g>
<g>
<title>java.lang.String[] (70 samples, 1.17%)</title><rect x="163.4" y="707.0" width="13.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="166.4" y="718.0"></text>
</g>
<g>
<title>java.lang.String (48 samples, 0.80%)</title><rect x="177.2" y="707.0" width="9.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="180.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (2,645 samples, 44.26%)</title><rect x="186.7" y="723.0" width="522.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="189.7" y="734.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (164 samples, 2.74%)</title><rect x="186.7" y="707.0" width="32.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.7" y="718.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (164 samples, 2.74%)</title><rect x="186.7" y="691.0" width="32.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.7" y="702.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (164 samples, 2.74%)</title><rect x="186.7" y="675.0" width="32.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="189.7" y="686.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (164 samples, 2.74%)</title><rect x="186.7" y="659.0" width="32.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="189.7" y="670.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (164 samples, 2.74%)</title><rect x="186.7" y="643.0" width="32.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.7" y="654.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (164 samples, 2.74%)</title><rect x="186.7" y="627.0" width="32.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="189.7" y="638.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (164 samples, 2.74%)</title><rect x="186.7" y="611.0" width="32.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="189.7" y="622.0">co..</text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (164 samples, 2.74%)</title><rect x="186.7" y="595.0" width="32.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="189.7" y="606.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (164 samples, 2.74%)</title><rect x="186.7" y="579.0" width="32.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.7" y="590.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (164 samples, 2.74%)</title><rect x="186.7" y="563.0" width="32.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.7" y="574.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (164 samples, 2.74%)</title><rect x="186.7" y="547.0" width="32.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="189.7" y="558.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$151/1956344708.getAsBoolean (164 samples, 2.74%)</title><rect x="186.7" y="531.0" width="32.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="189.7" y="542.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (164 samples, 2.74%)</title><rect x="186.7" y="515.0" width="32.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="189.7" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (164 samples, 2.74%)</title><rect x="186.7" y="499.0" width="32.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="189.7" y="510.0">ja..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (164 samples, 2.74%)</title><rect x="186.7" y="483.0" width="32.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="189.7" y="494.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$127/324348730.apply (164 samples, 2.74%)</title><rect x="186.7" y="467.0" width="32.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.7" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (164 samples, 2.74%)</title><rect x="186.7" y="451.0" width="32.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.7" y="462.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (111 samples, 1.86%)</title><rect x="186.7" y="435.0" width="21.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="189.7" y="446.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (111 samples, 1.86%)</title><rect x="186.7" y="419.0" width="21.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="189.7" y="430.0">j..</text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (53 samples, 0.89%)</title><rect x="208.6" y="435.0" width="10.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="211.6" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (128 samples, 2.14%)</title><rect x="219.1" y="707.0" width="25.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="222.1" y="718.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (128 samples, 2.14%)</title><rect x="219.1" y="691.0" width="25.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="222.1" y="702.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl$$Lambda$182/605401109.apply (128 samples, 2.14%)</title><rect x="219.1" y="675.0" width="25.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="222.1" y="686.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.lambda$iterator$2 (128 samples, 2.14%)</title><rect x="219.1" y="659.0" width="25.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="222.1" y="670.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (128 samples, 2.14%)</title><rect x="219.1" y="643.0" width="25.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.1" y="654.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (128 samples, 2.14%)</title><rect x="219.1" y="627.0" width="25.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="222.1" y="638.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (128 samples, 2.14%)</title><rect x="219.1" y="611.0" width="25.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="222.1" y="622.0">j..</text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (114 samples, 1.91%)</title><rect x="244.4" y="707.0" width="22.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="247.4" y="718.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (114 samples, 1.91%)</title><rect x="244.4" y="691.0" width="22.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="247.4" y="702.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (114 samples, 1.91%)</title><rect x="244.4" y="675.0" width="22.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="247.4" y="686.0">j..</text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (103 samples, 1.72%)</title><rect x="266.9" y="707.0" width="20.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="269.9" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (103 samples, 1.72%)</title><rect x="266.9" y="691.0" width="20.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="269.9" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (103 samples, 1.72%)</title><rect x="266.9" y="675.0" width="20.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="269.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.iterator (2,136 samples, 35.74%)</title><rect x="287.2" y="707.0" width="421.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="290.2" y="718.0">ru/mail/polis/dao/alexander/marashov/DAOImpl.iterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (61 samples, 1.02%)</title><rect x="287.2" y="691.0" width="12.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="290.2" y="702.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (61 samples, 1.02%)</title><rect x="287.2" y="675.0" width="12.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="290.2" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (846 samples, 14.16%)</title><rect x="299.3" y="691.0" width="167.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="302.3" y="702.0">com/google/common/col..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (35 samples, 0.59%)</title><rect x="299.3" y="675.0" width="6.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="302.3" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (811 samples, 13.57%)</title><rect x="306.2" y="675.0" width="160.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="309.2" y="686.0">com/google/common/co..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (64 samples, 1.07%)</title><rect x="306.2" y="659.0" width="12.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="309.2" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (44 samples, 0.74%)</title><rect x="318.8" y="659.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="321.8" y="670.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (44 samples, 0.74%)</title><rect x="318.8" y="643.0" width="8.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="321.8" y="654.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (81 samples, 1.36%)</title><rect x="327.5" y="659.0" width="16.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="330.5" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (70 samples, 1.17%)</title><rect x="343.5" y="659.0" width="13.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="346.5" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (70 samples, 1.17%)</title><rect x="343.5" y="643.0" width="13.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="346.5" y="654.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (552 samples, 9.24%)</title><rect x="357.3" y="659.0" width="109.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.3" y="670.0">java/util/Spl..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (552 samples, 9.24%)</title><rect x="357.3" y="643.0" width="109.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="360.3" y="654.0">java/util/str..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (552 samples, 9.24%)</title><rect x="357.3" y="627.0" width="109.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="360.3" y="638.0">java/util/str..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (171 samples, 2.86%)</title><rect x="357.3" y="611.0" width="33.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.3" y="622.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$151/1956344708.getAsBoolean (171 samples, 2.86%)</title><rect x="357.3" y="595.0" width="33.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="360.3" y="606.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (171 samples, 2.86%)</title><rect x="357.3" y="579.0" width="33.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="360.3" y="590.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (171 samples, 2.86%)</title><rect x="357.3" y="563.0" width="33.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="360.3" y="574.0">ja..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (171 samples, 2.86%)</title><rect x="357.3" y="547.0" width="33.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="360.3" y="558.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$127/324348730.apply (171 samples, 2.86%)</title><rect x="357.3" y="531.0" width="33.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="360.3" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (171 samples, 2.86%)</title><rect x="357.3" y="515.0" width="33.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="360.3" y="526.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (114 samples, 1.91%)</title><rect x="357.3" y="499.0" width="22.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="360.3" y="510.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (114 samples, 1.91%)</title><rect x="357.3" y="483.0" width="22.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="360.3" y="494.0">j..</text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (57 samples, 0.95%)</title><rect x="379.8" y="499.0" width="11.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="382.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (381 samples, 6.38%)</title><rect x="391.1" y="611.0" width="75.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="394.1" y="622.0">java/uti..</text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (97 samples, 1.62%)</title><rect x="391.1" y="595.0" width="19.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="394.1" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (66 samples, 1.10%)</title><rect x="410.2" y="595.0" width="13.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="413.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (66 samples, 1.10%)</title><rect x="410.2" y="579.0" width="13.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="413.2" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$146/1086827307.get$Lambda (34 samples, 0.57%)</title><rect x="410.2" y="563.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="413.2" y="574.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$146 (34 samples, 0.57%)</title><rect x="410.2" y="547.0" width="6.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="413.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$151/1956344708.get$Lambda (32 samples, 0.54%)</title><rect x="417.0" y="563.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="420.0" y="574.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$151 (32 samples, 0.54%)</title><rect x="417.0" y="547.0" width="6.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="420.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (50 samples, 0.84%)</title><rect x="423.3" y="595.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (50 samples, 0.84%)</title><rect x="423.3" y="579.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="426.3" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (50 samples, 0.84%)</title><rect x="423.3" y="563.0" width="9.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="426.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (168 samples, 2.81%)</title><rect x="433.1" y="595.0" width="33.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="436.1" y="606.0">ja..</text>
</g>
<g>
<title>java.lang.Object[] (168 samples, 2.81%)</title><rect x="433.1" y="579.0" width="33.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="436.1" y="590.0">ja..</text>
</g>
<g>
<title>java.util.ArrayList (53 samples, 0.89%)</title><rect x="466.3" y="691.0" width="10.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="469.3" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (56 samples, 0.94%)</title><rect x="476.8" y="691.0" width="11.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="479.8" y="702.0"></text>
</g>
<g>
<title>java.lang.Object[] (56 samples, 0.94%)</title><rect x="476.8" y="675.0" width="11.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="479.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (147 samples, 2.46%)</title><rect x="487.8" y="691.0" width="29.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.8" y="702.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (147 samples, 2.46%)</title><rect x="487.8" y="675.0" width="29.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="490.8" y="686.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (221 samples, 3.70%)</title><rect x="516.9" y="691.0" width="43.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.9" y="702.0">ru/m..</text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (64 samples, 1.07%)</title><rect x="516.9" y="675.0" width="12.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="519.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (157 samples, 2.63%)</title><rect x="529.5" y="675.0" width="31.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="532.5" y="686.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (157 samples, 2.63%)</title><rect x="529.5" y="659.0" width="31.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="532.5" y="670.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (157 samples, 2.63%)</title><rect x="529.5" y="643.0" width="31.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="532.5" y="654.0">co..</text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (157 samples, 2.63%)</title><rect x="529.5" y="627.0" width="31.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.5" y="638.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (157 samples, 2.63%)</title><rect x="529.5" y="611.0" width="31.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="532.5" y="622.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (157 samples, 2.63%)</title><rect x="529.5" y="595.0" width="31.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="532.5" y="606.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (157 samples, 2.63%)</title><rect x="529.5" y="579.0" width="31.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="532.5" y="590.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$151/1956344708.getAsBoolean (157 samples, 2.63%)</title><rect x="529.5" y="563.0" width="31.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="532.5" y="574.0">ja..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (157 samples, 2.63%)</title><rect x="529.5" y="547.0" width="31.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="532.5" y="558.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (157 samples, 2.63%)</title><rect x="529.5" y="531.0" width="31.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="532.5" y="542.0">ja..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (157 samples, 2.63%)</title><rect x="529.5" y="515.0" width="31.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="532.5" y="526.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$127/324348730.apply (157 samples, 2.63%)</title><rect x="529.5" y="499.0" width="31.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="532.5" y="510.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (157 samples, 2.63%)</title><rect x="529.5" y="483.0" width="31.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="532.5" y="494.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (109 samples, 1.82%)</title><rect x="529.5" y="467.0" width="21.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="532.5" y="478.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (109 samples, 1.82%)</title><rect x="529.5" y="451.0" width="21.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="532.5" y="462.0">j..</text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (48 samples, 0.80%)</title><rect x="551.0" y="467.0" width="9.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="554.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.iterator (752 samples, 12.58%)</title><rect x="560.5" y="691.0" width="148.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="563.5" y="702.0">ru/mail/polis/dao/a..</text>
</g>
<g>
<title>java/util/Collection.stream (212 samples, 3.55%)</title><rect x="560.5" y="675.0" width="41.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="563.5" y="686.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (73 samples, 1.22%)</title><rect x="560.5" y="659.0" width="14.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.5" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (73 samples, 1.22%)</title><rect x="560.5" y="643.0" width="14.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="563.5" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (139 samples, 2.33%)</title><rect x="574.9" y="659.0" width="27.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.9" y="670.0">j..</text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (139 samples, 2.33%)</title><rect x="574.9" y="643.0" width="27.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="577.9" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (46 samples, 0.77%)</title><rect x="602.4" y="675.0" width="9.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.4" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (46 samples, 0.77%)</title><rect x="602.4" y="659.0" width="9.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="605.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (98 samples, 1.64%)</title><rect x="611.5" y="675.0" width="19.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (98 samples, 1.64%)</title><rect x="611.5" y="659.0" width="19.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (98 samples, 1.64%)</title><rect x="611.5" y="643.0" width="19.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="614.5" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (98 samples, 1.64%)</title><rect x="611.5" y="627.0" width="19.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="614.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (212 samples, 3.55%)</title><rect x="630.8" y="675.0" width="41.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="633.8" y="686.0">jav..</text>
</g>
<g>
<title>java/util/Spliterators.iterator (53 samples, 0.89%)</title><rect x="630.8" y="659.0" width="10.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="633.8" y="670.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (53 samples, 0.89%)</title><rect x="630.8" y="643.0" width="10.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="633.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (159 samples, 2.66%)</title><rect x="641.3" y="659.0" width="31.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="644.3" y="670.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.62%)</title><rect x="641.3" y="643.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.62%)</title><rect x="641.3" y="627.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$132/1650848194.get$Lambda (37 samples, 0.62%)</title><rect x="641.3" y="611.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="644.3" y="622.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$132 (37 samples, 0.62%)</title><rect x="641.3" y="595.0" width="7.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="644.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (122 samples, 2.04%)</title><rect x="648.6" y="643.0" width="24.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="651.6" y="654.0">j..</text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (122 samples, 2.04%)</title><rect x="648.6" y="627.0" width="24.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="651.6" y="638.0">j..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (184 samples, 3.08%)</title><rect x="672.7" y="675.0" width="36.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="675.7" y="686.0">jav..</text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (184 samples, 3.08%)</title><rect x="672.7" y="659.0" width="36.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="675.7" y="670.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.getBytes (84 samples, 1.41%)</title><rect x="709.0" y="723.0" width="16.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="712.0" y="734.0"></text>
</g>
<g>
<title>byte[] (84 samples, 1.41%)</title><rect x="709.0" y="707.0" width="16.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="712.0" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (168 samples, 2.81%)</title><rect x="725.6" y="755.0" width="33.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="728.6" y="766.0">su..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (168 samples, 2.81%)</title><rect x="725.6" y="739.0" width="33.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="728.6" y="750.0">ja..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$99/1382637989.run (168 samples, 2.81%)</title><rect x="725.6" y="723.0" width="33.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="728.6" y="734.0">su..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (168 samples, 2.81%)</title><rect x="725.6" y="707.0" width="33.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.6" y="718.0">su..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (168 samples, 2.81%)</title><rect x="725.6" y="691.0" width="33.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="728.6" y="702.0">su..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (168 samples, 2.81%)</title><rect x="725.6" y="675.0" width="33.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="728.6" y="686.0">su..</text>
</g>
<g>
<title>java.io.DataOutputStream (4 samples, 0.07%)</title><rect x="725.6" y="659.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="728.6" y="670.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (164 samples, 2.74%)</title><rect x="726.4" y="659.0" width="32.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="729.4" y="670.0">su..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (150 samples, 2.51%)</title><rect x="726.4" y="643.0" width="29.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="729.4" y="654.0">ja..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (150 samples, 2.51%)</title><rect x="726.4" y="627.0" width="29.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.4" y="638.0">su..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (150 samples, 2.51%)</title><rect x="726.4" y="611.0" width="29.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="729.4" y="622.0">su..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (150 samples, 2.51%)</title><rect x="726.4" y="595.0" width="29.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="729.4" y="606.0">su..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (82 samples, 1.37%)</title><rect x="726.4" y="579.0" width="16.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (82 samples, 1.37%)</title><rect x="726.4" y="563.0" width="16.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="729.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (79 samples, 1.32%)</title><rect x="726.4" y="547.0" width="15.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="729.4" y="558.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (79 samples, 1.32%)</title><rect x="726.4" y="531.0" width="15.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="729.4" y="542.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (71 samples, 1.19%)</title><rect x="726.4" y="515.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="729.4" y="526.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (71 samples, 1.19%)</title><rect x="726.4" y="499.0" width="14.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="729.4" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (71 samples, 1.19%)</title><rect x="726.4" y="483.0" width="14.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="729.4" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (71 samples, 1.19%)</title><rect x="726.4" y="467.0" width="14.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.4" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (71 samples, 1.19%)</title><rect x="726.4" y="451.0" width="14.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="729.4" y="462.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (71 samples, 1.19%)</title><rect x="726.4" y="435.0" width="14.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="729.4" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (71 samples, 1.19%)</title><rect x="726.4" y="419.0" width="14.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.4" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (71 samples, 1.19%)</title><rect x="726.4" y="403.0" width="14.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="729.4" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (71 samples, 1.19%)</title><rect x="726.4" y="387.0" width="14.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.4" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (71 samples, 1.19%)</title><rect x="726.4" y="371.0" width="14.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.4" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (71 samples, 1.19%)</title><rect x="726.4" y="355.0" width="14.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="729.4" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (71 samples, 1.19%)</title><rect x="726.4" y="339.0" width="14.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="729.4" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (71 samples, 1.19%)</title><rect x="726.4" y="323.0" width="14.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="729.4" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (69 samples, 1.15%)</title><rect x="726.4" y="307.0" width="13.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="729.4" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (69 samples, 1.15%)</title><rect x="726.4" y="291.0" width="13.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="729.4" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (69 samples, 1.15%)</title><rect x="726.4" y="275.0" width="13.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="729.4" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (69 samples, 1.15%)</title><rect x="726.4" y="259.0" width="13.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="729.4" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (25 samples, 0.42%)</title><rect x="726.4" y="243.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.4" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (21 samples, 0.35%)</title><rect x="726.4" y="227.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="729.4" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (19 samples, 0.32%)</title><rect x="726.4" y="211.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="729.4" y="222.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (19 samples, 0.32%)</title><rect x="726.4" y="195.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="729.4" y="206.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (12 samples, 0.20%)</title><rect x="726.6" y="179.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="729.6" y="190.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (8 samples, 0.13%)</title><rect x="726.6" y="163.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.6" y="174.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (3 samples, 0.05%)</title><rect x="726.6" y="147.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="729.6" y="158.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (3 samples, 0.05%)</title><rect x="726.6" y="131.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="729.6" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (3 samples, 0.05%)</title><rect x="726.6" y="115.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="729.6" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (3 samples, 0.05%)</title><rect x="726.6" y="99.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="729.6" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (3 samples, 0.05%)</title><rect x="726.6" y="83.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="729.6" y="94.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.equals (4 samples, 0.07%)</title><rect x="727.2" y="147.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="730.2" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractSet.equals (4 samples, 0.07%)</title><rect x="727.2" y="131.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="730.2" y="142.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.containsAll (4 samples, 0.07%)</title><rect x="727.2" y="115.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="730.2" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (4 samples, 0.07%)</title><rect x="727.2" y="99.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="730.2" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (4 samples, 0.07%)</title><rect x="727.2" y="83.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="730.2" y="94.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (4 samples, 0.07%)</title><rect x="727.2" y="67.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="730.2" y="78.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (4 samples, 0.07%)</title><rect x="728.1" y="163.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="731.1" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.05%)</title><rect x="728.3" y="147.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.3" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.05%)</title><rect x="728.3" y="131.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="731.3" y="142.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (6 samples, 0.10%)</title><rect x="728.9" y="179.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="731.9" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.10%)</title><rect x="728.9" y="163.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="731.9" y="174.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (2 samples, 0.03%)</title><rect x="730.1" y="211.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.1" y="222.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeData[] (2 samples, 0.03%)</title><rect x="730.1" y="195.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="733.1" y="206.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (4 samples, 0.07%)</title><rect x="730.5" y="227.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="733.5" y="238.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.03%)</title><rect x="730.5" y="211.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="733.5" y="222.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (2 samples, 0.03%)</title><rect x="730.5" y="195.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="733.5" y="206.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.03%)</title><rect x="730.9" y="211.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.9" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="730.9" y="195.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="733.9" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="731.3" y="243.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="734.3" y="254.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (2 samples, 0.03%)</title><rect x="731.7" y="243.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="734.7" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (25 samples, 0.42%)</title><rect x="732.1" y="243.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="735.1" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (24 samples, 0.40%)</title><rect x="732.3" y="227.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.3" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.03%)</title><rect x="732.3" y="211.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="735.3" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (22 samples, 0.37%)</title><rect x="732.7" y="211.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="735.7" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (22 samples, 0.37%)</title><rect x="732.7" y="195.0" width="4.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="735.7" y="206.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (15 samples, 0.25%)</title><rect x="737.0" y="243.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.0" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.23%)</title><rect x="737.0" y="227.0" width="2.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="740.0" y="238.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.03%)</title><rect x="740.0" y="307.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="743.0" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.03%)</title><rect x="740.0" y="291.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="743.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.03%)</title><rect x="740.0" y="275.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="743.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (2 samples, 0.03%)</title><rect x="740.0" y="259.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.0" y="270.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (2 samples, 0.03%)</title><rect x="740.0" y="243.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="743.0" y="254.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.03%)</title><rect x="740.0" y="227.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="743.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.03%)</title><rect x="740.0" y="211.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (2 samples, 0.03%)</title><rect x="740.0" y="195.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="743.0" y="206.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (2 samples, 0.03%)</title><rect x="740.0" y="179.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="743.0" y="190.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (2 samples, 0.03%)</title><rect x="740.0" y="163.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="743.0" y="174.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getClassLoaderFor (2 samples, 0.03%)</title><rect x="740.4" y="515.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="743.4" y="526.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.withPermissions (2 samples, 0.03%)</title><rect x="740.4" y="499.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="743.4" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (6 samples, 0.10%)</title><rect x="740.8" y="515.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="743.8" y="526.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (6 samples, 0.10%)</title><rect x="740.8" y="499.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="743.8" y="510.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (5 samples, 0.08%)</title><rect x="740.8" y="483.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="743.8" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.05%)</title><rect x="740.8" y="467.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="743.8" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.05%)</title><rect x="740.8" y="451.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="743.8" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (3 samples, 0.05%)</title><rect x="740.8" y="435.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="743.8" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (3 samples, 0.05%)</title><rect x="740.8" y="419.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="743.8" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (3 samples, 0.05%)</title><rect x="740.8" y="403.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="743.8" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (2 samples, 0.03%)</title><rect x="741.0" y="387.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="744.0" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (2 samples, 0.03%)</title><rect x="741.0" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="744.0" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (2 samples, 0.03%)</title><rect x="741.0" y="355.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="744.0" y="366.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject$MarshalledObjectInputStream.&lt;init&gt; (2 samples, 0.03%)</title><rect x="741.4" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="744.4" y="478.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (2 samples, 0.03%)</title><rect x="741.4" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="744.4" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (2 samples, 0.03%)</title><rect x="741.4" y="435.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="744.4" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (2 samples, 0.03%)</title><rect x="741.4" y="419.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="744.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor38.invoke (3 samples, 0.05%)</title><rect x="742.0" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="745.0" y="558.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttributes (3 samples, 0.05%)</title><rect x="742.0" y="531.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="745.0" y="542.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (3 samples, 0.05%)</title><rect x="742.0" y="515.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="745.0" y="526.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (3 samples, 0.05%)</title><rect x="742.0" y="499.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.0" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (3 samples, 0.05%)</title><rect x="742.0" y="483.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="745.0" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttributes (3 samples, 0.05%)</title><rect x="742.0" y="467.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.0" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttributes (3 samples, 0.05%)</title><rect x="742.0" y="451.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.0" y="462.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.getAttributes (3 samples, 0.05%)</title><rect x="742.0" y="435.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="745.0" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttributes (3 samples, 0.05%)</title><rect x="742.0" y="419.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.0" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttribute (3 samples, 0.05%)</title><rect x="742.0" y="403.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="745.0" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.getAttribute (3 samples, 0.05%)</title><rect x="742.0" y="387.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="745.0" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (3 samples, 0.05%)</title><rect x="742.0" y="371.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="745.0" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (3 samples, 0.05%)</title><rect x="742.0" y="355.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.0" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (3 samples, 0.05%)</title><rect x="742.0" y="339.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.0" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (3 samples, 0.05%)</title><rect x="742.0" y="323.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.0" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (3 samples, 0.05%)</title><rect x="742.0" y="307.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="745.0" y="318.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (3 samples, 0.05%)</title><rect x="742.0" y="291.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="745.0" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.03%)</title><rect x="742.2" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.03%)</title><rect x="742.2" y="259.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (2 samples, 0.03%)</title><rect x="742.2" y="243.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.2" y="254.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (2 samples, 0.03%)</title><rect x="742.2" y="227.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="745.2" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.03%)</title><rect x="742.2" y="211.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="745.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.03%)</title><rect x="742.2" y="195.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="745.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor44.invoke (2 samples, 0.03%)</title><rect x="742.2" y="179.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.2" y="190.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getAllThreadIds (2 samples, 0.03%)</title><rect x="742.2" y="163.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.2" y="174.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (48 samples, 0.80%)</title><rect x="742.6" y="579.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="745.6" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (48 samples, 0.80%)</title><rect x="742.6" y="563.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.6" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (48 samples, 0.80%)</title><rect x="742.6" y="547.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.6" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (48 samples, 0.80%)</title><rect x="742.6" y="531.0" width="9.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="745.6" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (48 samples, 0.80%)</title><rect x="742.6" y="515.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.6" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (47 samples, 0.79%)</title><rect x="742.6" y="499.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="745.6" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (47 samples, 0.79%)</title><rect x="742.6" y="483.0" width="9.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="745.6" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (47 samples, 0.79%)</title><rect x="742.6" y="467.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="745.6" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (46 samples, 0.77%)</title><rect x="742.8" y="451.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="745.8" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (46 samples, 0.77%)</title><rect x="742.8" y="435.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="745.8" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (6 samples, 0.10%)</title><rect x="742.8" y="419.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="745.8" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (6 samples, 0.10%)</title><rect x="742.8" y="403.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="745.8" y="414.0"></text>
</g>
<g>
<title>int[] (3 samples, 0.05%)</title><rect x="742.8" y="387.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="745.8" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.05%)</title><rect x="743.4" y="387.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="746.4" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (40 samples, 0.67%)</title><rect x="743.9" y="419.0" width="7.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.9" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.05%)</title><rect x="743.9" y="403.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.9" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.05%)</title><rect x="743.9" y="387.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="746.9" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.05%)</title><rect x="743.9" y="371.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="746.9" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.05%)</title><rect x="743.9" y="355.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="746.9" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (3 samples, 0.05%)</title><rect x="743.9" y="339.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.9" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.05%)</title><rect x="743.9" y="323.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="746.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.05%)</title><rect x="743.9" y="307.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="746.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (3 samples, 0.05%)</title><rect x="743.9" y="291.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.9" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (3 samples, 0.05%)</title><rect x="743.9" y="275.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="746.9" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (3 samples, 0.05%)</title><rect x="743.9" y="259.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="746.9" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.05%)</title><rect x="743.9" y="243.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="746.9" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.05%)</title><rect x="743.9" y="227.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="746.9" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.05%)</title><rect x="743.9" y="211.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.9" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.05%)</title><rect x="743.9" y="195.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.9" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.05%)</title><rect x="743.9" y="179.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="746.9" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.03%)</title><rect x="743.9" y="163.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="746.9" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.03%)</title><rect x="743.9" y="147.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="746.9" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.03%)</title><rect x="743.9" y="131.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="746.9" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.03%)</title><rect x="743.9" y="115.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="746.9" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.03%)</title><rect x="743.9" y="99.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="746.9" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (37 samples, 0.62%)</title><rect x="744.5" y="403.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.5" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (36 samples, 0.60%)</title><rect x="744.7" y="387.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="747.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (36 samples, 0.60%)</title><rect x="744.7" y="371.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="747.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (36 samples, 0.60%)</title><rect x="744.7" y="355.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.7" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (36 samples, 0.60%)</title><rect x="744.7" y="339.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.7" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (35 samples, 0.59%)</title><rect x="744.9" y="323.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="747.9" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (35 samples, 0.59%)</title><rect x="744.9" y="307.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.9" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (18 samples, 0.30%)</title><rect x="744.9" y="291.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="747.9" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (6 samples, 0.10%)</title><rect x="744.9" y="275.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="747.9" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (6 samples, 0.10%)</title><rect x="744.9" y="259.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.9" y="270.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.03%)</title><rect x="745.1" y="243.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="748.1" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.05%)</title><rect x="745.5" y="243.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="748.5" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (12 samples, 0.20%)</title><rect x="746.1" y="275.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="749.1" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (12 samples, 0.20%)</title><rect x="746.1" y="259.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="749.1" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (12 samples, 0.20%)</title><rect x="746.1" y="243.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="749.1" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (12 samples, 0.20%)</title><rect x="746.1" y="227.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="749.1" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (11 samples, 0.18%)</title><rect x="746.3" y="211.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="749.3" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (10 samples, 0.17%)</title><rect x="746.3" y="195.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.3" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (10 samples, 0.17%)</title><rect x="746.3" y="179.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="749.3" y="190.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (2 samples, 0.03%)</title><rect x="746.3" y="163.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="749.3" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (8 samples, 0.13%)</title><rect x="746.7" y="163.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="749.7" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="746.7" y="147.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="749.7" y="158.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.10%)</title><rect x="747.1" y="147.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="750.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.10%)</title><rect x="747.1" y="131.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="750.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (6 samples, 0.10%)</title><rect x="747.1" y="115.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.1" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (6 samples, 0.10%)</title><rect x="747.1" y="99.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="750.1" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (4 samples, 0.07%)</title><rect x="747.3" y="83.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="750.3" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.07%)</title><rect x="747.3" y="67.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.3" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (4 samples, 0.07%)</title><rect x="747.3" y="51.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="750.3" y="62.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (4 samples, 0.07%)</title><rect x="747.3" y="35.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="750.3" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (9 samples, 0.15%)</title><rect x="748.5" y="291.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="751.5" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (4 samples, 0.07%)</title><rect x="748.5" y="275.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="751.5" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (2 samples, 0.03%)</title><rect x="748.5" y="259.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.5" y="270.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.03%)</title><rect x="748.5" y="243.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="751.5" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (2 samples, 0.03%)</title><rect x="748.9" y="259.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.9" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (5 samples, 0.08%)</title><rect x="749.3" y="275.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="752.3" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (5 samples, 0.08%)</title><rect x="749.3" y="259.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="752.3" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.07%)</title><rect x="749.5" y="243.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.5" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (4 samples, 0.07%)</title><rect x="749.5" y="227.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="752.5" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (4 samples, 0.07%)</title><rect x="749.5" y="211.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.5" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (3 samples, 0.05%)</title><rect x="749.7" y="195.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.7" y="206.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.05%)</title><rect x="749.7" y="179.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="752.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.05%)</title><rect x="749.7" y="163.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (3 samples, 0.05%)</title><rect x="749.7" y="147.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="752.7" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (3 samples, 0.05%)</title><rect x="749.7" y="131.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="752.7" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.03%)</title><rect x="749.7" y="115.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="752.7" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.03%)</title><rect x="749.7" y="99.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="752.7" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.03%)</title><rect x="749.7" y="83.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="752.7" y="94.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.03%)</title><rect x="749.7" y="67.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="752.7" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (8 samples, 0.13%)</title><rect x="750.3" y="291.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="753.3" y="302.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (8 samples, 0.13%)</title><rect x="750.3" y="275.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="753.3" y="286.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (9 samples, 0.15%)</title><rect x="752.0" y="579.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="755.0" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (9 samples, 0.15%)</title><rect x="752.0" y="563.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="755.0" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (9 samples, 0.15%)</title><rect x="752.0" y="547.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="755.0" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (9 samples, 0.15%)</title><rect x="752.0" y="531.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="755.0" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (2 samples, 0.03%)</title><rect x="752.0" y="515.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.0" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.03%)</title><rect x="752.0" y="499.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.0" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (2 samples, 0.03%)</title><rect x="752.0" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="755.0" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (2 samples, 0.03%)</title><rect x="752.0" y="467.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="755.0" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (2 samples, 0.03%)</title><rect x="752.0" y="451.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="755.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.03%)</title><rect x="752.0" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="755.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="752.0" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="755.0" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (7 samples, 0.12%)</title><rect x="752.4" y="515.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="755.4" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (3 samples, 0.05%)</title><rect x="752.4" y="499.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="755.4" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (3 samples, 0.05%)</title><rect x="752.4" y="483.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="755.4" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (2 samples, 0.03%)</title><rect x="752.4" y="467.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="755.4" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (2 samples, 0.03%)</title><rect x="752.4" y="451.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="755.4" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (4 samples, 0.07%)</title><rect x="753.0" y="499.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="756.0" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (2 samples, 0.03%)</title><rect x="753.0" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.0" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (2 samples, 0.03%)</title><rect x="753.0" y="467.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="756.0" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (2 samples, 0.03%)</title><rect x="753.4" y="483.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.4" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.03%)</title><rect x="753.4" y="467.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="756.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.03%)</title><rect x="753.4" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="756.4" y="462.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (11 samples, 0.18%)</title><rect x="753.8" y="579.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="756.8" y="590.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (11 samples, 0.18%)</title><rect x="753.8" y="563.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.8" y="574.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (10 samples, 0.17%)</title><rect x="754.0" y="547.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="757.0" y="558.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (10 samples, 0.17%)</title><rect x="754.0" y="531.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="757.0" y="542.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (10 samples, 0.17%)</title><rect x="754.0" y="515.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="757.0" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (10 samples, 0.17%)</title><rect x="754.0" y="499.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="757.0" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (4 samples, 0.07%)</title><rect x="754.2" y="483.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="757.2" y="494.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="754.2" y="467.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="757.2" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (2 samples, 0.03%)</title><rect x="755.0" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="758.0" y="494.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.03%)</title><rect x="755.0" y="467.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="758.0" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$ReplaceTable.&lt;init&gt; (3 samples, 0.05%)</title><rect x="755.4" y="483.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="758.4" y="494.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (2 samples, 0.03%)</title><rect x="755.4" y="467.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="758.4" y="478.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (14 samples, 0.23%)</title><rect x="756.0" y="643.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="759.0" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (13 samples, 0.22%)</title><rect x="756.2" y="627.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="759.2" y="638.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (13 samples, 0.22%)</title><rect x="756.2" y="611.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="759.2" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (13 samples, 0.22%)</title><rect x="756.2" y="595.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="759.2" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (13 samples, 0.22%)</title><rect x="756.2" y="579.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="759.2" y="590.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="756.2" y="563.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="759.2" y="574.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="756.8" y="563.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="759.8" y="574.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (5 samples, 0.08%)</title><rect x="757.8" y="563.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.8" y="574.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="757.8" y="547.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="760.8" y="558.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.05%)</title><rect x="758.2" y="547.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="761.2" y="558.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,184 samples, 36.55%)</title><rect x="758.8" y="803.0" width="431.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="761.8" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (57 samples, 0.95%)</title><rect x="758.8" y="787.0" width="11.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.8" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (57 samples, 0.95%)</title><rect x="758.8" y="771.0" width="11.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="761.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,127 samples, 35.59%)</title><rect x="770.0" y="787.0" width="420.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.0" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,127 samples, 35.59%)</title><rect x="770.0" y="771.0" width="420.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.0" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,127 samples, 35.59%)</title><rect x="770.0" y="755.0" width="420.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="773.0" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (558 samples, 9.34%)</title><rect x="770.0" y="739.0" width="110.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="773.0" y="750.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (558 samples, 9.34%)</title><rect x="770.0" y="723.0" width="110.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="773.0" y="734.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler1_handleEntityGet.handleRequest (314 samples, 5.25%)</title><rect x="770.0" y="707.0" width="62.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="773.0" y="718.0">Reques..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (199 samples, 3.33%)</title><rect x="770.0" y="691.0" width="39.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="773.0" y="702.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (199 samples, 3.33%)</title><rect x="770.0" y="675.0" width="39.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="773.0" y="686.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (199 samples, 3.33%)</title><rect x="770.0" y="659.0" width="39.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="773.0" y="670.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (199 samples, 3.33%)</title><rect x="770.0" y="643.0" width="39.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="773.0" y="654.0">jav..</text>
</g>
<g>
<title>java.lang.String (106 samples, 1.77%)</title><rect x="770.0" y="627.0" width="20.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="773.0" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (93 samples, 1.56%)</title><rect x="790.9" y="627.0" width="18.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="793.9" y="638.0"></text>
</g>
<g>
<title>byte[] (93 samples, 1.56%)</title><rect x="790.9" y="611.0" width="18.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="793.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityGet (115 samples, 1.92%)</title><rect x="809.3" y="691.0" width="22.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="812.3" y="702.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (114 samples, 1.91%)</title><rect x="809.3" y="675.0" width="22.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="812.3" y="686.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (114 samples, 1.91%)</title><rect x="809.3" y="659.0" width="22.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="812.3" y="670.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$123/1008778936.get$Lambda (114 samples, 1.91%)</title><rect x="809.3" y="643.0" width="22.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="812.3" y="654.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ServiceImpl$$Lambda$123 (114 samples, 1.91%)</title><rect x="809.3" y="627.0" width="22.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="812.3" y="638.0">r..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (244 samples, 4.08%)</title><rect x="832.0" y="707.0" width="48.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="835.0" y="718.0">one/..</text>
</g>
<g>
<title>java/lang/String.substring (244 samples, 4.08%)</title><rect x="832.0" y="691.0" width="48.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.0" y="702.0">java..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (244 samples, 4.08%)</title><rect x="832.0" y="675.0" width="48.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="835.0" y="686.0">java..</text>
</g>
<g>
<title>java.lang.String (110 samples, 1.84%)</title><rect x="832.0" y="659.0" width="21.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="835.0" y="670.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (134 samples, 2.24%)</title><rect x="853.7" y="659.0" width="26.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="856.7" y="670.0">j..</text>
</g>
<g>
<title>byte[] (134 samples, 2.24%)</title><rect x="853.7" y="643.0" width="26.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="856.7" y="654.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,074 samples, 17.97%)</title><rect x="880.2" y="739.0" width="212.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="883.2" y="750.0">one/nio/http/HttpSession.par..</text>
</g>
<g>
<title>one.nio.http.Request (171 samples, 2.86%)</title><rect x="880.2" y="723.0" width="33.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="883.2" y="734.0">on..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (327 samples, 5.47%)</title><rect x="914.0" y="723.0" width="64.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="917.0" y="734.0">one/nio..</text>
</g>
<g>
<title>java.lang.String[] (327 samples, 5.47%)</title><rect x="914.0" y="707.0" width="64.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="917.0" y="718.0">java.la..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (576 samples, 9.64%)</title><rect x="978.5" y="723.0" width="113.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.5" y="734.0">one/nio/util/U..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (576 samples, 9.64%)</title><rect x="978.5" y="707.0" width="113.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.5" y="718.0">one/nio/util/U..</text>
</g>
<g>
<title>char[] (289 samples, 4.84%)</title><rect x="978.5" y="691.0" width="57.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="981.5" y="702.0">char[]</text>
</g>
<g>
<title>java.lang.String (112 samples, 1.87%)</title><rect x="1035.6" y="691.0" width="22.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1038.6" y="702.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (175 samples, 2.93%)</title><rect x="1057.7" y="691.0" width="34.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1060.7" y="702.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (175 samples, 2.93%)</title><rect x="1057.7" y="675.0" width="34.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1060.7" y="686.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (175 samples, 2.93%)</title><rect x="1057.7" y="659.0" width="34.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1060.7" y="670.0">ja..</text>
</g>
<g>
<title>byte[] (175 samples, 2.93%)</title><rect x="1057.7" y="643.0" width="34.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1060.7" y="654.0">by..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (495 samples, 8.28%)</title><rect x="1092.3" y="739.0" width="97.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1095.3" y="750.0">one/nio/uti..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (495 samples, 8.28%)</title><rect x="1092.3" y="723.0" width="97.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1095.3" y="734.0">one/nio/uti..</text>
</g>
<g>
<title>char[] (221 samples, 3.70%)</title><rect x="1092.3" y="707.0" width="43.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1095.3" y="718.0">char[]</text>
</g>
<g>
<title>java.lang.String (106 samples, 1.77%)</title><rect x="1135.9" y="707.0" width="20.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1138.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (168 samples, 2.81%)</title><rect x="1156.8" y="707.0" width="33.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1159.8" y="718.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (168 samples, 2.81%)</title><rect x="1156.8" y="691.0" width="33.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1159.8" y="702.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (168 samples, 2.81%)</title><rect x="1156.8" y="675.0" width="33.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1159.8" y="686.0">ja..</text>
</g>
<g>
<title>byte[] (168 samples, 2.81%)</title><rect x="1156.8" y="659.0" width="33.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1159.8" y="670.0">by..</text>
</g>
</g>
</svg>
