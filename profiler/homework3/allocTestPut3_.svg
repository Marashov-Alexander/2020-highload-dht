<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (2,528 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>[no_Java_frame] (2 samples, 0.08%)</title><rect x="10.0" y="803.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.08%)</title><rect x="10.0" y="787.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.04%)</title><rect x="10.9" y="803.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.04%)</title><rect x="10.9" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.04%)</title><rect x="10.9" y="771.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.04%)</title><rect x="10.9" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.9" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getClassLoadingLock (1 samples, 0.04%)</title><rect x="10.9" y="739.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (1 samples, 0.04%)</title><rect x="10.9" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.04%)</title><rect x="10.9" y="707.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.addCount (1 samples, 0.04%)</title><rect x="10.9" y="691.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.transfer (1 samples, 0.04%)</title><rect x="10.9" y="675.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.9" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap$Node[] (1 samples, 0.04%)</title><rect x="10.9" y="659.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="13.9" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,597 samples, 63.17%)</title><rect x="11.4" y="803.0" width="745.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.4" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (3 samples, 0.12%)</title><rect x="11.4" y="787.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.4" y="798.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (3 samples, 0.12%)</title><rect x="11.4" y="771.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2081637855.linkToTargetMethod (3 samples, 0.12%)</title><rect x="11.4" y="755.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1439127040.invoke (3 samples, 0.12%)</title><rect x="11.4" y="739.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.12%)</title><rect x="11.4" y="723.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.4" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.12%)</title><rect x="11.4" y="707.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.12%)</title><rect x="11.4" y="691.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray0 (3 samples, 0.12%)</title><rect x="11.4" y="675.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.4" y="686.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.12%)</title><rect x="11.4" y="659.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="14.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,594 samples, 63.05%)</title><rect x="12.8" y="787.0" width="744.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.8" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,594 samples, 63.05%)</title><rect x="12.8" y="771.0" width="744.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.8" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (115 samples, 4.55%)</title><rect x="12.8" y="755.0" width="53.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="15.8" y="766.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (115 samples, 4.55%)</title><rect x="12.8" y="739.0" width="53.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="15.8" y="750.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (114 samples, 4.51%)</title><rect x="12.8" y="723.0" width="53.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="15.8" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (114 samples, 4.51%)</title><rect x="12.8" y="707.0" width="53.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.8" y="718.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (114 samples, 4.51%)</title><rect x="12.8" y="691.0" width="53.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="15.8" y="702.0">java...</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.04%)</title><rect x="66.0" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.04%)</title><rect x="66.0" y="707.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.04%)</title><rect x="66.0" y="691.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="69.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.04%)</title><rect x="66.0" y="675.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.0" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.04%)</title><rect x="66.0" y="659.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="69.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$119/1704314390.run (1,447 samples, 57.24%)</title><rect x="66.5" y="755.0" width="675.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.5" y="766.0">ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$119/1704314390.run</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityPut$2 (1,447 samples, 57.24%)</title><rect x="66.5" y="739.0" width="675.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="69.5" y="750.0">ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityPut$2</text>
</g>
<g>
<title>java/lang/String.getBytes (96 samples, 3.80%)</title><rect x="66.5" y="723.0" width="44.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.5" y="734.0">java..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (96 samples, 3.80%)</title><rect x="66.5" y="707.0" width="44.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.5" y="718.0">java..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (96 samples, 3.80%)</title><rect x="66.5" y="691.0" width="44.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.5" y="702.0">java..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (96 samples, 3.80%)</title><rect x="66.5" y="675.0" width="44.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.5" y="686.0">java..</text>
</g>
<g>
<title>byte[] (96 samples, 3.80%)</title><rect x="66.5" y="659.0" width="44.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="69.5" y="670.0">byte[]</text>
</g>
<g>
<title>one.nio.http.Response (90 samples, 3.56%)</title><rect x="111.3" y="723.0" width="42.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="114.3" y="734.0">one...</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (411 samples, 16.26%)</title><rect x="153.3" y="723.0" width="191.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.3" y="734.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (411 samples, 16.26%)</title><rect x="153.3" y="707.0" width="191.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.3" y="718.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (282 samples, 11.16%)</title><rect x="153.3" y="691.0" width="131.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.3" y="702.0">one/nio/http/Res..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (282 samples, 11.16%)</title><rect x="153.3" y="675.0" width="131.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="156.3" y="686.0">one/nio/util/Byt..</text>
</g>
<g>
<title>byte[] (282 samples, 11.16%)</title><rect x="153.3" y="659.0" width="131.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="156.3" y="670.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (129 samples, 5.10%)</title><rect x="284.9" y="691.0" width="60.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="287.9" y="702.0">one/ni..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (129 samples, 5.10%)</title><rect x="284.9" y="675.0" width="60.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="287.9" y="686.0">one.ni..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (311 samples, 12.30%)</title><rect x="345.1" y="723.0" width="145.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.1" y="734.0">one/nio/http/Respo..</text>
</g>
<g>
<title>byte[] (134 samples, 5.30%)</title><rect x="345.1" y="707.0" width="62.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="348.1" y="718.0">byte[]</text>
</g>
<g>
<title>java.lang.String[] (101 samples, 4.00%)</title><rect x="407.7" y="707.0" width="47.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="410.7" y="718.0">java..</text>
</g>
<g>
<title>java.lang.String (76 samples, 3.01%)</title><rect x="454.8" y="707.0" width="35.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="457.8" y="718.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (539 samples, 21.32%)</title><rect x="490.3" y="723.0" width="251.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="493.3" y="734.0">ru/mail/polis/dao/alexander/maras..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (324 samples, 12.82%)</title><rect x="490.3" y="707.0" width="151.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.3" y="718.0">java/nio/HeapByteBu..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (324 samples, 12.82%)</title><rect x="490.3" y="691.0" width="151.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="493.3" y="702.0">java.nio.HeapByteBu..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (6 samples, 0.24%)</title><rect x="641.5" y="707.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="644.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (6 samples, 0.24%)</title><rect x="641.5" y="691.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="644.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (6 samples, 0.24%)</title><rect x="641.5" y="675.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="644.5" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.24%)</title><rect x="641.5" y="659.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="644.5" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (6 samples, 0.24%)</title><rect x="641.5" y="643.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.5" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (4 samples, 0.16%)</title><rect x="641.5" y="627.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="644.5" y="638.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (4 samples, 0.16%)</title><rect x="641.5" y="611.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="644.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (2 samples, 0.08%)</title><rect x="643.4" y="627.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="646.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (2 samples, 0.08%)</title><rect x="643.4" y="611.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.4" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (2 samples, 0.08%)</title><rect x="643.4" y="595.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="646.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.upsert (209 samples, 8.27%)</title><rect x="644.3" y="707.0" width="97.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="647.3" y="718.0">ru/mail/pol..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (14 samples, 0.55%)</title><rect x="644.3" y="691.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (14 samples, 0.55%)</title><rect x="644.3" y="675.0" width="6.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="647.3" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (6 samples, 0.24%)</title><rect x="644.3" y="659.0" width="2.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="647.3" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (8 samples, 0.32%)</title><rect x="647.1" y="659.0" width="3.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="650.1" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Value (64 samples, 2.53%)</title><rect x="650.9" y="691.0" width="29.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="653.9" y="702.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (131 samples, 5.18%)</title><rect x="680.8" y="691.0" width="61.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="683.8" y="702.0">ru/mai..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (131 samples, 5.18%)</title><rect x="680.8" y="675.0" width="61.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="683.8" y="686.0">java/n..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (131 samples, 5.18%)</title><rect x="680.8" y="659.0" width="61.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="683.8" y="670.0">java.n..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (32 samples, 1.27%)</title><rect x="741.9" y="755.0" width="14.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="744.9" y="766.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (32 samples, 1.27%)</title><rect x="741.9" y="739.0" width="14.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="744.9" y="750.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$99/1382637989.run (32 samples, 1.27%)</title><rect x="741.9" y="723.0" width="14.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="744.9" y="734.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (32 samples, 1.27%)</title><rect x="741.9" y="707.0" width="14.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.9" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (32 samples, 1.27%)</title><rect x="741.9" y="691.0" width="14.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="744.9" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (32 samples, 1.27%)</title><rect x="741.9" y="675.0" width="14.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="744.9" y="686.0"></text>
</g>
<g>
<title>java.io.DataOutputStream (3 samples, 0.12%)</title><rect x="741.9" y="659.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="744.9" y="670.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (29 samples, 1.15%)</title><rect x="743.3" y="659.0" width="13.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="746.3" y="670.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (28 samples, 1.11%)</title><rect x="743.3" y="643.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="746.3" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (28 samples, 1.11%)</title><rect x="743.3" y="627.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="746.3" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (28 samples, 1.11%)</title><rect x="743.3" y="611.0" width="13.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="746.3" y="622.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (28 samples, 1.11%)</title><rect x="743.3" y="595.0" width="13.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="746.3" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (18 samples, 0.71%)</title><rect x="743.3" y="579.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="746.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (18 samples, 0.71%)</title><rect x="743.3" y="563.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="746.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (17 samples, 0.67%)</title><rect x="743.3" y="547.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.3" y="558.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (17 samples, 0.67%)</title><rect x="743.3" y="531.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="746.3" y="542.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (14 samples, 0.55%)</title><rect x="743.3" y="515.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="746.3" y="526.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (14 samples, 0.55%)</title><rect x="743.3" y="499.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="746.3" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (14 samples, 0.55%)</title><rect x="743.3" y="483.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="746.3" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (14 samples, 0.55%)</title><rect x="743.3" y="467.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="746.3" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (14 samples, 0.55%)</title><rect x="743.3" y="451.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.3" y="462.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (14 samples, 0.55%)</title><rect x="743.3" y="435.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="746.3" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (14 samples, 0.55%)</title><rect x="743.3" y="419.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="746.3" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (14 samples, 0.55%)</title><rect x="743.3" y="403.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="746.3" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (14 samples, 0.55%)</title><rect x="743.3" y="387.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="746.3" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (14 samples, 0.55%)</title><rect x="743.3" y="371.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="746.3" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (14 samples, 0.55%)</title><rect x="743.3" y="355.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.3" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (14 samples, 0.55%)</title><rect x="743.3" y="339.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="746.3" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (14 samples, 0.55%)</title><rect x="743.3" y="323.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="746.3" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (13 samples, 0.51%)</title><rect x="743.3" y="307.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="746.3" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (13 samples, 0.51%)</title><rect x="743.3" y="291.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="746.3" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (13 samples, 0.51%)</title><rect x="743.3" y="275.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.3" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (13 samples, 0.51%)</title><rect x="743.3" y="259.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="746.3" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (6 samples, 0.24%)</title><rect x="743.3" y="243.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="746.3" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (4 samples, 0.16%)</title><rect x="743.3" y="227.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="746.3" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (3 samples, 0.12%)</title><rect x="743.3" y="211.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="746.3" y="222.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (3 samples, 0.12%)</title><rect x="743.3" y="195.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="746.3" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="743.3" y="179.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="746.3" y="190.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.08%)</title><rect x="743.8" y="179.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.8" y="190.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (2 samples, 0.08%)</title><rect x="743.8" y="163.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="746.8" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.04%)</title><rect x="743.8" y="147.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="746.8" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.04%)</title><rect x="744.2" y="147.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="747.2" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.04%)</title><rect x="744.2" y="131.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="747.2" y="142.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.04%)</title><rect x="744.7" y="211.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="747.7" y="222.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeData[] (1 samples, 0.04%)</title><rect x="744.7" y="195.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="747.7" y="206.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (2 samples, 0.08%)</title><rect x="745.2" y="227.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="748.2" y="238.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.08%)</title><rect x="745.2" y="211.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="748.2" y="222.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.04%)</title><rect x="745.2" y="195.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="748.2" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.equals (1 samples, 0.04%)</title><rect x="745.2" y="179.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="748.2" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractSet.equals (1 samples, 0.04%)</title><rect x="745.2" y="163.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="748.2" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.containsAll (1 samples, 0.04%)</title><rect x="745.2" y="147.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="748.2" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1 samples, 0.04%)</title><rect x="745.2" y="131.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="748.2" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.04%)</title><rect x="745.2" y="115.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="748.2" y="126.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (1 samples, 0.04%)</title><rect x="745.2" y="99.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="748.2" y="110.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (1 samples, 0.04%)</title><rect x="745.6" y="195.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="748.6" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.04%)</title><rect x="745.6" y="179.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="748.6" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.04%)</title><rect x="745.6" y="163.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="748.6" y="174.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (4 samples, 0.16%)</title><rect x="746.1" y="243.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="749.1" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (4 samples, 0.16%)</title><rect x="746.1" y="227.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="749.1" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.16%)</title><rect x="746.1" y="211.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="749.1" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4 samples, 0.16%)</title><rect x="746.1" y="195.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="749.1" y="206.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (3 samples, 0.12%)</title><rect x="748.0" y="243.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="751.0" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.08%)</title><rect x="748.0" y="227.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="751.0" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.04%)</title><rect x="748.9" y="227.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="751.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.04%)</title><rect x="748.9" y="211.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (1 samples, 0.04%)</title><rect x="748.9" y="195.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="751.9" y="206.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 0.04%)</title><rect x="748.9" y="179.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="751.9" y="190.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.04%)</title><rect x="748.9" y="163.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="751.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.04%)</title><rect x="748.9" y="147.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="751.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor15.invoke (1 samples, 0.04%)</title><rect x="748.9" y="131.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="751.9" y="142.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getStackTrace (1 samples, 0.04%)</title><rect x="748.9" y="115.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="751.9" y="126.0"></text>
</g>
<g>
<title>java/lang/Object.clone (1 samples, 0.04%)</title><rect x="748.9" y="99.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.9" y="110.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (1 samples, 0.04%)</title><rect x="748.9" y="83.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="751.9" y="94.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 0.04%)</title><rect x="749.4" y="307.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="752.4" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.04%)</title><rect x="749.4" y="291.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="752.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.04%)</title><rect x="749.4" y="275.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="752.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (1 samples, 0.04%)</title><rect x="749.4" y="259.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="752.4" y="270.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 0.04%)</title><rect x="749.4" y="243.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="752.4" y="254.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.04%)</title><rect x="749.4" y="227.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="752.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.04%)</title><rect x="749.4" y="211.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="752.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (1 samples, 0.04%)</title><rect x="749.4" y="195.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="752.4" y="206.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (1 samples, 0.04%)</title><rect x="749.4" y="179.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.4" y="190.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (1 samples, 0.04%)</title><rect x="749.4" y="163.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="752.4" y="174.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement (1 samples, 0.04%)</title><rect x="749.4" y="147.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="752.4" y="158.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getClassLoaderFor (1 samples, 0.04%)</title><rect x="749.8" y="515.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.8" y="526.0"></text>
</g>
<g>
<title>javax.management.MBeanPermission (1 samples, 0.04%)</title><rect x="749.8" y="499.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="752.8" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (2 samples, 0.08%)</title><rect x="750.3" y="515.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.3" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.04%)</title><rect x="750.3" y="499.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.3" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (1 samples, 0.04%)</title><rect x="750.3" y="483.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.3" y="494.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (1 samples, 0.04%)</title><rect x="750.3" y="467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="753.3" y="478.0"></text>
</g>
<g>
<title>com.sun.jmx.remote.util.OrderClassLoaders (1 samples, 0.04%)</title><rect x="750.3" y="451.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="753.3" y="462.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (1 samples, 0.04%)</title><rect x="750.8" y="499.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="753.8" y="510.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (1 samples, 0.04%)</title><rect x="750.8" y="483.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.8" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.04%)</title><rect x="750.8" y="467.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.8" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.04%)</title><rect x="750.8" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.8" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.04%)</title><rect x="750.8" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="753.8" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (1 samples, 0.04%)</title><rect x="750.8" y="419.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.8" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.04%)</title><rect x="750.8" y="403.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.8" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (1 samples, 0.04%)</title><rect x="750.8" y="387.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="753.8" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.04%)</title><rect x="750.8" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="753.8" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.04%)</title><rect x="750.8" y="355.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.8" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (1 samples, 0.04%)</title><rect x="750.8" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.8" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.04%)</title><rect x="750.8" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.8" y="334.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.04%)</title><rect x="750.8" y="307.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="753.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor38.invoke (1 samples, 0.04%)</title><rect x="751.2" y="547.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.2" y="558.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttributes (1 samples, 0.04%)</title><rect x="751.2" y="531.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="754.2" y="542.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 0.04%)</title><rect x="751.2" y="515.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.2" y="526.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (1 samples, 0.04%)</title><rect x="751.2" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="754.2" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (1 samples, 0.04%)</title><rect x="751.2" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.2" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttributes (1 samples, 0.04%)</title><rect x="751.2" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.2" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttributes (1 samples, 0.04%)</title><rect x="751.2" y="451.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.2" y="462.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.getAttributes (1 samples, 0.04%)</title><rect x="751.2" y="435.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="754.2" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttributes (1 samples, 0.04%)</title><rect x="751.2" y="419.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="754.2" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttribute (1 samples, 0.04%)</title><rect x="751.2" y="403.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="754.2" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.getAttribute (1 samples, 0.04%)</title><rect x="751.2" y="387.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.2" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (1 samples, 0.04%)</title><rect x="751.2" y="371.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.2" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.04%)</title><rect x="751.2" y="355.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="754.2" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.04%)</title><rect x="751.2" y="339.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.2" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.04%)</title><rect x="751.2" y="323.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="754.2" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.04%)</title><rect x="751.2" y="307.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="754.2" y="318.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 0.04%)</title><rect x="751.2" y="291.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="754.2" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="751.2" y="275.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="754.2" y="286.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (4 samples, 0.16%)</title><rect x="751.7" y="579.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.7" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (4 samples, 0.16%)</title><rect x="751.7" y="563.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="754.7" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.16%)</title><rect x="751.7" y="547.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="754.7" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (4 samples, 0.16%)</title><rect x="751.7" y="531.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="754.7" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.16%)</title><rect x="751.7" y="515.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="754.7" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (4 samples, 0.16%)</title><rect x="751.7" y="499.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="754.7" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (4 samples, 0.16%)</title><rect x="751.7" y="483.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.7" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (4 samples, 0.16%)</title><rect x="751.7" y="467.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.7" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.16%)</title><rect x="751.7" y="451.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="754.7" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (4 samples, 0.16%)</title><rect x="751.7" y="435.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="754.7" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (4 samples, 0.16%)</title><rect x="751.7" y="419.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.7" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (4 samples, 0.16%)</title><rect x="751.7" y="403.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.7" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.16%)</title><rect x="751.7" y="387.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="754.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.16%)</title><rect x="751.7" y="371.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (4 samples, 0.16%)</title><rect x="751.7" y="355.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.7" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (4 samples, 0.16%)</title><rect x="751.7" y="339.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.7" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (4 samples, 0.16%)</title><rect x="751.7" y="323.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="754.7" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.16%)</title><rect x="751.7" y="307.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="754.7" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (3 samples, 0.12%)</title><rect x="751.7" y="291.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="754.7" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (2 samples, 0.08%)</title><rect x="751.7" y="275.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.7" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (2 samples, 0.08%)</title><rect x="751.7" y="259.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.7" y="270.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.04%)</title><rect x="751.7" y="243.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="754.7" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="752.2" y="243.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="755.2" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.04%)</title><rect x="752.6" y="275.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="755.6" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.04%)</title><rect x="752.6" y="259.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="755.6" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.04%)</title><rect x="752.6" y="243.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="755.6" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.04%)</title><rect x="752.6" y="227.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.6" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.04%)</title><rect x="752.6" y="211.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="755.6" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.04%)</title><rect x="752.6" y="195.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="755.6" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.04%)</title><rect x="752.6" y="179.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="755.6" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.04%)</title><rect x="752.6" y="163.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="755.6" y="174.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.04%)</title><rect x="752.6" y="147.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="755.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.04%)</title><rect x="752.6" y="131.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="755.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (1 samples, 0.04%)</title><rect x="752.6" y="115.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="755.6" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.04%)</title><rect x="752.6" y="99.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="755.6" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.04%)</title><rect x="752.6" y="83.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="755.6" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.04%)</title><rect x="752.6" y="67.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="755.6" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.04%)</title><rect x="752.6" y="51.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.6" y="62.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.04%)</title><rect x="752.6" y="35.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="755.6" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.04%)</title><rect x="753.1" y="291.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="756.1" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.04%)</title><rect x="753.1" y="275.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="756.1" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.04%)</title><rect x="753.1" y="259.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.1" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.04%)</title><rect x="753.1" y="243.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.1" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.04%)</title><rect x="753.1" y="227.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.1" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.04%)</title><rect x="753.1" y="211.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.1" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.04%)</title><rect x="753.1" y="195.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.1" y="206.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.04%)</title><rect x="753.1" y="179.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="756.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.04%)</title><rect x="753.1" y="163.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="756.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (1 samples, 0.04%)</title><rect x="753.1" y="147.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="756.1" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.04%)</title><rect x="753.1" y="131.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="756.1" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (1 samples, 0.04%)</title><rect x="753.1" y="115.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="756.1" y="126.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (1 samples, 0.04%)</title><rect x="753.1" y="99.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="756.1" y="110.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (2 samples, 0.08%)</title><rect x="753.6" y="579.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.6" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.08%)</title><rect x="753.6" y="563.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="756.6" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.08%)</title><rect x="753.6" y="547.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="756.6" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.08%)</title><rect x="753.6" y="531.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="756.6" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (2 samples, 0.08%)</title><rect x="753.6" y="515.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="756.6" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.04%)</title><rect x="753.6" y="499.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="756.6" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.04%)</title><rect x="753.6" y="483.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="756.6" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (1 samples, 0.04%)</title><rect x="753.6" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.6" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getReflector (1 samples, 0.04%)</title><rect x="753.6" y="451.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="756.6" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass$FieldReflectorKey.&lt;init&gt; (1 samples, 0.04%)</title><rect x="753.6" y="435.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="756.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.04%)</title><rect x="753.6" y="419.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="756.6" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (1 samples, 0.04%)</title><rect x="754.0" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="757.0" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (1 samples, 0.04%)</title><rect x="754.0" y="483.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="757.0" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.04%)</title><rect x="754.0" y="467.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="757.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.04%)</title><rect x="754.0" y="451.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="757.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (1 samples, 0.04%)</title><rect x="754.0" y="435.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="757.0" y="446.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (1 samples, 0.04%)</title><rect x="754.0" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="757.0" y="430.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (1 samples, 0.04%)</title><rect x="754.0" y="403.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="757.0" y="414.0"></text>
</g>
<g>
<title>javax/management/ObjectName.addProperty (1 samples, 0.04%)</title><rect x="754.0" y="387.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="757.0" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.04%)</title><rect x="754.0" y="371.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="757.0" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.04%)</title><rect x="754.0" y="355.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="757.0" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.04%)</title><rect x="754.0" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="757.0" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1 samples, 0.04%)</title><rect x="754.0" y="323.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="757.0" y="334.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (4 samples, 0.16%)</title><rect x="754.5" y="579.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="757.5" y="590.0"></text>
</g>
<g>
<title>java.io.DataOutputStream (1 samples, 0.04%)</title><rect x="754.5" y="563.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="757.5" y="574.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (3 samples, 0.12%)</title><rect x="755.0" y="563.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="758.0" y="574.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (3 samples, 0.12%)</title><rect x="755.0" y="547.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="758.0" y="558.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (3 samples, 0.12%)</title><rect x="755.0" y="531.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="758.0" y="542.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (3 samples, 0.12%)</title><rect x="755.0" y="515.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="758.0" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (3 samples, 0.12%)</title><rect x="755.0" y="499.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="758.0" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (2 samples, 0.08%)</title><rect x="755.0" y="483.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="758.0" y="494.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.08%)</title><rect x="755.0" y="467.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="758.0" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$ReplaceTable.&lt;init&gt; (1 samples, 0.04%)</title><rect x="755.9" y="483.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="758.9" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (1 samples, 0.04%)</title><rect x="755.9" y="467.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="758.9" y="478.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.04%)</title><rect x="755.9" y="451.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="758.9" y="462.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (1 samples, 0.04%)</title><rect x="756.4" y="643.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="759.4" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (1 samples, 0.04%)</title><rect x="756.4" y="627.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="759.4" y="638.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (1 samples, 0.04%)</title><rect x="756.4" y="611.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="759.4" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (1 samples, 0.04%)</title><rect x="756.4" y="595.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="759.4" y="606.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$BlockDataInputStream (1 samples, 0.04%)</title><rect x="756.4" y="579.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="759.4" y="590.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (928 samples, 36.71%)</title><rect x="756.8" y="803.0" width="433.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="759.8" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (36 samples, 1.42%)</title><rect x="756.8" y="787.0" width="16.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.8" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (36 samples, 1.42%)</title><rect x="756.8" y="771.0" width="16.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="759.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (892 samples, 35.28%)</title><rect x="773.6" y="787.0" width="416.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.6" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (892 samples, 35.28%)</title><rect x="773.6" y="771.0" width="416.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="776.6" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (892 samples, 35.28%)</title><rect x="773.6" y="755.0" width="416.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="776.6" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (177 samples, 7.00%)</title><rect x="773.6" y="739.0" width="82.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="776.6" y="750.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (177 samples, 7.00%)</title><rect x="773.6" y="723.0" width="82.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="776.6" y="734.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (108 samples, 4.27%)</title><rect x="773.6" y="707.0" width="50.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.6" y="718.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (61 samples, 2.41%)</title><rect x="773.6" y="691.0" width="28.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="776.6" y="702.0">on..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (61 samples, 2.41%)</title><rect x="773.6" y="675.0" width="28.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="776.6" y="686.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (61 samples, 2.41%)</title><rect x="773.6" y="659.0" width="28.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="776.6" y="670.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (61 samples, 2.41%)</title><rect x="773.6" y="643.0" width="28.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="776.6" y="654.0">ja..</text>
</g>
<g>
<title>java.lang.String (25 samples, 0.99%)</title><rect x="773.6" y="627.0" width="11.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="776.6" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (36 samples, 1.42%)</title><rect x="785.3" y="627.0" width="16.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="788.3" y="638.0"></text>
</g>
<g>
<title>byte[] (36 samples, 1.42%)</title><rect x="785.3" y="611.0" width="16.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="788.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut (47 samples, 1.86%)</title><rect x="802.1" y="691.0" width="22.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="805.1" y="702.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 1.82%)</title><rect x="802.1" y="675.0" width="21.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="805.1" y="686.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 1.82%)</title><rect x="802.1" y="659.0" width="21.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="805.1" y="670.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$119/1704314390.get$Lambda (46 samples, 1.82%)</title><rect x="802.1" y="643.0" width="21.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="805.1" y="654.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ServiceImpl$$Lambda$119 (46 samples, 1.82%)</title><rect x="802.1" y="627.0" width="21.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="805.1" y="638.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.executeOrSendError (1 samples, 0.04%)</title><rect x="823.6" y="675.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="826.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.04%)</title><rect x="823.6" y="659.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="826.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.04%)</title><rect x="823.6" y="643.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="826.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="823.6" y="627.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="826.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="823.6" y="611.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="826.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.04%)</title><rect x="823.6" y="595.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="826.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.04%)</title><rect x="823.6" y="579.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="826.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (69 samples, 2.73%)</title><rect x="824.1" y="707.0" width="32.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="827.1" y="718.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (69 samples, 2.73%)</title><rect x="824.1" y="691.0" width="32.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="827.1" y="702.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (69 samples, 2.73%)</title><rect x="824.1" y="675.0" width="32.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="827.1" y="686.0">ja..</text>
</g>
<g>
<title>java.lang.String (27 samples, 1.07%)</title><rect x="824.1" y="659.0" width="12.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="827.1" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (42 samples, 1.66%)</title><rect x="836.7" y="659.0" width="19.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="839.7" y="670.0"></text>
</g>
<g>
<title>byte[] (42 samples, 1.66%)</title><rect x="836.7" y="643.0" width="19.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="839.7" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (329 samples, 13.01%)</title><rect x="856.3" y="739.0" width="153.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="859.3" y="750.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one.nio.http.Request (51 samples, 2.02%)</title><rect x="856.3" y="723.0" width="23.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="859.3" y="734.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (103 samples, 4.07%)</title><rect x="880.1" y="723.0" width="48.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="883.1" y="734.0">one/..</text>
</g>
<g>
<title>java.lang.String[] (103 samples, 4.07%)</title><rect x="880.1" y="707.0" width="48.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="883.1" y="718.0">java..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (175 samples, 6.92%)</title><rect x="928.1" y="723.0" width="81.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="931.1" y="734.0">one/nio/u..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (175 samples, 6.92%)</title><rect x="928.1" y="707.0" width="81.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="931.1" y="718.0">one/nio/u..</text>
</g>
<g>
<title>char[] (95 samples, 3.76%)</title><rect x="928.1" y="691.0" width="44.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="931.1" y="702.0">char[]</text>
</g>
<g>
<title>java.lang.String (45 samples, 1.78%)</title><rect x="972.5" y="691.0" width="21.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="975.5" y="702.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (35 samples, 1.38%)</title><rect x="993.5" y="691.0" width="16.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="996.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (35 samples, 1.38%)</title><rect x="993.5" y="675.0" width="16.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="996.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (35 samples, 1.38%)</title><rect x="993.5" y="659.0" width="16.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="996.5" y="670.0"></text>
</g>
<g>
<title>byte[] (35 samples, 1.38%)</title><rect x="993.5" y="643.0" width="16.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="996.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (33 samples, 1.31%)</title><rect x="1009.8" y="739.0" width="15.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1012.8" y="750.0"></text>
</g>
<g>
<title>byte[] (33 samples, 1.31%)</title><rect x="1009.8" y="723.0" width="15.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1012.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (64 samples, 2.53%)</title><rect x="1025.2" y="739.0" width="29.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1028.2" y="750.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (64 samples, 2.53%)</title><rect x="1025.2" y="723.0" width="29.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1028.2" y="734.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (64 samples, 2.53%)</title><rect x="1025.2" y="707.0" width="29.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1028.2" y="718.0">ja..</text>
</g>
<g>
<title>java.lang.String (34 samples, 1.34%)</title><rect x="1025.2" y="691.0" width="15.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1028.2" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (30 samples, 1.19%)</title><rect x="1041.1" y="691.0" width="14.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1044.1" y="702.0"></text>
</g>
<g>
<title>byte[] (30 samples, 1.19%)</title><rect x="1041.1" y="675.0" width="14.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1044.1" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (289 samples, 11.43%)</title><rect x="1055.1" y="739.0" width="134.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1058.1" y="750.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (289 samples, 11.43%)</title><rect x="1055.1" y="723.0" width="134.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1058.1" y="734.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>char[] (131 samples, 5.18%)</title><rect x="1055.1" y="707.0" width="61.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1058.1" y="718.0">char[]</text>
</g>
<g>
<title>java.lang.String (65 samples, 2.57%)</title><rect x="1116.2" y="707.0" width="30.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1119.2" y="718.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (93 samples, 3.68%)</title><rect x="1146.6" y="707.0" width="43.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1149.6" y="718.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (93 samples, 3.68%)</title><rect x="1146.6" y="691.0" width="43.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1149.6" y="702.0">java..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (93 samples, 3.68%)</title><rect x="1146.6" y="675.0" width="43.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1149.6" y="686.0">java..</text>
</g>
<g>
<title>byte[] (93 samples, 3.68%)</title><rect x="1146.6" y="659.0" width="43.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1149.6" y="670.0">byte[]</text>
</g>
</g>
</svg>
