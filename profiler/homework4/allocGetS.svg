<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="502" onload="init(evt)" viewBox="0 0 1200 502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="485"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="485"> </text>
<g id="frames">
<g>
<title>all (7,462 samples, 100.00%)</title><rect x="10.0" y="451.0" width="1180.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="13.0" y="462.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=23137] (458 samples, 6.14%)</title><rect x="10.0" y="435.0" width="72.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="13.0" y="446.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (458 samples, 6.14%)</title><rect x="10.0" y="419.0" width="72.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (38 samples, 0.51%)</title><rect x="10.0" y="403.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (38 samples, 0.51%)</title><rect x="10.0" y="387.0" width="6.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (420 samples, 5.63%)</title><rect x="16.0" y="403.0" width="66.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.0" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (420 samples, 5.63%)</title><rect x="16.0" y="387.0" width="66.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="19.0" y="398.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (420 samples, 5.63%)</title><rect x="16.0" y="371.0" width="66.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.0" y="382.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (113 samples, 1.51%)</title><rect x="16.0" y="355.0" width="17.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (113 samples, 1.51%)</title><rect x="16.0" y="339.0" width="17.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.0" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_handleEntityGet.handleRequest (79 samples, 1.06%)</title><rect x="16.0" y="323.0" width="12.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (49 samples, 0.66%)</title><rect x="16.0" y="307.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (49 samples, 0.66%)</title><rect x="16.0" y="291.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.0" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (49 samples, 0.66%)</title><rect x="16.0" y="275.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (49 samples, 0.66%)</title><rect x="16.0" y="259.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.0" y="270.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.39%)</title><rect x="16.0" y="243.0" width="4.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="19.0" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.27%)</title><rect x="20.6" y="243.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.6" y="254.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.27%)</title><rect x="20.6" y="227.0" width="3.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="23.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityGet (30 samples, 0.40%)</title><rect x="23.8" y="307.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="26.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.38%)</title><rect x="23.8" y="291.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.38%)</title><rect x="23.8" y="275.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$73/1075842738.get$Lambda (28 samples, 0.38%)</title><rect x="23.8" y="259.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.8" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ServiceImpl$$Lambda$73 (28 samples, 0.38%)</title><rect x="23.8" y="243.0" width="4.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="26.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.executeOrSendError (2 samples, 0.03%)</title><rect x="28.2" y="291.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.03%)</title><rect x="28.2" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="31.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.03%)</title><rect x="28.2" y="259.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.03%)</title><rect x="28.2" y="243.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.03%)</title><rect x="28.2" y="227.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.03%)</title><rect x="28.2" y="211.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="31.2" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.03%)</title><rect x="28.2" y="195.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="31.2" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (34 samples, 0.46%)</title><rect x="28.5" y="323.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="31.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (34 samples, 0.46%)</title><rect x="28.5" y="307.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="31.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (34 samples, 0.46%)</title><rect x="28.5" y="291.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.5" y="302.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.17%)</title><rect x="28.5" y="275.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="31.5" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.28%)</title><rect x="30.6" y="275.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.6" y="286.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.28%)</title><rect x="30.6" y="259.0" width="3.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="33.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (211 samples, 2.83%)</title><rect x="33.9" y="355.0" width="33.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="36.9" y="366.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (36 samples, 0.48%)</title><rect x="33.9" y="339.0" width="5.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="36.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (72 samples, 0.96%)</title><rect x="39.6" y="339.0" width="11.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.6" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (72 samples, 0.96%)</title><rect x="39.6" y="323.0" width="11.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="42.6" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (103 samples, 1.38%)</title><rect x="51.0" y="339.0" width="16.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.0" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (103 samples, 1.38%)</title><rect x="51.0" y="323.0" width="16.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.0" y="334.0"></text>
</g>
<g>
<title>char[] (52 samples, 0.70%)</title><rect x="51.0" y="307.0" width="8.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="54.0" y="318.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.20%)</title><rect x="59.2" y="307.0" width="2.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="62.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (36 samples, 0.48%)</title><rect x="61.6" y="307.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="64.6" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (36 samples, 0.48%)</title><rect x="61.6" y="291.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="64.6" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (36 samples, 0.48%)</title><rect x="61.6" y="275.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="64.6" y="286.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.48%)</title><rect x="61.6" y="259.0" width="5.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="64.6" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (96 samples, 1.29%)</title><rect x="67.2" y="355.0" width="15.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (96 samples, 1.29%)</title><rect x="67.2" y="339.0" width="15.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="70.2" y="350.0"></text>
</g>
<g>
<title>char[] (43 samples, 0.58%)</title><rect x="67.2" y="323.0" width="6.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="70.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.23%)</title><rect x="74.0" y="323.0" width="2.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="77.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (36 samples, 0.48%)</title><rect x="76.7" y="323.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (36 samples, 0.48%)</title><rect x="76.7" y="307.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="79.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (36 samples, 0.48%)</title><rect x="76.7" y="291.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.7" y="302.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.48%)</title><rect x="76.7" y="275.0" width="5.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="79.7" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=23138] (455 samples, 6.10%)</title><rect x="82.4" y="435.0" width="72.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="85.4" y="446.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (455 samples, 6.10%)</title><rect x="82.4" y="419.0" width="72.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="85.4" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (43 samples, 0.58%)</title><rect x="82.4" y="403.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.4" y="414.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (43 samples, 0.58%)</title><rect x="82.4" y="387.0" width="6.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="85.4" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (412 samples, 5.52%)</title><rect x="89.2" y="403.0" width="65.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="92.2" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (412 samples, 5.52%)</title><rect x="89.2" y="387.0" width="65.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="92.2" y="398.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (412 samples, 5.52%)</title><rect x="89.2" y="371.0" width="65.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="92.2" y="382.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (113 samples, 1.51%)</title><rect x="89.2" y="355.0" width="17.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="92.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (113 samples, 1.51%)</title><rect x="89.2" y="339.0" width="17.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="92.2" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_handleEntityGet.handleRequest (69 samples, 0.92%)</title><rect x="89.2" y="323.0" width="10.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="92.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (47 samples, 0.63%)</title><rect x="89.2" y="307.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="92.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (47 samples, 0.63%)</title><rect x="89.2" y="291.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="92.2" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (47 samples, 0.63%)</title><rect x="89.2" y="275.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="92.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 0.63%)</title><rect x="89.2" y="259.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="92.2" y="270.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.27%)</title><rect x="89.2" y="243.0" width="3.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="92.2" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (27 samples, 0.36%)</title><rect x="92.4" y="243.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.4" y="254.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.36%)</title><rect x="92.4" y="227.0" width="4.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="95.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityGet (22 samples, 0.29%)</title><rect x="96.7" y="307.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.29%)</title><rect x="96.7" y="291.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.29%)</title><rect x="96.7" y="275.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="99.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$73/1075842738.get$Lambda (22 samples, 0.29%)</title><rect x="96.7" y="259.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="99.7" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ServiceImpl$$Lambda$73 (22 samples, 0.29%)</title><rect x="96.7" y="243.0" width="3.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="99.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (44 samples, 0.59%)</title><rect x="100.1" y="323.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="103.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (44 samples, 0.59%)</title><rect x="100.1" y="307.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="103.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (44 samples, 0.59%)</title><rect x="100.1" y="291.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.1" y="302.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.31%)</title><rect x="100.1" y="275.0" width="3.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="103.1" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.28%)</title><rect x="103.8" y="275.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="106.8" y="286.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.28%)</title><rect x="103.8" y="259.0" width="3.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="106.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (209 samples, 2.80%)</title><rect x="107.1" y="355.0" width="33.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.1" y="366.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (31 samples, 0.42%)</title><rect x="107.1" y="339.0" width="4.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="110.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (70 samples, 0.94%)</title><rect x="112.0" y="339.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.0" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (70 samples, 0.94%)</title><rect x="112.0" y="323.0" width="11.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="115.0" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (108 samples, 1.45%)</title><rect x="123.1" y="339.0" width="17.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.1" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (108 samples, 1.45%)</title><rect x="123.1" y="323.0" width="17.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="126.1" y="334.0"></text>
</g>
<g>
<title>char[] (46 samples, 0.62%)</title><rect x="123.1" y="307.0" width="7.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="126.1" y="318.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.27%)</title><rect x="130.3" y="307.0" width="3.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="133.3" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (42 samples, 0.56%)</title><rect x="133.5" y="307.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="136.5" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (42 samples, 0.56%)</title><rect x="133.5" y="291.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="136.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (42 samples, 0.56%)</title><rect x="133.5" y="275.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.5" y="286.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.56%)</title><rect x="133.5" y="259.0" width="6.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="136.5" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (90 samples, 1.21%)</title><rect x="140.1" y="355.0" width="14.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="143.1" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (90 samples, 1.21%)</title><rect x="140.1" y="339.0" width="14.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="143.1" y="350.0"></text>
</g>
<g>
<title>char[] (44 samples, 0.59%)</title><rect x="140.1" y="323.0" width="7.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="143.1" y="334.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.28%)</title><rect x="147.1" y="323.0" width="3.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="150.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.34%)</title><rect x="150.4" y="323.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.34%)</title><rect x="150.4" y="307.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (25 samples, 0.34%)</title><rect x="150.4" y="291.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.4" y="302.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.34%)</title><rect x="150.4" y="275.0" width="4.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="153.4" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=23139] (462 samples, 6.19%)</title><rect x="154.4" y="435.0" width="73.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="157.4" y="446.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (462 samples, 6.19%)</title><rect x="154.4" y="419.0" width="73.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="157.4" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (462 samples, 6.19%)</title><rect x="154.4" y="403.0" width="73.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.4" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (462 samples, 6.19%)</title><rect x="154.4" y="387.0" width="73.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="157.4" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (462 samples, 6.19%)</title><rect x="154.4" y="371.0" width="73.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="157.4" y="382.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (127 samples, 1.70%)</title><rect x="154.4" y="355.0" width="20.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="157.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (127 samples, 1.70%)</title><rect x="154.4" y="339.0" width="20.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="157.4" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_handleEntityGet.handleRequest (69 samples, 0.92%)</title><rect x="154.4" y="323.0" width="10.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (52 samples, 0.70%)</title><rect x="154.4" y="307.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="157.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (52 samples, 0.70%)</title><rect x="154.4" y="291.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.4" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (52 samples, 0.70%)</title><rect x="154.4" y="275.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="157.4" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 0.70%)</title><rect x="154.4" y="259.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.4" y="270.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.34%)</title><rect x="154.4" y="243.0" width="3.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="157.4" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (27 samples, 0.36%)</title><rect x="158.3" y="243.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="161.3" y="254.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.36%)</title><rect x="158.3" y="227.0" width="4.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="161.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityGet (17 samples, 0.23%)</title><rect x="162.6" y="307.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="165.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.21%)</title><rect x="162.6" y="291.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="165.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.21%)</title><rect x="162.6" y="275.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="165.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$73/1075842738.get$Lambda (16 samples, 0.21%)</title><rect x="162.6" y="259.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="165.6" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ServiceImpl$$Lambda$73 (16 samples, 0.21%)</title><rect x="162.6" y="243.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="165.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (58 samples, 0.78%)</title><rect x="165.3" y="323.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="168.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (58 samples, 0.78%)</title><rect x="165.3" y="307.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="168.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (58 samples, 0.78%)</title><rect x="165.3" y="291.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="168.3" y="302.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.35%)</title><rect x="165.3" y="275.0" width="4.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="168.3" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.43%)</title><rect x="169.4" y="275.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.4" y="286.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.43%)</title><rect x="169.4" y="259.0" width="5.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="172.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (238 samples, 3.19%)</title><rect x="174.5" y="355.0" width="37.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="177.5" y="366.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (33 samples, 0.44%)</title><rect x="174.5" y="339.0" width="5.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="177.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (75 samples, 1.01%)</title><rect x="179.7" y="339.0" width="11.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="182.7" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (75 samples, 1.01%)</title><rect x="179.7" y="323.0" width="11.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="182.7" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (130 samples, 1.74%)</title><rect x="191.5" y="339.0" width="20.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="194.5" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (130 samples, 1.74%)</title><rect x="191.5" y="323.0" width="20.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.5" y="334.0"></text>
</g>
<g>
<title>char[] (65 samples, 0.87%)</title><rect x="191.5" y="307.0" width="10.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="194.5" y="318.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.38%)</title><rect x="201.8" y="307.0" width="4.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="204.8" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.50%)</title><rect x="206.2" y="307.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="209.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.50%)</title><rect x="206.2" y="291.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="209.2" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (37 samples, 0.50%)</title><rect x="206.2" y="275.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="209.2" y="286.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.50%)</title><rect x="206.2" y="259.0" width="5.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="209.2" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (97 samples, 1.30%)</title><rect x="212.1" y="355.0" width="15.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="215.1" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (97 samples, 1.30%)</title><rect x="212.1" y="339.0" width="15.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="215.1" y="350.0"></text>
</g>
<g>
<title>char[] (49 samples, 0.66%)</title><rect x="212.1" y="323.0" width="7.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="215.1" y="334.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.16%)</title><rect x="219.8" y="323.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="222.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (36 samples, 0.48%)</title><rect x="221.7" y="323.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="224.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (36 samples, 0.48%)</title><rect x="221.7" y="307.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="224.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (36 samples, 0.48%)</title><rect x="221.7" y="291.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="224.7" y="302.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.48%)</title><rect x="221.7" y="275.0" width="5.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="224.7" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=23140] (461 samples, 6.18%)</title><rect x="227.4" y="435.0" width="72.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="230.4" y="446.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (461 samples, 6.18%)</title><rect x="227.4" y="419.0" width="72.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="230.4" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (461 samples, 6.18%)</title><rect x="227.4" y="403.0" width="72.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.4" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (461 samples, 6.18%)</title><rect x="227.4" y="387.0" width="72.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.4" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (461 samples, 6.18%)</title><rect x="227.4" y="371.0" width="72.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.4" y="382.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (155 samples, 2.08%)</title><rect x="227.4" y="355.0" width="24.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.4" y="366.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (155 samples, 2.08%)</title><rect x="227.4" y="339.0" width="24.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.4" y="350.0">o..</text>
</g>
<g>
<title>RequestHandler1_handleEntityGet.handleRequest (89 samples, 1.19%)</title><rect x="227.4" y="323.0" width="14.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="230.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (52 samples, 0.70%)</title><rect x="227.4" y="307.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="230.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (52 samples, 0.70%)</title><rect x="227.4" y="291.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="230.4" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (52 samples, 0.70%)</title><rect x="227.4" y="275.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="230.4" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 0.70%)</title><rect x="227.4" y="259.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="230.4" y="270.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.35%)</title><rect x="227.4" y="243.0" width="4.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="230.4" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.35%)</title><rect x="231.5" y="243.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.5" y="254.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.35%)</title><rect x="231.5" y="227.0" width="4.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="234.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityGet (37 samples, 0.50%)</title><rect x="235.7" y="307.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="238.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.44%)</title><rect x="235.7" y="291.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="238.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.44%)</title><rect x="235.7" y="275.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="238.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$73/1075842738.get$Lambda (33 samples, 0.44%)</title><rect x="235.7" y="259.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="238.7" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ServiceImpl$$Lambda$73 (33 samples, 0.44%)</title><rect x="235.7" y="243.0" width="5.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="238.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.executeOrSendError (4 samples, 0.05%)</title><rect x="240.9" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="243.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.05%)</title><rect x="240.9" y="275.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="243.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.05%)</title><rect x="240.9" y="259.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.05%)</title><rect x="240.9" y="243.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="243.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.05%)</title><rect x="240.9" y="227.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (4 samples, 0.05%)</title><rect x="240.9" y="211.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="243.9" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (4 samples, 0.05%)</title><rect x="240.9" y="195.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="243.9" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (66 samples, 0.88%)</title><rect x="241.5" y="323.0" width="10.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="244.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (66 samples, 0.88%)</title><rect x="241.5" y="307.0" width="10.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="244.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (66 samples, 0.88%)</title><rect x="241.5" y="291.0" width="10.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="244.5" y="302.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.34%)</title><rect x="241.5" y="275.0" width="4.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="244.5" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (41 samples, 0.55%)</title><rect x="245.5" y="275.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="248.5" y="286.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.55%)</title><rect x="245.5" y="259.0" width="6.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="248.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (211 samples, 2.83%)</title><rect x="251.9" y="355.0" width="33.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="254.9" y="366.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (26 samples, 0.35%)</title><rect x="251.9" y="339.0" width="4.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="254.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (58 samples, 0.78%)</title><rect x="256.1" y="339.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="259.1" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (58 samples, 0.78%)</title><rect x="256.1" y="323.0" width="9.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="259.1" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (127 samples, 1.70%)</title><rect x="265.2" y="339.0" width="20.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="268.2" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (127 samples, 1.70%)</title><rect x="265.2" y="323.0" width="20.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="268.2" y="334.0"></text>
</g>
<g>
<title>char[] (59 samples, 0.79%)</title><rect x="265.2" y="307.0" width="9.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="268.2" y="318.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.32%)</title><rect x="274.6" y="307.0" width="3.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="277.6" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (44 samples, 0.59%)</title><rect x="278.4" y="307.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="281.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (44 samples, 0.59%)</title><rect x="278.4" y="291.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="281.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (44 samples, 0.59%)</title><rect x="278.4" y="275.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="281.4" y="286.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.59%)</title><rect x="278.4" y="259.0" width="6.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="281.4" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (95 samples, 1.27%)</title><rect x="285.3" y="355.0" width="15.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.3" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (95 samples, 1.27%)</title><rect x="285.3" y="339.0" width="15.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="288.3" y="350.0"></text>
</g>
<g>
<title>char[] (37 samples, 0.50%)</title><rect x="285.3" y="323.0" width="5.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="288.3" y="334.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.35%)</title><rect x="291.2" y="323.0" width="4.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="294.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.43%)</title><rect x="295.3" y="323.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.43%)</title><rect x="295.3" y="307.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="298.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (32 samples, 0.43%)</title><rect x="295.3" y="291.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.3" y="302.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.43%)</title><rect x="295.3" y="275.0" width="5.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="298.3" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=23141] (466 samples, 6.24%)</title><rect x="300.3" y="435.0" width="73.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="303.3" y="446.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (466 samples, 6.24%)</title><rect x="300.3" y="419.0" width="73.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="303.3" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (46 samples, 0.62%)</title><rect x="300.3" y="403.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="303.3" y="414.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (46 samples, 0.62%)</title><rect x="300.3" y="387.0" width="7.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="303.3" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (420 samples, 5.63%)</title><rect x="307.6" y="403.0" width="66.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="310.6" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (420 samples, 5.63%)</title><rect x="307.6" y="387.0" width="66.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.6" y="398.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (420 samples, 5.63%)</title><rect x="307.6" y="371.0" width="66.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="310.6" y="382.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (118 samples, 1.58%)</title><rect x="307.6" y="355.0" width="18.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="310.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (118 samples, 1.58%)</title><rect x="307.6" y="339.0" width="18.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="310.6" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_handleEntityGet.handleRequest (75 samples, 1.01%)</title><rect x="307.6" y="323.0" width="11.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="310.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (50 samples, 0.67%)</title><rect x="307.6" y="307.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="310.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (50 samples, 0.67%)</title><rect x="307.6" y="291.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.6" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (50 samples, 0.67%)</title><rect x="307.6" y="275.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="310.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (50 samples, 0.67%)</title><rect x="307.6" y="259.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.6" y="270.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.32%)</title><rect x="307.6" y="243.0" width="3.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="310.6" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.35%)</title><rect x="311.4" y="243.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="314.4" y="254.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.35%)</title><rect x="311.4" y="227.0" width="4.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="314.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityGet (25 samples, 0.34%)</title><rect x="315.5" y="307.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="318.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.34%)</title><rect x="315.5" y="291.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="318.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.34%)</title><rect x="315.5" y="275.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="318.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$73/1075842738.get$Lambda (25 samples, 0.34%)</title><rect x="315.5" y="259.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="318.5" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ServiceImpl$$Lambda$73 (25 samples, 0.34%)</title><rect x="315.5" y="243.0" width="4.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="318.5" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (43 samples, 0.58%)</title><rect x="319.5" y="323.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="322.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (43 samples, 0.58%)</title><rect x="319.5" y="307.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="322.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (43 samples, 0.58%)</title><rect x="319.5" y="291.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="322.5" y="302.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.25%)</title><rect x="319.5" y="275.0" width="3.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="322.5" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (24 samples, 0.32%)</title><rect x="322.5" y="275.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="325.5" y="286.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.32%)</title><rect x="322.5" y="259.0" width="3.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="325.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (208 samples, 2.79%)</title><rect x="326.3" y="355.0" width="32.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.3" y="366.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (38 samples, 0.51%)</title><rect x="326.3" y="339.0" width="6.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="329.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (73 samples, 0.98%)</title><rect x="332.3" y="339.0" width="11.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="335.3" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (73 samples, 0.98%)</title><rect x="332.3" y="323.0" width="11.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="335.3" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (97 samples, 1.30%)</title><rect x="343.8" y="339.0" width="15.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="346.8" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (97 samples, 1.30%)</title><rect x="343.8" y="323.0" width="15.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="346.8" y="334.0"></text>
</g>
<g>
<title>char[] (46 samples, 0.62%)</title><rect x="343.8" y="307.0" width="7.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="346.8" y="318.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.27%)</title><rect x="351.1" y="307.0" width="3.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="354.1" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.42%)</title><rect x="354.3" y="307.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="357.3" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.42%)</title><rect x="354.3" y="291.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="357.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (31 samples, 0.42%)</title><rect x="354.3" y="275.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="357.3" y="286.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.42%)</title><rect x="354.3" y="259.0" width="4.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="357.3" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (94 samples, 1.26%)</title><rect x="359.2" y="355.0" width="14.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="362.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (94 samples, 1.26%)</title><rect x="359.2" y="339.0" width="14.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="362.2" y="350.0"></text>
</g>
<g>
<title>char[] (40 samples, 0.54%)</title><rect x="359.2" y="323.0" width="6.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="362.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.21%)</title><rect x="365.5" y="323.0" width="2.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="368.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (38 samples, 0.51%)</title><rect x="368.0" y="323.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="371.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (38 samples, 0.51%)</title><rect x="368.0" y="307.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="371.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (38 samples, 0.51%)</title><rect x="368.0" y="291.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="371.0" y="302.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.51%)</title><rect x="368.0" y="275.0" width="6.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="371.0" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=23142] (458 samples, 6.14%)</title><rect x="374.0" y="435.0" width="72.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="377.0" y="446.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (458 samples, 6.14%)</title><rect x="374.0" y="419.0" width="72.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="377.0" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (50 samples, 0.67%)</title><rect x="374.0" y="403.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="377.0" y="414.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (50 samples, 0.67%)</title><rect x="374.0" y="387.0" width="7.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="377.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (408 samples, 5.47%)</title><rect x="381.9" y="403.0" width="64.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="384.9" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (408 samples, 5.47%)</title><rect x="381.9" y="387.0" width="64.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="384.9" y="398.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (408 samples, 5.47%)</title><rect x="381.9" y="371.0" width="64.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="384.9" y="382.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (138 samples, 1.85%)</title><rect x="381.9" y="355.0" width="21.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="384.9" y="366.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (138 samples, 1.85%)</title><rect x="381.9" y="339.0" width="21.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.9" y="350.0">o..</text>
</g>
<g>
<title>RequestHandler1_handleEntityGet.handleRequest (81 samples, 1.09%)</title><rect x="381.9" y="323.0" width="12.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (57 samples, 0.76%)</title><rect x="381.9" y="307.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="384.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (57 samples, 0.76%)</title><rect x="381.9" y="291.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.9" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (57 samples, 0.76%)</title><rect x="381.9" y="275.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="384.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (57 samples, 0.76%)</title><rect x="381.9" y="259.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="384.9" y="270.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.24%)</title><rect x="381.9" y="243.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="384.9" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (39 samples, 0.52%)</title><rect x="384.8" y="243.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="387.8" y="254.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.52%)</title><rect x="384.8" y="227.0" width="6.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="387.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityGet (24 samples, 0.32%)</title><rect x="390.9" y="307.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="393.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.31%)</title><rect x="390.9" y="291.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="393.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.31%)</title><rect x="390.9" y="275.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="393.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$73/1075842738.get$Lambda (23 samples, 0.31%)</title><rect x="390.9" y="259.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="393.9" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ServiceImpl$$Lambda$73 (23 samples, 0.31%)</title><rect x="390.9" y="243.0" width="3.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="393.9" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (57 samples, 0.76%)</title><rect x="394.7" y="323.0" width="9.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="397.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (57 samples, 0.76%)</title><rect x="394.7" y="307.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (57 samples, 0.76%)</title><rect x="394.7" y="291.0" width="9.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="397.7" y="302.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.34%)</title><rect x="394.7" y="275.0" width="4.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="397.7" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.43%)</title><rect x="398.7" y="275.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="401.7" y="286.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.43%)</title><rect x="398.7" y="259.0" width="5.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="401.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (199 samples, 2.67%)</title><rect x="403.8" y="355.0" width="31.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="406.8" y="366.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (32 samples, 0.43%)</title><rect x="403.8" y="339.0" width="5.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="406.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (66 samples, 0.88%)</title><rect x="408.8" y="339.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="411.8" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (66 samples, 0.88%)</title><rect x="408.8" y="323.0" width="10.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="411.8" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (101 samples, 1.35%)</title><rect x="419.3" y="339.0" width="15.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.3" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (101 samples, 1.35%)</title><rect x="419.3" y="323.0" width="15.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="422.3" y="334.0"></text>
</g>
<g>
<title>char[] (59 samples, 0.79%)</title><rect x="419.3" y="307.0" width="9.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="422.3" y="318.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.24%)</title><rect x="428.6" y="307.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="431.6" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (24 samples, 0.32%)</title><rect x="431.4" y="307.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="434.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (24 samples, 0.32%)</title><rect x="431.4" y="291.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="434.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (24 samples, 0.32%)</title><rect x="431.4" y="275.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="434.4" y="286.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.32%)</title><rect x="431.4" y="259.0" width="3.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="434.4" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (71 samples, 0.95%)</title><rect x="435.2" y="355.0" width="11.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="438.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (71 samples, 0.95%)</title><rect x="435.2" y="339.0" width="11.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="438.2" y="350.0"></text>
</g>
<g>
<title>char[] (33 samples, 0.44%)</title><rect x="435.2" y="323.0" width="5.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="438.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.12%)</title><rect x="440.4" y="323.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="443.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.39%)</title><rect x="441.9" y="323.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.39%)</title><rect x="441.9" y="307.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (29 samples, 0.39%)</title><rect x="441.9" y="291.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="444.9" y="302.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.39%)</title><rect x="441.9" y="275.0" width="4.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="444.9" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=23143] (470 samples, 6.30%)</title><rect x="446.5" y="435.0" width="74.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="449.5" y="446.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (470 samples, 6.30%)</title><rect x="446.5" y="419.0" width="74.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="449.5" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (36 samples, 0.48%)</title><rect x="446.5" y="403.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="449.5" y="414.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (36 samples, 0.48%)</title><rect x="446.5" y="387.0" width="5.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="449.5" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (434 samples, 5.82%)</title><rect x="452.1" y="403.0" width="68.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="455.1" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (434 samples, 5.82%)</title><rect x="452.1" y="387.0" width="68.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="455.1" y="398.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (434 samples, 5.82%)</title><rect x="452.1" y="371.0" width="68.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="455.1" y="382.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (129 samples, 1.73%)</title><rect x="452.1" y="355.0" width="20.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="455.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (129 samples, 1.73%)</title><rect x="452.1" y="339.0" width="20.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="455.1" y="350.0"></text>
</g>
<g>
<title>RequestHandler1_handleEntityGet.handleRequest (81 samples, 1.09%)</title><rect x="452.1" y="323.0" width="12.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="455.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (47 samples, 0.63%)</title><rect x="452.1" y="307.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="455.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (47 samples, 0.63%)</title><rect x="452.1" y="291.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="455.1" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (47 samples, 0.63%)</title><rect x="452.1" y="275.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="455.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 0.63%)</title><rect x="452.1" y="259.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="455.1" y="270.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.20%)</title><rect x="452.1" y="243.0" width="2.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="455.1" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.43%)</title><rect x="454.5" y="243.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="457.5" y="254.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.43%)</title><rect x="454.5" y="227.0" width="5.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="457.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityGet (34 samples, 0.46%)</title><rect x="459.6" y="307.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="462.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.42%)</title><rect x="459.6" y="291.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="462.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.42%)</title><rect x="459.6" y="275.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="462.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$73/1075842738.get$Lambda (31 samples, 0.42%)</title><rect x="459.6" y="259.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="462.6" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ServiceImpl$$Lambda$73 (31 samples, 0.42%)</title><rect x="459.6" y="243.0" width="4.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="462.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.executeOrSendError (3 samples, 0.04%)</title><rect x="464.5" y="291.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="467.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.04%)</title><rect x="464.5" y="275.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="467.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.04%)</title><rect x="464.5" y="259.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="467.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.04%)</title><rect x="464.5" y="243.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="467.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.04%)</title><rect x="464.5" y="227.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="467.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.04%)</title><rect x="464.5" y="211.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="467.5" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.04%)</title><rect x="464.5" y="195.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="467.5" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (48 samples, 0.64%)</title><rect x="465.0" y="323.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="468.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (48 samples, 0.64%)</title><rect x="465.0" y="307.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (48 samples, 0.64%)</title><rect x="465.0" y="291.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="468.0" y="302.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.20%)</title><rect x="465.0" y="275.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="468.0" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (33 samples, 0.44%)</title><rect x="467.3" y="275.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="470.3" y="286.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.44%)</title><rect x="467.3" y="259.0" width="5.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="470.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (201 samples, 2.69%)</title><rect x="472.5" y="355.0" width="31.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="475.5" y="366.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (37 samples, 0.50%)</title><rect x="472.5" y="339.0" width="5.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="475.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (68 samples, 0.91%)</title><rect x="478.4" y="339.0" width="10.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="481.4" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (68 samples, 0.91%)</title><rect x="478.4" y="323.0" width="10.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="481.4" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (96 samples, 1.29%)</title><rect x="489.1" y="339.0" width="15.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="492.1" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (96 samples, 1.29%)</title><rect x="489.1" y="323.0" width="15.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="492.1" y="334.0"></text>
</g>
<g>
<title>char[] (55 samples, 0.74%)</title><rect x="489.1" y="307.0" width="8.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="492.1" y="318.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.13%)</title><rect x="497.8" y="307.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="500.8" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.42%)</title><rect x="499.4" y="307.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="502.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.42%)</title><rect x="499.4" y="291.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="502.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (31 samples, 0.42%)</title><rect x="499.4" y="275.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="502.4" y="286.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.42%)</title><rect x="499.4" y="259.0" width="4.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="502.4" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (104 samples, 1.39%)</title><rect x="504.3" y="355.0" width="16.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="507.3" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (104 samples, 1.39%)</title><rect x="504.3" y="339.0" width="16.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="507.3" y="350.0"></text>
</g>
<g>
<title>char[] (55 samples, 0.74%)</title><rect x="504.3" y="323.0" width="8.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="507.3" y="334.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.20%)</title><rect x="513.0" y="323.0" width="2.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="516.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.46%)</title><rect x="515.4" y="323.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.46%)</title><rect x="515.4" y="307.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="518.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (34 samples, 0.46%)</title><rect x="515.4" y="291.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="518.4" y="302.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.46%)</title><rect x="515.4" y="275.0" width="5.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="518.4" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=23144] (463 samples, 6.20%)</title><rect x="520.8" y="435.0" width="73.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="523.8" y="446.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (463 samples, 6.20%)</title><rect x="520.8" y="419.0" width="73.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.8" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (463 samples, 6.20%)</title><rect x="520.8" y="403.0" width="73.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="523.8" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (463 samples, 6.20%)</title><rect x="520.8" y="387.0" width="73.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.8" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (463 samples, 6.20%)</title><rect x="520.8" y="371.0" width="73.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="523.8" y="382.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (151 samples, 2.02%)</title><rect x="520.8" y="355.0" width="23.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="523.8" y="366.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (151 samples, 2.02%)</title><rect x="520.8" y="339.0" width="23.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="523.8" y="350.0">o..</text>
</g>
<g>
<title>RequestHandler1_handleEntityGet.handleRequest (93 samples, 1.25%)</title><rect x="520.8" y="323.0" width="14.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="523.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (59 samples, 0.79%)</title><rect x="520.8" y="307.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="523.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (59 samples, 0.79%)</title><rect x="520.8" y="291.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.8" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (59 samples, 0.79%)</title><rect x="520.8" y="275.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="523.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (59 samples, 0.79%)</title><rect x="520.8" y="259.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="523.8" y="270.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.25%)</title><rect x="520.8" y="243.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="523.8" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (40 samples, 0.54%)</title><rect x="523.8" y="243.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="526.8" y="254.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.54%)</title><rect x="523.8" y="227.0" width="6.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="526.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityGet (34 samples, 0.46%)</title><rect x="530.1" y="307.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="533.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.44%)</title><rect x="530.1" y="291.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="533.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.44%)</title><rect x="530.1" y="275.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="533.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$73/1075842738.get$Lambda (33 samples, 0.44%)</title><rect x="530.1" y="259.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="533.1" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ServiceImpl$$Lambda$73 (33 samples, 0.44%)</title><rect x="530.1" y="243.0" width="5.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="533.1" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (58 samples, 0.78%)</title><rect x="535.5" y="323.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="538.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (58 samples, 0.78%)</title><rect x="535.5" y="307.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="538.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (58 samples, 0.78%)</title><rect x="535.5" y="291.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.5" y="302.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.44%)</title><rect x="535.5" y="275.0" width="5.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="538.5" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.34%)</title><rect x="540.7" y="275.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="543.7" y="286.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.34%)</title><rect x="540.7" y="259.0" width="4.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="543.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (227 samples, 3.04%)</title><rect x="544.7" y="355.0" width="35.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="547.7" y="366.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (29 samples, 0.39%)</title><rect x="544.7" y="339.0" width="4.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="547.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (65 samples, 0.87%)</title><rect x="549.2" y="339.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (65 samples, 0.87%)</title><rect x="549.2" y="323.0" width="10.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="552.2" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (133 samples, 1.78%)</title><rect x="559.5" y="339.0" width="21.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.5" y="350.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (133 samples, 1.78%)</title><rect x="559.5" y="323.0" width="21.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.5" y="334.0">o..</text>
</g>
<g>
<title>char[] (72 samples, 0.96%)</title><rect x="559.5" y="307.0" width="11.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="562.5" y="318.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.23%)</title><rect x="570.9" y="307.0" width="2.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="573.9" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (44 samples, 0.59%)</title><rect x="573.6" y="307.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="576.6" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (44 samples, 0.59%)</title><rect x="573.6" y="291.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="576.6" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (44 samples, 0.59%)</title><rect x="573.6" y="275.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="576.6" y="286.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.59%)</title><rect x="573.6" y="259.0" width="6.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="576.6" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (85 samples, 1.14%)</title><rect x="580.5" y="355.0" width="13.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="583.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (85 samples, 1.14%)</title><rect x="580.5" y="339.0" width="13.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="583.5" y="350.0"></text>
</g>
<g>
<title>char[] (39 samples, 0.52%)</title><rect x="580.5" y="323.0" width="6.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="583.5" y="334.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.16%)</title><rect x="586.7" y="323.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="589.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.46%)</title><rect x="588.6" y="323.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="591.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.46%)</title><rect x="588.6" y="307.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="591.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (34 samples, 0.46%)</title><rect x="588.6" y="291.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.6" y="302.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.46%)</title><rect x="588.6" y="275.0" width="5.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="591.6" y="286.0"></text>
</g>
<g>
<title>[worker-0 tid=24967] (465 samples, 6.23%)</title><rect x="594.0" y="435.0" width="73.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="597.0" y="446.0">[worker-..</text>
</g>
<g>
<title>java/lang/Thread.run (465 samples, 6.23%)</title><rect x="594.0" y="419.0" width="73.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.0" y="430.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (465 samples, 6.23%)</title><rect x="594.0" y="403.0" width="73.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.0" y="414.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (465 samples, 6.23%)</title><rect x="594.0" y="387.0" width="73.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="597.0" y="398.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.12%)</title><rect x="594.0" y="371.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (9 samples, 0.12%)</title><rect x="594.0" y="355.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="597.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 0.12%)</title><rect x="594.0" y="339.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="597.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (9 samples, 0.12%)</title><rect x="594.0" y="323.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="597.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (9 samples, 0.12%)</title><rect x="594.0" y="307.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="597.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$73/1075842738.run (456 samples, 6.11%)</title><rect x="595.4" y="371.0" width="72.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="598.4" y="382.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityGet$2 (456 samples, 6.11%)</title><rect x="595.4" y="355.0" width="72.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="598.4" y="366.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (12 samples, 0.16%)</title><rect x="595.4" y="339.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (12 samples, 0.16%)</title><rect x="595.4" y="323.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="598.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (12 samples, 0.16%)</title><rect x="595.4" y="307.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="598.4" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.16%)</title><rect x="595.4" y="291.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="598.4" y="302.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.16%)</title><rect x="595.4" y="275.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="598.4" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.15%)</title><rect x="597.3" y="339.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="600.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.15%)</title><rect x="597.3" y="323.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="600.3" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.15%)</title><rect x="597.3" y="307.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="600.3" y="318.0"></text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 0.05%)</title><rect x="599.1" y="339.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="602.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (16 samples, 0.21%)</title><rect x="599.7" y="339.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.7" y="350.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.12%)</title><rect x="599.7" y="323.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="602.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.07%)</title><rect x="601.1" y="323.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="604.1" y="334.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="601.9" y="323.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="604.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (278 samples, 3.73%)</title><rect x="602.2" y="339.0" width="44.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="605.2" y="350.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (23 samples, 0.31%)</title><rect x="602.2" y="323.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="605.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (23 samples, 0.31%)</title><rect x="602.2" y="307.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (23 samples, 0.31%)</title><rect x="602.2" y="291.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="605.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (23 samples, 0.31%)</title><rect x="602.2" y="275.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="605.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (23 samples, 0.31%)</title><rect x="602.2" y="259.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="605.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (23 samples, 0.31%)</title><rect x="602.2" y="243.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="605.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (23 samples, 0.31%)</title><rect x="602.2" y="227.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="605.2" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (23 samples, 0.31%)</title><rect x="602.2" y="211.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (23 samples, 0.31%)</title><rect x="602.2" y="195.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="605.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (23 samples, 0.31%)</title><rect x="602.2" y="179.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="605.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (23 samples, 0.31%)</title><rect x="602.2" y="163.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="605.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (23 samples, 0.31%)</title><rect x="602.2" y="147.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="605.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (23 samples, 0.31%)</title><rect x="602.2" y="131.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (23 samples, 0.31%)</title><rect x="602.2" y="115.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="605.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (8 samples, 0.11%)</title><rect x="602.2" y="99.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="605.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (8 samples, 0.11%)</title><rect x="602.2" y="83.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="605.2" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (8 samples, 0.11%)</title><rect x="602.2" y="67.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="605.2" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (15 samples, 0.20%)</title><rect x="603.5" y="99.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (15 samples, 0.20%)</title><rect x="603.5" y="83.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (15 samples, 0.20%)</title><rect x="603.5" y="67.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="606.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (13 samples, 0.17%)</title><rect x="603.5" y="51.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="606.5" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.17%)</title><rect x="603.5" y="35.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="606.5" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (2 samples, 0.03%)</title><rect x="605.5" y="51.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="608.5" y="62.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (26 samples, 0.35%)</title><rect x="605.9" y="323.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="608.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (26 samples, 0.35%)</title><rect x="605.9" y="307.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="608.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl$$Lambda$98/728161732.apply (26 samples, 0.35%)</title><rect x="605.9" y="291.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.lambda$iterator$2 (26 samples, 0.35%)</title><rect x="605.9" y="275.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="608.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (5 samples, 0.07%)</title><rect x="605.9" y="259.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="608.9" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (5 samples, 0.07%)</title><rect x="605.9" y="243.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="608.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (21 samples, 0.28%)</title><rect x="606.6" y="259.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="609.6" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (21 samples, 0.28%)</title><rect x="606.6" y="243.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="609.6" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.28%)</title><rect x="606.6" y="227.0" width="3.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="609.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (12 samples, 0.16%)</title><rect x="610.0" y="323.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="613.0" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.16%)</title><rect x="610.0" y="307.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="613.0" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.16%)</title><rect x="610.0" y="291.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="613.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.iterator (217 samples, 2.91%)</title><rect x="611.9" y="323.0" width="34.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="614.9" y="334.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (4 samples, 0.05%)</title><rect x="611.9" y="307.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="614.9" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (4 samples, 0.05%)</title><rect x="611.9" y="291.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="614.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (100 samples, 1.34%)</title><rect x="612.5" y="307.0" width="15.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.5" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.03%)</title><rect x="612.5" y="291.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="615.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (98 samples, 1.31%)</title><rect x="612.8" y="291.0" width="15.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="615.8" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.07%)</title><rect x="612.8" y="275.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="615.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.08%)</title><rect x="613.6" y="275.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="616.6" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.08%)</title><rect x="613.6" y="259.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="616.6" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (10 samples, 0.13%)</title><rect x="614.5" y="275.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="617.5" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (6 samples, 0.08%)</title><rect x="616.1" y="275.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="619.1" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.08%)</title><rect x="616.1" y="259.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="619.1" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (71 samples, 0.95%)</title><rect x="617.1" y="275.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="620.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (71 samples, 0.95%)</title><rect x="617.1" y="259.0" width="11.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (71 samples, 0.95%)</title><rect x="617.1" y="243.0" width="11.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (21 samples, 0.28%)</title><rect x="617.1" y="227.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (21 samples, 0.28%)</title><rect x="617.1" y="211.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="620.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (21 samples, 0.28%)</title><rect x="617.1" y="195.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (21 samples, 0.28%)</title><rect x="617.1" y="179.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="620.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="617.1" y="163.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="620.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="617.1" y="147.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="620.1" y="158.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (6 samples, 0.08%)</title><rect x="617.1" y="131.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="620.1" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (15 samples, 0.20%)</title><rect x="618.0" y="163.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="621.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (15 samples, 0.20%)</title><rect x="618.0" y="147.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="621.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (15 samples, 0.20%)</title><rect x="618.0" y="131.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="621.0" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.15%)</title><rect x="618.0" y="115.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="621.0" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.15%)</title><rect x="618.0" y="99.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="621.0" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (4 samples, 0.05%)</title><rect x="619.8" y="115.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="622.8" y="126.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (50 samples, 0.67%)</title><rect x="620.4" y="227.0" width="7.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="623.4" y="238.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (11 samples, 0.15%)</title><rect x="620.4" y="211.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="623.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.15%)</title><rect x="622.1" y="211.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="625.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.15%)</title><rect x="622.1" y="195.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$80/1156522076.get$Lambda (6 samples, 0.08%)</title><rect x="622.1" y="179.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.1" y="190.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$80 (6 samples, 0.08%)</title><rect x="622.1" y="163.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="625.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.get$Lambda (5 samples, 0.07%)</title><rect x="623.1" y="179.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="626.1" y="190.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$84 (5 samples, 0.07%)</title><rect x="623.1" y="163.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="626.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (7 samples, 0.09%)</title><rect x="623.9" y="211.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (7 samples, 0.09%)</title><rect x="623.9" y="195.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="626.9" y="206.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (7 samples, 0.09%)</title><rect x="623.9" y="179.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="626.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (21 samples, 0.28%)</title><rect x="625.0" y="211.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.0" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (21 samples, 0.28%)</title><rect x="625.0" y="195.0" width="3.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="628.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (5 samples, 0.07%)</title><rect x="628.3" y="307.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="631.3" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (5 samples, 0.07%)</title><rect x="628.3" y="291.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="631.3" y="302.0"></text>
</g>
<g>
<title>java.util.ArrayList (9 samples, 0.12%)</title><rect x="629.1" y="307.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="632.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="630.5" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="633.5" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="630.5" y="291.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="633.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (30 samples, 0.40%)</title><rect x="630.8" y="307.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="633.8" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (5 samples, 0.07%)</title><rect x="630.8" y="291.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="633.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (25 samples, 0.34%)</title><rect x="631.6" y="291.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="634.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (25 samples, 0.34%)</title><rect x="631.6" y="275.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="634.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (25 samples, 0.34%)</title><rect x="631.6" y="259.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="634.6" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (25 samples, 0.34%)</title><rect x="631.6" y="243.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="634.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (25 samples, 0.34%)</title><rect x="631.6" y="227.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="634.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (25 samples, 0.34%)</title><rect x="631.6" y="211.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="634.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (25 samples, 0.34%)</title><rect x="631.6" y="195.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="634.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (25 samples, 0.34%)</title><rect x="631.6" y="179.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="634.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (25 samples, 0.34%)</title><rect x="631.6" y="163.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="634.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (25 samples, 0.34%)</title><rect x="631.6" y="147.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="634.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.09%)</title><rect x="631.6" y="131.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="634.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.09%)</title><rect x="631.6" y="115.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="634.6" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (7 samples, 0.09%)</title><rect x="631.6" y="99.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="634.6" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (18 samples, 0.24%)</title><rect x="632.7" y="131.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="635.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (18 samples, 0.24%)</title><rect x="632.7" y="115.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="635.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (18 samples, 0.24%)</title><rect x="632.7" y="99.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (12 samples, 0.16%)</title><rect x="632.7" y="83.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="635.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.16%)</title><rect x="632.7" y="67.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="635.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (6 samples, 0.08%)</title><rect x="634.6" y="83.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="637.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.iterator (67 samples, 0.90%)</title><rect x="635.6" y="307.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="638.6" y="318.0"></text>
</g>
<g>
<title>java/util/Collection.stream (20 samples, 0.27%)</title><rect x="635.6" y="291.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="638.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (6 samples, 0.08%)</title><rect x="635.6" y="275.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="638.6" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (6 samples, 0.08%)</title><rect x="635.6" y="259.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="638.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (14 samples, 0.19%)</title><rect x="636.5" y="275.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="639.5" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (14 samples, 0.19%)</title><rect x="636.5" y="259.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="639.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (5 samples, 0.07%)</title><rect x="638.7" y="291.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="641.7" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (5 samples, 0.07%)</title><rect x="638.7" y="275.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="641.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (9 samples, 0.12%)</title><rect x="639.5" y="291.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (9 samples, 0.12%)</title><rect x="639.5" y="275.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="642.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (9 samples, 0.12%)</title><rect x="639.5" y="259.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="642.5" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (9 samples, 0.12%)</title><rect x="639.5" y="243.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="642.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (11 samples, 0.15%)</title><rect x="641.0" y="291.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.0" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (2 samples, 0.03%)</title><rect x="641.0" y="275.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.0" y="286.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (2 samples, 0.03%)</title><rect x="641.0" y="259.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="644.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (9 samples, 0.12%)</title><rect x="641.3" y="275.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="644.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (8 samples, 0.11%)</title><rect x="641.4" y="259.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="644.4" y="270.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (8 samples, 0.11%)</title><rect x="641.4" y="243.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="644.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (22 samples, 0.29%)</title><rect x="642.7" y="291.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="645.7" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (22 samples, 0.29%)</title><rect x="642.7" y="275.0" width="3.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="645.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.getBytes (5 samples, 0.07%)</title><rect x="646.2" y="339.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="649.2" y="350.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.07%)</title><rect x="646.2" y="323.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="649.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.proxyIfNotLocal (99 samples, 1.33%)</title><rect x="647.0" y="339.0" width="15.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (99 samples, 1.33%)</title><rect x="647.0" y="323.0" width="15.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="650.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (99 samples, 1.33%)</title><rect x="647.0" y="307.0" width="15.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="650.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="647.0" y="291.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="647.0" y="275.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="650.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.get$Lambda (2 samples, 0.03%)</title><rect x="647.0" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.0" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.topologies.RendezvousTopology$$Lambda$68 (2 samples, 0.03%)</title><rect x="647.0" y="243.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="650.0" y="254.0"></text>
</g>
<g>
<title>java/util/Collection.stream (24 samples, 0.32%)</title><rect x="647.3" y="291.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="650.3" y="302.0"></text>
</g>
<g>
<title>java/util/TreeSet.spliterator (8 samples, 0.11%)</title><rect x="647.3" y="275.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="650.3" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliteratorFor (8 samples, 0.11%)</title><rect x="647.3" y="259.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.3" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliterator (8 samples, 0.11%)</title><rect x="647.3" y="243.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.3" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySpliterator (8 samples, 0.11%)</title><rect x="647.3" y="227.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="650.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (16 samples, 0.21%)</title><rect x="648.5" y="275.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="651.5" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (16 samples, 0.21%)</title><rect x="648.5" y="259.0" width="2.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="651.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (47 samples, 0.63%)</title><rect x="651.1" y="291.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="654.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (47 samples, 0.63%)</title><rect x="651.1" y="275.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="654.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (47 samples, 0.63%)</title><rect x="651.1" y="259.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (45 samples, 0.60%)</title><rect x="651.1" y="243.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="654.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (35 samples, 0.47%)</title><rect x="651.1" y="227.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="654.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (35 samples, 0.47%)</title><rect x="651.1" y="211.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="654.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (29 samples, 0.39%)</title><rect x="651.1" y="195.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.1" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySpliterator.tryAdvance (29 samples, 0.39%)</title><rect x="651.1" y="179.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (29 samples, 0.39%)</title><rect x="651.1" y="163.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="654.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.apply (29 samples, 0.39%)</title><rect x="651.1" y="147.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="654.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.lambda$primaryFor$0 (29 samples, 0.39%)</title><rect x="651.1" y="131.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="654.1" y="142.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (16 samples, 0.21%)</title><rect x="651.1" y="115.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="654.1" y="126.0"></text>
</g>
<g>
<title>java.lang.Integer (16 samples, 0.21%)</title><rect x="651.1" y="99.0" width="2.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="654.1" y="110.0"></text>
</g>
<g>
<title>java/util/Map.entry (13 samples, 0.17%)</title><rect x="653.6" y="115.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.6" y="126.0"></text>
</g>
<g>
<title>java.util.KeyValueHolder (13 samples, 0.17%)</title><rect x="653.6" y="99.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="656.6" y="110.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (6 samples, 0.08%)</title><rect x="655.7" y="195.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="658.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$SizedRefSortingSink.begin (6 samples, 0.08%)</title><rect x="655.7" y="179.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.7" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.08%)</title><rect x="655.7" y="163.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="658.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (10 samples, 0.13%)</title><rect x="656.6" y="227.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="659.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (3 samples, 0.04%)</title><rect x="656.6" y="211.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="659.6" y="222.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (3 samples, 0.04%)</title><rect x="656.6" y="195.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="659.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$OfRef.opWrapSink (7 samples, 0.09%)</title><rect x="657.1" y="211.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="660.1" y="222.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$SizedRefSortingSink (7 samples, 0.09%)</title><rect x="657.1" y="195.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="660.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/447981768.get (2 samples, 0.03%)</title><rect x="658.2" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="661.2" y="254.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (2 samples, 0.03%)</title><rect x="658.2" y="227.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="661.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (17 samples, 0.23%)</title><rect x="658.5" y="291.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="661.5" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (17 samples, 0.23%)</title><rect x="658.5" y="275.0" width="2.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="661.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.sorted (9 samples, 0.12%)</title><rect x="661.2" y="291.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="664.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps.makeRef (9 samples, 0.12%)</title><rect x="661.2" y="275.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="664.2" y="286.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$OfRef (9 samples, 0.12%)</title><rect x="661.2" y="259.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="664.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.sendAnswerOrError (31 samples, 0.42%)</title><rect x="662.6" y="339.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="665.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (31 samples, 0.42%)</title><rect x="662.6" y="323.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="665.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (31 samples, 0.42%)</title><rect x="662.6" y="307.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="665.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (21 samples, 0.28%)</title><rect x="662.6" y="291.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.6" y="302.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (21 samples, 0.28%)</title><rect x="662.6" y="275.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.6" y="286.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.28%)</title><rect x="662.6" y="259.0" width="3.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="665.6" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.13%)</title><rect x="665.9" y="291.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="668.9" y="302.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (10 samples, 0.13%)</title><rect x="665.9" y="275.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="668.9" y="286.0"></text>
</g>
<g>
<title>[worker-1 tid=24968] (482 samples, 6.46%)</title><rect x="667.5" y="435.0" width="76.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="670.5" y="446.0">[worker-..</text>
</g>
<g>
<title>java/lang/Thread.run (482 samples, 6.46%)</title><rect x="667.5" y="419.0" width="76.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="670.5" y="430.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (482 samples, 6.46%)</title><rect x="667.5" y="403.0" width="76.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="670.5" y="414.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (482 samples, 6.46%)</title><rect x="667.5" y="387.0" width="76.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="670.5" y="398.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 0.11%)</title><rect x="667.5" y="371.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="670.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (8 samples, 0.11%)</title><rect x="667.5" y="355.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="670.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.11%)</title><rect x="667.5" y="339.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="670.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.11%)</title><rect x="667.5" y="323.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.11%)</title><rect x="667.5" y="307.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="670.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$73/1075842738.run (474 samples, 6.35%)</title><rect x="668.8" y="371.0" width="74.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="671.8" y="382.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityGet$2 (474 samples, 6.35%)</title><rect x="668.8" y="355.0" width="74.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="671.8" y="366.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (14 samples, 0.19%)</title><rect x="668.8" y="339.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="671.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (14 samples, 0.19%)</title><rect x="668.8" y="323.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="671.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (14 samples, 0.19%)</title><rect x="668.8" y="307.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="671.8" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.19%)</title><rect x="668.8" y="291.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="671.8" y="302.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.19%)</title><rect x="668.8" y="275.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="671.8" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.16%)</title><rect x="671.0" y="339.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="674.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.16%)</title><rect x="671.0" y="323.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="674.0" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.16%)</title><rect x="671.0" y="307.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="674.0" y="318.0"></text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.08%)</title><rect x="672.9" y="339.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="675.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (31 samples, 0.42%)</title><rect x="673.8" y="339.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="676.8" y="350.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.16%)</title><rect x="673.8" y="323.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="676.8" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (13 samples, 0.17%)</title><rect x="675.7" y="323.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="678.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.08%)</title><rect x="677.8" y="323.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="680.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (270 samples, 3.62%)</title><rect x="678.8" y="339.0" width="42.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="681.8" y="350.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (18 samples, 0.24%)</title><rect x="678.8" y="323.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (18 samples, 0.24%)</title><rect x="678.8" y="307.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="681.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (18 samples, 0.24%)</title><rect x="678.8" y="291.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="681.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (18 samples, 0.24%)</title><rect x="678.8" y="275.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (18 samples, 0.24%)</title><rect x="678.8" y="259.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="681.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (18 samples, 0.24%)</title><rect x="678.8" y="243.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="681.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (18 samples, 0.24%)</title><rect x="678.8" y="227.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="681.8" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (18 samples, 0.24%)</title><rect x="678.8" y="211.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="681.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (18 samples, 0.24%)</title><rect x="678.8" y="195.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="681.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (18 samples, 0.24%)</title><rect x="678.8" y="179.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="681.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (18 samples, 0.24%)</title><rect x="678.8" y="163.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="681.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (18 samples, 0.24%)</title><rect x="678.8" y="147.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="681.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (18 samples, 0.24%)</title><rect x="678.8" y="131.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="681.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (18 samples, 0.24%)</title><rect x="678.8" y="115.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="681.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.03%)</title><rect x="678.8" y="99.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="681.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.03%)</title><rect x="678.8" y="83.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="681.8" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (2 samples, 0.03%)</title><rect x="678.8" y="67.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="681.8" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (16 samples, 0.21%)</title><rect x="679.1" y="99.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="682.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (16 samples, 0.21%)</title><rect x="679.1" y="83.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="682.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (16 samples, 0.21%)</title><rect x="679.1" y="67.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="682.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.15%)</title><rect x="679.1" y="51.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.1" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.15%)</title><rect x="679.1" y="35.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="682.1" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (5 samples, 0.07%)</title><rect x="680.8" y="51.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="683.8" y="62.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (17 samples, 0.23%)</title><rect x="681.6" y="323.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="684.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (17 samples, 0.23%)</title><rect x="681.6" y="307.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="684.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl$$Lambda$98/728161732.apply (17 samples, 0.23%)</title><rect x="681.6" y="291.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="684.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.lambda$iterator$2 (17 samples, 0.23%)</title><rect x="681.6" y="275.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="684.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (2 samples, 0.03%)</title><rect x="681.6" y="259.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="684.6" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (2 samples, 0.03%)</title><rect x="681.6" y="243.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="684.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (15 samples, 0.20%)</title><rect x="681.9" y="259.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="684.9" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (15 samples, 0.20%)</title><rect x="681.9" y="243.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="684.9" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.20%)</title><rect x="681.9" y="227.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="684.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (11 samples, 0.15%)</title><rect x="684.3" y="323.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="687.3" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (11 samples, 0.15%)</title><rect x="684.3" y="307.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="687.3" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.15%)</title><rect x="684.3" y="291.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="687.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.iterator (224 samples, 3.00%)</title><rect x="686.0" y="323.0" width="35.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="689.0" y="334.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (6 samples, 0.08%)</title><rect x="686.0" y="307.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="689.0" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (6 samples, 0.08%)</title><rect x="686.0" y="291.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="689.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (91 samples, 1.22%)</title><rect x="687.0" y="307.0" width="14.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.0" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (8 samples, 0.11%)</title><rect x="687.0" y="291.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="690.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (83 samples, 1.11%)</title><rect x="688.2" y="291.0" width="13.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.2" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (6 samples, 0.08%)</title><rect x="688.2" y="275.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="691.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (3 samples, 0.04%)</title><rect x="689.2" y="275.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="692.2" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (3 samples, 0.04%)</title><rect x="689.2" y="259.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="692.2" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (6 samples, 0.08%)</title><rect x="689.7" y="275.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="692.7" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (7 samples, 0.09%)</title><rect x="690.6" y="275.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="693.6" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.09%)</title><rect x="690.6" y="259.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="693.6" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (61 samples, 0.82%)</title><rect x="691.7" y="275.0" width="9.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="694.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (61 samples, 0.82%)</title><rect x="691.7" y="259.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="694.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (61 samples, 0.82%)</title><rect x="691.7" y="243.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (20 samples, 0.27%)</title><rect x="691.7" y="227.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (20 samples, 0.27%)</title><rect x="691.7" y="211.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (20 samples, 0.27%)</title><rect x="691.7" y="195.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="694.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (20 samples, 0.27%)</title><rect x="691.7" y="179.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="694.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="691.7" y="163.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="694.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="691.7" y="147.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="694.7" y="158.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (6 samples, 0.08%)</title><rect x="691.7" y="131.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="694.7" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (14 samples, 0.19%)</title><rect x="692.7" y="163.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="695.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (14 samples, 0.19%)</title><rect x="692.7" y="147.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (14 samples, 0.19%)</title><rect x="692.7" y="131.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="695.7" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.15%)</title><rect x="692.7" y="115.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="695.7" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.15%)</title><rect x="692.7" y="99.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="695.7" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (3 samples, 0.04%)</title><rect x="694.4" y="115.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="697.4" y="126.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (41 samples, 0.55%)</title><rect x="694.9" y="227.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.9" y="238.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (11 samples, 0.15%)</title><rect x="694.9" y="211.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="697.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="696.6" y="211.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="699.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="696.6" y="195.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.get$Lambda (4 samples, 0.05%)</title><rect x="696.6" y="179.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="699.6" y="190.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$84 (4 samples, 0.05%)</title><rect x="696.6" y="163.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="699.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (6 samples, 0.08%)</title><rect x="697.3" y="211.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="700.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (6 samples, 0.08%)</title><rect x="697.3" y="195.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="700.3" y="206.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (6 samples, 0.08%)</title><rect x="697.3" y="179.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="700.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (20 samples, 0.27%)</title><rect x="698.2" y="211.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="701.2" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.27%)</title><rect x="698.2" y="195.0" width="3.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="701.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (3 samples, 0.04%)</title><rect x="701.4" y="307.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="704.4" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (3 samples, 0.04%)</title><rect x="701.4" y="291.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="704.4" y="302.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="701.8" y="307.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="704.8" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (10 samples, 0.13%)</title><rect x="702.2" y="307.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.2" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.13%)</title><rect x="702.2" y="291.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="705.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (35 samples, 0.47%)</title><rect x="703.7" y="307.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="706.7" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (9 samples, 0.12%)</title><rect x="703.7" y="291.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="706.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (26 samples, 0.35%)</title><rect x="705.2" y="291.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="708.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (26 samples, 0.35%)</title><rect x="705.2" y="275.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (26 samples, 0.35%)</title><rect x="705.2" y="259.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.2" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (26 samples, 0.35%)</title><rect x="705.2" y="243.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="708.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (26 samples, 0.35%)</title><rect x="705.2" y="227.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="708.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (26 samples, 0.35%)</title><rect x="705.2" y="211.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (26 samples, 0.35%)</title><rect x="705.2" y="195.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="708.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (26 samples, 0.35%)</title><rect x="705.2" y="179.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="708.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (26 samples, 0.35%)</title><rect x="705.2" y="163.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="708.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (26 samples, 0.35%)</title><rect x="705.2" y="147.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="705.2" y="131.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="708.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="705.2" y="115.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="708.2" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.05%)</title><rect x="705.2" y="99.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="708.2" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (22 samples, 0.29%)</title><rect x="705.8" y="131.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (22 samples, 0.29%)</title><rect x="705.8" y="115.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="708.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (22 samples, 0.29%)</title><rect x="705.8" y="99.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="708.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (13 samples, 0.17%)</title><rect x="705.8" y="83.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="708.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.17%)</title><rect x="705.8" y="67.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="708.8" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (9 samples, 0.12%)</title><rect x="707.8" y="83.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="710.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.iterator (77 samples, 1.03%)</title><rect x="709.3" y="307.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="712.3" y="318.0"></text>
</g>
<g>
<title>java/util/Collection.stream (24 samples, 0.32%)</title><rect x="709.3" y="291.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="712.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (12 samples, 0.16%)</title><rect x="709.3" y="275.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="712.3" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (12 samples, 0.16%)</title><rect x="709.3" y="259.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="712.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (12 samples, 0.16%)</title><rect x="711.2" y="275.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.2" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (12 samples, 0.16%)</title><rect x="711.2" y="259.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="714.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (2 samples, 0.03%)</title><rect x="713.1" y="291.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="716.1" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (2 samples, 0.03%)</title><rect x="713.1" y="275.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="716.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (13 samples, 0.17%)</title><rect x="713.4" y="291.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (13 samples, 0.17%)</title><rect x="713.4" y="275.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="716.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (13 samples, 0.17%)</title><rect x="713.4" y="259.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="716.4" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (13 samples, 0.17%)</title><rect x="713.4" y="243.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="716.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (15 samples, 0.20%)</title><rect x="715.4" y="291.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="718.4" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (5 samples, 0.07%)</title><rect x="715.4" y="275.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="718.4" y="286.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (5 samples, 0.07%)</title><rect x="715.4" y="259.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="718.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (10 samples, 0.13%)</title><rect x="716.2" y="275.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (9 samples, 0.12%)</title><rect x="716.4" y="259.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="719.4" y="270.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (9 samples, 0.12%)</title><rect x="716.4" y="243.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="719.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (23 samples, 0.31%)</title><rect x="717.8" y="291.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="720.8" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (23 samples, 0.31%)</title><rect x="717.8" y="275.0" width="3.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="720.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.getBytes (9 samples, 0.12%)</title><rect x="721.4" y="339.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="724.4" y="350.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.12%)</title><rect x="721.4" y="323.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="724.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.proxyIfNotLocal (97 samples, 1.30%)</title><rect x="722.9" y="339.0" width="15.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="725.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (97 samples, 1.30%)</title><rect x="722.9" y="323.0" width="15.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (97 samples, 1.30%)</title><rect x="722.9" y="307.0" width="15.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="725.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="722.9" y="291.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="725.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="722.9" y="275.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.get$Lambda (4 samples, 0.05%)</title><rect x="722.9" y="259.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="725.9" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.topologies.RendezvousTopology$$Lambda$68 (4 samples, 0.05%)</title><rect x="722.9" y="243.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="725.9" y="254.0"></text>
</g>
<g>
<title>java/util/Collection.stream (32 samples, 0.43%)</title><rect x="723.5" y="291.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="726.5" y="302.0"></text>
</g>
<g>
<title>java/util/TreeSet.spliterator (19 samples, 0.25%)</title><rect x="723.5" y="275.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="726.5" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliteratorFor (19 samples, 0.25%)</title><rect x="723.5" y="259.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="726.5" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliterator (19 samples, 0.25%)</title><rect x="723.5" y="243.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="726.5" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySpliterator (19 samples, 0.25%)</title><rect x="723.5" y="227.0" width="3.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="726.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (13 samples, 0.17%)</title><rect x="726.5" y="275.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="729.5" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (13 samples, 0.17%)</title><rect x="726.5" y="259.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="729.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (41 samples, 0.55%)</title><rect x="728.6" y="291.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (41 samples, 0.55%)</title><rect x="728.6" y="275.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (41 samples, 0.55%)</title><rect x="728.6" y="259.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (37 samples, 0.50%)</title><rect x="728.6" y="243.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="731.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (24 samples, 0.32%)</title><rect x="728.6" y="227.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="731.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (24 samples, 0.32%)</title><rect x="728.6" y="211.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (19 samples, 0.25%)</title><rect x="728.6" y="195.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="731.6" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySpliterator.tryAdvance (19 samples, 0.25%)</title><rect x="728.6" y="179.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (19 samples, 0.25%)</title><rect x="728.6" y="163.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.apply (19 samples, 0.25%)</title><rect x="728.6" y="147.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="731.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.lambda$primaryFor$0 (19 samples, 0.25%)</title><rect x="728.6" y="131.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="731.6" y="142.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (8 samples, 0.11%)</title><rect x="728.6" y="115.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.6" y="126.0"></text>
</g>
<g>
<title>java.lang.Integer (8 samples, 0.11%)</title><rect x="728.6" y="99.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="731.6" y="110.0"></text>
</g>
<g>
<title>java/util/Map.entry (11 samples, 0.15%)</title><rect x="729.8" y="115.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.8" y="126.0"></text>
</g>
<g>
<title>java.util.KeyValueHolder (11 samples, 0.15%)</title><rect x="729.8" y="99.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="732.8" y="110.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (5 samples, 0.07%)</title><rect x="731.6" y="195.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="734.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$SizedRefSortingSink.begin (5 samples, 0.07%)</title><rect x="731.6" y="179.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="734.6" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="731.6" y="163.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="734.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (13 samples, 0.17%)</title><rect x="732.4" y="227.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="735.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (6 samples, 0.08%)</title><rect x="732.4" y="211.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="735.4" y="222.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (6 samples, 0.08%)</title><rect x="732.4" y="195.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="735.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$OfRef.opWrapSink (7 samples, 0.09%)</title><rect x="733.3" y="211.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="736.3" y="222.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$SizedRefSortingSink (7 samples, 0.09%)</title><rect x="733.3" y="195.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="736.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/447981768.get (4 samples, 0.05%)</title><rect x="734.4" y="243.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="737.4" y="254.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (4 samples, 0.05%)</title><rect x="734.4" y="227.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="737.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (8 samples, 0.11%)</title><rect x="735.0" y="291.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.0" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (8 samples, 0.11%)</title><rect x="735.0" y="275.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="738.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.sorted (12 samples, 0.16%)</title><rect x="736.3" y="291.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="739.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps.makeRef (12 samples, 0.16%)</title><rect x="736.3" y="275.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="739.3" y="286.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$OfRef (12 samples, 0.16%)</title><rect x="736.3" y="259.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="739.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.sendAnswerOrError (35 samples, 0.47%)</title><rect x="738.2" y="339.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (35 samples, 0.47%)</title><rect x="738.2" y="323.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="741.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (35 samples, 0.47%)</title><rect x="738.2" y="307.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="741.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (27 samples, 0.36%)</title><rect x="738.2" y="291.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="741.2" y="302.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (27 samples, 0.36%)</title><rect x="738.2" y="275.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="741.2" y="286.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.36%)</title><rect x="738.2" y="259.0" width="4.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="741.2" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.11%)</title><rect x="742.5" y="291.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.5" y="302.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (8 samples, 0.11%)</title><rect x="742.5" y="275.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="745.5" y="286.0"></text>
</g>
<g>
<title>[worker-2 tid=24969] (470 samples, 6.30%)</title><rect x="743.7" y="435.0" width="74.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="746.7" y="446.0">[worker-..</text>
</g>
<g>
<title>java/lang/Thread.run (470 samples, 6.30%)</title><rect x="743.7" y="419.0" width="74.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.7" y="430.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (470 samples, 6.30%)</title><rect x="743.7" y="403.0" width="74.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="746.7" y="414.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (470 samples, 6.30%)</title><rect x="743.7" y="387.0" width="74.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="746.7" y="398.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (12 samples, 0.16%)</title><rect x="743.7" y="371.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="746.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (12 samples, 0.16%)</title><rect x="743.7" y="355.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (12 samples, 0.16%)</title><rect x="743.7" y="339.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (12 samples, 0.16%)</title><rect x="743.7" y="323.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="746.7" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (12 samples, 0.16%)</title><rect x="743.7" y="307.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="746.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$73/1075842738.run (458 samples, 6.14%)</title><rect x="745.6" y="371.0" width="72.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="748.6" y="382.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityGet$2 (458 samples, 6.14%)</title><rect x="745.6" y="355.0" width="72.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="748.6" y="366.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (17 samples, 0.23%)</title><rect x="745.6" y="339.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="748.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (17 samples, 0.23%)</title><rect x="745.6" y="323.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="748.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (17 samples, 0.23%)</title><rect x="745.6" y="307.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="748.6" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.23%)</title><rect x="745.6" y="291.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="748.6" y="302.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.23%)</title><rect x="745.6" y="275.0" width="2.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="748.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.13%)</title><rect x="748.3" y="339.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="751.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.13%)</title><rect x="748.3" y="323.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.3" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.13%)</title><rect x="748.3" y="307.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="751.3" y="318.0"></text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.07%)</title><rect x="749.9" y="339.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="752.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (17 samples, 0.23%)</title><rect x="750.7" y="339.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="753.7" y="350.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.11%)</title><rect x="750.7" y="323.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="753.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.07%)</title><rect x="752.0" y="323.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="755.0" y="334.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.05%)</title><rect x="752.8" y="323.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="755.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (272 samples, 3.65%)</title><rect x="753.4" y="339.0" width="43.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.4" y="350.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (31 samples, 0.42%)</title><rect x="753.4" y="323.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="756.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (31 samples, 0.42%)</title><rect x="753.4" y="307.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="756.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (31 samples, 0.42%)</title><rect x="753.4" y="291.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (31 samples, 0.42%)</title><rect x="753.4" y="275.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (31 samples, 0.42%)</title><rect x="753.4" y="259.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="756.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (31 samples, 0.42%)</title><rect x="753.4" y="243.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (31 samples, 0.42%)</title><rect x="753.4" y="227.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="756.4" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (31 samples, 0.42%)</title><rect x="753.4" y="211.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="756.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (31 samples, 0.42%)</title><rect x="753.4" y="195.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (31 samples, 0.42%)</title><rect x="753.4" y="179.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (31 samples, 0.42%)</title><rect x="753.4" y="163.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="756.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (31 samples, 0.42%)</title><rect x="753.4" y="147.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="756.4" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (31 samples, 0.42%)</title><rect x="753.4" y="131.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="756.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (31 samples, 0.42%)</title><rect x="753.4" y="115.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="756.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.09%)</title><rect x="753.4" y="99.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.09%)</title><rect x="753.4" y="83.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="756.4" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (7 samples, 0.09%)</title><rect x="753.4" y="67.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="756.4" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (24 samples, 0.32%)</title><rect x="754.5" y="99.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="757.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (24 samples, 0.32%)</title><rect x="754.5" y="83.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (24 samples, 0.32%)</title><rect x="754.5" y="67.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="757.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (16 samples, 0.21%)</title><rect x="754.5" y="51.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="757.5" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.21%)</title><rect x="754.5" y="35.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="757.5" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (8 samples, 0.11%)</title><rect x="757.0" y="51.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="760.0" y="62.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (10 samples, 0.13%)</title><rect x="758.3" y="323.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="761.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (10 samples, 0.13%)</title><rect x="758.3" y="307.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="761.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl$$Lambda$98/728161732.apply (10 samples, 0.13%)</title><rect x="758.3" y="291.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="761.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.lambda$iterator$2 (10 samples, 0.13%)</title><rect x="758.3" y="275.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="761.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (3 samples, 0.04%)</title><rect x="758.3" y="259.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="761.3" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (3 samples, 0.04%)</title><rect x="758.3" y="243.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="761.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (7 samples, 0.09%)</title><rect x="758.8" y="259.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="761.8" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.09%)</title><rect x="758.8" y="243.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="761.8" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.09%)</title><rect x="758.8" y="227.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="761.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (18 samples, 0.24%)</title><rect x="759.9" y="323.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="762.9" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (18 samples, 0.24%)</title><rect x="759.9" y="307.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="762.9" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (18 samples, 0.24%)</title><rect x="759.9" y="291.0" width="2.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="762.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.iterator (213 samples, 2.85%)</title><rect x="762.7" y="323.0" width="33.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="765.7" y="334.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (7 samples, 0.09%)</title><rect x="762.7" y="307.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="765.7" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (7 samples, 0.09%)</title><rect x="762.7" y="291.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="765.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (93 samples, 1.25%)</title><rect x="763.8" y="307.0" width="14.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="766.8" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (4 samples, 0.05%)</title><rect x="763.8" y="291.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="766.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (89 samples, 1.19%)</title><rect x="764.5" y="291.0" width="14.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="767.5" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (8 samples, 0.11%)</title><rect x="764.5" y="275.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="767.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.07%)</title><rect x="765.7" y="275.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="768.7" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (5 samples, 0.07%)</title><rect x="765.7" y="259.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="768.7" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (9 samples, 0.12%)</title><rect x="766.5" y="275.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="769.5" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.07%)</title><rect x="767.9" y="275.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="770.9" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="767.9" y="259.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="770.9" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (62 samples, 0.83%)</title><rect x="768.7" y="275.0" width="9.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="771.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (62 samples, 0.83%)</title><rect x="768.7" y="259.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="771.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (62 samples, 0.83%)</title><rect x="768.7" y="243.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="771.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (23 samples, 0.31%)</title><rect x="768.7" y="227.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (23 samples, 0.31%)</title><rect x="768.7" y="211.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (23 samples, 0.31%)</title><rect x="768.7" y="195.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="771.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (23 samples, 0.31%)</title><rect x="768.7" y="179.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="771.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.09%)</title><rect x="768.7" y="163.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="771.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.09%)</title><rect x="768.7" y="147.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.7" y="158.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (7 samples, 0.09%)</title><rect x="768.7" y="131.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="771.7" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (16 samples, 0.21%)</title><rect x="769.8" y="163.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="772.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (16 samples, 0.21%)</title><rect x="769.8" y="147.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="772.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (16 samples, 0.21%)</title><rect x="769.8" y="131.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="772.8" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.15%)</title><rect x="769.8" y="115.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="772.8" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.15%)</title><rect x="769.8" y="99.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="772.8" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (5 samples, 0.07%)</title><rect x="771.6" y="115.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="774.6" y="126.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (39 samples, 0.52%)</title><rect x="772.4" y="227.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.4" y="238.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (9 samples, 0.12%)</title><rect x="772.4" y="211.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="775.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="773.8" y="211.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="776.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="773.8" y="195.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.get$Lambda (2 samples, 0.03%)</title><rect x="773.9" y="179.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="776.9" y="190.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$84 (2 samples, 0.03%)</title><rect x="773.9" y="163.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="776.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (4 samples, 0.05%)</title><rect x="774.3" y="211.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="777.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (4 samples, 0.05%)</title><rect x="774.3" y="195.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="777.3" y="206.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (4 samples, 0.05%)</title><rect x="774.3" y="179.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="777.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (23 samples, 0.31%)</title><rect x="774.9" y="211.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="777.9" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (23 samples, 0.31%)</title><rect x="774.9" y="195.0" width="3.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="777.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (2 samples, 0.03%)</title><rect x="778.5" y="307.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="781.5" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (2 samples, 0.03%)</title><rect x="778.5" y="291.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="781.5" y="302.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="778.9" y="307.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="781.9" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (8 samples, 0.11%)</title><rect x="779.2" y="307.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="782.2" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.11%)</title><rect x="779.2" y="291.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="782.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (39 samples, 0.52%)</title><rect x="780.4" y="307.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.4" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (8 samples, 0.11%)</title><rect x="780.4" y="291.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="783.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (31 samples, 0.42%)</title><rect x="781.7" y="291.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="784.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (31 samples, 0.42%)</title><rect x="781.7" y="275.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="784.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (31 samples, 0.42%)</title><rect x="781.7" y="259.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="784.7" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (31 samples, 0.42%)</title><rect x="781.7" y="243.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="784.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (31 samples, 0.42%)</title><rect x="781.7" y="227.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="784.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (31 samples, 0.42%)</title><rect x="781.7" y="211.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="784.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (31 samples, 0.42%)</title><rect x="781.7" y="195.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="784.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (31 samples, 0.42%)</title><rect x="781.7" y="179.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="784.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (31 samples, 0.42%)</title><rect x="781.7" y="163.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="784.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (31 samples, 0.42%)</title><rect x="781.7" y="147.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="784.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.09%)</title><rect x="781.7" y="131.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="784.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.09%)</title><rect x="781.7" y="115.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="784.7" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (7 samples, 0.09%)</title><rect x="781.7" y="99.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="784.7" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (24 samples, 0.32%)</title><rect x="782.8" y="131.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="785.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (24 samples, 0.32%)</title><rect x="782.8" y="115.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="785.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (24 samples, 0.32%)</title><rect x="782.8" y="99.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="785.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.19%)</title><rect x="782.8" y="83.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="785.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.19%)</title><rect x="782.8" y="67.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="785.8" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (10 samples, 0.13%)</title><rect x="785.0" y="83.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="788.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.iterator (62 samples, 0.83%)</title><rect x="786.6" y="307.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="789.6" y="318.0"></text>
</g>
<g>
<title>java/util/Collection.stream (8 samples, 0.11%)</title><rect x="786.6" y="291.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="789.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (3 samples, 0.04%)</title><rect x="786.6" y="275.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="789.6" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (3 samples, 0.04%)</title><rect x="786.6" y="259.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="789.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.07%)</title><rect x="787.1" y="275.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="790.1" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (5 samples, 0.07%)</title><rect x="787.1" y="259.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="790.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (3 samples, 0.04%)</title><rect x="787.9" y="291.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="790.9" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (3 samples, 0.04%)</title><rect x="787.9" y="275.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="790.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (14 samples, 0.19%)</title><rect x="788.3" y="291.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="791.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (14 samples, 0.19%)</title><rect x="788.3" y="275.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="791.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (14 samples, 0.19%)</title><rect x="788.3" y="259.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="791.3" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (14 samples, 0.19%)</title><rect x="788.3" y="243.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="791.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (22 samples, 0.29%)</title><rect x="790.6" y="291.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="793.6" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (4 samples, 0.05%)</title><rect x="790.6" y="275.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="793.6" y="286.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (4 samples, 0.05%)</title><rect x="790.6" y="259.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="793.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (18 samples, 0.24%)</title><rect x="791.2" y="275.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.07%)</title><rect x="791.2" y="259.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="794.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.07%)</title><rect x="791.2" y="243.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="794.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$76/107521092.get$Lambda (5 samples, 0.07%)</title><rect x="791.2" y="227.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.2" y="238.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$76 (5 samples, 0.07%)</title><rect x="791.2" y="211.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="794.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (13 samples, 0.17%)</title><rect x="792.0" y="259.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.0" y="270.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (13 samples, 0.17%)</title><rect x="792.0" y="243.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="795.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (15 samples, 0.20%)</title><rect x="794.0" y="291.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="797.0" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (15 samples, 0.20%)</title><rect x="794.0" y="275.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="797.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.getBytes (8 samples, 0.11%)</title><rect x="796.4" y="339.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="799.4" y="350.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.11%)</title><rect x="796.4" y="323.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="799.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.proxyIfNotLocal (103 samples, 1.38%)</title><rect x="797.7" y="339.0" width="16.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="800.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (103 samples, 1.38%)</title><rect x="797.7" y="323.0" width="16.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="800.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (103 samples, 1.38%)</title><rect x="797.7" y="307.0" width="16.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="800.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="797.7" y="291.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="800.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="797.7" y="275.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="800.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.get$Lambda (3 samples, 0.04%)</title><rect x="797.7" y="259.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="800.7" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.topologies.RendezvousTopology$$Lambda$68 (3 samples, 0.04%)</title><rect x="797.7" y="243.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="800.7" y="254.0"></text>
</g>
<g>
<title>java/util/Collection.stream (23 samples, 0.31%)</title><rect x="798.1" y="291.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="801.1" y="302.0"></text>
</g>
<g>
<title>java/util/TreeSet.spliterator (11 samples, 0.15%)</title><rect x="798.1" y="275.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="801.1" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliteratorFor (11 samples, 0.15%)</title><rect x="798.1" y="259.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="801.1" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliterator (11 samples, 0.15%)</title><rect x="798.1" y="243.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="801.1" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySpliterator (11 samples, 0.15%)</title><rect x="798.1" y="227.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="801.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (12 samples, 0.16%)</title><rect x="799.9" y="275.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="802.9" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (12 samples, 0.16%)</title><rect x="799.9" y="259.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="802.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (56 samples, 0.75%)</title><rect x="801.8" y="291.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (56 samples, 0.75%)</title><rect x="801.8" y="275.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="804.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (56 samples, 0.75%)</title><rect x="801.8" y="259.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="804.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (51 samples, 0.68%)</title><rect x="801.8" y="243.0" width="8.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="804.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (36 samples, 0.48%)</title><rect x="801.8" y="227.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="804.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (36 samples, 0.48%)</title><rect x="801.8" y="211.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="804.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (25 samples, 0.34%)</title><rect x="801.8" y="195.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="804.8" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySpliterator.tryAdvance (25 samples, 0.34%)</title><rect x="801.8" y="179.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="804.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (25 samples, 0.34%)</title><rect x="801.8" y="163.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="804.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.apply (25 samples, 0.34%)</title><rect x="801.8" y="147.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="804.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.lambda$primaryFor$0 (25 samples, 0.34%)</title><rect x="801.8" y="131.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="804.8" y="142.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (12 samples, 0.16%)</title><rect x="801.8" y="115.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.8" y="126.0"></text>
</g>
<g>
<title>java.lang.Integer (12 samples, 0.16%)</title><rect x="801.8" y="99.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="804.8" y="110.0"></text>
</g>
<g>
<title>java/util/Map.entry (13 samples, 0.17%)</title><rect x="803.7" y="115.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="806.7" y="126.0"></text>
</g>
<g>
<title>java.util.KeyValueHolder (13 samples, 0.17%)</title><rect x="803.7" y="99.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="806.7" y="110.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (11 samples, 0.15%)</title><rect x="805.7" y="195.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$SizedRefSortingSink.begin (11 samples, 0.15%)</title><rect x="805.7" y="179.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.7" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.15%)</title><rect x="805.7" y="163.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="808.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (15 samples, 0.20%)</title><rect x="807.5" y="227.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="810.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (6 samples, 0.08%)</title><rect x="807.5" y="211.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="810.5" y="222.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (6 samples, 0.08%)</title><rect x="807.5" y="195.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="810.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$OfRef.opWrapSink (9 samples, 0.12%)</title><rect x="808.4" y="211.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="811.4" y="222.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$SizedRefSortingSink (9 samples, 0.12%)</title><rect x="808.4" y="195.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="811.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/447981768.get (5 samples, 0.07%)</title><rect x="809.8" y="243.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="812.8" y="254.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (5 samples, 0.07%)</title><rect x="809.8" y="227.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="812.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (10 samples, 0.13%)</title><rect x="810.6" y="291.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="813.6" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (10 samples, 0.13%)</title><rect x="810.6" y="275.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="813.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.sorted (11 samples, 0.15%)</title><rect x="812.2" y="291.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="815.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps.makeRef (11 samples, 0.15%)</title><rect x="812.2" y="275.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="815.2" y="286.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$OfRef (11 samples, 0.15%)</title><rect x="812.2" y="259.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="815.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.sendAnswerOrError (26 samples, 0.35%)</title><rect x="814.0" y="339.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="817.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (26 samples, 0.35%)</title><rect x="814.0" y="323.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="817.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (26 samples, 0.35%)</title><rect x="814.0" y="307.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="817.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (19 samples, 0.25%)</title><rect x="814.0" y="291.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="817.0" y="302.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (19 samples, 0.25%)</title><rect x="814.0" y="275.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="817.0" y="286.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.25%)</title><rect x="814.0" y="259.0" width="3.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="817.0" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.09%)</title><rect x="817.0" y="291.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="820.0" y="302.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7 samples, 0.09%)</title><rect x="817.0" y="275.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="820.0" y="286.0"></text>
</g>
<g>
<title>[worker-3 tid=24970] (471 samples, 6.31%)</title><rect x="818.1" y="435.0" width="74.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="821.1" y="446.0">[worker-..</text>
</g>
<g>
<title>java/lang/Thread.run (471 samples, 6.31%)</title><rect x="818.1" y="419.0" width="74.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="821.1" y="430.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (471 samples, 6.31%)</title><rect x="818.1" y="403.0" width="74.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="821.1" y="414.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (471 samples, 6.31%)</title><rect x="818.1" y="387.0" width="74.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="821.1" y="398.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.12%)</title><rect x="818.1" y="371.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (9 samples, 0.12%)</title><rect x="818.1" y="355.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="821.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 0.12%)</title><rect x="818.1" y="339.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="821.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (9 samples, 0.12%)</title><rect x="818.1" y="323.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="821.1" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (9 samples, 0.12%)</title><rect x="818.1" y="307.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="821.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$73/1075842738.run (462 samples, 6.19%)</title><rect x="819.5" y="371.0" width="73.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="822.5" y="382.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityGet$2 (462 samples, 6.19%)</title><rect x="819.5" y="355.0" width="73.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="822.5" y="366.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (11 samples, 0.15%)</title><rect x="819.5" y="339.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (11 samples, 0.15%)</title><rect x="819.5" y="323.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (11 samples, 0.15%)</title><rect x="819.5" y="307.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="822.5" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.15%)</title><rect x="819.5" y="291.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="822.5" y="302.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.15%)</title><rect x="819.5" y="275.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="822.5" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.24%)</title><rect x="821.2" y="339.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="824.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.24%)</title><rect x="821.2" y="323.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.2" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (18 samples, 0.24%)</title><rect x="821.2" y="307.0" width="2.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="824.2" y="318.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.03%)</title><rect x="824.1" y="339.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="827.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (26 samples, 0.35%)</title><rect x="824.4" y="339.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.4" y="350.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.16%)</title><rect x="824.4" y="323.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="827.4" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.08%)</title><rect x="826.3" y="323.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="829.3" y="334.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.11%)</title><rect x="827.2" y="323.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="830.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (240 samples, 3.22%)</title><rect x="828.5" y="339.0" width="38.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="831.5" y="350.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (24 samples, 0.32%)</title><rect x="828.5" y="323.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="831.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (24 samples, 0.32%)</title><rect x="828.5" y="307.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="831.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (24 samples, 0.32%)</title><rect x="828.5" y="291.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="831.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (24 samples, 0.32%)</title><rect x="828.5" y="275.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="831.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (24 samples, 0.32%)</title><rect x="828.5" y="259.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="831.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (24 samples, 0.32%)</title><rect x="828.5" y="243.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="831.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (24 samples, 0.32%)</title><rect x="828.5" y="227.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.5" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (24 samples, 0.32%)</title><rect x="828.5" y="211.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="831.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (24 samples, 0.32%)</title><rect x="828.5" y="195.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="831.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (24 samples, 0.32%)</title><rect x="828.5" y="179.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="831.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (24 samples, 0.32%)</title><rect x="828.5" y="163.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="831.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (24 samples, 0.32%)</title><rect x="828.5" y="147.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="831.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (24 samples, 0.32%)</title><rect x="828.5" y="131.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="831.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (24 samples, 0.32%)</title><rect x="828.5" y="115.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="831.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="828.5" y="99.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="831.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="828.5" y="83.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="831.5" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (5 samples, 0.07%)</title><rect x="828.5" y="67.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="831.5" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (19 samples, 0.25%)</title><rect x="829.3" y="99.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="832.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (19 samples, 0.25%)</title><rect x="829.3" y="83.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="832.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (19 samples, 0.25%)</title><rect x="829.3" y="67.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="832.3" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (16 samples, 0.21%)</title><rect x="829.3" y="51.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="832.3" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.21%)</title><rect x="829.3" y="35.0" width="2.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="832.3" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (3 samples, 0.04%)</title><rect x="831.8" y="51.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="834.8" y="62.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (22 samples, 0.29%)</title><rect x="832.3" y="323.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (22 samples, 0.29%)</title><rect x="832.3" y="307.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="835.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl$$Lambda$98/728161732.apply (22 samples, 0.29%)</title><rect x="832.3" y="291.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.lambda$iterator$2 (22 samples, 0.29%)</title><rect x="832.3" y="275.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="835.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (9 samples, 0.12%)</title><rect x="832.3" y="259.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.3" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (9 samples, 0.12%)</title><rect x="832.3" y="243.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="835.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (13 samples, 0.17%)</title><rect x="833.7" y="259.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="836.7" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (13 samples, 0.17%)</title><rect x="833.7" y="243.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="836.7" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.17%)</title><rect x="833.7" y="227.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="836.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (13 samples, 0.17%)</title><rect x="835.8" y="323.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="838.8" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.17%)</title><rect x="835.8" y="307.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="838.8" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.17%)</title><rect x="835.8" y="291.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="838.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.iterator (181 samples, 2.43%)</title><rect x="837.8" y="323.0" width="28.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.8" y="334.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (8 samples, 0.11%)</title><rect x="837.8" y="307.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="840.8" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (8 samples, 0.11%)</title><rect x="837.8" y="291.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="840.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (74 samples, 0.99%)</title><rect x="839.1" y="307.0" width="11.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="842.1" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (4 samples, 0.05%)</title><rect x="839.1" y="291.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="842.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (70 samples, 0.94%)</title><rect x="839.7" y="291.0" width="11.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="842.7" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (7 samples, 0.09%)</title><rect x="839.7" y="275.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="842.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.08%)</title><rect x="840.8" y="275.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="843.8" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.08%)</title><rect x="840.8" y="259.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="843.8" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.05%)</title><rect x="841.8" y="275.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="844.8" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (4 samples, 0.05%)</title><rect x="842.4" y="275.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="845.4" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.05%)</title><rect x="842.4" y="259.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="845.4" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (49 samples, 0.66%)</title><rect x="843.1" y="275.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="846.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (49 samples, 0.66%)</title><rect x="843.1" y="259.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (49 samples, 0.66%)</title><rect x="843.1" y="243.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="846.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (19 samples, 0.25%)</title><rect x="843.1" y="227.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="846.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (19 samples, 0.25%)</title><rect x="843.1" y="211.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="846.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (19 samples, 0.25%)</title><rect x="843.1" y="195.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="846.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (19 samples, 0.25%)</title><rect x="843.1" y="179.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="846.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.03%)</title><rect x="843.1" y="163.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="846.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.03%)</title><rect x="843.1" y="147.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="846.1" y="158.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (2 samples, 0.03%)</title><rect x="843.1" y="131.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="846.1" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (17 samples, 0.23%)</title><rect x="843.4" y="163.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="846.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (17 samples, 0.23%)</title><rect x="843.4" y="147.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="846.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (17 samples, 0.23%)</title><rect x="843.4" y="131.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="846.4" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (15 samples, 0.20%)</title><rect x="843.4" y="115.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="846.4" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.20%)</title><rect x="843.4" y="99.0" width="2.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="846.4" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (2 samples, 0.03%)</title><rect x="845.7" y="115.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="848.7" y="126.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (30 samples, 0.40%)</title><rect x="846.1" y="227.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="849.1" y="238.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (7 samples, 0.09%)</title><rect x="846.1" y="211.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="849.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.09%)</title><rect x="847.2" y="211.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="850.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.09%)</title><rect x="847.2" y="195.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="850.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$80/1156522076.get$Lambda (4 samples, 0.05%)</title><rect x="847.2" y="179.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="850.2" y="190.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$80 (4 samples, 0.05%)</title><rect x="847.2" y="163.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="850.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.get$Lambda (3 samples, 0.04%)</title><rect x="847.8" y="179.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="850.8" y="190.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$84 (3 samples, 0.04%)</title><rect x="847.8" y="163.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="850.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (15 samples, 0.20%)</title><rect x="848.4" y="211.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="851.4" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.20%)</title><rect x="848.4" y="195.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="851.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (5 samples, 0.07%)</title><rect x="850.8" y="307.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="853.8" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (5 samples, 0.07%)</title><rect x="850.8" y="291.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="853.8" y="302.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.04%)</title><rect x="851.6" y="307.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="854.6" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (7 samples, 0.09%)</title><rect x="852.1" y="307.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="855.1" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.09%)</title><rect x="852.1" y="291.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="855.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (22 samples, 0.29%)</title><rect x="853.2" y="307.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="856.2" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.03%)</title><rect x="853.2" y="291.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="856.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (20 samples, 0.27%)</title><rect x="853.5" y="291.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="856.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (20 samples, 0.27%)</title><rect x="853.5" y="275.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (20 samples, 0.27%)</title><rect x="853.5" y="259.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="856.5" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (20 samples, 0.27%)</title><rect x="853.5" y="243.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (20 samples, 0.27%)</title><rect x="853.5" y="227.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="856.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (20 samples, 0.27%)</title><rect x="853.5" y="211.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (20 samples, 0.27%)</title><rect x="853.5" y="195.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="856.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (20 samples, 0.27%)</title><rect x="853.5" y="179.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="856.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (20 samples, 0.27%)</title><rect x="853.5" y="163.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="856.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (20 samples, 0.27%)</title><rect x="853.5" y="147.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="856.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="853.5" y="131.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="856.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="853.5" y="115.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.5" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (5 samples, 0.07%)</title><rect x="853.5" y="99.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="856.5" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (15 samples, 0.20%)</title><rect x="854.3" y="131.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="857.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (15 samples, 0.20%)</title><rect x="854.3" y="115.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="857.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (15 samples, 0.20%)</title><rect x="854.3" y="99.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="857.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.12%)</title><rect x="854.3" y="83.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="857.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.12%)</title><rect x="854.3" y="67.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="857.3" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (6 samples, 0.08%)</title><rect x="855.7" y="83.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="858.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.iterator (62 samples, 0.83%)</title><rect x="856.7" y="307.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="859.7" y="318.0"></text>
</g>
<g>
<title>java/util/Collection.stream (17 samples, 0.23%)</title><rect x="856.7" y="291.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="859.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (5 samples, 0.07%)</title><rect x="856.7" y="275.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="859.7" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (5 samples, 0.07%)</title><rect x="856.7" y="259.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="859.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (12 samples, 0.16%)</title><rect x="857.4" y="275.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="860.4" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (12 samples, 0.16%)</title><rect x="857.4" y="259.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="860.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (2 samples, 0.03%)</title><rect x="859.3" y="291.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="862.3" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (2 samples, 0.03%)</title><rect x="859.3" y="275.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="862.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (11 samples, 0.15%)</title><rect x="859.7" y="291.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="862.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (11 samples, 0.15%)</title><rect x="859.7" y="275.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="862.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (11 samples, 0.15%)</title><rect x="859.7" y="259.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="862.7" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (11 samples, 0.15%)</title><rect x="859.7" y="243.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="862.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (20 samples, 0.27%)</title><rect x="861.4" y="291.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="864.4" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (11 samples, 0.15%)</title><rect x="861.4" y="275.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="864.4" y="286.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (11 samples, 0.15%)</title><rect x="861.4" y="259.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="864.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (9 samples, 0.12%)</title><rect x="863.1" y="275.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="866.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (8 samples, 0.11%)</title><rect x="863.3" y="259.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="866.3" y="270.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (8 samples, 0.11%)</title><rect x="863.3" y="243.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="866.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (12 samples, 0.16%)</title><rect x="864.6" y="291.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="867.6" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (12 samples, 0.16%)</title><rect x="864.6" y="275.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="867.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.getBytes (8 samples, 0.11%)</title><rect x="866.5" y="339.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="869.5" y="350.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.11%)</title><rect x="866.5" y="323.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="869.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.proxyIfNotLocal (126 samples, 1.69%)</title><rect x="867.7" y="339.0" width="19.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="870.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (126 samples, 1.69%)</title><rect x="867.7" y="323.0" width="19.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="870.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (126 samples, 1.69%)</title><rect x="867.7" y="307.0" width="19.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="870.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="867.7" y="291.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="870.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="867.7" y="275.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="870.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.get$Lambda (3 samples, 0.04%)</title><rect x="867.7" y="259.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="870.7" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.topologies.RendezvousTopology$$Lambda$68 (3 samples, 0.04%)</title><rect x="867.7" y="243.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="870.7" y="254.0"></text>
</g>
<g>
<title>java/util/Collection.stream (28 samples, 0.38%)</title><rect x="868.2" y="291.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="871.2" y="302.0"></text>
</g>
<g>
<title>java/util/TreeSet.spliterator (10 samples, 0.13%)</title><rect x="868.2" y="275.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="871.2" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliteratorFor (10 samples, 0.13%)</title><rect x="868.2" y="259.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="871.2" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliterator (10 samples, 0.13%)</title><rect x="868.2" y="243.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="871.2" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySpliterator (10 samples, 0.13%)</title><rect x="868.2" y="227.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="871.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (18 samples, 0.24%)</title><rect x="869.8" y="275.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="872.8" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (18 samples, 0.24%)</title><rect x="869.8" y="259.0" width="2.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="872.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (54 samples, 0.72%)</title><rect x="872.6" y="291.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="875.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (54 samples, 0.72%)</title><rect x="872.6" y="275.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="875.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (54 samples, 0.72%)</title><rect x="872.6" y="259.0" width="8.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="875.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (52 samples, 0.70%)</title><rect x="872.6" y="243.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="875.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (43 samples, 0.58%)</title><rect x="872.6" y="227.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="875.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (43 samples, 0.58%)</title><rect x="872.6" y="211.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="875.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (29 samples, 0.39%)</title><rect x="872.6" y="195.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="875.6" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySpliterator.tryAdvance (29 samples, 0.39%)</title><rect x="872.6" y="179.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="875.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (29 samples, 0.39%)</title><rect x="872.6" y="163.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="875.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.apply (29 samples, 0.39%)</title><rect x="872.6" y="147.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="875.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.lambda$primaryFor$0 (29 samples, 0.39%)</title><rect x="872.6" y="131.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="875.6" y="142.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (13 samples, 0.17%)</title><rect x="872.6" y="115.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="875.6" y="126.0"></text>
</g>
<g>
<title>java.lang.Integer (13 samples, 0.17%)</title><rect x="872.6" y="99.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="875.6" y="110.0"></text>
</g>
<g>
<title>java/util/Map.entry (16 samples, 0.21%)</title><rect x="874.7" y="115.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="877.7" y="126.0"></text>
</g>
<g>
<title>java.util.KeyValueHolder (16 samples, 0.21%)</title><rect x="874.7" y="99.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="877.7" y="110.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (14 samples, 0.19%)</title><rect x="877.2" y="195.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="880.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$SizedRefSortingSink.begin (14 samples, 0.19%)</title><rect x="877.2" y="179.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="880.2" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.19%)</title><rect x="877.2" y="163.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="880.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (9 samples, 0.12%)</title><rect x="879.4" y="227.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="882.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (6 samples, 0.08%)</title><rect x="879.4" y="211.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="882.4" y="222.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (6 samples, 0.08%)</title><rect x="879.4" y="195.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="882.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$OfRef.opWrapSink (3 samples, 0.04%)</title><rect x="880.4" y="211.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="883.4" y="222.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$SizedRefSortingSink (3 samples, 0.04%)</title><rect x="880.4" y="195.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="883.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/447981768.get (2 samples, 0.03%)</title><rect x="880.8" y="243.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="883.8" y="254.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (2 samples, 0.03%)</title><rect x="880.8" y="227.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="883.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (26 samples, 0.35%)</title><rect x="881.2" y="291.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="884.2" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (26 samples, 0.35%)</title><rect x="881.2" y="275.0" width="4.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="884.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.sorted (15 samples, 0.20%)</title><rect x="885.3" y="291.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="888.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps.makeRef (15 samples, 0.20%)</title><rect x="885.3" y="275.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="888.3" y="286.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$OfRef (15 samples, 0.20%)</title><rect x="885.3" y="259.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="888.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.sendAnswerOrError (31 samples, 0.42%)</title><rect x="887.6" y="339.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="890.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (31 samples, 0.42%)</title><rect x="887.6" y="323.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="890.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (31 samples, 0.42%)</title><rect x="887.6" y="307.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="890.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (24 samples, 0.32%)</title><rect x="887.6" y="291.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="890.6" y="302.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (24 samples, 0.32%)</title><rect x="887.6" y="275.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="890.6" y="286.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.32%)</title><rect x="887.6" y="259.0" width="3.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="890.6" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.09%)</title><rect x="891.4" y="291.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="894.4" y="302.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7 samples, 0.09%)</title><rect x="891.4" y="275.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="894.4" y="286.0"></text>
</g>
<g>
<title>[worker-4 tid=24971] (470 samples, 6.30%)</title><rect x="892.5" y="435.0" width="74.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="895.5" y="446.0">[worker-..</text>
</g>
<g>
<title>java/lang/Thread.run (470 samples, 6.30%)</title><rect x="892.5" y="419.0" width="74.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="895.5" y="430.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (470 samples, 6.30%)</title><rect x="892.5" y="403.0" width="74.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="895.5" y="414.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (470 samples, 6.30%)</title><rect x="892.5" y="387.0" width="74.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="895.5" y="398.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (7 samples, 0.09%)</title><rect x="892.5" y="371.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="895.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (7 samples, 0.09%)</title><rect x="892.5" y="355.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="895.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.09%)</title><rect x="892.5" y="339.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="895.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (7 samples, 0.09%)</title><rect x="892.5" y="323.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="895.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (7 samples, 0.09%)</title><rect x="892.5" y="307.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="895.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$73/1075842738.run (463 samples, 6.20%)</title><rect x="893.7" y="371.0" width="73.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="896.7" y="382.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityGet$2 (463 samples, 6.20%)</title><rect x="893.7" y="355.0" width="73.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="896.7" y="366.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (16 samples, 0.21%)</title><rect x="893.7" y="339.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="896.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (16 samples, 0.21%)</title><rect x="893.7" y="323.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="896.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (16 samples, 0.21%)</title><rect x="893.7" y="307.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="896.7" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.21%)</title><rect x="893.7" y="291.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="896.7" y="302.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.21%)</title><rect x="893.7" y="275.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="896.7" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.13%)</title><rect x="896.2" y="339.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="899.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.13%)</title><rect x="896.2" y="323.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="899.2" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.13%)</title><rect x="896.2" y="307.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="899.2" y="318.0"></text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.08%)</title><rect x="897.8" y="339.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="900.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (19 samples, 0.25%)</title><rect x="898.7" y="339.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="901.7" y="350.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.15%)</title><rect x="898.7" y="323.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="901.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.08%)</title><rect x="900.5" y="323.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="903.5" y="334.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="901.4" y="323.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="904.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (252 samples, 3.38%)</title><rect x="901.7" y="339.0" width="39.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="904.7" y="350.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (24 samples, 0.32%)</title><rect x="901.7" y="323.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="904.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (24 samples, 0.32%)</title><rect x="901.7" y="307.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="904.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (24 samples, 0.32%)</title><rect x="901.7" y="291.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="904.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (24 samples, 0.32%)</title><rect x="901.7" y="275.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="904.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (24 samples, 0.32%)</title><rect x="901.7" y="259.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="904.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (24 samples, 0.32%)</title><rect x="901.7" y="243.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="904.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (24 samples, 0.32%)</title><rect x="901.7" y="227.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="904.7" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (24 samples, 0.32%)</title><rect x="901.7" y="211.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="904.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (24 samples, 0.32%)</title><rect x="901.7" y="195.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="904.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (24 samples, 0.32%)</title><rect x="901.7" y="179.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="904.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (24 samples, 0.32%)</title><rect x="901.7" y="163.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="904.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (24 samples, 0.32%)</title><rect x="901.7" y="147.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="904.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (24 samples, 0.32%)</title><rect x="901.7" y="131.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (24 samples, 0.32%)</title><rect x="901.7" y="115.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="904.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="901.7" y="99.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="904.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="901.7" y="83.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.7" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (5 samples, 0.07%)</title><rect x="901.7" y="67.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="904.7" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (19 samples, 0.25%)</title><rect x="902.5" y="99.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="905.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (19 samples, 0.25%)</title><rect x="902.5" y="83.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="905.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (19 samples, 0.25%)</title><rect x="902.5" y="67.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.19%)</title><rect x="902.5" y="51.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="905.5" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.19%)</title><rect x="902.5" y="35.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="905.5" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (5 samples, 0.07%)</title><rect x="904.7" y="51.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="907.7" y="62.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (15 samples, 0.20%)</title><rect x="905.5" y="323.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="908.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (15 samples, 0.20%)</title><rect x="905.5" y="307.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="908.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl$$Lambda$98/728161732.apply (15 samples, 0.20%)</title><rect x="905.5" y="291.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="908.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.lambda$iterator$2 (15 samples, 0.20%)</title><rect x="905.5" y="275.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="908.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (8 samples, 0.11%)</title><rect x="905.5" y="259.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="908.5" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (8 samples, 0.11%)</title><rect x="905.5" y="243.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="908.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (7 samples, 0.09%)</title><rect x="906.8" y="259.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="909.8" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.09%)</title><rect x="906.8" y="243.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="909.8" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.09%)</title><rect x="906.8" y="227.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="909.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (16 samples, 0.21%)</title><rect x="907.9" y="323.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="910.9" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (16 samples, 0.21%)</title><rect x="907.9" y="307.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="910.9" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.21%)</title><rect x="907.9" y="291.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="910.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.iterator (197 samples, 2.64%)</title><rect x="910.4" y="323.0" width="31.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="913.4" y="334.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (10 samples, 0.13%)</title><rect x="910.4" y="307.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.4" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (10 samples, 0.13%)</title><rect x="910.4" y="291.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="913.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (75 samples, 1.01%)</title><rect x="912.0" y="307.0" width="11.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="915.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (74 samples, 0.99%)</title><rect x="912.2" y="291.0" width="11.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.2" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (4 samples, 0.05%)</title><rect x="912.2" y="275.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="915.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (3 samples, 0.04%)</title><rect x="912.8" y="275.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="915.8" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (3 samples, 0.04%)</title><rect x="912.8" y="259.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="915.8" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.05%)</title><rect x="913.3" y="275.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="916.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.07%)</title><rect x="913.9" y="275.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="916.9" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="913.9" y="259.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="916.9" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (58 samples, 0.78%)</title><rect x="914.7" y="275.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="917.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (58 samples, 0.78%)</title><rect x="914.7" y="259.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="917.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (58 samples, 0.78%)</title><rect x="914.7" y="243.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="917.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (19 samples, 0.25%)</title><rect x="914.7" y="227.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="917.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (19 samples, 0.25%)</title><rect x="914.7" y="211.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="917.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (19 samples, 0.25%)</title><rect x="914.7" y="195.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="917.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (19 samples, 0.25%)</title><rect x="914.7" y="179.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="917.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="914.7" y="163.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="917.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="914.7" y="147.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="917.7" y="158.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.05%)</title><rect x="914.7" y="131.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="917.7" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (15 samples, 0.20%)</title><rect x="915.3" y="163.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="918.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (15 samples, 0.20%)</title><rect x="915.3" y="147.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="918.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (15 samples, 0.20%)</title><rect x="915.3" y="131.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="918.3" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.11%)</title><rect x="915.3" y="115.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="918.3" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.11%)</title><rect x="915.3" y="99.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="918.3" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (7 samples, 0.09%)</title><rect x="916.6" y="115.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="919.6" y="126.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (39 samples, 0.52%)</title><rect x="917.7" y="227.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="920.7" y="238.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (9 samples, 0.12%)</title><rect x="917.7" y="211.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="920.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.13%)</title><rect x="919.1" y="211.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="922.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.13%)</title><rect x="919.1" y="195.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="922.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$80/1156522076.get$Lambda (6 samples, 0.08%)</title><rect x="919.1" y="179.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="922.1" y="190.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$80 (6 samples, 0.08%)</title><rect x="919.1" y="163.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="922.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.get$Lambda (4 samples, 0.05%)</title><rect x="920.1" y="179.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="923.1" y="190.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$84 (4 samples, 0.05%)</title><rect x="920.1" y="163.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="923.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (4 samples, 0.05%)</title><rect x="920.7" y="211.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="923.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (4 samples, 0.05%)</title><rect x="920.7" y="195.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="923.7" y="206.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (4 samples, 0.05%)</title><rect x="920.7" y="179.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="923.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (16 samples, 0.21%)</title><rect x="921.3" y="211.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="924.3" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.21%)</title><rect x="921.3" y="195.0" width="2.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="924.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (6 samples, 0.08%)</title><rect x="923.9" y="307.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="926.9" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (6 samples, 0.08%)</title><rect x="923.9" y="291.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="926.9" y="302.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.16%)</title><rect x="924.8" y="307.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="927.8" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (6 samples, 0.08%)</title><rect x="926.7" y="307.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="929.7" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.08%)</title><rect x="926.7" y="291.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="929.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (24 samples, 0.32%)</title><rect x="927.7" y="307.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="930.7" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.03%)</title><rect x="927.7" y="291.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="930.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (22 samples, 0.29%)</title><rect x="928.0" y="291.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="931.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (22 samples, 0.29%)</title><rect x="928.0" y="275.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="931.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (22 samples, 0.29%)</title><rect x="928.0" y="259.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="931.0" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (22 samples, 0.29%)</title><rect x="928.0" y="243.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="931.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (22 samples, 0.29%)</title><rect x="928.0" y="227.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="931.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (22 samples, 0.29%)</title><rect x="928.0" y="211.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="931.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (22 samples, 0.29%)</title><rect x="928.0" y="195.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="931.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (22 samples, 0.29%)</title><rect x="928.0" y="179.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="931.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (22 samples, 0.29%)</title><rect x="928.0" y="163.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="931.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (22 samples, 0.29%)</title><rect x="928.0" y="147.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="931.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="928.0" y="131.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="931.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="928.0" y="115.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="931.0" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.05%)</title><rect x="928.0" y="99.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="931.0" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (18 samples, 0.24%)</title><rect x="928.6" y="131.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="931.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (18 samples, 0.24%)</title><rect x="928.6" y="115.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="931.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (18 samples, 0.24%)</title><rect x="928.6" y="99.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="931.6" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.15%)</title><rect x="928.6" y="83.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="931.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.15%)</title><rect x="928.6" y="67.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="931.6" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (7 samples, 0.09%)</title><rect x="930.3" y="83.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="933.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.iterator (64 samples, 0.86%)</title><rect x="931.5" y="307.0" width="10.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="934.5" y="318.0"></text>
</g>
<g>
<title>java/util/Collection.stream (14 samples, 0.19%)</title><rect x="931.5" y="291.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="934.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (3 samples, 0.04%)</title><rect x="931.5" y="275.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="934.5" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (3 samples, 0.04%)</title><rect x="931.5" y="259.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="934.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (11 samples, 0.15%)</title><rect x="931.9" y="275.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="934.9" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (11 samples, 0.15%)</title><rect x="931.9" y="259.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="934.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (11 samples, 0.15%)</title><rect x="933.8" y="291.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="936.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (11 samples, 0.15%)</title><rect x="933.8" y="275.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="936.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (11 samples, 0.15%)</title><rect x="933.8" y="259.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="936.8" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (11 samples, 0.15%)</title><rect x="933.8" y="243.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="936.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (27 samples, 0.36%)</title><rect x="935.6" y="291.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="938.6" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (10 samples, 0.13%)</title><rect x="935.6" y="275.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="938.6" y="286.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (10 samples, 0.13%)</title><rect x="935.6" y="259.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="938.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (17 samples, 0.23%)</title><rect x="937.1" y="275.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="940.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.08%)</title><rect x="937.1" y="259.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="940.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.08%)</title><rect x="937.1" y="243.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="940.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$76/107521092.get$Lambda (6 samples, 0.08%)</title><rect x="937.1" y="227.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="940.1" y="238.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$76 (6 samples, 0.08%)</title><rect x="937.1" y="211.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="940.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (11 samples, 0.15%)</title><rect x="938.1" y="259.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="941.1" y="270.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (11 samples, 0.15%)</title><rect x="938.1" y="243.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="941.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (11 samples, 0.15%)</title><rect x="939.8" y="291.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="942.8" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (11 samples, 0.15%)</title><rect x="939.8" y="275.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="942.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.getBytes (13 samples, 0.17%)</title><rect x="941.6" y="339.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="944.6" y="350.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.17%)</title><rect x="941.6" y="323.0" width="2.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="944.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.proxyIfNotLocal (116 samples, 1.55%)</title><rect x="943.6" y="339.0" width="18.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="946.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (116 samples, 1.55%)</title><rect x="943.6" y="323.0" width="18.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="946.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (116 samples, 1.55%)</title><rect x="943.6" y="307.0" width="18.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="946.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.09%)</title><rect x="943.6" y="291.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="946.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.09%)</title><rect x="943.6" y="275.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="946.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.get$Lambda (7 samples, 0.09%)</title><rect x="943.6" y="259.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="946.6" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.topologies.RendezvousTopology$$Lambda$68 (7 samples, 0.09%)</title><rect x="943.6" y="243.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="946.6" y="254.0"></text>
</g>
<g>
<title>java/util/Collection.stream (18 samples, 0.24%)</title><rect x="944.7" y="291.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="947.7" y="302.0"></text>
</g>
<g>
<title>java/util/TreeSet.spliterator (9 samples, 0.12%)</title><rect x="944.7" y="275.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="947.7" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliteratorFor (9 samples, 0.12%)</title><rect x="944.7" y="259.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="947.7" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliterator (9 samples, 0.12%)</title><rect x="944.7" y="243.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="947.7" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySpliterator (9 samples, 0.12%)</title><rect x="944.7" y="227.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="947.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (9 samples, 0.12%)</title><rect x="946.2" y="275.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="949.2" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (9 samples, 0.12%)</title><rect x="946.2" y="259.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="949.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (59 samples, 0.79%)</title><rect x="947.6" y="291.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="950.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (59 samples, 0.79%)</title><rect x="947.6" y="275.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="950.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (59 samples, 0.79%)</title><rect x="947.6" y="259.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="950.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (56 samples, 0.75%)</title><rect x="947.6" y="243.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="950.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (44 samples, 0.59%)</title><rect x="947.6" y="227.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="950.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (44 samples, 0.59%)</title><rect x="947.6" y="211.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="950.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (30 samples, 0.40%)</title><rect x="947.6" y="195.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="950.6" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySpliterator.tryAdvance (30 samples, 0.40%)</title><rect x="947.6" y="179.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="950.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (30 samples, 0.40%)</title><rect x="947.6" y="163.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="950.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.apply (30 samples, 0.40%)</title><rect x="947.6" y="147.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="950.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.lambda$primaryFor$0 (30 samples, 0.40%)</title><rect x="947.6" y="131.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="950.6" y="142.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (11 samples, 0.15%)</title><rect x="947.6" y="115.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="950.6" y="126.0"></text>
</g>
<g>
<title>java.lang.Integer (11 samples, 0.15%)</title><rect x="947.6" y="99.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="950.6" y="110.0"></text>
</g>
<g>
<title>java/util/Map.entry (19 samples, 0.25%)</title><rect x="949.3" y="115.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="952.3" y="126.0"></text>
</g>
<g>
<title>java.util.KeyValueHolder (19 samples, 0.25%)</title><rect x="949.3" y="99.0" width="3.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="952.3" y="110.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (14 samples, 0.19%)</title><rect x="952.3" y="195.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="955.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$SizedRefSortingSink.begin (14 samples, 0.19%)</title><rect x="952.3" y="179.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="955.3" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.19%)</title><rect x="952.3" y="163.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="955.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (12 samples, 0.16%)</title><rect x="954.5" y="227.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="957.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (5 samples, 0.07%)</title><rect x="954.5" y="211.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.5" y="222.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (5 samples, 0.07%)</title><rect x="954.5" y="195.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="957.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$OfRef.opWrapSink (7 samples, 0.09%)</title><rect x="955.3" y="211.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="958.3" y="222.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$SizedRefSortingSink (7 samples, 0.09%)</title><rect x="955.3" y="195.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="958.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/447981768.get (3 samples, 0.04%)</title><rect x="956.4" y="243.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="959.4" y="254.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (3 samples, 0.04%)</title><rect x="956.4" y="227.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="959.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (21 samples, 0.28%)</title><rect x="956.9" y="291.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="959.9" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (21 samples, 0.28%)</title><rect x="956.9" y="275.0" width="3.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="959.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.sorted (11 samples, 0.15%)</title><rect x="960.2" y="291.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="963.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps.makeRef (11 samples, 0.15%)</title><rect x="960.2" y="275.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="963.2" y="286.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$OfRef (11 samples, 0.15%)</title><rect x="960.2" y="259.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="963.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.sendAnswerOrError (31 samples, 0.42%)</title><rect x="962.0" y="339.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="965.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (31 samples, 0.42%)</title><rect x="962.0" y="323.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="965.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (31 samples, 0.42%)</title><rect x="962.0" y="307.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="965.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (22 samples, 0.29%)</title><rect x="962.0" y="291.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.0" y="302.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (22 samples, 0.29%)</title><rect x="962.0" y="275.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="965.0" y="286.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.29%)</title><rect x="962.0" y="259.0" width="3.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="965.0" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 0.12%)</title><rect x="965.4" y="291.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="968.4" y="302.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (9 samples, 0.12%)</title><rect x="965.4" y="275.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="968.4" y="286.0"></text>
</g>
<g>
<title>[worker-5 tid=24972] (474 samples, 6.35%)</title><rect x="966.9" y="435.0" width="74.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="969.9" y="446.0">[worker-..</text>
</g>
<g>
<title>java/lang/Thread.run (474 samples, 6.35%)</title><rect x="966.9" y="419.0" width="74.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="969.9" y="430.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (474 samples, 6.35%)</title><rect x="966.9" y="403.0" width="74.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="969.9" y="414.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (474 samples, 6.35%)</title><rect x="966.9" y="387.0" width="74.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="969.9" y="398.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (11 samples, 0.15%)</title><rect x="966.9" y="371.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="969.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (11 samples, 0.15%)</title><rect x="966.9" y="355.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="969.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11 samples, 0.15%)</title><rect x="966.9" y="339.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="969.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (11 samples, 0.15%)</title><rect x="966.9" y="323.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="969.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (11 samples, 0.15%)</title><rect x="966.9" y="307.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="969.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$73/1075842738.run (463 samples, 6.20%)</title><rect x="968.6" y="371.0" width="73.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="971.6" y="382.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityGet$2 (463 samples, 6.20%)</title><rect x="968.6" y="355.0" width="73.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="971.6" y="366.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.13%)</title><rect x="968.6" y="339.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="971.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (10 samples, 0.13%)</title><rect x="968.6" y="323.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="971.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (10 samples, 0.13%)</title><rect x="968.6" y="307.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="971.6" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.13%)</title><rect x="968.6" y="291.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="971.6" y="302.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.13%)</title><rect x="968.6" y="275.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="971.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 0.21%)</title><rect x="970.2" y="339.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="973.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 0.21%)</title><rect x="970.2" y="323.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="973.2" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.21%)</title><rect x="970.2" y="307.0" width="2.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="973.2" y="318.0"></text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.08%)</title><rect x="972.7" y="339.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="975.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (21 samples, 0.28%)</title><rect x="973.7" y="339.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="976.7" y="350.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.16%)</title><rect x="973.7" y="323.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="976.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.05%)</title><rect x="975.6" y="323.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="978.6" y="334.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.07%)</title><rect x="976.2" y="323.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="979.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (263 samples, 3.52%)</title><rect x="977.0" y="339.0" width="41.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="980.0" y="350.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (22 samples, 0.29%)</title><rect x="977.0" y="323.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="980.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (22 samples, 0.29%)</title><rect x="977.0" y="307.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="980.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (22 samples, 0.29%)</title><rect x="977.0" y="291.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="980.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (22 samples, 0.29%)</title><rect x="977.0" y="275.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="980.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (22 samples, 0.29%)</title><rect x="977.0" y="259.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="980.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (22 samples, 0.29%)</title><rect x="977.0" y="243.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="980.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (22 samples, 0.29%)</title><rect x="977.0" y="227.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="980.0" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (22 samples, 0.29%)</title><rect x="977.0" y="211.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="980.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (22 samples, 0.29%)</title><rect x="977.0" y="195.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="980.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (22 samples, 0.29%)</title><rect x="977.0" y="179.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="980.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (22 samples, 0.29%)</title><rect x="977.0" y="163.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="980.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (22 samples, 0.29%)</title><rect x="977.0" y="147.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="980.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (22 samples, 0.29%)</title><rect x="977.0" y="131.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="980.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (22 samples, 0.29%)</title><rect x="977.0" y="115.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="980.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (9 samples, 0.12%)</title><rect x="977.0" y="99.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="980.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (9 samples, 0.12%)</title><rect x="977.0" y="83.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="980.0" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (9 samples, 0.12%)</title><rect x="977.0" y="67.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="980.0" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (13 samples, 0.17%)</title><rect x="978.4" y="99.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="981.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (13 samples, 0.17%)</title><rect x="978.4" y="83.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="981.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (13 samples, 0.17%)</title><rect x="978.4" y="67.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="981.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.12%)</title><rect x="978.4" y="51.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="981.4" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.12%)</title><rect x="978.4" y="35.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="981.4" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (4 samples, 0.05%)</title><rect x="979.8" y="51.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="982.8" y="62.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (18 samples, 0.24%)</title><rect x="980.5" y="323.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="983.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (18 samples, 0.24%)</title><rect x="980.5" y="307.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="983.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl$$Lambda$98/728161732.apply (18 samples, 0.24%)</title><rect x="980.5" y="291.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="983.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.lambda$iterator$2 (18 samples, 0.24%)</title><rect x="980.5" y="275.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="983.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (6 samples, 0.08%)</title><rect x="980.5" y="259.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="983.5" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (6 samples, 0.08%)</title><rect x="980.5" y="243.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="983.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (12 samples, 0.16%)</title><rect x="981.4" y="259.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="984.4" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (12 samples, 0.16%)</title><rect x="981.4" y="243.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="984.4" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.16%)</title><rect x="981.4" y="227.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="984.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (10 samples, 0.13%)</title><rect x="983.3" y="323.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="986.3" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.13%)</title><rect x="983.3" y="307.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="986.3" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.13%)</title><rect x="983.3" y="291.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="986.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.iterator (213 samples, 2.85%)</title><rect x="984.9" y="323.0" width="33.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="987.9" y="334.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (11 samples, 0.15%)</title><rect x="984.9" y="307.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="987.9" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (11 samples, 0.15%)</title><rect x="984.9" y="291.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="987.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (91 samples, 1.22%)</title><rect x="986.6" y="307.0" width="14.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="989.6" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (5 samples, 0.07%)</title><rect x="986.6" y="291.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="989.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (86 samples, 1.15%)</title><rect x="987.4" y="291.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="990.4" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (4 samples, 0.05%)</title><rect x="987.4" y="275.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="990.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.05%)</title><rect x="988.1" y="275.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="991.1" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (4 samples, 0.05%)</title><rect x="988.1" y="259.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="991.1" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (7 samples, 0.09%)</title><rect x="988.7" y="275.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="991.7" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (8 samples, 0.11%)</title><rect x="989.8" y="275.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="992.8" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.11%)</title><rect x="989.8" y="259.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="992.8" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (63 samples, 0.84%)</title><rect x="991.1" y="275.0" width="9.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="994.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (63 samples, 0.84%)</title><rect x="991.1" y="259.0" width="9.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="994.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (63 samples, 0.84%)</title><rect x="991.1" y="243.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="994.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (23 samples, 0.31%)</title><rect x="991.1" y="227.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="994.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (23 samples, 0.31%)</title><rect x="991.1" y="211.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="994.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (23 samples, 0.31%)</title><rect x="991.1" y="195.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="994.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (23 samples, 0.31%)</title><rect x="991.1" y="179.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="994.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="991.1" y="163.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="994.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="991.1" y="147.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="994.1" y="158.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (5 samples, 0.07%)</title><rect x="991.1" y="131.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="994.1" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (18 samples, 0.24%)</title><rect x="991.9" y="163.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="994.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (18 samples, 0.24%)</title><rect x="991.9" y="147.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="994.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (18 samples, 0.24%)</title><rect x="991.9" y="131.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="994.9" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.11%)</title><rect x="991.9" y="115.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="994.9" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.11%)</title><rect x="991.9" y="99.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="994.9" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (10 samples, 0.13%)</title><rect x="993.1" y="115.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="996.1" y="126.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (40 samples, 0.54%)</title><rect x="994.7" y="227.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="997.7" y="238.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (8 samples, 0.11%)</title><rect x="994.7" y="211.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="997.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.13%)</title><rect x="996.0" y="211.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="999.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.13%)</title><rect x="996.0" y="195.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="999.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$80/1156522076.get$Lambda (6 samples, 0.08%)</title><rect x="996.0" y="179.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="999.0" y="190.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$80 (6 samples, 0.08%)</title><rect x="996.0" y="163.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="999.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.get$Lambda (4 samples, 0.05%)</title><rect x="996.9" y="179.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="999.9" y="190.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$84 (4 samples, 0.05%)</title><rect x="996.9" y="163.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="999.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (7 samples, 0.09%)</title><rect x="997.6" y="211.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1000.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (7 samples, 0.09%)</title><rect x="997.6" y="195.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1000.6" y="206.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (7 samples, 0.09%)</title><rect x="997.6" y="179.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1000.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (15 samples, 0.20%)</title><rect x="998.7" y="211.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1001.7" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.20%)</title><rect x="998.7" y="195.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1001.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (5 samples, 0.07%)</title><rect x="1001.0" y="307.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1004.0" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (5 samples, 0.07%)</title><rect x="1001.0" y="291.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1004.0" y="302.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.08%)</title><rect x="1001.8" y="307.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1004.8" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1002.8" y="307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1005.8" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="1002.8" y="291.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1005.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (28 samples, 0.38%)</title><rect x="1003.1" y="307.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1006.1" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (5 samples, 0.07%)</title><rect x="1003.1" y="291.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1006.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (23 samples, 0.31%)</title><rect x="1003.9" y="291.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1006.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (23 samples, 0.31%)</title><rect x="1003.9" y="275.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1006.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (23 samples, 0.31%)</title><rect x="1003.9" y="259.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1006.9" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (23 samples, 0.31%)</title><rect x="1003.9" y="243.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1006.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (23 samples, 0.31%)</title><rect x="1003.9" y="227.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1006.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (23 samples, 0.31%)</title><rect x="1003.9" y="211.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1006.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (23 samples, 0.31%)</title><rect x="1003.9" y="195.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1006.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (23 samples, 0.31%)</title><rect x="1003.9" y="179.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1006.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (23 samples, 0.31%)</title><rect x="1003.9" y="163.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1006.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (23 samples, 0.31%)</title><rect x="1003.9" y="147.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1006.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (8 samples, 0.11%)</title><rect x="1003.9" y="131.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1006.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (8 samples, 0.11%)</title><rect x="1003.9" y="115.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1006.9" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (8 samples, 0.11%)</title><rect x="1003.9" y="99.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1006.9" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (15 samples, 0.20%)</title><rect x="1005.1" y="131.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1008.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (15 samples, 0.20%)</title><rect x="1005.1" y="115.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1008.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (15 samples, 0.20%)</title><rect x="1005.1" y="99.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1008.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (10 samples, 0.13%)</title><rect x="1005.1" y="83.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1008.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.13%)</title><rect x="1005.1" y="67.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1008.1" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (5 samples, 0.07%)</title><rect x="1006.7" y="83.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1009.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.iterator (70 samples, 0.94%)</title><rect x="1007.5" y="307.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1010.5" y="318.0"></text>
</g>
<g>
<title>java/util/Collection.stream (22 samples, 0.29%)</title><rect x="1007.5" y="291.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1010.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (6 samples, 0.08%)</title><rect x="1007.5" y="275.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1010.5" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (6 samples, 0.08%)</title><rect x="1007.5" y="259.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1010.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (16 samples, 0.21%)</title><rect x="1008.5" y="275.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1011.5" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (16 samples, 0.21%)</title><rect x="1008.5" y="259.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1011.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (2 samples, 0.03%)</title><rect x="1011.0" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1014.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (2 samples, 0.03%)</title><rect x="1011.0" y="275.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1014.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (15 samples, 0.20%)</title><rect x="1011.3" y="291.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1014.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (15 samples, 0.20%)</title><rect x="1011.3" y="275.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1014.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (15 samples, 0.20%)</title><rect x="1011.3" y="259.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1014.3" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (15 samples, 0.20%)</title><rect x="1011.3" y="243.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1014.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (13 samples, 0.17%)</title><rect x="1013.7" y="291.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1016.7" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (5 samples, 0.07%)</title><rect x="1013.7" y="275.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1016.7" y="286.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (5 samples, 0.07%)</title><rect x="1013.7" y="259.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1016.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (8 samples, 0.11%)</title><rect x="1014.5" y="275.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1017.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="1014.5" y="259.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1017.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="1014.5" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1017.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$76/107521092.get$Lambda (2 samples, 0.03%)</title><rect x="1014.5" y="227.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1017.5" y="238.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$76 (2 samples, 0.03%)</title><rect x="1014.5" y="211.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1017.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (6 samples, 0.08%)</title><rect x="1014.8" y="259.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1017.8" y="270.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (6 samples, 0.08%)</title><rect x="1014.8" y="243.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1017.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (18 samples, 0.24%)</title><rect x="1015.7" y="291.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1018.7" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (18 samples, 0.24%)</title><rect x="1015.7" y="275.0" width="2.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1018.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.getBytes (13 samples, 0.17%)</title><rect x="1018.6" y="339.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1021.6" y="350.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.17%)</title><rect x="1018.6" y="323.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1021.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.proxyIfNotLocal (109 samples, 1.46%)</title><rect x="1020.6" y="339.0" width="17.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1023.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (109 samples, 1.46%)</title><rect x="1020.6" y="323.0" width="17.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1023.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (109 samples, 1.46%)</title><rect x="1020.6" y="307.0" width="17.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1023.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="1020.6" y="291.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1023.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="1020.6" y="275.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1023.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.get$Lambda (3 samples, 0.04%)</title><rect x="1020.6" y="259.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1023.6" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.topologies.RendezvousTopology$$Lambda$68 (3 samples, 0.04%)</title><rect x="1020.6" y="243.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1023.6" y="254.0"></text>
</g>
<g>
<title>java/util/Collection.stream (22 samples, 0.29%)</title><rect x="1021.1" y="291.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1024.1" y="302.0"></text>
</g>
<g>
<title>java/util/TreeSet.spliterator (11 samples, 0.15%)</title><rect x="1021.1" y="275.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1024.1" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliteratorFor (11 samples, 0.15%)</title><rect x="1021.1" y="259.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1024.1" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliterator (11 samples, 0.15%)</title><rect x="1021.1" y="243.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1024.1" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySpliterator (11 samples, 0.15%)</title><rect x="1021.1" y="227.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1024.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (11 samples, 0.15%)</title><rect x="1022.9" y="275.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1025.9" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (11 samples, 0.15%)</title><rect x="1022.9" y="259.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1025.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (52 samples, 0.70%)</title><rect x="1024.6" y="291.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1027.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (52 samples, 0.70%)</title><rect x="1024.6" y="275.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1027.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (52 samples, 0.70%)</title><rect x="1024.6" y="259.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1027.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (48 samples, 0.64%)</title><rect x="1024.6" y="243.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1027.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (38 samples, 0.51%)</title><rect x="1024.6" y="227.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1027.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (38 samples, 0.51%)</title><rect x="1024.6" y="211.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1027.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (29 samples, 0.39%)</title><rect x="1024.6" y="195.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1027.6" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySpliterator.tryAdvance (29 samples, 0.39%)</title><rect x="1024.6" y="179.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1027.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (29 samples, 0.39%)</title><rect x="1024.6" y="163.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1027.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.apply (29 samples, 0.39%)</title><rect x="1024.6" y="147.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1027.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.lambda$primaryFor$0 (29 samples, 0.39%)</title><rect x="1024.6" y="131.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1027.6" y="142.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (12 samples, 0.16%)</title><rect x="1024.6" y="115.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1027.6" y="126.0"></text>
</g>
<g>
<title>java.lang.Integer (12 samples, 0.16%)</title><rect x="1024.6" y="99.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1027.6" y="110.0"></text>
</g>
<g>
<title>java/util/Map.entry (17 samples, 0.23%)</title><rect x="1026.5" y="115.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1029.5" y="126.0"></text>
</g>
<g>
<title>java.util.KeyValueHolder (17 samples, 0.23%)</title><rect x="1026.5" y="99.0" width="2.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1029.5" y="110.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (9 samples, 0.12%)</title><rect x="1029.2" y="195.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1032.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$SizedRefSortingSink.begin (9 samples, 0.12%)</title><rect x="1029.2" y="179.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1032.2" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.12%)</title><rect x="1029.2" y="163.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1032.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (10 samples, 0.13%)</title><rect x="1030.6" y="227.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1033.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (3 samples, 0.04%)</title><rect x="1030.6" y="211.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1033.6" y="222.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (3 samples, 0.04%)</title><rect x="1030.6" y="195.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1033.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$OfRef.opWrapSink (7 samples, 0.09%)</title><rect x="1031.1" y="211.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1034.1" y="222.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$SizedRefSortingSink (7 samples, 0.09%)</title><rect x="1031.1" y="195.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1034.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/447981768.get (4 samples, 0.05%)</title><rect x="1032.2" y="243.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1035.2" y="254.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (4 samples, 0.05%)</title><rect x="1032.2" y="227.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1035.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (12 samples, 0.16%)</title><rect x="1032.8" y="291.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1035.8" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (12 samples, 0.16%)</title><rect x="1032.8" y="275.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1035.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.sorted (20 samples, 0.27%)</title><rect x="1034.7" y="291.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1037.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps.makeRef (20 samples, 0.27%)</title><rect x="1034.7" y="275.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1037.7" y="286.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$OfRef (20 samples, 0.27%)</title><rect x="1034.7" y="259.0" width="3.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1037.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.sendAnswerOrError (25 samples, 0.34%)</title><rect x="1037.9" y="339.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1040.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (25 samples, 0.34%)</title><rect x="1037.9" y="323.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1040.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (25 samples, 0.34%)</title><rect x="1037.9" y="307.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1040.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (17 samples, 0.23%)</title><rect x="1037.9" y="291.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1040.9" y="302.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (17 samples, 0.23%)</title><rect x="1037.9" y="275.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1040.9" y="286.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.23%)</title><rect x="1037.9" y="259.0" width="2.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1040.9" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.11%)</title><rect x="1040.6" y="291.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1043.6" y="302.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (8 samples, 0.11%)</title><rect x="1040.6" y="275.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1043.6" y="286.0"></text>
</g>
<g>
<title>[worker-6 tid=24973] (471 samples, 6.31%)</title><rect x="1041.8" y="435.0" width="74.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1044.8" y="446.0">[worker-..</text>
</g>
<g>
<title>java/lang/Thread.run (471 samples, 6.31%)</title><rect x="1041.8" y="419.0" width="74.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1044.8" y="430.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (471 samples, 6.31%)</title><rect x="1041.8" y="403.0" width="74.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1044.8" y="414.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (471 samples, 6.31%)</title><rect x="1041.8" y="387.0" width="74.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1044.8" y="398.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (11 samples, 0.15%)</title><rect x="1041.8" y="371.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1044.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (11 samples, 0.15%)</title><rect x="1041.8" y="355.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1044.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (10 samples, 0.13%)</title><rect x="1041.8" y="339.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1044.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (10 samples, 0.13%)</title><rect x="1041.8" y="323.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1044.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (10 samples, 0.13%)</title><rect x="1041.8" y="307.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1044.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$73/1075842738.run (460 samples, 6.16%)</title><rect x="1043.6" y="371.0" width="72.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1046.6" y="382.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityGet$2 (460 samples, 6.16%)</title><rect x="1043.6" y="355.0" width="72.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1046.6" y="366.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (14 samples, 0.19%)</title><rect x="1043.6" y="339.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1046.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (14 samples, 0.19%)</title><rect x="1043.6" y="323.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1046.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (14 samples, 0.19%)</title><rect x="1043.6" y="307.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1046.6" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.19%)</title><rect x="1043.6" y="291.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1046.6" y="302.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.19%)</title><rect x="1043.6" y="275.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1046.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.20%)</title><rect x="1045.8" y="339.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1048.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.20%)</title><rect x="1045.8" y="323.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.8" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.20%)</title><rect x="1045.8" y="307.0" width="2.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1048.8" y="318.0"></text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.08%)</title><rect x="1048.2" y="339.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1051.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (23 samples, 0.31%)</title><rect x="1049.1" y="339.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1052.1" y="350.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.13%)</title><rect x="1049.1" y="323.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1052.1" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.09%)</title><rect x="1050.7" y="323.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1053.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.08%)</title><rect x="1051.8" y="323.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1054.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (270 samples, 3.62%)</title><rect x="1052.7" y="339.0" width="42.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1055.7" y="350.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (24 samples, 0.32%)</title><rect x="1052.7" y="323.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1055.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (24 samples, 0.32%)</title><rect x="1052.7" y="307.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1055.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (24 samples, 0.32%)</title><rect x="1052.7" y="291.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1055.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (24 samples, 0.32%)</title><rect x="1052.7" y="275.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1055.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (24 samples, 0.32%)</title><rect x="1052.7" y="259.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1055.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (24 samples, 0.32%)</title><rect x="1052.7" y="243.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1055.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (24 samples, 0.32%)</title><rect x="1052.7" y="227.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1055.7" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (24 samples, 0.32%)</title><rect x="1052.7" y="211.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1055.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (24 samples, 0.32%)</title><rect x="1052.7" y="195.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1055.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (24 samples, 0.32%)</title><rect x="1052.7" y="179.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1055.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (24 samples, 0.32%)</title><rect x="1052.7" y="163.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1055.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (24 samples, 0.32%)</title><rect x="1052.7" y="147.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1055.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (24 samples, 0.32%)</title><rect x="1052.7" y="131.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1055.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (24 samples, 0.32%)</title><rect x="1052.7" y="115.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1055.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.09%)</title><rect x="1052.7" y="99.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1055.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.09%)</title><rect x="1052.7" y="83.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1055.7" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (7 samples, 0.09%)</title><rect x="1052.7" y="67.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1055.7" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (17 samples, 0.23%)</title><rect x="1053.8" y="99.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1056.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (17 samples, 0.23%)</title><rect x="1053.8" y="83.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1056.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (17 samples, 0.23%)</title><rect x="1053.8" y="67.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1056.8" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.09%)</title><rect x="1053.8" y="51.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1056.8" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.09%)</title><rect x="1053.8" y="35.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1056.8" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (10 samples, 0.13%)</title><rect x="1055.0" y="51.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1058.0" y="62.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (25 samples, 0.34%)</title><rect x="1056.5" y="323.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1059.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (25 samples, 0.34%)</title><rect x="1056.5" y="307.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1059.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl$$Lambda$98/728161732.apply (25 samples, 0.34%)</title><rect x="1056.5" y="291.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1059.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.lambda$iterator$2 (25 samples, 0.34%)</title><rect x="1056.5" y="275.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1059.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (16 samples, 0.21%)</title><rect x="1056.5" y="259.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1059.5" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (16 samples, 0.21%)</title><rect x="1056.5" y="243.0" width="2.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1059.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (9 samples, 0.12%)</title><rect x="1059.1" y="259.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1062.1" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.12%)</title><rect x="1059.1" y="243.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1062.1" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.12%)</title><rect x="1059.1" y="227.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1062.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (11 samples, 0.15%)</title><rect x="1060.5" y="323.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1063.5" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (11 samples, 0.15%)</title><rect x="1060.5" y="307.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1063.5" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.15%)</title><rect x="1060.5" y="291.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1063.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.iterator (210 samples, 2.81%)</title><rect x="1062.2" y="323.0" width="33.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1065.2" y="334.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (5 samples, 0.07%)</title><rect x="1062.2" y="307.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1065.2" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (5 samples, 0.07%)</title><rect x="1062.2" y="291.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1065.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (91 samples, 1.22%)</title><rect x="1063.0" y="307.0" width="14.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1066.0" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (5 samples, 0.07%)</title><rect x="1063.0" y="291.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1066.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (86 samples, 1.15%)</title><rect x="1063.8" y="291.0" width="13.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1066.8" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.04%)</title><rect x="1063.8" y="275.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1066.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.07%)</title><rect x="1064.3" y="275.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1067.3" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (5 samples, 0.07%)</title><rect x="1064.3" y="259.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1067.3" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (11 samples, 0.15%)</title><rect x="1065.1" y="275.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1068.1" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.07%)</title><rect x="1066.8" y="275.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1069.8" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="1066.8" y="259.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1069.8" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (62 samples, 0.83%)</title><rect x="1067.6" y="275.0" width="9.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1070.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (62 samples, 0.83%)</title><rect x="1067.6" y="259.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1070.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (62 samples, 0.83%)</title><rect x="1067.6" y="243.0" width="9.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1070.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (20 samples, 0.27%)</title><rect x="1067.6" y="227.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1070.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (20 samples, 0.27%)</title><rect x="1067.6" y="211.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1070.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (20 samples, 0.27%)</title><rect x="1067.6" y="195.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1070.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (20 samples, 0.27%)</title><rect x="1067.6" y="179.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1070.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="1067.6" y="163.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1070.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="1067.6" y="147.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1070.6" y="158.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (6 samples, 0.08%)</title><rect x="1067.6" y="131.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1070.6" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (14 samples, 0.19%)</title><rect x="1068.6" y="163.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1071.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (14 samples, 0.19%)</title><rect x="1068.6" y="147.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1071.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (14 samples, 0.19%)</title><rect x="1068.6" y="131.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1071.6" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.15%)</title><rect x="1068.6" y="115.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1071.6" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.15%)</title><rect x="1068.6" y="99.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1071.6" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (3 samples, 0.04%)</title><rect x="1070.3" y="115.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1073.3" y="126.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (42 samples, 0.56%)</title><rect x="1070.8" y="227.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1073.8" y="238.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (5 samples, 0.07%)</title><rect x="1070.8" y="211.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1073.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.12%)</title><rect x="1071.6" y="211.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1074.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.12%)</title><rect x="1071.6" y="195.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1074.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$80/1156522076.get$Lambda (4 samples, 0.05%)</title><rect x="1071.6" y="179.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1074.6" y="190.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$80 (4 samples, 0.05%)</title><rect x="1071.6" y="163.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1074.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.get$Lambda (5 samples, 0.07%)</title><rect x="1072.2" y="179.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1075.2" y="190.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$84 (5 samples, 0.07%)</title><rect x="1072.2" y="163.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1075.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (6 samples, 0.08%)</title><rect x="1073.0" y="211.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1076.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (6 samples, 0.08%)</title><rect x="1073.0" y="195.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1076.0" y="206.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (6 samples, 0.08%)</title><rect x="1073.0" y="179.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1076.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (22 samples, 0.29%)</title><rect x="1073.9" y="211.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1076.9" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.29%)</title><rect x="1073.9" y="195.0" width="3.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1076.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (4 samples, 0.05%)</title><rect x="1077.4" y="307.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1080.4" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (4 samples, 0.05%)</title><rect x="1077.4" y="291.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1080.4" y="302.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.09%)</title><rect x="1078.0" y="307.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1081.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (27 samples, 0.36%)</title><rect x="1079.3" y="307.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1082.3" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.04%)</title><rect x="1079.3" y="291.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1082.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (24 samples, 0.32%)</title><rect x="1079.8" y="291.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1082.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (24 samples, 0.32%)</title><rect x="1079.8" y="275.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1082.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (24 samples, 0.32%)</title><rect x="1079.8" y="259.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1082.8" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (24 samples, 0.32%)</title><rect x="1079.8" y="243.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1082.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (24 samples, 0.32%)</title><rect x="1079.8" y="227.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1082.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (24 samples, 0.32%)</title><rect x="1079.8" y="211.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1082.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (24 samples, 0.32%)</title><rect x="1079.8" y="195.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1082.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (24 samples, 0.32%)</title><rect x="1079.8" y="179.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1082.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (24 samples, 0.32%)</title><rect x="1079.8" y="163.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1082.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (24 samples, 0.32%)</title><rect x="1079.8" y="147.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1082.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="1079.8" y="131.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1082.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="1079.8" y="115.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1082.8" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (6 samples, 0.08%)</title><rect x="1079.8" y="99.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1082.8" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (18 samples, 0.24%)</title><rect x="1080.7" y="131.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1083.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (18 samples, 0.24%)</title><rect x="1080.7" y="115.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1083.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (18 samples, 0.24%)</title><rect x="1080.7" y="99.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1083.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.19%)</title><rect x="1080.7" y="83.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1083.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.19%)</title><rect x="1080.7" y="67.0" width="2.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1083.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (4 samples, 0.05%)</title><rect x="1082.9" y="83.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1085.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.iterator (75 samples, 1.01%)</title><rect x="1083.6" y="307.0" width="11.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1086.6" y="318.0"></text>
</g>
<g>
<title>java/util/Collection.stream (19 samples, 0.25%)</title><rect x="1083.6" y="291.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1086.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (11 samples, 0.15%)</title><rect x="1083.6" y="275.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1086.6" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (11 samples, 0.15%)</title><rect x="1083.6" y="259.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1086.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (8 samples, 0.11%)</title><rect x="1085.3" y="275.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1088.3" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (8 samples, 0.11%)</title><rect x="1085.3" y="259.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1088.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (2 samples, 0.03%)</title><rect x="1086.6" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1089.6" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (2 samples, 0.03%)</title><rect x="1086.6" y="275.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1089.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (13 samples, 0.17%)</title><rect x="1086.9" y="291.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1089.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (13 samples, 0.17%)</title><rect x="1086.9" y="275.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1089.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (13 samples, 0.17%)</title><rect x="1086.9" y="259.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1089.9" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (13 samples, 0.17%)</title><rect x="1086.9" y="243.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1089.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (30 samples, 0.40%)</title><rect x="1089.0" y="291.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1092.0" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (5 samples, 0.07%)</title><rect x="1089.0" y="275.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1092.0" y="286.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (5 samples, 0.07%)</title><rect x="1089.0" y="259.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1092.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (25 samples, 0.34%)</title><rect x="1089.7" y="275.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1092.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.15%)</title><rect x="1089.7" y="259.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1092.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.15%)</title><rect x="1089.7" y="243.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1092.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$76/107521092.get$Lambda (11 samples, 0.15%)</title><rect x="1089.7" y="227.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1092.7" y="238.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$76 (11 samples, 0.15%)</title><rect x="1089.7" y="211.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1092.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (14 samples, 0.19%)</title><rect x="1091.5" y="259.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1094.5" y="270.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (14 samples, 0.19%)</title><rect x="1091.5" y="243.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1094.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (11 samples, 0.15%)</title><rect x="1093.7" y="291.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1096.7" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (11 samples, 0.15%)</title><rect x="1093.7" y="275.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1096.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.getBytes (11 samples, 0.15%)</title><rect x="1095.4" y="339.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1098.4" y="350.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.15%)</title><rect x="1095.4" y="323.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1098.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.proxyIfNotLocal (99 samples, 1.33%)</title><rect x="1097.2" y="339.0" width="15.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1100.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (99 samples, 1.33%)</title><rect x="1097.2" y="323.0" width="15.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1100.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (99 samples, 1.33%)</title><rect x="1097.2" y="307.0" width="15.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1100.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="1097.2" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1100.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="1097.2" y="275.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1100.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.get$Lambda (2 samples, 0.03%)</title><rect x="1097.2" y="259.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1100.2" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.topologies.RendezvousTopology$$Lambda$68 (2 samples, 0.03%)</title><rect x="1097.2" y="243.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1100.2" y="254.0"></text>
</g>
<g>
<title>java/util/Collection.stream (21 samples, 0.28%)</title><rect x="1097.5" y="291.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1100.5" y="302.0"></text>
</g>
<g>
<title>java/util/TreeSet.spliterator (6 samples, 0.08%)</title><rect x="1097.5" y="275.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1100.5" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliteratorFor (6 samples, 0.08%)</title><rect x="1097.5" y="259.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1100.5" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliterator (6 samples, 0.08%)</title><rect x="1097.5" y="243.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1100.5" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySpliterator (6 samples, 0.08%)</title><rect x="1097.5" y="227.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1100.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (15 samples, 0.20%)</title><rect x="1098.4" y="275.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1101.4" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (15 samples, 0.20%)</title><rect x="1098.4" y="259.0" width="2.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1101.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (47 samples, 0.63%)</title><rect x="1100.8" y="291.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1103.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (47 samples, 0.63%)</title><rect x="1100.8" y="275.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1103.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (47 samples, 0.63%)</title><rect x="1100.8" y="259.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1103.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (40 samples, 0.54%)</title><rect x="1100.8" y="243.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1103.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (27 samples, 0.36%)</title><rect x="1100.8" y="227.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1103.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (27 samples, 0.36%)</title><rect x="1100.8" y="211.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1103.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (23 samples, 0.31%)</title><rect x="1100.8" y="195.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1103.8" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySpliterator.tryAdvance (23 samples, 0.31%)</title><rect x="1100.8" y="179.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1103.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (23 samples, 0.31%)</title><rect x="1100.8" y="163.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1103.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.apply (23 samples, 0.31%)</title><rect x="1100.8" y="147.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1103.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.lambda$primaryFor$0 (23 samples, 0.31%)</title><rect x="1100.8" y="131.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1103.8" y="142.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (12 samples, 0.16%)</title><rect x="1100.8" y="115.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1103.8" y="126.0"></text>
</g>
<g>
<title>java.lang.Integer (12 samples, 0.16%)</title><rect x="1100.8" y="99.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1103.8" y="110.0"></text>
</g>
<g>
<title>java/util/Map.entry (11 samples, 0.15%)</title><rect x="1102.7" y="115.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1105.7" y="126.0"></text>
</g>
<g>
<title>java.util.KeyValueHolder (11 samples, 0.15%)</title><rect x="1102.7" y="99.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1105.7" y="110.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (4 samples, 0.05%)</title><rect x="1104.4" y="195.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1107.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$SizedRefSortingSink.begin (4 samples, 0.05%)</title><rect x="1104.4" y="179.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1107.4" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.05%)</title><rect x="1104.4" y="163.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1107.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (13 samples, 0.17%)</title><rect x="1105.1" y="227.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1108.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (4 samples, 0.05%)</title><rect x="1105.1" y="211.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1108.1" y="222.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (4 samples, 0.05%)</title><rect x="1105.1" y="195.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1108.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$OfRef.opWrapSink (9 samples, 0.12%)</title><rect x="1105.7" y="211.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1108.7" y="222.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$SizedRefSortingSink (9 samples, 0.12%)</title><rect x="1105.7" y="195.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1108.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/447981768.get (7 samples, 0.09%)</title><rect x="1107.1" y="243.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1110.1" y="254.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (7 samples, 0.09%)</title><rect x="1107.1" y="227.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1110.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (16 samples, 0.21%)</title><rect x="1108.2" y="291.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1111.2" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (16 samples, 0.21%)</title><rect x="1108.2" y="275.0" width="2.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1111.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.sorted (13 samples, 0.17%)</title><rect x="1110.8" y="291.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1113.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps.makeRef (13 samples, 0.17%)</title><rect x="1110.8" y="275.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1113.8" y="286.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$OfRef (13 samples, 0.17%)</title><rect x="1110.8" y="259.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1113.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.sendAnswerOrError (22 samples, 0.29%)</title><rect x="1112.8" y="339.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1115.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (22 samples, 0.29%)</title><rect x="1112.8" y="323.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1115.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (22 samples, 0.29%)</title><rect x="1112.8" y="307.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1115.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.19%)</title><rect x="1112.8" y="291.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1115.8" y="302.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (14 samples, 0.19%)</title><rect x="1112.8" y="275.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1115.8" y="286.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.19%)</title><rect x="1112.8" y="259.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1115.8" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.11%)</title><rect x="1115.0" y="291.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1118.0" y="302.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (8 samples, 0.11%)</title><rect x="1115.0" y="275.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1118.0" y="286.0"></text>
</g>
<g>
<title>[worker-7 tid=24974] (466 samples, 6.24%)</title><rect x="1116.3" y="435.0" width="73.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1119.3" y="446.0">[worker-..</text>
</g>
<g>
<title>java/lang/Thread.run (466 samples, 6.24%)</title><rect x="1116.3" y="419.0" width="73.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.3" y="430.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (466 samples, 6.24%)</title><rect x="1116.3" y="403.0" width="73.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1119.3" y="414.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (466 samples, 6.24%)</title><rect x="1116.3" y="387.0" width="73.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1119.3" y="398.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (14 samples, 0.19%)</title><rect x="1116.3" y="371.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1119.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (14 samples, 0.19%)</title><rect x="1116.3" y="355.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1119.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 0.19%)</title><rect x="1116.3" y="339.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1119.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (14 samples, 0.19%)</title><rect x="1116.3" y="323.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1119.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (14 samples, 0.19%)</title><rect x="1116.3" y="307.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1119.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$73/1075842738.run (452 samples, 6.06%)</title><rect x="1118.5" y="371.0" width="71.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1121.5" y="382.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityGet$2 (452 samples, 6.06%)</title><rect x="1118.5" y="355.0" width="71.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1121.5" y="366.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (12 samples, 0.16%)</title><rect x="1118.5" y="339.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1121.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (12 samples, 0.16%)</title><rect x="1118.5" y="323.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1121.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (12 samples, 0.16%)</title><rect x="1118.5" y="307.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1121.5" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.16%)</title><rect x="1118.5" y="291.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1121.5" y="302.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.16%)</title><rect x="1118.5" y="275.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1121.5" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.12%)</title><rect x="1120.4" y="339.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1123.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.12%)</title><rect x="1120.4" y="323.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1123.4" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.12%)</title><rect x="1120.4" y="307.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1123.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (22 samples, 0.29%)</title><rect x="1122.0" y="339.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1125.0" y="350.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.16%)</title><rect x="1122.0" y="323.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1125.0" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.09%)</title><rect x="1123.9" y="323.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1126.9" y="334.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="1125.0" y="323.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1128.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (261 samples, 3.50%)</title><rect x="1125.5" y="339.0" width="41.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1128.5" y="350.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (23 samples, 0.31%)</title><rect x="1125.5" y="323.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (23 samples, 0.31%)</title><rect x="1125.5" y="307.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1128.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (23 samples, 0.31%)</title><rect x="1125.5" y="291.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1128.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (23 samples, 0.31%)</title><rect x="1125.5" y="275.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1128.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (23 samples, 0.31%)</title><rect x="1125.5" y="259.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (23 samples, 0.31%)</title><rect x="1125.5" y="243.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (23 samples, 0.31%)</title><rect x="1125.5" y="227.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1128.5" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (23 samples, 0.31%)</title><rect x="1125.5" y="211.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1128.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (23 samples, 0.31%)</title><rect x="1125.5" y="195.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1128.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (23 samples, 0.31%)</title><rect x="1125.5" y="179.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1128.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (23 samples, 0.31%)</title><rect x="1125.5" y="163.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1128.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (23 samples, 0.31%)</title><rect x="1125.5" y="147.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1128.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (23 samples, 0.31%)</title><rect x="1125.5" y="131.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1128.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (23 samples, 0.31%)</title><rect x="1125.5" y="115.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1128.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="1125.5" y="99.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1128.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="1125.5" y="83.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1128.5" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (6 samples, 0.08%)</title><rect x="1125.5" y="67.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1128.5" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (17 samples, 0.23%)</title><rect x="1126.4" y="99.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (17 samples, 0.23%)</title><rect x="1126.4" y="83.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1129.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (17 samples, 0.23%)</title><rect x="1126.4" y="67.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (13 samples, 0.17%)</title><rect x="1126.4" y="51.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1129.4" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.17%)</title><rect x="1126.4" y="35.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1129.4" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (4 samples, 0.05%)</title><rect x="1128.5" y="51.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1131.5" y="62.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (20 samples, 0.27%)</title><rect x="1129.1" y="323.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1132.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (20 samples, 0.27%)</title><rect x="1129.1" y="307.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1132.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl$$Lambda$98/728161732.apply (20 samples, 0.27%)</title><rect x="1129.1" y="291.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1132.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.lambda$iterator$2 (20 samples, 0.27%)</title><rect x="1129.1" y="275.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1132.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (6 samples, 0.08%)</title><rect x="1129.1" y="259.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1132.1" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (6 samples, 0.08%)</title><rect x="1129.1" y="243.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1132.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (14 samples, 0.19%)</title><rect x="1130.1" y="259.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1133.1" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.19%)</title><rect x="1130.1" y="243.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1133.1" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.19%)</title><rect x="1130.1" y="227.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1133.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (10 samples, 0.13%)</title><rect x="1132.3" y="323.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1135.3" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.13%)</title><rect x="1132.3" y="307.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1135.3" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.13%)</title><rect x="1132.3" y="291.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1135.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.iterator (208 samples, 2.79%)</title><rect x="1133.9" y="323.0" width="32.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.9" y="334.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (14 samples, 0.19%)</title><rect x="1133.9" y="307.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1136.9" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (14 samples, 0.19%)</title><rect x="1133.9" y="291.0" width="2.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1136.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (83 samples, 1.11%)</title><rect x="1136.1" y="307.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1139.1" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (3 samples, 0.04%)</title><rect x="1136.1" y="291.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1139.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (80 samples, 1.07%)</title><rect x="1136.6" y="291.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1139.6" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (4 samples, 0.05%)</title><rect x="1136.6" y="275.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1139.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.05%)</title><rect x="1137.2" y="275.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1140.2" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (4 samples, 0.05%)</title><rect x="1137.2" y="259.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1140.2" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (9 samples, 0.12%)</title><rect x="1137.8" y="275.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1140.8" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1139.2" y="275.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1142.2" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.05%)</title><rect x="1139.2" y="259.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1142.2" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (59 samples, 0.79%)</title><rect x="1139.9" y="275.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1142.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (59 samples, 0.79%)</title><rect x="1139.9" y="259.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1142.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (59 samples, 0.79%)</title><rect x="1139.9" y="243.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1142.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (29 samples, 0.39%)</title><rect x="1139.9" y="227.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1142.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (29 samples, 0.39%)</title><rect x="1139.9" y="211.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1142.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (29 samples, 0.39%)</title><rect x="1139.9" y="195.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1142.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (29 samples, 0.39%)</title><rect x="1139.9" y="179.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1142.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (10 samples, 0.13%)</title><rect x="1139.9" y="163.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1142.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (10 samples, 0.13%)</title><rect x="1139.9" y="147.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.9" y="158.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (10 samples, 0.13%)</title><rect x="1139.9" y="131.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1142.9" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (19 samples, 0.25%)</title><rect x="1141.5" y="163.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1144.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (19 samples, 0.25%)</title><rect x="1141.5" y="147.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1144.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (19 samples, 0.25%)</title><rect x="1141.5" y="131.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1144.5" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.11%)</title><rect x="1141.5" y="115.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1144.5" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.11%)</title><rect x="1141.5" y="99.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1144.5" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (11 samples, 0.15%)</title><rect x="1142.7" y="115.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1145.7" y="126.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (30 samples, 0.40%)</title><rect x="1144.5" y="227.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1147.5" y="238.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (5 samples, 0.07%)</title><rect x="1144.5" y="211.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1147.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="1145.2" y="211.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1148.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="1145.2" y="195.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1148.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.get$Lambda (3 samples, 0.04%)</title><rect x="1145.2" y="179.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1148.2" y="190.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$84 (3 samples, 0.04%)</title><rect x="1145.2" y="163.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1148.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (4 samples, 0.05%)</title><rect x="1145.7" y="211.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1148.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (4 samples, 0.05%)</title><rect x="1145.7" y="195.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1148.7" y="206.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (4 samples, 0.05%)</title><rect x="1145.7" y="179.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1148.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (18 samples, 0.24%)</title><rect x="1146.4" y="211.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1149.4" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (18 samples, 0.24%)</title><rect x="1146.4" y="195.0" width="2.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1149.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (3 samples, 0.04%)</title><rect x="1149.2" y="307.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1152.2" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (3 samples, 0.04%)</title><rect x="1149.2" y="291.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1152.2" y="302.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.04%)</title><rect x="1149.7" y="307.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1152.7" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1150.2" y="307.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1153.2" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.04%)</title><rect x="1150.2" y="291.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1153.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (28 samples, 0.38%)</title><rect x="1150.6" y="307.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1153.6" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (6 samples, 0.08%)</title><rect x="1150.6" y="291.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1153.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (22 samples, 0.29%)</title><rect x="1151.6" y="291.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1154.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (22 samples, 0.29%)</title><rect x="1151.6" y="275.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1154.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (22 samples, 0.29%)</title><rect x="1151.6" y="259.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1154.6" y="270.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (22 samples, 0.29%)</title><rect x="1151.6" y="243.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1154.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (22 samples, 0.29%)</title><rect x="1151.6" y="227.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1154.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (22 samples, 0.29%)</title><rect x="1151.6" y="211.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1154.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (22 samples, 0.29%)</title><rect x="1151.6" y="195.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1154.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$84/1299924647.getAsBoolean (22 samples, 0.29%)</title><rect x="1151.6" y="179.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1154.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (22 samples, 0.29%)</title><rect x="1151.6" y="163.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1154.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (22 samples, 0.29%)</title><rect x="1151.6" y="147.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1154.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="1151.6" y="131.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1154.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="1151.6" y="115.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1154.6" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (5 samples, 0.07%)</title><rect x="1151.6" y="99.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1154.6" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (17 samples, 0.23%)</title><rect x="1152.4" y="131.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1155.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$74/342089506.apply (17 samples, 0.23%)</title><rect x="1152.4" y="115.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1155.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (17 samples, 0.23%)</title><rect x="1152.4" y="99.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1155.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.12%)</title><rect x="1152.4" y="83.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1155.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.12%)</title><rect x="1152.4" y="67.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1155.4" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Cell (8 samples, 0.11%)</title><rect x="1153.8" y="83.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1156.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.iterator (74 samples, 0.99%)</title><rect x="1155.1" y="307.0" width="11.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1158.1" y="318.0"></text>
</g>
<g>
<title>java/util/Collection.stream (25 samples, 0.34%)</title><rect x="1155.1" y="291.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1158.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (9 samples, 0.12%)</title><rect x="1155.1" y="275.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1158.1" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (9 samples, 0.12%)</title><rect x="1155.1" y="259.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1158.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (16 samples, 0.21%)</title><rect x="1156.5" y="275.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1159.5" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (16 samples, 0.21%)</title><rect x="1156.5" y="259.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1159.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (12 samples, 0.16%)</title><rect x="1159.2" y="291.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1162.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (12 samples, 0.16%)</title><rect x="1159.2" y="275.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1162.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (12 samples, 0.16%)</title><rect x="1159.2" y="259.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1162.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (12 samples, 0.16%)</title><rect x="1159.2" y="243.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1162.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (22 samples, 0.29%)</title><rect x="1161.1" y="291.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1164.1" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (6 samples, 0.08%)</title><rect x="1161.1" y="275.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1164.1" y="286.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (6 samples, 0.08%)</title><rect x="1161.1" y="259.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1164.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (16 samples, 0.21%)</title><rect x="1162.0" y="275.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1165.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (16 samples, 0.21%)</title><rect x="1162.0" y="259.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1165.0" y="270.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (16 samples, 0.21%)</title><rect x="1162.0" y="243.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1165.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (14 samples, 0.19%)</title><rect x="1164.5" y="291.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1167.5" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (14 samples, 0.19%)</title><rect x="1164.5" y="275.0" width="2.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1167.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.getBytes (8 samples, 0.11%)</title><rect x="1166.8" y="339.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1169.8" y="350.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.11%)</title><rect x="1166.8" y="323.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1169.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.proxyIfNotLocal (107 samples, 1.43%)</title><rect x="1168.0" y="339.0" width="16.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1171.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (107 samples, 1.43%)</title><rect x="1168.0" y="323.0" width="16.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1171.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (107 samples, 1.43%)</title><rect x="1168.0" y="307.0" width="16.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1171.0" y="318.0"></text>
</g>
<g>
<title>java/util/Collection.stream (24 samples, 0.32%)</title><rect x="1168.2" y="291.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1171.2" y="302.0"></text>
</g>
<g>
<title>java/util/TreeSet.spliterator (6 samples, 0.08%)</title><rect x="1168.2" y="275.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1171.2" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliteratorFor (6 samples, 0.08%)</title><rect x="1168.2" y="259.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1171.2" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliterator (6 samples, 0.08%)</title><rect x="1168.2" y="243.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1171.2" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySpliterator (6 samples, 0.08%)</title><rect x="1168.2" y="227.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1171.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (18 samples, 0.24%)</title><rect x="1169.1" y="275.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1172.1" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (18 samples, 0.24%)</title><rect x="1169.1" y="259.0" width="2.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1172.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (48 samples, 0.64%)</title><rect x="1172.0" y="291.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1175.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (48 samples, 0.64%)</title><rect x="1172.0" y="275.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1175.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (48 samples, 0.64%)</title><rect x="1172.0" y="259.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1175.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (47 samples, 0.63%)</title><rect x="1172.0" y="243.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1175.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (30 samples, 0.40%)</title><rect x="1172.0" y="227.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1175.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (30 samples, 0.40%)</title><rect x="1172.0" y="211.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1175.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (27 samples, 0.36%)</title><rect x="1172.0" y="195.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1175.0" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySpliterator.tryAdvance (27 samples, 0.36%)</title><rect x="1172.0" y="179.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1175.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (27 samples, 0.36%)</title><rect x="1172.0" y="163.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1175.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.apply (27 samples, 0.36%)</title><rect x="1172.0" y="147.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1175.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.lambda$primaryFor$0 (27 samples, 0.36%)</title><rect x="1172.0" y="131.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1175.0" y="142.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (11 samples, 0.15%)</title><rect x="1172.0" y="115.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1175.0" y="126.0"></text>
</g>
<g>
<title>java.lang.Integer (11 samples, 0.15%)</title><rect x="1172.0" y="99.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1175.0" y="110.0"></text>
</g>
<g>
<title>java/util/Map.entry (16 samples, 0.21%)</title><rect x="1173.7" y="115.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1176.7" y="126.0"></text>
</g>
<g>
<title>java.util.KeyValueHolder (16 samples, 0.21%)</title><rect x="1173.7" y="99.0" width="2.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1176.7" y="110.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (3 samples, 0.04%)</title><rect x="1176.2" y="195.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1179.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$SizedRefSortingSink.begin (3 samples, 0.04%)</title><rect x="1176.2" y="179.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1179.2" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.04%)</title><rect x="1176.2" y="163.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1179.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (17 samples, 0.23%)</title><rect x="1176.7" y="227.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1179.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (7 samples, 0.09%)</title><rect x="1176.7" y="211.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1179.7" y="222.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (7 samples, 0.09%)</title><rect x="1176.7" y="195.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1179.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$OfRef.opWrapSink (10 samples, 0.13%)</title><rect x="1177.8" y="211.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1180.8" y="222.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$SizedRefSortingSink (10 samples, 0.13%)</title><rect x="1177.8" y="195.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1180.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (18 samples, 0.24%)</title><rect x="1179.6" y="291.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1182.6" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (18 samples, 0.24%)</title><rect x="1179.6" y="275.0" width="2.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1182.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.sorted (16 samples, 0.21%)</title><rect x="1182.4" y="291.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1185.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps.makeRef (16 samples, 0.21%)</title><rect x="1182.4" y="275.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1185.4" y="286.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$OfRef (16 samples, 0.21%)</title><rect x="1182.4" y="259.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1185.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.sendAnswerOrError (32 samples, 0.43%)</title><rect x="1184.9" y="339.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1187.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (32 samples, 0.43%)</title><rect x="1184.9" y="323.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1187.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (32 samples, 0.43%)</title><rect x="1184.9" y="307.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1187.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (23 samples, 0.31%)</title><rect x="1184.9" y="291.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1187.9" y="302.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (23 samples, 0.31%)</title><rect x="1184.9" y="275.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1187.9" y="286.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.31%)</title><rect x="1184.9" y="259.0" width="3.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1187.9" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 0.12%)</title><rect x="1188.6" y="291.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1191.6" y="302.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (9 samples, 0.12%)</title><rect x="1188.6" y="275.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1191.6" y="286.0"></text>
</g>
</g>
</svg>
