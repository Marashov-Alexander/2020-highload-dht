<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="501"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="501"> </text>
<g id="frames">
<g>
<title>all (229,718 samples, 100.00%)</title><rect x="10.0" y="467.0" width="1180.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="13.0" y="478.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (228,881 samples, 99.64%)</title><rect x="10.0" y="451.0" width="1175.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="462.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (228,881 samples, 99.64%)</title><rect x="10.0" y="435.0" width="1175.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="446.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (228,881 samples, 99.64%)</title><rect x="10.0" y="419.0" width="1175.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="430.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,110 samples, 0.48%)</title><rect x="10.0" y="403.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,110 samples, 0.48%)</title><rect x="10.0" y="387.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (912 samples, 0.40%)</title><rect x="10.0" y="371.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (912 samples, 0.40%)</title><rect x="10.0" y="355.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (912 samples, 0.40%)</title><rect x="10.0" y="339.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (912 samples, 0.40%)</title><rect x="10.0" y="323.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (912 samples, 0.40%)</title><rect x="10.0" y="307.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (912 samples, 0.40%)</title><rect x="10.0" y="291.0" width="4.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (198 samples, 0.09%)</title><rect x="14.7" y="371.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (198 samples, 0.09%)</title><rect x="14.7" y="355.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (198 samples, 0.09%)</title><rect x="14.7" y="339.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (198 samples, 0.09%)</title><rect x="14.7" y="323.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (198 samples, 0.09%)</title><rect x="14.7" y="307.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (198 samples, 0.09%)</title><rect x="14.7" y="291.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.7" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (198 samples, 0.09%)</title><rect x="14.7" y="275.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="17.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$129/964019704.run (227,771 samples, 99.15%)</title><rect x="15.7" y="403.0" width="1170.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.7" y="414.0">ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$129/964019704.run</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityGet$1 (227,771 samples, 99.15%)</title><rect x="15.7" y="387.0" width="1170.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.7" y="398.0">ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityGet$1</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (227,767 samples, 99.15%)</title><rect x="15.7" y="371.0" width="1170.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.7" y="382.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (4,277 samples, 1.86%)</title><rect x="15.7" y="355.0" width="22.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.7" y="366.0">c..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (4,277 samples, 1.86%)</title><rect x="15.7" y="339.0" width="22.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.7" y="350.0">c..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (4,277 samples, 1.86%)</title><rect x="15.7" y="323.0" width="22.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.7" y="334.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (4,277 samples, 1.86%)</title><rect x="15.7" y="307.0" width="22.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.7" y="318.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4,277 samples, 1.86%)</title><rect x="15.7" y="291.0" width="22.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.7" y="302.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4,277 samples, 1.86%)</title><rect x="15.7" y="275.0" width="22.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.7" y="286.0">c..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (4,277 samples, 1.86%)</title><rect x="15.7" y="259.0" width="22.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.7" y="270.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4,277 samples, 1.86%)</title><rect x="15.7" y="243.0" width="22.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.7" y="254.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4,277 samples, 1.86%)</title><rect x="15.7" y="227.0" width="22.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.7" y="238.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4,277 samples, 1.86%)</title><rect x="15.7" y="211.0" width="22.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.7" y="222.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4,277 samples, 1.86%)</title><rect x="15.7" y="195.0" width="22.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.7" y="206.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4,277 samples, 1.86%)</title><rect x="15.7" y="179.0" width="22.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.7" y="190.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,277 samples, 1.86%)</title><rect x="15.7" y="163.0" width="22.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.7" y="174.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (4,277 samples, 1.86%)</title><rect x="15.7" y="147.0" width="22.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.7" y="158.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (4,277 samples, 1.86%)</title><rect x="15.7" y="131.0" width="22.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.7" y="142.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (1,781 samples, 0.78%)</title><rect x="15.7" y="115.0" width="9.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (391 samples, 0.17%)</title><rect x="15.7" y="99.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (391 samples, 0.17%)</title><rect x="15.7" y="83.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.7" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (391 samples, 0.17%)</title><rect x="15.7" y="67.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.7" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (344 samples, 0.15%)</title><rect x="15.9" y="51.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.9" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (344 samples, 0.15%)</title><rect x="15.9" y="35.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="18.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (435 samples, 0.19%)</title><rect x="17.7" y="99.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (435 samples, 0.19%)</title><rect x="17.7" y="83.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.7" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (435 samples, 0.19%)</title><rect x="17.7" y="67.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.7" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (78 samples, 0.03%)</title><rect x="17.7" y="51.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.7" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (78 samples, 0.03%)</title><rect x="17.7" y="35.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="20.7" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (357 samples, 0.16%)</title><rect x="18.1" y="51.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.1" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (357 samples, 0.16%)</title><rect x="18.1" y="35.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="21.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (955 samples, 0.42%)</title><rect x="19.9" y="99.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="22.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (955 samples, 0.42%)</title><rect x="19.9" y="83.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="22.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (955 samples, 0.42%)</title><rect x="19.9" y="67.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.9" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (618 samples, 0.27%)</title><rect x="19.9" y="51.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.9" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (618 samples, 0.27%)</title><rect x="19.9" y="35.0" width="3.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="22.9" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (337 samples, 0.15%)</title><rect x="23.1" y="51.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.1" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (337 samples, 0.15%)</title><rect x="23.1" y="35.0" width="1.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="26.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.value (2,496 samples, 1.09%)</title><rect x="24.9" y="115.0" width="12.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (535 samples, 0.23%)</title><rect x="24.9" y="99.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (535 samples, 0.23%)</title><rect x="24.9" y="83.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (535 samples, 0.23%)</title><rect x="24.9" y="67.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.9" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (74 samples, 0.03%)</title><rect x="24.9" y="51.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="27.9" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (74 samples, 0.03%)</title><rect x="24.9" y="35.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="27.9" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (461 samples, 0.20%)</title><rect x="25.2" y="51.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="28.2" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (461 samples, 0.20%)</title><rect x="25.2" y="35.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="28.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (1,001 samples, 0.44%)</title><rect x="27.6" y="99.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,001 samples, 0.44%)</title><rect x="27.6" y="83.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="30.6" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,001 samples, 0.44%)</title><rect x="27.6" y="67.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.6" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (158 samples, 0.07%)</title><rect x="27.6" y="51.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.6" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (158 samples, 0.07%)</title><rect x="27.6" y="35.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="30.6" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (843 samples, 0.37%)</title><rect x="28.4" y="51.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.4" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (843 samples, 0.37%)</title><rect x="28.4" y="35.0" width="4.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="31.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getLongFrom (495 samples, 0.22%)</title><rect x="32.7" y="99.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="35.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (495 samples, 0.22%)</title><rect x="32.7" y="83.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="35.7" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (495 samples, 0.22%)</title><rect x="32.7" y="67.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="35.7" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (84 samples, 0.04%)</title><rect x="32.7" y="51.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="35.7" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (84 samples, 0.04%)</title><rect x="32.7" y="35.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="35.7" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (411 samples, 0.18%)</title><rect x="33.2" y="51.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="36.2" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (411 samples, 0.18%)</title><rect x="33.2" y="35.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="36.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (465 samples, 0.20%)</title><rect x="35.3" y="99.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="38.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (465 samples, 0.20%)</title><rect x="35.3" y="83.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="38.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (465 samples, 0.20%)</title><rect x="35.3" y="67.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="38.3" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (80 samples, 0.03%)</title><rect x="35.3" y="51.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="38.3" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (80 samples, 0.03%)</title><rect x="35.3" y="35.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="38.3" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (385 samples, 0.17%)</title><rect x="35.7" y="51.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="38.7" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (385 samples, 0.17%)</title><rect x="35.7" y="35.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="38.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.iterator (223,490 samples, 97.29%)</title><rect x="37.7" y="355.0" width="1148.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="40.7" y="366.0">ru/mail/polis/dao/alexander/marashov/DAOImpl.iterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (10,502 samples, 4.57%)</title><rect x="37.7" y="339.0" width="53.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="40.7" y="350.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (10,502 samples, 4.57%)</title><rect x="37.7" y="323.0" width="53.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.7" y="334.0">com/g..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (10,502 samples, 4.57%)</title><rect x="37.7" y="307.0" width="53.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="40.7" y="318.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (10,502 samples, 4.57%)</title><rect x="37.7" y="291.0" width="53.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="40.7" y="302.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (10,502 samples, 4.57%)</title><rect x="37.7" y="275.0" width="53.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="40.7" y="286.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (10,502 samples, 4.57%)</title><rect x="37.7" y="259.0" width="53.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.7" y="270.0">java/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10,502 samples, 4.57%)</title><rect x="37.7" y="243.0" width="53.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.7" y="254.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10,502 samples, 4.57%)</title><rect x="37.7" y="227.0" width="53.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="40.7" y="238.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (10,502 samples, 4.57%)</title><rect x="37.7" y="211.0" width="53.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="40.7" y="222.0">com/g..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (10,502 samples, 4.57%)</title><rect x="37.7" y="195.0" width="53.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.7" y="206.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (10,502 samples, 4.57%)</title><rect x="37.7" y="179.0" width="53.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="40.7" y="190.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (4,401 samples, 1.92%)</title><rect x="37.7" y="163.0" width="22.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.7" y="174.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (854 samples, 0.37%)</title><rect x="37.7" y="147.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (854 samples, 0.37%)</title><rect x="37.7" y="131.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="40.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (854 samples, 0.37%)</title><rect x="37.7" y="115.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="40.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (181 samples, 0.08%)</title><rect x="37.7" y="99.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="40.7" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (181 samples, 0.08%)</title><rect x="37.7" y="83.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="40.7" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (673 samples, 0.29%)</title><rect x="38.6" y="99.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="41.6" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (673 samples, 0.29%)</title><rect x="38.6" y="83.0" width="3.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="41.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (1,022 samples, 0.44%)</title><rect x="42.1" y="147.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,022 samples, 0.44%)</title><rect x="42.1" y="131.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="45.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,022 samples, 0.44%)</title><rect x="42.1" y="115.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (209 samples, 0.09%)</title><rect x="42.1" y="99.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.1" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (209 samples, 0.09%)</title><rect x="42.1" y="83.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="45.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (813 samples, 0.35%)</title><rect x="43.1" y="99.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="46.1" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (813 samples, 0.35%)</title><rect x="43.1" y="83.0" width="4.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="46.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (2,525 samples, 1.10%)</title><rect x="47.3" y="147.0" width="13.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="50.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2,525 samples, 1.10%)</title><rect x="47.3" y="131.0" width="13.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2,525 samples, 1.10%)</title><rect x="47.3" y="115.0" width="13.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="50.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2,012 samples, 0.88%)</title><rect x="47.3" y="99.0" width="10.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="50.3" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (2,012 samples, 0.88%)</title><rect x="47.3" y="83.0" width="10.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="50.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (513 samples, 0.22%)</title><rect x="57.6" y="99.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.6" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (513 samples, 0.22%)</title><rect x="57.6" y="83.0" width="2.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="60.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.value (6,101 samples, 2.66%)</title><rect x="60.3" y="163.0" width="31.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.3" y="174.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (1,373 samples, 0.60%)</title><rect x="60.3" y="147.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="63.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,373 samples, 0.60%)</title><rect x="60.3" y="131.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,373 samples, 0.60%)</title><rect x="60.3" y="115.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (224 samples, 0.10%)</title><rect x="60.3" y="99.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.3" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (224 samples, 0.10%)</title><rect x="60.3" y="83.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="63.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1,149 samples, 0.50%)</title><rect x="61.4" y="99.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.4" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (1,149 samples, 0.50%)</title><rect x="61.4" y="83.0" width="5.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="64.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (2,292 samples, 1.00%)</title><rect x="67.3" y="147.0" width="11.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="70.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2,292 samples, 1.00%)</title><rect x="67.3" y="131.0" width="11.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="70.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2,292 samples, 1.00%)</title><rect x="67.3" y="115.0" width="11.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="70.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (495 samples, 0.22%)</title><rect x="67.3" y="99.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.3" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (495 samples, 0.22%)</title><rect x="67.3" y="83.0" width="2.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="70.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1,797 samples, 0.78%)</title><rect x="69.9" y="99.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.9" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (1,797 samples, 0.78%)</title><rect x="69.9" y="83.0" width="9.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="72.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getLongFrom (1,295 samples, 0.56%)</title><rect x="79.1" y="147.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,295 samples, 0.56%)</title><rect x="79.1" y="131.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="82.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,295 samples, 0.56%)</title><rect x="79.1" y="115.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (215 samples, 0.09%)</title><rect x="79.1" y="99.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.1" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (215 samples, 0.09%)</title><rect x="79.1" y="83.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="82.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1,080 samples, 0.47%)</title><rect x="80.2" y="99.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.2" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (1,080 samples, 0.47%)</title><rect x="80.2" y="83.0" width="5.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="83.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (1,141 samples, 0.50%)</title><rect x="85.8" y="147.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="88.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,141 samples, 0.50%)</title><rect x="85.8" y="131.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="88.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,141 samples, 0.50%)</title><rect x="85.8" y="115.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="88.8" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (202 samples, 0.09%)</title><rect x="85.8" y="99.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.8" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (202 samples, 0.09%)</title><rect x="85.8" y="83.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="88.8" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (939 samples, 0.41%)</title><rect x="86.8" y="99.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.8" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (939 samples, 0.41%)</title><rect x="86.8" y="83.0" width="4.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="89.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3,030 samples, 1.32%)</title><rect x="91.6" y="339.0" width="15.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3,030 samples, 1.32%)</title><rect x="91.6" y="323.0" width="15.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="94.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,030 samples, 1.32%)</title><rect x="91.6" y="307.0" width="15.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3,030 samples, 1.32%)</title><rect x="91.6" y="291.0" width="15.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="94.6" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3,030 samples, 1.32%)</title><rect x="91.6" y="275.0" width="15.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.6" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3,030 samples, 1.32%)</title><rect x="91.6" y="259.0" width="15.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3,030 samples, 1.32%)</title><rect x="91.6" y="243.0" width="15.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,030 samples, 1.32%)</title><rect x="91.6" y="227.0" width="15.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.6" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,030 samples, 1.32%)</title><rect x="91.6" y="211.0" width="15.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="94.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3,030 samples, 1.32%)</title><rect x="91.6" y="195.0" width="15.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="94.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (3,030 samples, 1.32%)</title><rect x="91.6" y="179.0" width="15.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="94.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (3,030 samples, 1.32%)</title><rect x="91.6" y="163.0" width="15.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (1,345 samples, 0.59%)</title><rect x="91.6" y="147.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (211 samples, 0.09%)</title><rect x="91.6" y="131.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="94.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (211 samples, 0.09%)</title><rect x="91.6" y="115.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="94.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (211 samples, 0.09%)</title><rect x="91.6" y="99.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (181 samples, 0.08%)</title><rect x="91.8" y="83.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="94.8" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (181 samples, 0.08%)</title><rect x="91.8" y="67.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="94.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (306 samples, 0.13%)</title><rect x="92.7" y="131.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="95.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (306 samples, 0.13%)</title><rect x="92.7" y="115.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (306 samples, 0.13%)</title><rect x="92.7" y="99.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (51 samples, 0.02%)</title><rect x="92.7" y="83.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="95.7" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (51 samples, 0.02%)</title><rect x="92.7" y="67.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="95.7" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (255 samples, 0.11%)</title><rect x="93.0" y="83.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="96.0" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (255 samples, 0.11%)</title><rect x="93.0" y="67.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="96.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (828 samples, 0.36%)</title><rect x="94.3" y="131.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (828 samples, 0.36%)</title><rect x="94.3" y="115.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="97.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (828 samples, 0.36%)</title><rect x="94.3" y="99.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (713 samples, 0.31%)</title><rect x="94.3" y="83.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="97.3" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (713 samples, 0.31%)</title><rect x="94.3" y="67.0" width="3.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="97.3" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (115 samples, 0.05%)</title><rect x="97.9" y="83.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="100.9" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (115 samples, 0.05%)</title><rect x="97.9" y="67.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="100.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.value (1,685 samples, 0.73%)</title><rect x="98.5" y="147.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="101.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (392 samples, 0.17%)</title><rect x="98.5" y="131.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="101.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (392 samples, 0.17%)</title><rect x="98.5" y="115.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (392 samples, 0.17%)</title><rect x="98.5" y="99.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.5" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (54 samples, 0.02%)</title><rect x="98.5" y="83.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.5" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (54 samples, 0.02%)</title><rect x="98.5" y="67.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="101.5" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (338 samples, 0.15%)</title><rect x="98.8" y="83.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="101.8" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (338 samples, 0.15%)</title><rect x="98.8" y="67.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="101.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (619 samples, 0.27%)</title><rect x="100.5" y="131.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="103.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (619 samples, 0.27%)</title><rect x="100.5" y="115.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="103.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (619 samples, 0.27%)</title><rect x="100.5" y="99.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="103.5" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (104 samples, 0.05%)</title><rect x="100.5" y="83.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="103.5" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (104 samples, 0.05%)</title><rect x="100.5" y="67.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="103.5" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (515 samples, 0.22%)</title><rect x="101.1" y="83.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.1" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (515 samples, 0.22%)</title><rect x="101.1" y="67.0" width="2.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="104.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getLongFrom (307 samples, 0.13%)</title><rect x="103.7" y="131.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (307 samples, 0.13%)</title><rect x="103.7" y="115.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (307 samples, 0.13%)</title><rect x="103.7" y="99.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (261 samples, 0.11%)</title><rect x="104.0" y="83.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="107.0" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (261 samples, 0.11%)</title><rect x="104.0" y="67.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="107.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (367 samples, 0.16%)</title><rect x="105.3" y="131.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="108.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (367 samples, 0.16%)</title><rect x="105.3" y="115.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="108.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (367 samples, 0.16%)</title><rect x="105.3" y="99.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (50 samples, 0.02%)</title><rect x="105.3" y="83.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.3" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (50 samples, 0.02%)</title><rect x="105.3" y="67.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="108.3" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (317 samples, 0.14%)</title><rect x="105.6" y="83.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="108.6" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (317 samples, 0.14%)</title><rect x="105.6" y="67.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="108.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.iterator (209,958 samples, 91.40%)</title><rect x="107.2" y="339.0" width="1078.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="110.2" y="350.0">ru/mail/polis/dao/alexander/marashov/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.&lt;init&gt; (209,958 samples, 91.40%)</title><rect x="107.2" y="323.0" width="1078.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.2" y="334.0">ru/mail/polis/dao/alexander/marashov/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.binarySearch (209,958 samples, 91.40%)</title><rect x="107.2" y="307.0" width="1078.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="110.2" y="318.0">ru/mail/polis/dao/alexander/marashov/SSTable.binarySearch</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (209,958 samples, 91.40%)</title><rect x="107.2" y="291.0" width="1078.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="110.2" y="302.0">ru/mail/polis/dao/alexander/marashov/SSTable.key</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (69,477 samples, 30.24%)</title><rect x="107.2" y="275.0" width="356.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.2" y="286.0">ru/mail/polis/dao/alexander/marashov/SSTable.get..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (69,477 samples, 30.24%)</title><rect x="107.2" y="259.0" width="356.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="110.2" y="270.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (69,477 samples, 30.24%)</title><rect x="107.2" y="243.0" width="356.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.2" y="254.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (9,801 samples, 4.27%)</title><rect x="107.2" y="227.0" width="50.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="110.2" y="238.0">sun/n..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (9,801 samples, 4.27%)</title><rect x="107.2" y="211.0" width="50.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="110.2" y="222.0">sun.n..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (59,676 samples, 25.98%)</title><rect x="157.5" y="227.0" width="306.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="160.5" y="238.0">sun/nio/ch/NativeThreadSet.remove</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (59,676 samples, 25.98%)</title><rect x="157.5" y="211.0" width="306.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="160.5" y="222.0">sun.nio.ch.NativeThreadSet</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (68,468 samples, 29.81%)</title><rect x="464.1" y="275.0" width="351.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="467.1" y="286.0">ru/mail/polis/dao/alexander/marashov/SSTable.get..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (68,468 samples, 29.81%)</title><rect x="464.1" y="259.0" width="351.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="467.1" y="270.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (68,468 samples, 29.81%)</title><rect x="464.1" y="243.0" width="351.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="467.1" y="254.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (9,432 samples, 4.11%)</title><rect x="464.1" y="227.0" width="48.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="467.1" y="238.0">sun/..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (9,432 samples, 4.11%)</title><rect x="464.1" y="211.0" width="48.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="467.1" y="222.0">sun...</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (59,036 samples, 25.70%)</title><rect x="512.5" y="227.0" width="303.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="515.5" y="238.0">sun/nio/ch/NativeThreadSet.remove</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (59,036 samples, 25.70%)</title><rect x="512.5" y="211.0" width="303.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="515.5" y="222.0">sun.nio.ch.NativeThreadSet</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (72,013 samples, 31.35%)</title><rect x="815.8" y="275.0" width="369.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="818.8" y="286.0">ru/mail/polis/dao/alexander/marashov/SSTable.getOf..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (72,013 samples, 31.35%)</title><rect x="815.8" y="259.0" width="369.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="818.8" y="270.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (72,013 samples, 31.35%)</title><rect x="815.8" y="243.0" width="369.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="818.8" y="254.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (13,242 samples, 5.76%)</title><rect x="815.8" y="227.0" width="68.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="818.8" y="238.0">sun/nio..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (13,242 samples, 5.76%)</title><rect x="815.8" y="211.0" width="68.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="818.8" y="222.0">sun.nio..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (58,771 samples, 25.58%)</title><rect x="883.8" y="227.0" width="301.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="886.8" y="238.0">sun/nio/ch/NativeThreadSet.remove</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (58,771 samples, 25.58%)</title><rect x="883.8" y="211.0" width="301.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="886.8" y="222.0">sun.nio.ch.NativeThreadSet</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (837 samples, 0.36%)</title><rect x="1185.7" y="451.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1188.7" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (837 samples, 0.36%)</title><rect x="1185.7" y="435.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1188.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (833 samples, 0.36%)</title><rect x="1185.7" y="419.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1188.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (833 samples, 0.36%)</title><rect x="1185.7" y="403.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1188.7" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (833 samples, 0.36%)</title><rect x="1185.7" y="387.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1188.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (833 samples, 0.36%)</title><rect x="1185.7" y="371.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.7" y="382.0"></text>
</g>
<g>
<title>RequestHandler1_handleEntityGet.handleRequest (833 samples, 0.36%)</title><rect x="1185.7" y="355.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1188.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityGet (833 samples, 0.36%)</title><rect x="1185.7" y="339.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1188.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.executeOrSendError (833 samples, 0.36%)</title><rect x="1185.7" y="323.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1188.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (833 samples, 0.36%)</title><rect x="1185.7" y="307.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1188.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (833 samples, 0.36%)</title><rect x="1185.7" y="291.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1188.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (833 samples, 0.36%)</title><rect x="1185.7" y="275.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1188.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (833 samples, 0.36%)</title><rect x="1185.7" y="259.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1188.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (833 samples, 0.36%)</title><rect x="1185.7" y="243.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1188.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (833 samples, 0.36%)</title><rect x="1185.7" y="227.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1188.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (833 samples, 0.36%)</title><rect x="1185.7" y="211.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1188.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (833 samples, 0.36%)</title><rect x="1185.7" y="195.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1188.7" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (833 samples, 0.36%)</title><rect x="1185.7" y="179.0" width="4.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1188.7" y="190.0"></text>
</g>
</g>
</svg>
