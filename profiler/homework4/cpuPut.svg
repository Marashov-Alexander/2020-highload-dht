<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="981"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="981"> </text>
<g id="frames">
<g>
<title>all (869 samples, 100.00%)</title><rect x="10.0" y="947.0" width="1180.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="958.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.23%)</title><rect x="10.0" y="931.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>Method::from_compiled_entry_no_trampoline() const (1 samples, 0.12%)</title><rect x="10.0" y="915.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.12%)</title><rect x="11.4" y="915.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="14.4" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.12%)</title><rect x="11.4" y="899.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.4" y="910.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.12%)</title><rect x="11.4" y="883.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="14.4" y="894.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.12%)</title><rect x="11.4" y="867.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="14.4" y="878.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.12%)</title><rect x="11.4" y="851.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.4" y="862.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.12%)</title><rect x="11.4" y="835.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="14.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.12%)</title><rect x="12.7" y="931.0" width="1.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="15.7" y="942.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.12%)</title><rect x="12.7" y="915.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="15.7" y="926.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.12%)</title><rect x="14.1" y="931.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="17.1" y="942.0"></text>
</g>
<g>
<title>Interpreter (1 samples, 0.12%)</title><rect x="14.1" y="915.0" width="1.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="17.1" y="926.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.12%)</title><rect x="15.4" y="931.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="18.4" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.run (600 samples, 69.04%)</title><rect x="16.8" y="931.0" width="814.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.8" y="942.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (600 samples, 69.04%)</title><rect x="16.8" y="915.0" width="814.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.8" y="926.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (598 samples, 68.81%)</title><rect x="19.5" y="899.0" width="812.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.5" y="910.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.12%)</title><rect x="24.9" y="883.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.9" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.12%)</title><rect x="24.9" y="867.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.9" y="878.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.12%)</title><rect x="24.9" y="851.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="27.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (2 samples, 0.23%)</title><rect x="26.3" y="883.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="29.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.12%)</title><rect x="27.7" y="867.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.7" y="878.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.12%)</title><rect x="27.7" y="851.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.23%)</title><rect x="29.0" y="883.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="32.0" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$75/895728776.run (1 samples, 0.12%)</title><rect x="30.4" y="867.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (76 samples, 8.75%)</title><rect x="31.7" y="883.0" width="103.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="34.7" y="894.0">java/util/co..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.12%)</title><rect x="38.5" y="867.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (70 samples, 8.06%)</title><rect x="39.9" y="867.0" width="95.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.9" y="878.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (2 samples, 0.23%)</title><rect x="39.9" y="851.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.23%)</title><rect x="39.9" y="835.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.23%)</title><rect x="39.9" y="819.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="42.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.23%)</title><rect x="39.9" y="803.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (44 samples, 5.06%)</title><rect x="42.6" y="851.0" width="59.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.6" y="862.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (1 samples, 0.12%)</title><rect x="48.0" y="835.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="51.0" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.12%)</title><rect x="48.0" y="819.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="51.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.12%)</title><rect x="48.0" y="803.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="51.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.23%)</title><rect x="49.4" y="835.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.35%)</title><rect x="52.1" y="835.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.35%)</title><rect x="52.1" y="819.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="55.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (33 samples, 3.80%)</title><rect x="56.2" y="835.0" width="44.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="59.2" y="846.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (32 samples, 3.68%)</title><rect x="57.5" y="819.0" width="43.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="60.5" y="830.0">jdk/..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.12%)</title><rect x="60.2" y="803.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="63.2" y="814.0"></text>
</g>
<g>
<title>Unsafe_Park (20 samples, 2.30%)</title><rect x="61.6" y="803.0" width="27.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="64.6" y="814.0">U..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.12%)</title><rect x="63.0" y="787.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="66.0" y="798.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.12%)</title><rect x="64.3" y="787.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="67.3" y="798.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (7 samples, 0.81%)</title><rect x="65.7" y="787.0" width="9.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="68.7" y="798.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.12%)</title><rect x="72.5" y="771.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="75.5" y="782.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.12%)</title><rect x="73.8" y="771.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="76.8" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.12%)</title><rect x="75.2" y="787.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="78.2" y="798.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.12%)</title><rect x="76.5" y="787.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="79.5" y="798.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.35%)</title><rect x="77.9" y="787.0" width="4.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="80.9" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.35%)</title><rect x="77.9" y="771.0" width="4.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="80.9" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.35%)</title><rect x="77.9" y="755.0" width="4.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="80.9" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.23%)</title><rect x="79.3" y="739.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="82.3" y="750.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.23%)</title><rect x="79.3" y="723.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="82.3" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.12%)</title><rect x="79.3" y="707.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="82.3" y="718.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.12%)</title><rect x="80.6" y="707.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="83.6" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.12%)</title><rect x="82.0" y="787.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="85.0" y="798.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.23%)</title><rect x="83.3" y="787.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="86.3" y="798.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.12%)</title><rect x="86.0" y="787.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="89.0" y="798.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.12%)</title><rect x="87.4" y="787.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="90.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 1.04%)</title><rect x="88.8" y="803.0" width="12.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="91.8" y="814.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (9 samples, 1.04%)</title><rect x="88.8" y="787.0" width="12.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="91.8" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.92%)</title><rect x="90.1" y="771.0" width="10.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="93.1" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.12%)</title><rect x="90.1" y="755.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="93.1" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.81%)</title><rect x="91.5" y="755.0" width="9.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="94.5" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.81%)</title><rect x="91.5" y="739.0" width="9.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="94.5" y="750.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.81%)</title><rect x="91.5" y="723.0" width="9.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="94.5" y="734.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.81%)</title><rect x="91.5" y="707.0" width="9.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="94.5" y="718.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.35%)</title><rect x="92.8" y="691.0" width="4.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="95.8" y="702.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.35%)</title><rect x="92.8" y="675.0" width="4.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="95.8" y="686.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.23%)</title><rect x="94.2" y="659.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="97.2" y="670.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.23%)</title><rect x="96.9" y="691.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="99.9" y="702.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.12%)</title><rect x="99.6" y="691.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="102.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.12%)</title><rect x="101.0" y="835.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.12%)</title><rect x="102.3" y="851.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.12%)</title><rect x="102.3" y="835.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="105.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.12%)</title><rect x="102.3" y="819.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="105.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.12%)</title><rect x="102.3" y="803.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="105.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (23 samples, 2.65%)</title><rect x="103.7" y="851.0" width="31.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="106.7" y="862.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (23 samples, 2.65%)</title><rect x="103.7" y="835.0" width="31.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.7" y="846.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (23 samples, 2.65%)</title><rect x="103.7" y="819.0" width="31.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="106.7" y="830.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (23 samples, 2.65%)</title><rect x="103.7" y="803.0" width="31.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.7" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (1 samples, 0.12%)</title><rect x="103.7" y="787.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="106.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (22 samples, 2.53%)</title><rect x="105.1" y="787.0" width="29.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.1" y="798.0">jd..</text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.12%)</title><rect x="105.1" y="771.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="108.1" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.58%)</title><rect x="106.4" y="771.0" width="6.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="109.4" y="782.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.12%)</title><rect x="106.4" y="755.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="109.4" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.12%)</title><rect x="107.8" y="755.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="110.8" y="766.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.12%)</title><rect x="109.1" y="755.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="112.1" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.23%)</title><rect x="110.5" y="755.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="113.5" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 1.73%)</title><rect x="113.2" y="771.0" width="20.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="116.2" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 1.04%)</title><rect x="121.3" y="755.0" width="12.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="124.3" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 1.04%)</title><rect x="121.3" y="739.0" width="12.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="124.3" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 1.04%)</title><rect x="121.3" y="723.0" width="12.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="124.3" y="734.0"></text>
</g>
<g>
<title>do_futex (9 samples, 1.04%)</title><rect x="121.3" y="707.0" width="12.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="124.3" y="718.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 1.04%)</title><rect x="121.3" y="691.0" width="12.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="124.3" y="702.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.12%)</title><rect x="122.7" y="675.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="125.7" y="686.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.12%)</title><rect x="122.7" y="659.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="125.7" y="670.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.81%)</title><rect x="124.1" y="675.0" width="9.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="127.1" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.81%)</title><rect x="124.1" y="659.0" width="9.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="127.1" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.81%)</title><rect x="124.1" y="643.0" width="9.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="127.1" y="654.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.12%)</title><rect x="133.6" y="771.0" width="1.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="136.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$75/895728776.run (502 samples, 57.77%)</title><rect x="134.9" y="883.0" width="681.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.9" y="894.0">ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$75/895728776.run</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityPut$2 (500 samples, 57.54%)</title><rect x="137.6" y="867.0" width="679.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.6" y="878.0">ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityPut$2</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.58%)</title><rect x="137.6" y="851.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.6" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.58%)</title><rect x="137.6" y="835.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="140.6" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.58%)</title><rect x="137.6" y="819.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.6" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.58%)</title><rect x="137.6" y="803.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.6" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.58%)</title><rect x="137.6" y="787.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="140.6" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.23%)</title><rect x="137.6" y="771.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="140.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.23%)</title><rect x="137.6" y="755.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.6" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.23%)</title><rect x="137.6" y="739.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.6" y="750.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="139.0" y="723.0" width="1.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="142.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.35%)</title><rect x="140.4" y="771.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="143.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.35%)</title><rect x="140.4" y="755.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="143.4" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.23%)</title><rect x="141.7" y="739.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.proxyIfNotLocal (1 samples, 0.12%)</title><rect x="143.1" y="723.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (29 samples, 3.34%)</title><rect x="144.4" y="851.0" width="39.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.4" y="862.0">ru/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.23%)</title><rect x="144.4" y="835.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.4" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.23%)</title><rect x="144.4" y="819.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="147.4" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="145.8" y="803.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="148.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.35%)</title><rect x="147.1" y="835.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.35%)</title><rect x="147.1" y="819.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.35%)</title><rect x="147.1" y="803.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="150.1" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.23%)</title><rect x="148.5" y="787.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="151.5" y="798.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.23%)</title><rect x="148.5" y="771.0" width="2.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="151.5" y="782.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.23%)</title><rect x="148.5" y="755.0" width="2.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="151.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.upsert (24 samples, 2.76%)</title><rect x="151.2" y="835.0" width="32.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="154.2" y="846.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (24 samples, 2.76%)</title><rect x="151.2" y="819.0" width="32.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="154.2" y="830.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (24 samples, 2.76%)</title><rect x="151.2" y="803.0" width="32.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.2" y="814.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.23%)</title><rect x="159.4" y="787.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="162.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.23%)</title><rect x="159.4" y="771.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="162.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (4 samples, 0.46%)</title><rect x="162.1" y="787.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.23%)</title><rect x="167.5" y="787.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="170.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.12%)</title><rect x="167.5" y="771.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="170.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.12%)</title><rect x="168.9" y="771.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="171.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.12%)</title><rect x="168.9" y="755.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.12%)</title><rect x="168.9" y="739.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="171.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (9 samples, 1.04%)</title><rect x="170.2" y="787.0" width="12.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="173.2" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.92%)</title><rect x="171.6" y="771.0" width="10.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="174.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.92%)</title><rect x="171.6" y="755.0" width="10.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="174.6" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.12%)</title><rect x="174.3" y="739.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="177.3" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.58%)</title><rect x="175.7" y="739.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.7" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.46%)</title><rect x="175.7" y="723.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="178.7" y="734.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.12%)</title><rect x="181.1" y="723.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="184.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (1 samples, 0.12%)</title><rect x="182.5" y="787.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.proxyIfNotLocal (333 samples, 38.32%)</title><rect x="183.8" y="851.0" width="452.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="186.8" y="862.0">ru/mail/polis/service/alexander/marashov/ServiceImpl.proxyIfNo..</text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.81%)</title><rect x="189.2" y="835.0" width="9.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="192.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.69%)</title><rect x="189.2" y="819.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="192.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.equals (5 samples, 0.58%)</title><rect x="190.6" y="803.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.12%)</title><rect x="197.4" y="819.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.12%)</title><rect x="197.4" y="803.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.12%)</title><rect x="197.4" y="787.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="200.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.12%)</title><rect x="197.4" y="771.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (215 samples, 24.74%)</title><rect x="198.7" y="835.0" width="292.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="201.7" y="846.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (215 samples, 24.74%)</title><rect x="198.7" y="819.0" width="292.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="201.7" y="830.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (52 samples, 5.98%)</title><rect x="201.5" y="803.0" width="70.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="204.5" y="814.0">one/nio/..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.46%)</title><rect x="201.5" y="787.0" width="5.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="204.5" y="798.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.35%)</title><rect x="202.8" y="771.0" width="4.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="205.8" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.35%)</title><rect x="202.8" y="755.0" width="4.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="205.8" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.35%)</title><rect x="202.8" y="739.0" width="4.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="205.8" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (2 samples, 0.23%)</title><rect x="202.8" y="723.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="205.8" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.12%)</title><rect x="204.2" y="707.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="207.2" y="718.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.12%)</title><rect x="204.2" y="691.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="207.2" y="702.0"></text>
</g>
<g>
<title>G1MonitoringSupport::update_eden_size() (1 samples, 0.12%)</title><rect x="204.2" y="675.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="207.2" y="686.0"></text>
</g>
<g>
<title>G1SurvivorRegions::length() const (1 samples, 0.12%)</title><rect x="204.2" y="659.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="207.2" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.12%)</title><rect x="205.5" y="723.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="208.5" y="734.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.12%)</title><rect x="205.5" y="707.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="208.5" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.12%)</title><rect x="205.5" y="691.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="208.5" y="702.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.12%)</title><rect x="205.5" y="675.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="208.5" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (48 samples, 5.52%)</title><rect x="206.9" y="787.0" width="65.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="209.9" y="798.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (11 samples, 1.27%)</title><rect x="211.0" y="771.0" width="14.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="214.0" y="782.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.12%)</title><rect x="213.7" y="755.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="216.7" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.92%)</title><rect x="215.0" y="755.0" width="10.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="218.0" y="766.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.12%)</title><rect x="220.5" y="739.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="223.5" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.12%)</title><rect x="221.8" y="739.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="224.8" y="750.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.23%)</title><rect x="223.2" y="739.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="226.2" y="750.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.12%)</title><rect x="224.5" y="723.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="227.5" y="734.0"></text>
</g>
<g>
<title>__GI___recv (32 samples, 3.68%)</title><rect x="225.9" y="771.0" width="43.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="228.9" y="782.0">__GI..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 3.11%)</title><rect x="232.7" y="755.0" width="36.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="235.7" y="766.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (27 samples, 3.11%)</title><rect x="232.7" y="739.0" width="36.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="235.7" y="750.0">do_..</text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.12%)</title><rect x="232.7" y="723.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="235.7" y="734.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (26 samples, 2.99%)</title><rect x="234.1" y="723.0" width="35.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="237.1" y="734.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (26 samples, 2.99%)</title><rect x="234.1" y="707.0" width="35.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="237.1" y="718.0">__s..</text>
</g>
<g>
<title>fput (1 samples, 0.12%)</title><rect x="234.1" y="691.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="237.1" y="702.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.12%)</title><rect x="234.1" y="675.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="237.1" y="686.0"></text>
</g>
<g>
<title>sock_recvmsg (24 samples, 2.76%)</title><rect x="235.4" y="691.0" width="32.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="238.4" y="702.0">so..</text>
</g>
<g>
<title>inet6_recvmsg (23 samples, 2.65%)</title><rect x="235.4" y="675.0" width="31.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="238.4" y="686.0">in..</text>
</g>
<g>
<title>tcp_recvmsg (23 samples, 2.65%)</title><rect x="235.4" y="659.0" width="31.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="238.4" y="670.0">tc..</text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.23%)</title><rect x="235.4" y="643.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="238.4" y="654.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.23%)</title><rect x="235.4" y="627.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="238.4" y="638.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.12%)</title><rect x="235.4" y="611.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="238.4" y="622.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.12%)</title><rect x="236.8" y="611.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="239.8" y="622.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.12%)</title><rect x="236.8" y="595.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="239.8" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.12%)</title><rect x="238.1" y="643.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="241.1" y="654.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.12%)</title><rect x="239.5" y="643.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="242.5" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.12%)</title><rect x="239.5" y="627.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="242.5" y="638.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (19 samples, 2.19%)</title><rect x="240.8" y="643.0" width="25.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="243.8" y="654.0">t..</text>
</g>
<g>
<title>tcp_send_ack (19 samples, 2.19%)</title><rect x="240.8" y="627.0" width="25.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="243.8" y="638.0">t..</text>
</g>
<g>
<title>__tcp_send_ack.part.46 (19 samples, 2.19%)</title><rect x="240.8" y="611.0" width="25.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="243.8" y="622.0">_..</text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.12%)</title><rect x="240.8" y="595.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="243.8" y="606.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.12%)</title><rect x="240.8" y="579.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="243.8" y="590.0"></text>
</g>
<g>
<title>memset (1 samples, 0.12%)</title><rect x="240.8" y="563.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="243.8" y="574.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (18 samples, 2.07%)</title><rect x="242.2" y="595.0" width="24.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="245.2" y="606.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (17 samples, 1.96%)</title><rect x="243.6" y="579.0" width="23.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="246.6" y="590.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (17 samples, 1.96%)</title><rect x="243.6" y="563.0" width="23.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="246.6" y="574.0">_..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.12%)</title><rect x="244.9" y="547.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="247.9" y="558.0"></text>
</g>
<g>
<title>ip_local_out (15 samples, 1.73%)</title><rect x="246.3" y="547.0" width="20.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="249.3" y="558.0"></text>
</g>
<g>
<title>__ip_local_out (7 samples, 0.81%)</title><rect x="246.3" y="531.0" width="9.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="249.3" y="542.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.12%)</title><rect x="246.3" y="515.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="249.3" y="526.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.69%)</title><rect x="247.6" y="515.0" width="8.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="250.6" y="526.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.12%)</title><rect x="247.6" y="499.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="250.6" y="510.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.12%)</title><rect x="247.6" y="483.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="250.6" y="494.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (4 samples, 0.46%)</title><rect x="249.0" y="499.0" width="5.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="252.0" y="510.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.46%)</title><rect x="249.0" y="483.0" width="5.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="252.0" y="494.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.12%)</title><rect x="249.0" y="467.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="252.0" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.12%)</title><rect x="250.3" y="467.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="253.3" y="478.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (2 samples, 0.23%)</title><rect x="251.7" y="467.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="254.7" y="478.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (1 samples, 0.12%)</title><rect x="254.4" y="499.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="257.4" y="510.0"></text>
</g>
<g>
<title>ip_output (8 samples, 0.92%)</title><rect x="255.8" y="531.0" width="10.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="258.8" y="542.0"></text>
</g>
<g>
<title>ip_finish_output (8 samples, 0.92%)</title><rect x="255.8" y="515.0" width="10.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="258.8" y="526.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.12%)</title><rect x="255.8" y="499.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="258.8" y="510.0"></text>
</g>
<g>
<title>__ip_finish_output (6 samples, 0.69%)</title><rect x="257.1" y="499.0" width="8.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="260.1" y="510.0"></text>
</g>
<g>
<title>ip_finish_output2 (6 samples, 0.69%)</title><rect x="257.1" y="483.0" width="8.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="260.1" y="494.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (5 samples, 0.58%)</title><rect x="258.5" y="467.0" width="6.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="261.5" y="478.0"></text>
</g>
<g>
<title>do_softirq.part.20 (5 samples, 0.58%)</title><rect x="258.5" y="451.0" width="6.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="261.5" y="462.0"></text>
</g>
<g>
<title>do_softirq_own_stack (5 samples, 0.58%)</title><rect x="258.5" y="435.0" width="6.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="261.5" y="446.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 0.58%)</title><rect x="258.5" y="419.0" width="6.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="261.5" y="430.0"></text>
</g>
<g>
<title>net_rx_action (5 samples, 0.58%)</title><rect x="258.5" y="403.0" width="6.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="261.5" y="414.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 0.58%)</title><rect x="258.5" y="387.0" width="6.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="261.5" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb (4 samples, 0.46%)</title><rect x="259.9" y="371.0" width="5.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="262.9" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 0.46%)</title><rect x="259.9" y="355.0" width="5.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="262.9" y="366.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.46%)</title><rect x="259.9" y="339.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="262.9" y="350.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.46%)</title><rect x="259.9" y="323.0" width="5.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="262.9" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.46%)</title><rect x="259.9" y="307.0" width="5.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="262.9" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 0.46%)</title><rect x="259.9" y="291.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="262.9" y="302.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (4 samples, 0.46%)</title><rect x="259.9" y="275.0" width="5.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="262.9" y="286.0"></text>
</g>
<g>
<title>tcp_v4_rcv (4 samples, 0.46%)</title><rect x="259.9" y="259.0" width="5.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="262.9" y="270.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.12%)</title><rect x="259.9" y="243.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="262.9" y="254.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.35%)</title><rect x="261.2" y="243.0" width="4.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="264.2" y="254.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.35%)</title><rect x="261.2" y="227.0" width="4.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="264.2" y="238.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.12%)</title><rect x="261.2" y="211.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="264.2" y="222.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.12%)</title><rect x="261.2" y="195.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="264.2" y="206.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.12%)</title><rect x="261.2" y="179.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="264.2" y="190.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.12%)</title><rect x="262.6" y="211.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="265.6" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.12%)</title><rect x="262.6" y="195.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="265.6" y="206.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (1 samples, 0.12%)</title><rect x="262.6" y="179.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="265.6" y="190.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.12%)</title><rect x="263.9" y="211.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="266.9" y="222.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.12%)</title><rect x="265.3" y="499.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="268.3" y="510.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.12%)</title><rect x="266.6" y="675.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="269.6" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.12%)</title><rect x="268.0" y="691.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="271.0" y="702.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.12%)</title><rect x="268.0" y="675.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="271.0" y="686.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.12%)</title><rect x="268.0" y="659.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="271.0" y="670.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.12%)</title><rect x="268.0" y="643.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="271.0" y="654.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.23%)</title><rect x="269.4" y="771.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="272.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (18 samples, 2.07%)</title><rect x="272.1" y="803.0" width="24.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="275.1" y="814.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.35%)</title><rect x="272.1" y="787.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="275.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (10 samples, 1.15%)</title><rect x="276.1" y="787.0" width="13.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 1.04%)</title><rect x="277.5" y="771.0" width="12.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="280.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 1.04%)</title><rect x="277.5" y="755.0" width="12.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.12%)</title><rect x="289.7" y="787.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="292.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.46%)</title><rect x="291.1" y="787.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.35%)</title><rect x="292.4" y="771.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.35%)</title><rect x="292.4" y="755.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="295.4" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="295.2" y="739.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="298.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (6 samples, 0.69%)</title><rect x="296.5" y="803.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="299.5" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.46%)</title><rect x="297.9" y="787.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="300.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.12%)</title><rect x="297.9" y="771.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="300.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.12%)</title><rect x="297.9" y="755.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="300.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.35%)</title><rect x="299.2" y="771.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="302.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.35%)</title><rect x="299.2" y="755.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="302.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.35%)</title><rect x="299.2" y="739.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="302.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.23%)</title><rect x="300.6" y="723.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="303.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.12%)</title><rect x="303.3" y="787.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="306.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.12%)</title><rect x="304.7" y="803.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="307.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.12%)</title><rect x="304.7" y="787.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="307.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.12%)</title><rect x="304.7" y="771.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="307.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (21 samples, 2.42%)</title><rect x="306.0" y="803.0" width="28.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="309.0" y="814.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (1 samples, 0.12%)</title><rect x="307.4" y="787.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="310.4" y="798.0"></text>
</g>
<g>
<title>__GI___setsockopt (19 samples, 2.19%)</title><rect x="308.7" y="787.0" width="25.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="311.7" y="798.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 1.96%)</title><rect x="311.4" y="771.0" width="23.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="314.4" y="782.0">e..</text>
</g>
<g>
<title>do_syscall_64 (17 samples, 1.96%)</title><rect x="311.4" y="755.0" width="23.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="314.4" y="766.0">d..</text>
</g>
<g>
<title>__x64_sys_setsockopt (17 samples, 1.96%)</title><rect x="311.4" y="739.0" width="23.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="314.4" y="750.0">_..</text>
</g>
<g>
<title>__sys_setsockopt (17 samples, 1.96%)</title><rect x="311.4" y="723.0" width="23.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="314.4" y="734.0">_..</text>
</g>
<g>
<title>__get_user_4 (1 samples, 0.12%)</title><rect x="312.8" y="707.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="315.8" y="718.0"></text>
</g>
<g>
<title>security_socket_setsockopt (7 samples, 0.81%)</title><rect x="314.2" y="707.0" width="9.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="317.2" y="718.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (1 samples, 0.12%)</title><rect x="314.2" y="691.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="317.2" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (6 samples, 0.69%)</title><rect x="315.5" y="691.0" width="8.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="318.5" y="702.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (6 samples, 0.69%)</title><rect x="315.5" y="675.0" width="8.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="318.5" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.69%)</title><rect x="315.5" y="659.0" width="8.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="318.5" y="670.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.12%)</title><rect x="315.5" y="643.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="318.5" y="654.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (5 samples, 0.58%)</title><rect x="316.9" y="643.0" width="6.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="319.9" y="654.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.12%)</title><rect x="322.3" y="627.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="325.3" y="638.0"></text>
</g>
<g>
<title>sock_setsockopt (5 samples, 0.58%)</title><rect x="323.7" y="707.0" width="6.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="326.7" y="718.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.23%)</title><rect x="325.0" y="691.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="328.0" y="702.0"></text>
</g>
<g>
<title>sock_set_timeout (1 samples, 0.12%)</title><rect x="327.7" y="691.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="330.7" y="702.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.12%)</title><rect x="329.1" y="691.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="332.1" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.35%)</title><rect x="330.5" y="707.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="333.5" y="718.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.35%)</title><rect x="330.5" y="691.0" width="4.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="333.5" y="702.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.35%)</title><rect x="330.5" y="675.0" width="4.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="333.5" y="686.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.23%)</title><rect x="331.8" y="659.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="334.8" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (109 samples, 12.54%)</title><rect x="334.5" y="803.0" width="148.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="337.5" y="814.0">one/nio/net/NativeS..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (5 samples, 0.58%)</title><rect x="335.9" y="787.0" width="6.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="338.9" y="798.0"></text>
</g>
<g>
<title>__memmove_ssse3 (1 samples, 0.12%)</title><rect x="337.2" y="771.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="340.2" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.23%)</title><rect x="338.6" y="771.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="341.6" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.12%)</title><rect x="338.6" y="755.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="341.6" y="766.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.12%)</title><rect x="340.0" y="755.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="343.0" y="766.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.12%)</title><rect x="340.0" y="739.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="343.0" y="750.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.12%)</title><rect x="341.3" y="771.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="344.3" y="782.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.12%)</title><rect x="342.7" y="787.0" width="1.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="345.7" y="798.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.12%)</title><rect x="344.0" y="787.0" width="1.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="347.0" y="798.0"></text>
</g>
<g>
<title>__libc_send (101 samples, 11.62%)</title><rect x="345.4" y="787.0" width="137.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="348.4" y="798.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (99 samples, 11.39%)</title><rect x="348.1" y="771.0" width="134.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="351.1" y="782.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>do_syscall_64 (99 samples, 11.39%)</title><rect x="348.1" y="755.0" width="134.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="351.1" y="766.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (99 samples, 11.39%)</title><rect x="348.1" y="739.0" width="134.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="351.1" y="750.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (98 samples, 11.28%)</title><rect x="348.1" y="723.0" width="133.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="351.1" y="734.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (98 samples, 11.28%)</title><rect x="348.1" y="707.0" width="133.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="351.1" y="718.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (98 samples, 11.28%)</title><rect x="348.1" y="691.0" width="133.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="351.1" y="702.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (96 samples, 11.05%)</title><rect x="350.8" y="675.0" width="130.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="353.8" y="686.0">tcp_sendmsg</text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.12%)</title><rect x="350.8" y="659.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="353.8" y="670.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.12%)</title><rect x="352.2" y="659.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="355.2" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (94 samples, 10.82%)</title><rect x="353.5" y="659.0" width="127.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="356.5" y="670.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.12%)</title><rect x="354.9" y="643.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="357.9" y="654.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.12%)</title><rect x="356.3" y="643.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="359.3" y="654.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.12%)</title><rect x="357.6" y="643.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="360.6" y="654.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.12%)</title><rect x="357.6" y="627.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="360.6" y="638.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.23%)</title><rect x="359.0" y="643.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="362.0" y="654.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.12%)</title><rect x="360.3" y="627.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="363.3" y="638.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.81%)</title><rect x="361.7" y="643.0" width="9.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="364.7" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.58%)</title><rect x="364.4" y="627.0" width="6.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="367.4" y="638.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (4 samples, 0.46%)</title><rect x="364.4" y="611.0" width="5.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="367.4" y="622.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.35%)</title><rect x="364.4" y="595.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="367.4" y="606.0"></text>
</g>
<g>
<title>memset (1 samples, 0.12%)</title><rect x="368.5" y="595.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="371.5" y="606.0"></text>
</g>
<g>
<title>memset (1 samples, 0.12%)</title><rect x="369.8" y="611.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="372.8" y="622.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.12%)</title><rect x="371.2" y="643.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="374.2" y="654.0"></text>
</g>
<g>
<title>tcp_push (78 samples, 8.98%)</title><rect x="372.6" y="643.0" width="105.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="375.6" y="654.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (78 samples, 8.98%)</title><rect x="372.6" y="627.0" width="105.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="375.6" y="638.0">__tcp_push_pe..</text>
</g>
<g>
<title>tcp_write_xmit (78 samples, 8.98%)</title><rect x="372.6" y="611.0" width="105.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="375.6" y="622.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (74 samples, 8.52%)</title><rect x="375.3" y="595.0" width="100.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="378.3" y="606.0">__tcp_transm..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.12%)</title><rect x="378.0" y="579.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="381.0" y="590.0"></text>
</g>
<g>
<title>ip_queue_xmit (67 samples, 7.71%)</title><rect x="379.3" y="579.0" width="91.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="382.3" y="590.0">ip_queue_x..</text>
</g>
<g>
<title>__ip_queue_xmit (67 samples, 7.71%)</title><rect x="379.3" y="563.0" width="91.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="382.3" y="574.0">__ip_queue..</text>
</g>
<g>
<title>ip_local_out (66 samples, 7.59%)</title><rect x="380.7" y="547.0" width="89.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="383.7" y="558.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (12 samples, 1.38%)</title><rect x="382.1" y="531.0" width="16.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="385.1" y="542.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.12%)</title><rect x="382.1" y="515.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="385.1" y="526.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 1.27%)</title><rect x="383.4" y="515.0" width="15.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="386.4" y="526.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (10 samples, 1.15%)</title><rect x="383.4" y="499.0" width="13.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="386.4" y="510.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (10 samples, 1.15%)</title><rect x="383.4" y="483.0" width="13.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="386.4" y="494.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.23%)</title><rect x="384.8" y="467.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="387.8" y="478.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.12%)</title><rect x="387.5" y="467.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="390.5" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (6 samples, 0.69%)</title><rect x="388.8" y="467.0" width="8.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="391.8" y="478.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.12%)</title><rect x="392.9" y="451.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="395.9" y="462.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.23%)</title><rect x="394.3" y="451.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="397.3" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (1 samples, 0.12%)</title><rect x="397.0" y="499.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="400.0" y="510.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.12%)</title><rect x="397.0" y="483.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="400.0" y="494.0"></text>
</g>
<g>
<title>ip_output (52 samples, 5.98%)</title><rect x="398.4" y="531.0" width="70.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="401.4" y="542.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (49 samples, 5.64%)</title><rect x="399.7" y="515.0" width="66.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="402.7" y="526.0">ip_fini..</text>
</g>
<g>
<title>__ip_finish_output (49 samples, 5.64%)</title><rect x="399.7" y="499.0" width="66.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="402.7" y="510.0">__ip_fi..</text>
</g>
<g>
<title>ip_finish_output2 (49 samples, 5.64%)</title><rect x="399.7" y="483.0" width="66.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="402.7" y="494.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (40 samples, 4.60%)</title><rect x="401.1" y="467.0" width="54.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="404.1" y="478.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.20 (40 samples, 4.60%)</title><rect x="401.1" y="451.0" width="54.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="404.1" y="462.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (38 samples, 4.37%)</title><rect x="403.8" y="435.0" width="51.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="406.8" y="446.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (38 samples, 4.37%)</title><rect x="403.8" y="419.0" width="51.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="406.8" y="430.0">__sof..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.12%)</title><rect x="406.5" y="403.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="409.5" y="414.0"></text>
</g>
<g>
<title>net_rx_action (35 samples, 4.03%)</title><rect x="407.9" y="403.0" width="47.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="410.9" y="414.0">net_..</text>
</g>
<g>
<title>process_backlog (34 samples, 3.91%)</title><rect x="409.2" y="387.0" width="46.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="412.2" y="398.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (34 samples, 3.91%)</title><rect x="409.2" y="371.0" width="46.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="412.2" y="382.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (34 samples, 3.91%)</title><rect x="409.2" y="355.0" width="46.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="412.2" y="366.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.12%)</title><rect x="410.6" y="339.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="413.6" y="350.0"></text>
</g>
<g>
<title>ip_rcv (31 samples, 3.57%)</title><rect x="411.9" y="339.0" width="42.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="414.9" y="350.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (26 samples, 2.99%)</title><rect x="411.9" y="323.0" width="35.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="414.9" y="334.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (26 samples, 2.99%)</title><rect x="411.9" y="307.0" width="35.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="414.9" y="318.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (25 samples, 2.88%)</title><rect x="411.9" y="291.0" width="34.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="414.9" y="302.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (25 samples, 2.88%)</title><rect x="411.9" y="275.0" width="34.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="414.9" y="286.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (25 samples, 2.88%)</title><rect x="411.9" y="259.0" width="34.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="414.9" y="270.0">tc..</text>
</g>
<g>
<title>tcp_v4_do_rcv (25 samples, 2.88%)</title><rect x="411.9" y="243.0" width="34.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="414.9" y="254.0">tc..</text>
</g>
<g>
<title>tcp_rcv_established (25 samples, 2.88%)</title><rect x="411.9" y="227.0" width="34.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="414.9" y="238.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.12%)</title><rect x="414.6" y="211.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="417.6" y="222.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.46%)</title><rect x="416.0" y="211.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="419.0" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.46%)</title><rect x="416.0" y="195.0" width="5.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="419.0" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.35%)</title><rect x="417.4" y="179.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="420.4" y="190.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.12%)</title><rect x="417.4" y="163.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="420.4" y="174.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.12%)</title><rect x="417.4" y="147.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="420.4" y="158.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.12%)</title><rect x="417.4" y="131.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="420.4" y="142.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.23%)</title><rect x="418.7" y="163.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="421.7" y="174.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.23%)</title><rect x="418.7" y="147.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="421.7" y="158.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.12%)</title><rect x="420.1" y="131.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="423.1" y="142.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.12%)</title><rect x="420.1" y="115.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="423.1" y="126.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.12%)</title><rect x="420.1" y="99.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="423.1" y="110.0"></text>
</g>
<g>
<title>tcp_data_ready (17 samples, 1.96%)</title><rect x="421.4" y="211.0" width="23.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="424.4" y="222.0">t..</text>
</g>
<g>
<title>sock_def_readable (17 samples, 1.96%)</title><rect x="421.4" y="195.0" width="23.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="424.4" y="206.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (17 samples, 1.96%)</title><rect x="421.4" y="179.0" width="23.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="424.4" y="190.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (17 samples, 1.96%)</title><rect x="421.4" y="163.0" width="23.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="424.4" y="174.0">_..</text>
</g>
<g>
<title>__lock_text_start (16 samples, 1.84%)</title><rect x="422.8" y="147.0" width="21.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="425.8" y="158.0">_..</text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.12%)</title><rect x="444.5" y="211.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="447.5" y="222.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.12%)</title><rect x="445.9" y="291.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="448.9" y="302.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (2 samples, 0.23%)</title><rect x="447.2" y="323.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="450.2" y="334.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.23%)</title><rect x="450.0" y="323.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="453.0" y="334.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat] (1 samples, 0.12%)</title><rect x="452.7" y="323.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="455.7" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.12%)</title><rect x="454.0" y="339.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="457.0" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (8 samples, 0.92%)</title><rect x="455.4" y="467.0" width="10.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="458.4" y="478.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.92%)</title><rect x="455.4" y="451.0" width="10.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="458.4" y="462.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.46%)</title><rect x="458.1" y="435.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="461.1" y="446.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.23%)</title><rect x="460.8" y="419.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="463.8" y="430.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.12%)</title><rect x="462.2" y="403.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="465.2" y="414.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.12%)</title><rect x="462.2" y="387.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="465.2" y="398.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.12%)</title><rect x="462.2" y="371.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="465.2" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.23%)</title><rect x="463.5" y="435.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="466.5" y="446.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.12%)</title><rect x="464.9" y="419.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="467.9" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.23%)</title><rect x="466.2" y="515.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="469.2" y="526.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.12%)</title><rect x="466.2" y="499.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="469.2" y="510.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.12%)</title><rect x="466.2" y="483.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="469.2" y="494.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.12%)</title><rect x="467.6" y="499.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="470.6" y="510.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.12%)</title><rect x="469.0" y="531.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="472.0" y="542.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.23%)</title><rect x="470.3" y="579.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="473.3" y="590.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.23%)</title><rect x="470.3" y="563.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="473.3" y="574.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.12%)</title><rect x="473.0" y="579.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="476.0" y="590.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.12%)</title><rect x="474.4" y="579.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="477.4" y="590.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.12%)</title><rect x="475.8" y="595.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="478.8" y="606.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.12%)</title><rect x="477.1" y="595.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="480.1" y="606.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.12%)</title><rect x="477.1" y="579.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="480.1" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.12%)</title><rect x="477.1" y="563.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="480.1" y="574.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.12%)</title><rect x="477.1" y="547.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="480.1" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.12%)</title><rect x="478.5" y="643.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="481.5" y="654.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.12%)</title><rect x="478.5" y="627.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="481.5" y="638.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.12%)</title><rect x="478.5" y="611.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="481.5" y="622.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.12%)</title><rect x="479.8" y="643.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="482.8" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.12%)</title><rect x="481.2" y="723.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="484.2" y="734.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (1 samples, 0.12%)</title><rect x="482.5" y="803.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="485.5" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (1 samples, 0.12%)</title><rect x="482.5" y="787.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.5" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (1 samples, 0.12%)</title><rect x="482.5" y="771.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.5" y="782.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (5 samples, 0.58%)</title><rect x="483.9" y="803.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="486.9" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (5 samples, 0.58%)</title><rect x="483.9" y="787.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="486.9" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (5 samples, 0.58%)</title><rect x="483.9" y="771.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.12%)</title><rect x="489.3" y="755.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="492.3" y="766.0"></text>
</g>
<g>
<title>Klass::is_klass() const volatile (1 samples, 0.12%)</title><rect x="489.3" y="739.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="492.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.12%)</title><rect x="489.3" y="723.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="492.3" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.12%)</title><rect x="489.3" y="707.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="492.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.sendAnswerOrError (96 samples, 11.05%)</title><rect x="490.7" y="835.0" width="130.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="493.7" y="846.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (96 samples, 11.05%)</title><rect x="490.7" y="819.0" width="130.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.7" y="830.0">one/nio/http/Htt..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.23%)</title><rect x="493.4" y="803.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.23%)</title><rect x="493.4" y="787.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="496.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.23%)</title><rect x="493.4" y="771.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="496.4" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.12%)</title><rect x="494.8" y="755.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="497.8" y="766.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.12%)</title><rect x="494.8" y="739.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="497.8" y="750.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.12%)</title><rect x="494.8" y="723.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="497.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (92 samples, 10.59%)</title><rect x="496.1" y="803.0" width="124.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="499.1" y="814.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.46%)</title><rect x="496.1" y="787.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="499.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.23%)</title><rect x="498.8" y="771.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.23%)</title><rect x="498.8" y="755.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.23%)</title><rect x="498.8" y="739.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (88 samples, 10.13%)</title><rect x="501.6" y="787.0" width="119.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="504.6" y="798.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/net/Session.write (88 samples, 10.13%)</title><rect x="501.6" y="771.0" width="119.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="504.6" y="782.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (88 samples, 10.13%)</title><rect x="501.6" y="755.0" width="119.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.6" y="766.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.12%)</title><rect x="501.6" y="739.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="504.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (87 samples, 10.01%)</title><rect x="502.9" y="739.0" width="118.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="505.9" y="750.0">one/nio/net/Na..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.58%)</title><rect x="504.3" y="723.0" width="6.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="507.3" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.12%)</title><rect x="505.6" y="707.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="508.6" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (1 samples, 0.12%)</title><rect x="507.0" y="707.0" width="1.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="510.0" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.23%)</title><rect x="508.3" y="707.0" width="2.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="511.3" y="718.0"></text>
</g>
<g>
<title>__libc_send (81 samples, 9.32%)</title><rect x="511.1" y="723.0" width="109.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="514.1" y="734.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (81 samples, 9.32%)</title><rect x="511.1" y="707.0" width="109.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="514.1" y="718.0">entry_SYSCALL..</text>
</g>
<g>
<title>do_syscall_64 (81 samples, 9.32%)</title><rect x="511.1" y="691.0" width="109.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="514.1" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (80 samples, 9.21%)</title><rect x="512.4" y="675.0" width="108.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="515.4" y="686.0">__x64_sys_sen..</text>
</g>
<g>
<title>__sys_sendto (80 samples, 9.21%)</title><rect x="512.4" y="659.0" width="108.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="515.4" y="670.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (76 samples, 8.75%)</title><rect x="516.5" y="643.0" width="103.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="519.5" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (75 samples, 8.63%)</title><rect x="516.5" y="627.0" width="101.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="519.5" y="638.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (75 samples, 8.63%)</title><rect x="516.5" y="611.0" width="101.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="519.5" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.12%)</title><rect x="516.5" y="595.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="519.5" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (74 samples, 8.52%)</title><rect x="517.8" y="595.0" width="100.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="520.8" y="606.0">tcp_sendmsg_..</text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.23%)</title><rect x="520.6" y="579.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="523.6" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.23%)</title><rect x="520.6" y="563.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="523.6" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.58%)</title><rect x="523.3" y="579.0" width="6.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="526.3" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.58%)</title><rect x="523.3" y="563.0" width="6.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="526.3" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.12%)</title><rect x="526.0" y="547.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="529.0" y="558.0"></text>
</g>
<g>
<title>memset (1 samples, 0.12%)</title><rect x="526.0" y="531.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="529.0" y="542.0"></text>
</g>
<g>
<title>memset (2 samples, 0.23%)</title><rect x="527.4" y="547.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="530.4" y="558.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.12%)</title><rect x="530.1" y="579.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="533.1" y="590.0"></text>
</g>
<g>
<title>tcp_push (64 samples, 7.36%)</title><rect x="531.4" y="579.0" width="86.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="534.4" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (64 samples, 7.36%)</title><rect x="531.4" y="563.0" width="86.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="534.4" y="574.0">__tcp_push..</text>
</g>
<g>
<title>tcp_write_xmit (64 samples, 7.36%)</title><rect x="531.4" y="547.0" width="86.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="534.4" y="558.0">tcp_write_..</text>
</g>
<g>
<title>__tcp_transmit_skb (56 samples, 6.44%)</title><rect x="534.1" y="531.0" width="76.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="537.1" y="542.0">__tcp_tr..</text>
</g>
<g>
<title>ip_queue_xmit (53 samples, 6.10%)</title><rect x="538.2" y="515.0" width="72.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="541.2" y="526.0">ip_queue..</text>
</g>
<g>
<title>__ip_queue_xmit (53 samples, 6.10%)</title><rect x="538.2" y="499.0" width="72.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="541.2" y="510.0">__ip_que..</text>
</g>
<g>
<title>ip_local_out (52 samples, 5.98%)</title><rect x="539.6" y="483.0" width="70.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="542.6" y="494.0">ip_local..</text>
</g>
<g>
<title>__ip_local_out (12 samples, 1.38%)</title><rect x="539.6" y="467.0" width="16.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="542.6" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 1.38%)</title><rect x="539.6" y="451.0" width="16.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="542.6" y="462.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.12%)</title><rect x="540.9" y="435.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="543.9" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.23%)</title><rect x="542.3" y="435.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="545.3" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.23%)</title><rect x="542.3" y="419.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="545.3" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (8 samples, 0.92%)</title><rect x="545.0" y="435.0" width="10.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="548.0" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (8 samples, 0.92%)</title><rect x="545.0" y="419.0" width="10.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="548.0" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (5 samples, 0.58%)</title><rect x="546.4" y="403.0" width="6.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="549.4" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (2 samples, 0.23%)</title><rect x="553.2" y="403.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="556.2" y="414.0"></text>
</g>
<g>
<title>ip_output (40 samples, 4.60%)</title><rect x="555.9" y="467.0" width="54.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="558.9" y="478.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (38 samples, 4.37%)</title><rect x="555.9" y="451.0" width="51.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="558.9" y="462.0">ip_fi..</text>
</g>
<g>
<title>__ip_finish_output (38 samples, 4.37%)</title><rect x="555.9" y="435.0" width="51.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="558.9" y="446.0">__ip_..</text>
</g>
<g>
<title>ip_finish_output2 (38 samples, 4.37%)</title><rect x="555.9" y="419.0" width="51.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="558.9" y="430.0">ip_fi..</text>
</g>
<g>
<title>__local_bh_enable_ip (36 samples, 4.14%)</title><rect x="555.9" y="403.0" width="48.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="558.9" y="414.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.20 (36 samples, 4.14%)</title><rect x="555.9" y="387.0" width="48.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="558.9" y="398.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (36 samples, 4.14%)</title><rect x="555.9" y="371.0" width="48.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="558.9" y="382.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (36 samples, 4.14%)</title><rect x="555.9" y="355.0" width="48.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="558.9" y="366.0">__so..</text>
</g>
<g>
<title>net_rx_action (36 samples, 4.14%)</title><rect x="555.9" y="339.0" width="48.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="558.9" y="350.0">net_..</text>
</g>
<g>
<title>process_backlog (36 samples, 4.14%)</title><rect x="555.9" y="323.0" width="48.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="558.9" y="334.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (34 samples, 3.91%)</title><rect x="558.6" y="307.0" width="46.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="561.6" y="318.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (34 samples, 3.91%)</title><rect x="558.6" y="291.0" width="46.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="561.6" y="302.0">__ne..</text>
</g>
<g>
<title>ip_rcv (34 samples, 3.91%)</title><rect x="558.6" y="275.0" width="46.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="561.6" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.12%)</title><rect x="558.6" y="259.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="561.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (33 samples, 3.80%)</title><rect x="559.9" y="259.0" width="44.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="562.9" y="270.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (33 samples, 3.80%)</title><rect x="559.9" y="243.0" width="44.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="562.9" y="254.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (32 samples, 3.68%)</title><rect x="559.9" y="227.0" width="43.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="562.9" y="238.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (32 samples, 3.68%)</title><rect x="559.9" y="211.0" width="43.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="562.9" y="222.0">ip_p..</text>
</g>
<g>
<title>tcp_v4_rcv (30 samples, 3.45%)</title><rect x="562.7" y="195.0" width="40.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="565.7" y="206.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.46%)</title><rect x="566.7" y="179.0" width="5.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="569.7" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (23 samples, 2.65%)</title><rect x="572.2" y="179.0" width="31.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="575.2" y="190.0">tc..</text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.12%)</title><rect x="572.2" y="163.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="575.2" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (22 samples, 2.53%)</title><rect x="573.5" y="163.0" width="29.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="576.5" y="174.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.23%)</title><rect x="573.5" y="147.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="576.5" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.23%)</title><rect x="573.5" y="131.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="576.5" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.23%)</title><rect x="573.5" y="115.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="576.5" y="126.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.12%)</title><rect x="573.5" y="99.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="576.5" y="110.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.12%)</title><rect x="574.9" y="99.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="577.9" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.12%)</title><rect x="574.9" y="83.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="577.9" y="94.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.12%)</title><rect x="576.2" y="147.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="579.2" y="158.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 1.15%)</title><rect x="577.6" y="147.0" width="13.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="580.6" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (9 samples, 1.04%)</title><rect x="579.0" y="131.0" width="12.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="582.0" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.69%)</title><rect x="580.3" y="115.0" width="8.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="583.3" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.12%)</title><rect x="580.3" y="99.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="583.3" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.12%)</title><rect x="580.3" y="83.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="583.3" y="94.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.46%)</title><rect x="581.7" y="99.0" width="5.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="584.7" y="110.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.46%)</title><rect x="581.7" y="83.0" width="5.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="584.7" y="94.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.23%)</title><rect x="584.4" y="67.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="587.4" y="78.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.23%)</title><rect x="584.4" y="51.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="587.4" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.23%)</title><rect x="584.4" y="35.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="587.4" y="46.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.12%)</title><rect x="587.1" y="99.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="590.1" y="110.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.12%)</title><rect x="588.5" y="115.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="591.5" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (1 samples, 0.12%)</title><rect x="589.8" y="115.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="592.8" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.12%)</title><rect x="591.2" y="147.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="594.2" y="158.0"></text>
</g>
<g>
<title>tcp_data_ready (6 samples, 0.69%)</title><rect x="592.5" y="147.0" width="8.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="595.5" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (6 samples, 0.69%)</title><rect x="592.5" y="131.0" width="8.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="595.5" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 0.69%)</title><rect x="592.5" y="115.0" width="8.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="595.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.69%)</title><rect x="592.5" y="99.0" width="8.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="595.5" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.69%)</title><rect x="592.5" y="83.0" width="8.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="595.5" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.12%)</title><rect x="600.7" y="147.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="603.7" y="158.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.12%)</title><rect x="602.0" y="147.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="605.0" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.12%)</title><rect x="603.4" y="227.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="606.4" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.12%)</title><rect x="603.4" y="211.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="606.4" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.12%)</title><rect x="603.4" y="195.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="606.4" y="206.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.23%)</title><rect x="604.8" y="403.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="607.8" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.23%)</title><rect x="604.8" y="387.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="607.8" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.23%)</title><rect x="604.8" y="371.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="607.8" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.12%)</title><rect x="606.1" y="355.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="609.1" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.12%)</title><rect x="606.1" y="339.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="609.1" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.23%)</title><rect x="607.5" y="451.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="610.5" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.12%)</title><rect x="608.8" y="435.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="611.8" y="446.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.12%)</title><rect x="610.2" y="531.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="613.2" y="542.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.35%)</title><rect x="611.5" y="531.0" width="4.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="614.5" y="542.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.23%)</title><rect x="612.9" y="515.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="615.9" y="526.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.12%)</title><rect x="615.6" y="531.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="618.6" y="542.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.12%)</title><rect x="617.0" y="531.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="620.0" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.12%)</title><rect x="618.3" y="627.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="621.3" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.12%)</title><rect x="618.3" y="611.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="621.3" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.12%)</title><rect x="618.3" y="595.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="621.3" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.12%)</title><rect x="618.3" y="579.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="621.3" y="590.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.12%)</title><rect x="618.3" y="563.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="621.3" y="574.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.12%)</title><rect x="618.3" y="547.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="621.3" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.12%)</title><rect x="619.7" y="643.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="622.7" y="654.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.12%)</title><rect x="619.7" y="627.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="622.7" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.12%)</title><rect x="619.7" y="611.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="622.7" y="622.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.12%)</title><rect x="619.7" y="595.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="622.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.isLocal (2 samples, 0.23%)</title><rect x="621.0" y="835.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.0" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.isLocal (2 samples, 0.23%)</title><rect x="621.0" y="819.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="624.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.23%)</title><rect x="621.0" y="803.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="624.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (9 samples, 1.04%)</title><rect x="623.8" y="835.0" width="12.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="626.8" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (9 samples, 1.04%)</title><rect x="623.8" y="819.0" width="12.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$NodeKeyPair.hashCodeOf (9 samples, 1.04%)</title><rect x="623.8" y="803.0" width="12.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="626.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.35%)</title><rect x="630.6" y="787.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.6" y="798.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (1 samples, 0.12%)</title><rect x="634.6" y="787.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.sendAnswerOrError (133 samples, 15.30%)</title><rect x="636.0" y="851.0" width="180.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="639.0" y="862.0">ru/mail/polis/service/a..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (133 samples, 15.30%)</title><rect x="636.0" y="835.0" width="180.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="639.0" y="846.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (131 samples, 15.07%)</title><rect x="638.7" y="819.0" width="177.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="641.7" y="830.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.46%)</title><rect x="638.7" y="803.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="641.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.23%)</title><rect x="641.4" y="787.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="644.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.23%)</title><rect x="641.4" y="771.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.23%)</title><rect x="641.4" y="755.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (127 samples, 14.61%)</title><rect x="644.1" y="803.0" width="172.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="647.1" y="814.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>one/nio/net/Session.write (127 samples, 14.61%)</title><rect x="644.1" y="787.0" width="172.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.1" y="798.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (127 samples, 14.61%)</title><rect x="644.1" y="771.0" width="172.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.1" y="782.0">one/nio/net/Session$Ar..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.12%)</title><rect x="644.1" y="755.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="647.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (126 samples, 14.50%)</title><rect x="645.5" y="755.0" width="171.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="648.5" y="766.0">one/nio/net/NativeSock..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.58%)</title><rect x="645.5" y="739.0" width="6.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="648.5" y="750.0"></text>
</g>
<g>
<title>__memmove_ssse3 (2 samples, 0.23%)</title><rect x="646.8" y="723.0" width="2.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="649.8" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.23%)</title><rect x="649.6" y="723.0" width="2.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="652.6" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.12%)</title><rect x="649.6" y="707.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="652.6" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.12%)</title><rect x="650.9" y="707.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="653.9" y="718.0"></text>
</g>
<g>
<title>__libc_send (121 samples, 13.92%)</title><rect x="652.3" y="739.0" width="164.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="655.3" y="750.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (120 samples, 13.81%)</title><rect x="653.6" y="723.0" width="163.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="656.6" y="734.0">entry_SYSCALL_64_afte..</text>
</g>
<g>
<title>do_syscall_64 (120 samples, 13.81%)</title><rect x="653.6" y="707.0" width="163.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="656.6" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (117 samples, 13.46%)</title><rect x="657.7" y="691.0" width="158.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="660.7" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (117 samples, 13.46%)</title><rect x="657.7" y="675.0" width="158.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="660.7" y="686.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (1 samples, 0.12%)</title><rect x="660.4" y="659.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="663.4" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (110 samples, 12.66%)</title><rect x="661.8" y="659.0" width="149.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="664.8" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (107 samples, 12.31%)</title><rect x="663.1" y="643.0" width="145.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="666.1" y="654.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (106 samples, 12.20%)</title><rect x="663.1" y="627.0" width="144.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="666.1" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.23%)</title><rect x="663.1" y="611.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="666.1" y="622.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.12%)</title><rect x="665.9" y="611.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="668.9" y="622.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.12%)</title><rect x="667.2" y="611.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="670.2" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (102 samples, 11.74%)</title><rect x="668.6" y="611.0" width="138.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="671.6" y="622.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.12%)</title><rect x="668.6" y="595.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="671.6" y="606.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.23%)</title><rect x="669.9" y="595.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="672.9" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.23%)</title><rect x="669.9" y="579.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="672.9" y="590.0"></text>
</g>
<g>
<title>alloc_pages_current (1 samples, 0.12%)</title><rect x="671.3" y="563.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="674.3" y="574.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.12%)</title><rect x="671.3" y="547.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="674.3" y="558.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.12%)</title><rect x="671.3" y="531.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="674.3" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (10 samples, 1.15%)</title><rect x="672.6" y="595.0" width="13.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="675.6" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.81%)</title><rect x="675.4" y="579.0" width="9.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="678.4" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (3 samples, 0.35%)</title><rect x="675.4" y="563.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="678.4" y="574.0"></text>
</g>
<g>
<title>memset (3 samples, 0.35%)</title><rect x="675.4" y="547.0" width="4.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="678.4" y="558.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.23%)</title><rect x="679.4" y="563.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="682.4" y="574.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.12%)</title><rect x="682.2" y="563.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="685.2" y="574.0"></text>
</g>
<g>
<title>memset (1 samples, 0.12%)</title><rect x="683.5" y="563.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="686.5" y="574.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.12%)</title><rect x="684.9" y="579.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="687.9" y="590.0"></text>
</g>
<g>
<title>tcp_push (85 samples, 9.78%)</title><rect x="686.2" y="595.0" width="115.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="689.2" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (85 samples, 9.78%)</title><rect x="686.2" y="579.0" width="115.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="689.2" y="590.0">__tcp_push_pen..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.12%)</title><rect x="686.2" y="563.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="689.2" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (84 samples, 9.67%)</title><rect x="687.6" y="563.0" width="114.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="690.6" y="574.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (80 samples, 9.21%)</title><rect x="688.9" y="547.0" width="108.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="691.9" y="558.0">__tcp_transmi..</text>
</g>
<g>
<title>ip_queue_xmit (78 samples, 8.98%)</title><rect x="690.3" y="531.0" width="105.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="693.3" y="542.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (78 samples, 8.98%)</title><rect x="690.3" y="515.0" width="105.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="693.3" y="526.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (77 samples, 8.86%)</title><rect x="690.3" y="499.0" width="104.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="693.3" y="510.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (13 samples, 1.50%)</title><rect x="690.3" y="483.0" width="17.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="693.3" y="494.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.12%)</title><rect x="690.3" y="467.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="693.3" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.12%)</title><rect x="691.7" y="467.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="694.7" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.12%)</title><rect x="693.0" y="467.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="696.0" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 1.15%)</title><rect x="694.4" y="467.0" width="13.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="697.4" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.23%)</title><rect x="694.4" y="451.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="697.4" y="462.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.12%)</title><rect x="695.7" y="435.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="698.7" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (6 samples, 0.69%)</title><rect x="697.1" y="451.0" width="8.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="700.1" y="462.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (6 samples, 0.69%)</title><rect x="697.1" y="435.0" width="8.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="700.1" y="446.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.12%)</title><rect x="697.1" y="419.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="700.1" y="430.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.12%)</title><rect x="698.4" y="419.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="701.4" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (4 samples, 0.46%)</title><rect x="699.8" y="419.0" width="5.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="702.8" y="430.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (3 samples, 0.35%)</title><rect x="701.2" y="403.0" width="4.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="704.2" y="414.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.23%)</title><rect x="702.5" y="387.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="705.5" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.23%)</title><rect x="705.2" y="451.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="708.2" y="462.0"></text>
</g>
<g>
<title>ip_output (64 samples, 7.36%)</title><rect x="708.0" y="483.0" width="86.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="711.0" y="494.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (62 samples, 7.13%)</title><rect x="708.0" y="467.0" width="84.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="711.0" y="478.0">ip_finish_..</text>
</g>
<g>
<title>__ip_finish_output (62 samples, 7.13%)</title><rect x="708.0" y="451.0" width="84.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="711.0" y="462.0">__ip_finis..</text>
</g>
<g>
<title>ip_finish_output2 (61 samples, 7.02%)</title><rect x="709.3" y="435.0" width="82.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="712.3" y="446.0">ip_finish..</text>
</g>
<g>
<title>__local_bh_enable_ip (53 samples, 6.10%)</title><rect x="713.4" y="419.0" width="72.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="716.4" y="430.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.20 (53 samples, 6.10%)</title><rect x="713.4" y="403.0" width="72.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="716.4" y="414.0">do_softi..</text>
</g>
<g>
<title>do_softirq_own_stack (53 samples, 6.10%)</title><rect x="713.4" y="387.0" width="72.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="716.4" y="398.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (53 samples, 6.10%)</title><rect x="713.4" y="371.0" width="72.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="716.4" y="382.0">__softir..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.12%)</title><rect x="716.1" y="355.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="719.1" y="366.0"></text>
</g>
<g>
<title>net_rx_action (50 samples, 5.75%)</title><rect x="717.5" y="355.0" width="67.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="720.5" y="366.0">net_rx_..</text>
</g>
<g>
<title>process_backlog (50 samples, 5.75%)</title><rect x="717.5" y="339.0" width="67.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="720.5" y="350.0">process..</text>
</g>
<g>
<title>__netif_receive_skb (49 samples, 5.64%)</title><rect x="717.5" y="323.0" width="66.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="720.5" y="334.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (49 samples, 5.64%)</title><rect x="717.5" y="307.0" width="66.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="720.5" y="318.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.12%)</title><rect x="717.5" y="291.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="720.5" y="302.0"></text>
</g>
<g>
<title>ip_rcv (47 samples, 5.41%)</title><rect x="718.8" y="291.0" width="63.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="721.8" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (45 samples, 5.18%)</title><rect x="718.8" y="275.0" width="61.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="721.8" y="286.0">ip_rcv..</text>
</g>
<g>
<title>ip_local_deliver (44 samples, 5.06%)</title><rect x="718.8" y="259.0" width="59.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="721.8" y="270.0">ip_loc..</text>
</g>
<g>
<title>ip_local_deliver_finish (43 samples, 4.95%)</title><rect x="718.8" y="243.0" width="58.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="721.8" y="254.0">ip_loc..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (43 samples, 4.95%)</title><rect x="718.8" y="227.0" width="58.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="721.8" y="238.0">ip_pro..</text>
</g>
<g>
<title>tcp_v4_rcv (43 samples, 4.95%)</title><rect x="718.8" y="211.0" width="58.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="721.8" y="222.0">tcp_v4..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.23%)</title><rect x="720.2" y="195.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="723.2" y="206.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.12%)</title><rect x="722.9" y="195.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="725.9" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.12%)</title><rect x="724.2" y="195.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="727.2" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.12%)</title><rect x="724.2" y="179.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="727.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (38 samples, 4.37%)</title><rect x="725.6" y="195.0" width="51.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="728.6" y="206.0">tcp_v..</text>
</g>
<g>
<title>tcp_rcv_established (38 samples, 4.37%)</title><rect x="725.6" y="179.0" width="51.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="728.6" y="190.0">tcp_r..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.23%)</title><rect x="725.6" y="163.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="728.6" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.23%)</title><rect x="725.6" y="147.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="728.6" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.12%)</title><rect x="727.0" y="131.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="730.0" y="142.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.12%)</title><rect x="727.0" y="115.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="730.0" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.12%)</title><rect x="727.0" y="99.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="730.0" y="110.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.58%)</title><rect x="728.3" y="163.0" width="6.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="731.3" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.23%)</title><rect x="731.0" y="147.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="734.0" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.12%)</title><rect x="732.4" y="131.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="735.4" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.12%)</title><rect x="732.4" y="115.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="735.4" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.12%)</title><rect x="732.4" y="99.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="735.4" y="110.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.12%)</title><rect x="732.4" y="83.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="735.4" y="94.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.12%)</title><rect x="733.8" y="147.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="736.8" y="158.0"></text>
</g>
<g>
<title>tcp_data_ready (29 samples, 3.34%)</title><rect x="735.1" y="163.0" width="39.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="738.1" y="174.0">tcp..</text>
</g>
<g>
<title>sock_def_readable (29 samples, 3.34%)</title><rect x="735.1" y="147.0" width="39.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="738.1" y="158.0">soc..</text>
</g>
<g>
<title>__wake_up_sync_key (29 samples, 3.34%)</title><rect x="735.1" y="131.0" width="39.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="738.1" y="142.0">__w..</text>
</g>
<g>
<title>__wake_up_common_lock (29 samples, 3.34%)</title><rect x="735.1" y="115.0" width="39.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="738.1" y="126.0">__w..</text>
</g>
<g>
<title>__lock_text_start (29 samples, 3.34%)</title><rect x="735.1" y="99.0" width="39.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="738.1" y="110.0">__l..</text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.23%)</title><rect x="774.5" y="163.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="777.5" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.12%)</title><rect x="777.2" y="243.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="780.2" y="254.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.12%)</title><rect x="777.2" y="227.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="780.2" y="238.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.12%)</title><rect x="777.2" y="211.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="780.2" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.12%)</title><rect x="778.6" y="259.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="781.6" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.12%)</title><rect x="779.9" y="275.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="782.9" y="286.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (1 samples, 0.12%)</title><rect x="781.3" y="275.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="784.3" y="286.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.12%)</title><rect x="782.6" y="291.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="785.6" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.12%)</title><rect x="784.0" y="323.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="787.0" y="334.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.58%)</title><rect x="785.4" y="419.0" width="6.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="788.4" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.46%)</title><rect x="785.4" y="403.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="788.4" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.12%)</title><rect x="786.7" y="387.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="789.7" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.12%)</title><rect x="788.1" y="387.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="791.1" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.12%)</title><rect x="788.1" y="371.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="791.1" y="382.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.12%)</title><rect x="788.1" y="355.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="791.1" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.12%)</title><rect x="788.1" y="339.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="791.1" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.12%)</title><rect x="788.1" y="323.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="791.1" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.12%)</title><rect x="789.4" y="387.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="792.4" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.12%)</title><rect x="790.8" y="403.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="793.8" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.12%)</title><rect x="792.1" y="467.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="795.1" y="478.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat] (1 samples, 0.12%)</title><rect x="792.1" y="451.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="795.1" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.12%)</title><rect x="792.1" y="435.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="795.1" y="446.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (1 samples, 0.12%)</title><rect x="792.1" y="419.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="795.1" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat] (1 samples, 0.12%)</title><rect x="793.5" y="467.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="796.5" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.12%)</title><rect x="794.9" y="499.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="797.9" y="510.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.12%)</title><rect x="796.2" y="531.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="799.2" y="542.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.12%)</title><rect x="796.2" y="515.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="799.2" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.12%)</title><rect x="797.6" y="547.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="800.6" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.12%)</title><rect x="797.6" y="531.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="800.6" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.12%)</title><rect x="797.6" y="515.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="800.6" y="526.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.12%)</title><rect x="797.6" y="499.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="800.6" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.12%)</title><rect x="797.6" y="483.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="800.6" y="494.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.33 (1 samples, 0.12%)</title><rect x="798.9" y="547.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="801.9" y="558.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.12%)</title><rect x="800.3" y="547.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="803.3" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.46%)</title><rect x="801.6" y="595.0" width="5.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="804.6" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.12%)</title><rect x="803.0" y="579.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="806.0" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.23%)</title><rect x="804.4" y="579.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="807.4" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.12%)</title><rect x="805.7" y="563.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="808.7" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.12%)</title><rect x="807.1" y="627.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="810.1" y="638.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.23%)</title><rect x="808.4" y="643.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="811.4" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.23%)</title><rect x="808.4" y="627.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="811.4" y="638.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.23%)</title><rect x="808.4" y="611.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="811.4" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.23%)</title><rect x="808.4" y="595.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="811.4" y="606.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.12%)</title><rect x="809.8" y="579.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="812.8" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.46%)</title><rect x="811.2" y="659.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="814.2" y="670.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.46%)</title><rect x="811.2" y="643.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="814.2" y="654.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.46%)</title><rect x="811.2" y="627.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="814.2" y="638.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.35%)</title><rect x="812.5" y="611.0" width="4.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="815.5" y="622.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (11 samples, 1.27%)</title><rect x="816.6" y="883.0" width="14.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="819.6" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (11 samples, 1.27%)</title><rect x="816.6" y="867.0" width="14.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="819.6" y="878.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$109/1504332826.run (11 samples, 1.27%)</title><rect x="816.6" y="851.0" width="14.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="819.6" y="862.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (11 samples, 1.27%)</title><rect x="816.6" y="835.0" width="14.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="819.6" y="846.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (11 samples, 1.27%)</title><rect x="816.6" y="819.0" width="14.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="819.6" y="830.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (11 samples, 1.27%)</title><rect x="816.6" y="803.0" width="14.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.6" y="814.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.12%)</title><rect x="816.6" y="787.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.6" y="798.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.read (1 samples, 0.12%)</title><rect x="816.6" y="771.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="819.6" y="782.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.fill (1 samples, 0.12%)</title><rect x="816.6" y="755.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="819.6" y="766.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.read (1 samples, 0.12%)</title><rect x="816.6" y="739.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.6" y="750.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.read (1 samples, 0.12%)</title><rect x="816.6" y="723.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="819.6" y="734.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.socketRead (1 samples, 0.12%)</title><rect x="816.6" y="707.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="819.6" y="718.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.socketRead0 (1 samples, 0.12%)</title><rect x="816.6" y="691.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="819.6" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (10 samples, 1.15%)</title><rect x="817.9" y="787.0" width="13.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="820.9" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (9 samples, 1.04%)</title><rect x="817.9" y="771.0" width="12.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="820.9" y="782.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (9 samples, 1.04%)</title><rect x="817.9" y="755.0" width="12.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="820.9" y="766.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (9 samples, 1.04%)</title><rect x="817.9" y="739.0" width="12.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="820.9" y="750.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (9 samples, 1.04%)</title><rect x="817.9" y="723.0" width="12.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="820.9" y="734.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.46%)</title><rect x="817.9" y="707.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="820.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.46%)</title><rect x="817.9" y="691.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="820.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (4 samples, 0.46%)</title><rect x="817.9" y="675.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="820.9" y="686.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (4 samples, 0.46%)</title><rect x="817.9" y="659.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="820.9" y="670.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (4 samples, 0.46%)</title><rect x="817.9" y="643.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="820.9" y="654.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (4 samples, 0.46%)</title><rect x="817.9" y="627.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.9" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (4 samples, 0.46%)</title><rect x="817.9" y="611.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="820.9" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (4 samples, 0.46%)</title><rect x="817.9" y="595.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="820.9" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (4 samples, 0.46%)</title><rect x="817.9" y="579.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="820.9" y="590.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (4 samples, 0.46%)</title><rect x="817.9" y="563.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="820.9" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (4 samples, 0.46%)</title><rect x="817.9" y="547.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="820.9" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (4 samples, 0.46%)</title><rect x="817.9" y="531.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="820.9" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (4 samples, 0.46%)</title><rect x="817.9" y="515.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.9" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (4 samples, 0.46%)</title><rect x="817.9" y="499.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="820.9" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (4 samples, 0.46%)</title><rect x="817.9" y="483.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="820.9" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (4 samples, 0.46%)</title><rect x="817.9" y="467.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="820.9" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (4 samples, 0.46%)</title><rect x="817.9" y="451.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="820.9" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (3 samples, 0.35%)</title><rect x="817.9" y="435.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="820.9" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (3 samples, 0.35%)</title><rect x="817.9" y="419.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="820.9" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (3 samples, 0.35%)</title><rect x="817.9" y="403.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="820.9" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (3 samples, 0.35%)</title><rect x="817.9" y="387.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="820.9" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.12%)</title><rect x="819.3" y="371.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="822.3" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (1 samples, 0.12%)</title><rect x="819.3" y="355.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="822.3" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.12%)</title><rect x="819.3" y="339.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="822.3" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (1 samples, 0.12%)</title><rect x="819.3" y="323.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.3" y="334.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.12%)</title><rect x="819.3" y="307.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="822.3" y="318.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (1 samples, 0.12%)</title><rect x="819.3" y="291.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.3" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.12%)</title><rect x="819.3" y="275.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="822.3" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.12%)</title><rect x="819.3" y="259.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="822.3" y="270.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.12%)</title><rect x="819.3" y="243.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="822.3" y="254.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.12%)</title><rect x="819.3" y="227.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="822.3" y="238.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 0.12%)</title><rect x="820.7" y="371.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="823.7" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.12%)</title><rect x="820.7" y="355.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="823.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.12%)</title><rect x="820.7" y="339.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (1 samples, 0.12%)</title><rect x="820.7" y="323.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="823.7" y="334.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 0.12%)</title><rect x="820.7" y="307.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="823.7" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.12%)</title><rect x="820.7" y="291.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="823.7" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.12%)</title><rect x="820.7" y="275.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.7" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (1 samples, 0.12%)</title><rect x="820.7" y="259.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="823.7" y="270.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 0.12%)</title><rect x="822.0" y="435.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="825.0" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.12%)</title><rect x="822.0" y="419.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="825.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.12%)</title><rect x="822.0" y="403.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="825.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (1 samples, 0.12%)</title><rect x="822.0" y="387.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="825.0" y="398.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 0.12%)</title><rect x="822.0" y="371.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="825.0" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.12%)</title><rect x="822.0" y="355.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="825.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.12%)</title><rect x="822.0" y="339.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="825.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (1 samples, 0.12%)</title><rect x="822.0" y="323.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="825.0" y="334.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (1 samples, 0.12%)</title><rect x="822.0" y="307.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="825.0" y="318.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (1 samples, 0.12%)</title><rect x="822.0" y="291.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="825.0" y="302.0"></text>
</g>
<g>
<title>jmm_GetThreadInfo (1 samples, 0.12%)</title><rect x="822.0" y="275.0" width="1.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="825.0" y="286.0"></text>
</g>
<g>
<title>Management::create_thread_info_instance(ThreadSnapshot*, Thread*) (1 samples, 0.12%)</title><rect x="822.0" y="259.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="825.0" y="270.0"></text>
</g>
<g>
<title>initialize_ThreadInfo_constructor_arguments(JavaCallArguments*, ThreadSnapshot*, Thread*) (1 samples, 0.12%)</title><rect x="822.0" y="243.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="825.0" y="254.0"></text>
</g>
<g>
<title>ThreadStackTrace::allocate_fill_stack_trace_element_array(Thread*) (1 samples, 0.12%)</title><rect x="822.0" y="227.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="825.0" y="238.0"></text>
</g>
<g>
<title>java_lang_StackTraceElement::create(methodHandle const&amp;, int, Thread*) (1 samples, 0.12%)</title><rect x="822.0" y="211.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="825.0" y="222.0"></text>
</g>
<g>
<title>java_lang_StackTraceElement::fill_in(Handle, InstanceKlass*, methodHandle const&amp;, int, int, Symbol*, Thread*) (1 samples, 0.12%)</title><rect x="822.0" y="195.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="825.0" y="206.0"></text>
</g>
<g>
<title>StringTable::intern(Symbol*, Thread*) (1 samples, 0.12%)</title><rect x="822.0" y="179.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="825.0" y="190.0"></text>
</g>
<g>
<title>StringTable::intern(Handle, unsigned short*, int, Thread*) (1 samples, 0.12%)</title><rect x="822.0" y="163.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="825.0" y="174.0"></text>
</g>
<g>
<title>StringTable::do_lookup(unsigned short*, int, unsigned long) (1 samples, 0.12%)</title><rect x="822.0" y="147.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="825.0" y="158.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (3 samples, 0.35%)</title><rect x="823.4" y="707.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="826.4" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (3 samples, 0.35%)</title><rect x="823.4" y="691.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="826.4" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.35%)</title><rect x="823.4" y="675.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.4" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (3 samples, 0.35%)</title><rect x="823.4" y="659.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.4" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.35%)</title><rect x="823.4" y="643.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="826.4" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.35%)</title><rect x="823.4" y="627.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="826.4" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.35%)</title><rect x="823.4" y="611.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="826.4" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.35%)</title><rect x="823.4" y="595.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="826.4" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.35%)</title><rect x="823.4" y="579.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="826.4" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.35%)</title><rect x="823.4" y="563.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="826.4" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.35%)</title><rect x="823.4" y="547.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="826.4" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (3 samples, 0.35%)</title><rect x="823.4" y="531.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="826.4" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.35%)</title><rect x="823.4" y="515.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="826.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.35%)</title><rect x="823.4" y="499.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="826.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor32.invoke (3 samples, 0.35%)</title><rect x="823.4" y="483.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="826.4" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (3 samples, 0.35%)</title><rect x="823.4" y="467.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="826.4" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (3 samples, 0.35%)</title><rect x="823.4" y="451.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="826.4" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.35%)</title><rect x="823.4" y="435.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.4" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.lookup (1 samples, 0.12%)</title><rect x="823.4" y="419.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="826.4" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (1 samples, 0.12%)</title><rect x="824.7" y="419.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="827.7" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.12%)</title><rect x="824.7" y="403.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="827.7" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.12%)</title><rect x="824.7" y="387.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="827.7" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.12%)</title><rect x="824.7" y="371.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="827.7" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.12%)</title><rect x="824.7" y="355.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="827.7" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.12%)</title><rect x="824.7" y="339.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="827.7" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.12%)</title><rect x="824.7" y="323.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="827.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (1 samples, 0.12%)</title><rect x="824.7" y="307.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="827.7" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (1 samples, 0.12%)</title><rect x="826.1" y="419.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="829.1" y="430.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (1 samples, 0.12%)</title><rect x="827.4" y="707.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="830.4" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.12%)</title><rect x="827.4" y="691.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.4" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.12%)</title><rect x="827.4" y="675.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="830.4" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.12%)</title><rect x="827.4" y="659.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="830.4" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (1 samples, 0.12%)</title><rect x="827.4" y="643.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.4" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (1 samples, 0.12%)</title><rect x="827.4" y="627.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="830.4" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (1 samples, 0.12%)</title><rect x="827.4" y="611.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.4" y="622.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.12%)</title><rect x="827.4" y="595.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.12%)</title><rect x="827.4" y="579.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (1 samples, 0.12%)</title><rect x="827.4" y="563.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.4" y="574.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (1 samples, 0.12%)</title><rect x="827.4" y="547.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.4" y="558.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (1 samples, 0.12%)</title><rect x="827.4" y="531.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="830.4" y="542.0"></text>
</g>
<g>
<title>javax/management/ObjectName.setCanonicalName (1 samples, 0.12%)</title><rect x="827.4" y="515.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="830.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (1 samples, 0.12%)</title><rect x="827.4" y="499.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.4" y="510.0"></text>
</g>
<g>
<title>java/util/ComparableTimSort.sort (1 samples, 0.12%)</title><rect x="827.4" y="483.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.4" y="494.0"></text>
</g>
<g>
<title>java/util/ComparableTimSort.countRunAndMakeAscending (1 samples, 0.12%)</title><rect x="827.4" y="467.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="830.4" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.12%)</title><rect x="827.4" y="451.0" width="1.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="830.4" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.12%)</title><rect x="827.4" y="435.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="830.4" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.12%)</title><rect x="827.4" y="419.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="830.4" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.12%)</title><rect x="827.4" y="403.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="830.4" y="414.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.12%)</title><rect x="827.4" y="387.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="830.4" y="398.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.12%)</title><rect x="827.4" y="371.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="830.4" y="382.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.12%)</title><rect x="827.4" y="355.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="830.4" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.12%)</title><rect x="827.4" y="339.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="830.4" y="350.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.12%)</title><rect x="827.4" y="323.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="830.4" y="334.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (1 samples, 0.12%)</title><rect x="828.8" y="707.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="831.8" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (1 samples, 0.12%)</title><rect x="828.8" y="691.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="831.8" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (1 samples, 0.12%)</title><rect x="828.8" y="675.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.8" y="686.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (1 samples, 0.12%)</title><rect x="828.8" y="659.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="831.8" y="670.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (1 samples, 0.12%)</title><rect x="828.8" y="643.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="831.8" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (1 samples, 0.12%)</title><rect x="828.8" y="627.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="831.8" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (1 samples, 0.12%)</title><rect x="828.8" y="611.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="831.8" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.clear (1 samples, 0.12%)</title><rect x="828.8" y="595.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="831.8" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (1 samples, 0.12%)</title><rect x="828.8" y="579.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="831.8" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.rangeCheck (1 samples, 0.12%)</title><rect x="828.8" y="563.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="831.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.12%)</title><rect x="828.8" y="547.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="831.8" y="558.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.setContextClassLoader (1 samples, 0.12%)</title><rect x="830.2" y="771.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="833.2" y="782.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.12%)</title><rect x="830.2" y="755.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.2" y="766.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.12%)</title><rect x="830.2" y="739.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="833.2" y="750.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.12%)</title><rect x="830.2" y="723.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="833.2" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (205 samples, 23.59%)</title><rect x="831.5" y="931.0" width="278.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="834.5" y="942.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (38 samples, 4.37%)</title><rect x="832.9" y="915.0" width="51.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="835.9" y="926.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (38 samples, 4.37%)</title><rect x="832.9" y="899.0" width="51.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.9" y="910.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.23%)</title><rect x="839.7" y="883.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="842.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 2.99%)</title><rect x="842.4" y="883.0" width="35.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="845.4" y="894.0">[un..</text>
</g>
<g>
<title>[unknown] (6 samples, 0.69%)</title><rect x="842.4" y="867.0" width="8.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="845.4" y="878.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.69%)</title><rect x="842.4" y="851.0" width="8.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="845.4" y="862.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.35%)</title><rect x="846.5" y="835.0" width="4.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="849.5" y="846.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.35%)</title><rect x="846.5" y="819.0" width="4.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="849.5" y="830.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="850.5" y="867.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="853.5" y="878.0"></text>
</g>
<g>
<title>epoll_wait (19 samples, 2.19%)</title><rect x="851.9" y="867.0" width="25.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="854.9" y="878.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 1.84%)</title><rect x="856.0" y="851.0" width="21.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="859.0" y="862.0">e..</text>
</g>
<g>
<title>do_syscall_64 (16 samples, 1.84%)</title><rect x="856.0" y="835.0" width="21.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="859.0" y="846.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (14 samples, 1.61%)</title><rect x="858.7" y="819.0" width="19.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="861.7" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (13 samples, 1.50%)</title><rect x="860.0" y="803.0" width="17.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="863.0" y="814.0"></text>
</g>
<g>
<title>ep_poll (12 samples, 1.38%)</title><rect x="860.0" y="787.0" width="16.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="863.0" y="798.0"></text>
</g>
<g>
<title>_raw_write_lock_irq (1 samples, 0.12%)</title><rect x="861.4" y="771.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="864.4" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (7 samples, 0.81%)</title><rect x="862.8" y="771.0" width="9.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="865.8" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.58%)</title><rect x="864.1" y="755.0" width="6.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="867.1" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (4 samples, 0.46%)</title><rect x="865.5" y="739.0" width="5.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="868.5" y="750.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.35%)</title><rect x="866.8" y="723.0" width="4.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="869.8" y="734.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.35%)</title><rect x="866.8" y="707.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="869.8" y="718.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.12%)</title><rect x="870.9" y="755.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="873.9" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (3 samples, 0.35%)</title><rect x="872.3" y="771.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="875.3" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.35%)</title><rect x="872.3" y="755.0" width="4.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="875.3" y="766.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.35%)</title><rect x="872.3" y="739.0" width="4.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="875.3" y="750.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.35%)</title><rect x="872.3" y="723.0" width="4.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="875.3" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.12%)</title><rect x="875.0" y="707.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="878.0" y="718.0"></text>
</g>
<g>
<title>fput (1 samples, 0.12%)</title><rect x="876.3" y="787.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="879.3" y="798.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.12%)</title><rect x="876.3" y="771.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="879.3" y="782.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.35%)</title><rect x="877.7" y="883.0" width="4.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="880.7" y="894.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.23%)</title><rect x="881.8" y="883.0" width="2.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="884.8" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (166 samples, 19.10%)</title><rect x="884.5" y="915.0" width="225.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="887.5" y="926.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (162 samples, 18.64%)</title><rect x="889.9" y="899.0" width="220.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="892.9" y="910.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (105 samples, 12.08%)</title><rect x="891.3" y="883.0" width="142.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="894.3" y="894.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (71 samples, 8.17%)</title><rect x="895.3" y="867.0" width="96.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.3" y="878.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (70 samples, 8.06%)</title><rect x="896.7" y="851.0" width="95.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="899.7" y="862.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (63 samples, 7.25%)</title><rect x="896.7" y="835.0" width="85.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="899.7" y="846.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (4 samples, 0.46%)</title><rect x="896.7" y="819.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="899.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.46%)</title><rect x="896.7" y="803.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.7" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="898.1" y="787.0" width="1.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="901.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.23%)</title><rect x="899.4" y="787.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="902.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.23%)</title><rect x="899.4" y="771.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="902.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.23%)</title><rect x="899.4" y="755.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="902.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.23%)</title><rect x="899.4" y="739.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="902.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut (59 samples, 6.79%)</title><rect x="902.1" y="819.0" width="80.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="905.1" y="830.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.executeOrSendError (59 samples, 6.79%)</title><rect x="902.1" y="803.0" width="80.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.1" y="814.0">ru/mail/p..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (59 samples, 6.79%)</title><rect x="902.1" y="787.0" width="80.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="905.1" y="798.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (55 samples, 6.33%)</title><rect x="907.6" y="771.0" width="74.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="910.6" y="782.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.23%)</title><rect x="910.3" y="755.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="913.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.23%)</title><rect x="910.3" y="739.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="913.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.23%)</title><rect x="910.3" y="723.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="913.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.23%)</title><rect x="910.3" y="707.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="913.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (51 samples, 5.87%)</title><rect x="913.0" y="755.0" width="69.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="916.0" y="766.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (51 samples, 5.87%)</title><rect x="913.0" y="739.0" width="69.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="916.0" y="750.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (51 samples, 5.87%)</title><rect x="913.0" y="723.0" width="69.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="916.0" y="734.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (51 samples, 5.87%)</title><rect x="913.0" y="707.0" width="69.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="916.0" y="718.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (51 samples, 5.87%)</title><rect x="913.0" y="691.0" width="69.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="916.0" y="702.0">jdk/int..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.12%)</title><rect x="913.0" y="675.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="916.0" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.12%)</title><rect x="914.3" y="675.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="917.3" y="686.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 1.04%)</title><rect x="915.7" y="675.0" width="12.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="918.7" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.12%)</title><rect x="918.4" y="659.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="921.4" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.12%)</title><rect x="919.8" y="659.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="922.8" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.12%)</title><rect x="921.1" y="659.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="924.1" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.35%)</title><rect x="922.5" y="659.0" width="4.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="925.5" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.12%)</title><rect x="926.6" y="659.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="929.6" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (40 samples, 4.60%)</title><rect x="927.9" y="675.0" width="54.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="930.9" y="686.0">__pth..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 3.80%)</title><rect x="937.4" y="659.0" width="44.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="940.4" y="670.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (33 samples, 3.80%)</title><rect x="937.4" y="643.0" width="44.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="940.4" y="654.0">do_s..</text>
</g>
<g>
<title>__x64_sys_futex (32 samples, 3.68%)</title><rect x="938.8" y="627.0" width="43.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="941.8" y="638.0">__x6..</text>
</g>
<g>
<title>do_futex (31 samples, 3.57%)</title><rect x="938.8" y="611.0" width="42.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="941.8" y="622.0">do_f..</text>
</g>
<g>
<title>futex_wake (31 samples, 3.57%)</title><rect x="938.8" y="595.0" width="42.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="941.8" y="606.0">fute..</text>
</g>
<g>
<title>get_futex_key (1 samples, 0.12%)</title><rect x="945.6" y="579.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="948.6" y="590.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (1 samples, 0.12%)</title><rect x="945.6" y="563.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="948.6" y="574.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.23%)</title><rect x="946.9" y="579.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="949.9" y="590.0"></text>
</g>
<g>
<title>wake_up_q (23 samples, 2.65%)</title><rect x="949.7" y="579.0" width="31.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="952.7" y="590.0">wa..</text>
</g>
<g>
<title>try_to_wake_up (23 samples, 2.65%)</title><rect x="949.7" y="563.0" width="31.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="952.7" y="574.0">tr..</text>
</g>
<g>
<title>__lock_text_start (23 samples, 2.65%)</title><rect x="949.7" y="547.0" width="31.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="952.7" y="558.0">__..</text>
</g>
<g>
<title>futex_wake (1 samples, 0.12%)</title><rect x="980.9" y="611.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="983.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.46%)</title><rect x="982.2" y="835.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="985.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.46%)</title><rect x="982.2" y="819.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="985.2" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.46%)</title><rect x="982.2" y="803.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="985.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.46%)</title><rect x="982.2" y="787.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="985.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.46%)</title><rect x="982.2" y="771.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="985.2" y="782.0"></text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (1 samples, 0.12%)</title><rect x="983.6" y="755.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="986.6" y="766.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.23%)</title><rect x="985.0" y="755.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="988.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.35%)</title><rect x="987.7" y="835.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="990.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.35%)</title><rect x="987.7" y="819.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="990.7" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.35%)</title><rect x="987.7" y="803.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="990.7" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.12%)</title><rect x="989.0" y="787.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="992.0" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.12%)</title><rect x="989.0" y="771.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="992.0" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.12%)</title><rect x="989.0" y="755.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="992.0" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.12%)</title><rect x="989.0" y="739.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="992.0" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.12%)</title><rect x="990.4" y="787.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="993.4" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.12%)</title><rect x="990.4" y="771.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="993.4" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.12%)</title><rect x="990.4" y="755.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="993.4" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.12%)</title><rect x="990.4" y="739.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="993.4" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.12%)</title><rect x="990.4" y="723.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="993.4" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.12%)</title><rect x="990.4" y="707.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="993.4" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.12%)</title><rect x="990.4" y="691.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="993.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 1.04%)</title><rect x="991.7" y="867.0" width="12.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="994.7" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.23%)</title><rect x="991.7" y="851.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="994.7" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.12%)</title><rect x="991.7" y="835.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="994.7" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.12%)</title><rect x="991.7" y="819.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="994.7" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.12%)</title><rect x="991.7" y="803.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="994.7" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.12%)</title><rect x="991.7" y="787.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="994.7" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.12%)</title><rect x="991.7" y="771.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="994.7" y="782.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.12%)</title><rect x="991.7" y="755.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="994.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="993.1" y="835.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="996.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="993.1" y="819.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="996.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.12%)</title><rect x="993.1" y="803.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="996.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.35%)</title><rect x="994.5" y="851.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="997.5" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.23%)</title><rect x="995.8" y="835.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="998.8" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.46%)</title><rect x="998.5" y="851.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1001.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.35%)</title><rect x="1004.0" y="867.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1007.0" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.35%)</title><rect x="1004.0" y="851.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1007.0" y="862.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="1006.7" y="835.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1009.7" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 2.19%)</title><rect x="1008.0" y="867.0" width="25.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1011.0" y="878.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.46%)</title><rect x="1028.4" y="851.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1031.4" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (56 samples, 6.44%)</title><rect x="1033.8" y="883.0" width="76.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1036.8" y="894.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.12%)</title><rect x="1043.3" y="867.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1046.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (48 samples, 5.52%)</title><rect x="1044.7" y="867.0" width="65.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1047.7" y="878.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.69%)</title><rect x="1046.1" y="851.0" width="8.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1049.1" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.12%)</title><rect x="1046.1" y="835.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1049.1" y="846.0"></text>
</g>
<g>
<title>__memmove_ssse3 (3 samples, 0.35%)</title><rect x="1047.4" y="835.0" width="4.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1050.4" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.23%)</title><rect x="1051.5" y="835.0" width="2.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1054.5" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.12%)</title><rect x="1052.9" y="819.0" width="1.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1055.9" y="830.0"></text>
</g>
<g>
<title>__GI___recv (39 samples, 4.49%)</title><rect x="1054.2" y="851.0" width="53.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1057.2" y="862.0">__GI_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 4.49%)</title><rect x="1054.2" y="835.0" width="53.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1057.2" y="846.0">entry..</text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.12%)</title><rect x="1054.2" y="819.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1057.2" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 4.37%)</title><rect x="1055.6" y="819.0" width="51.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1058.6" y="830.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_recvfrom (38 samples, 4.37%)</title><rect x="1055.6" y="803.0" width="51.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1058.6" y="814.0">__x64..</text>
</g>
<g>
<title>__sys_recvfrom (36 samples, 4.14%)</title><rect x="1055.6" y="787.0" width="48.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1058.6" y="798.0">__sy..</text>
</g>
<g>
<title>sock_recvmsg (33 samples, 3.80%)</title><rect x="1055.6" y="771.0" width="44.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1058.6" y="782.0">sock..</text>
</g>
<g>
<title>inet6_recvmsg (26 samples, 2.99%)</title><rect x="1055.6" y="755.0" width="35.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1058.6" y="766.0">ine..</text>
</g>
<g>
<title>tcp_recvmsg (26 samples, 2.99%)</title><rect x="1055.6" y="739.0" width="35.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1058.6" y="750.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.35%)</title><rect x="1061.0" y="723.0" width="4.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1064.0" y="734.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.35%)</title><rect x="1061.0" y="707.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1064.0" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.23%)</title><rect x="1061.0" y="691.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1064.0" y="702.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.12%)</title><rect x="1061.0" y="675.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1064.0" y="686.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.12%)</title><rect x="1062.4" y="675.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1065.4" y="686.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.12%)</title><rect x="1063.7" y="691.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1066.7" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.12%)</title><rect x="1065.1" y="723.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1068.1" y="734.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.12%)</title><rect x="1065.1" y="707.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1068.1" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (9 samples, 1.04%)</title><rect x="1066.4" y="723.0" width="12.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1069.4" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (9 samples, 1.04%)</title><rect x="1066.4" y="707.0" width="12.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1069.4" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (8 samples, 0.92%)</title><rect x="1067.8" y="691.0" width="10.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1070.8" y="702.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.23%)</title><rect x="1070.5" y="675.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1073.5" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.12%)</title><rect x="1073.2" y="675.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1076.2" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.35%)</title><rect x="1074.6" y="675.0" width="4.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1077.6" y="686.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.35%)</title><rect x="1074.6" y="659.0" width="4.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1077.6" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (6 samples, 0.69%)</title><rect x="1078.7" y="723.0" width="8.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1081.7" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.12%)</title><rect x="1086.8" y="723.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1089.8" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.23%)</title><rect x="1088.2" y="723.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1091.2" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.12%)</title><rect x="1089.5" y="707.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1092.5" y="718.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.12%)</title><rect x="1089.5" y="691.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1092.5" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (7 samples, 0.81%)</title><rect x="1090.9" y="755.0" width="9.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1093.9" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.81%)</title><rect x="1090.9" y="739.0" width="9.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1093.9" y="750.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.81%)</title><rect x="1090.9" y="723.0" width="9.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1093.9" y="734.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.81%)</title><rect x="1090.9" y="707.0" width="9.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1093.9" y="718.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (5 samples, 0.58%)</title><rect x="1093.6" y="691.0" width="6.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1096.6" y="702.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.23%)</title><rect x="1097.7" y="675.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1100.7" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.35%)</title><rect x="1100.4" y="771.0" width="4.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1103.4" y="782.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.23%)</title><rect x="1101.7" y="755.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1104.7" y="766.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.23%)</title><rect x="1101.7" y="739.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1104.7" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.12%)</title><rect x="1103.1" y="723.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1106.1" y="734.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.23%)</title><rect x="1104.5" y="787.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1107.5" y="798.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.23%)</title><rect x="1107.2" y="851.0" width="2.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1110.2" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Flusher.run (29 samples, 3.34%)</title><rect x="1109.9" y="931.0" width="39.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1112.9" y="942.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.serialize (29 samples, 3.34%)</title><rect x="1109.9" y="915.0" width="39.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1112.9" y="926.0">ru/..</text>
</g>
<g>
<title>java/util/Iterator.forEachRemaining (29 samples, 3.34%)</title><rect x="1109.9" y="899.0" width="39.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1112.9" y="910.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$$Lambda$124/455820079.accept (29 samples, 3.34%)</title><rect x="1109.9" y="883.0" width="39.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1112.9" y="894.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.lambda$serialize$0 (29 samples, 3.34%)</title><rect x="1109.9" y="867.0" width="39.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1112.9" y="878.0">ru/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (29 samples, 3.34%)</title><rect x="1109.9" y="851.0" width="39.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1112.9" y="862.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (28 samples, 3.22%)</title><rect x="1111.2" y="835.0" width="38.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1114.2" y="846.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (24 samples, 2.76%)</title><rect x="1112.6" y="819.0" width="32.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1115.6" y="830.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (23 samples, 2.65%)</title><rect x="1114.0" y="803.0" width="31.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1117.0" y="814.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (23 samples, 2.65%)</title><rect x="1114.0" y="787.0" width="31.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1117.0" y="798.0">su..</text>
</g>
<g>
<title>[unknown] (22 samples, 2.53%)</title><rect x="1115.3" y="771.0" width="29.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1118.3" y="782.0">[u..</text>
</g>
<g>
<title>__GI_write (22 samples, 2.53%)</title><rect x="1115.3" y="755.0" width="29.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1118.3" y="766.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 2.42%)</title><rect x="1116.7" y="739.0" width="28.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1119.7" y="750.0">en..</text>
</g>
<g>
<title>do_syscall_64 (21 samples, 2.42%)</title><rect x="1116.7" y="723.0" width="28.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1119.7" y="734.0">do..</text>
</g>
<g>
<title>__x64_sys_write (21 samples, 2.42%)</title><rect x="1116.7" y="707.0" width="28.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1119.7" y="718.0">__..</text>
</g>
<g>
<title>ksys_write (21 samples, 2.42%)</title><rect x="1116.7" y="691.0" width="28.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1119.7" y="702.0">ks..</text>
</g>
<g>
<title>vfs_write (21 samples, 2.42%)</title><rect x="1116.7" y="675.0" width="28.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1119.7" y="686.0">vf..</text>
</g>
<g>
<title>__vfs_write (17 samples, 1.96%)</title><rect x="1119.4" y="659.0" width="23.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1122.4" y="670.0">_..</text>
</g>
<g>
<title>new_sync_write (17 samples, 1.96%)</title><rect x="1119.4" y="643.0" width="23.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1122.4" y="654.0">n..</text>
</g>
<g>
<title>ext4_file_write_iter (15 samples, 1.73%)</title><rect x="1122.1" y="627.0" width="20.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1125.1" y="638.0"></text>
</g>
<g>
<title>__generic_file_write_iter (14 samples, 1.61%)</title><rect x="1123.5" y="611.0" width="19.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1126.5" y="622.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.12%)</title><rect x="1123.5" y="595.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1126.5" y="606.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.12%)</title><rect x="1123.5" y="579.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1126.5" y="590.0"></text>
</g>
<g>
<title>timestamp_truncate (1 samples, 0.12%)</title><rect x="1123.5" y="563.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1126.5" y="574.0"></text>
</g>
<g>
<title>generic_perform_write (13 samples, 1.50%)</title><rect x="1124.8" y="595.0" width="17.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1127.8" y="606.0"></text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.12%)</title><rect x="1126.2" y="579.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1129.2" y="590.0"></text>
</g>
<g>
<title>ext4_da_write_end (11 samples, 1.27%)</title><rect x="1127.5" y="579.0" width="15.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1130.5" y="590.0"></text>
</g>
<g>
<title>generic_write_end (9 samples, 1.04%)</title><rect x="1130.3" y="563.0" width="12.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1133.3" y="574.0"></text>
</g>
<g>
<title>__mark_inode_dirty (8 samples, 0.92%)</title><rect x="1130.3" y="547.0" width="10.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1133.3" y="558.0"></text>
</g>
<g>
<title>ext4_dirty_inode (8 samples, 0.92%)</title><rect x="1130.3" y="531.0" width="10.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1133.3" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.12%)</title><rect x="1130.3" y="515.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1133.3" y="526.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (7 samples, 0.81%)</title><rect x="1131.6" y="515.0" width="9.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1134.6" y="526.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (6 samples, 0.69%)</title><rect x="1131.6" y="499.0" width="8.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1134.6" y="510.0"></text>
</g>
<g>
<title>ext4_do_update_inode (6 samples, 0.69%)</title><rect x="1131.6" y="483.0" width="8.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1134.6" y="494.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (4 samples, 0.46%)</title><rect x="1133.0" y="467.0" width="5.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1136.0" y="478.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.62 (4 samples, 0.46%)</title><rect x="1133.0" y="451.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1136.0" y="462.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.12%)</title><rect x="1133.0" y="435.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1136.0" y="446.0"></text>
</g>
<g>
<title>crypto_shash_update (3 samples, 0.35%)</title><rect x="1134.3" y="435.0" width="4.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1137.3" y="446.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (3 samples, 0.35%)</title><rect x="1134.3" y="419.0" width="4.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1137.3" y="430.0"></text>
</g>
<g>
<title>from_kprojid (1 samples, 0.12%)</title><rect x="1138.4" y="467.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1141.4" y="478.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.12%)</title><rect x="1138.4" y="451.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1141.4" y="462.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.12%)</title><rect x="1139.8" y="499.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1142.8" y="510.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.12%)</title><rect x="1139.8" y="483.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1142.8" y="494.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.12%)</title><rect x="1141.1" y="547.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1144.1" y="558.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.23%)</title><rect x="1142.5" y="659.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1145.5" y="670.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.23%)</title><rect x="1142.5" y="643.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1145.5" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.23%)</title><rect x="1142.5" y="627.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1145.5" y="638.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.23%)</title><rect x="1142.5" y="611.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1145.5" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.23%)</title><rect x="1145.2" y="819.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1148.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.12%)</title><rect x="1146.5" y="803.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1149.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.12%)</title><rect x="1147.9" y="819.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1150.9" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.12%)</title><rect x="1147.9" y="803.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1150.9" y="814.0"></text>
</g>
<g>
<title>start_thread (30 samples, 3.45%)</title><rect x="1149.3" y="931.0" width="40.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1152.3" y="942.0">sta..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (30 samples, 3.45%)</title><rect x="1149.3" y="915.0" width="40.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1152.3" y="926.0">thr..</text>
</g>
<g>
<title>Thread::call_run() (30 samples, 3.45%)</title><rect x="1149.3" y="899.0" width="40.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1152.3" y="910.0">Thr..</text>
</g>
<g>
<title>GangWorker::loop() (19 samples, 2.19%)</title><rect x="1149.3" y="883.0" width="25.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1152.3" y="894.0">G..</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (18 samples, 2.07%)</title><rect x="1149.3" y="867.0" width="24.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1152.3" y="878.0">G..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (12 samples, 1.38%)</title><rect x="1149.3" y="851.0" width="16.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1152.3" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (12 samples, 1.38%)</title><rect x="1149.3" y="835.0" width="16.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.3" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (10 samples, 1.15%)</title><rect x="1152.0" y="819.0" width="13.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1155.0" y="830.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.12%)</title><rect x="1160.1" y="803.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1163.1" y="814.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.12%)</title><rect x="1160.1" y="787.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1163.1" y="798.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.12%)</title><rect x="1160.1" y="771.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1163.1" y="782.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.12%)</title><rect x="1160.1" y="755.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1163.1" y="766.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.12%)</title><rect x="1160.1" y="739.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1163.1" y="750.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.12%)</title><rect x="1160.1" y="723.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1163.1" y="734.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.12%)</title><rect x="1160.1" y="707.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1163.1" y="718.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.12%)</title><rect x="1160.1" y="691.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1163.1" y="702.0"></text>
</g>
<g>
<title>prep_new_page (1 samples, 0.12%)</title><rect x="1160.1" y="675.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1163.1" y="686.0"></text>
</g>
<g>
<title>clear_page_rep (1 samples, 0.12%)</title><rect x="1160.1" y="659.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1163.1" y="670.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (3 samples, 0.35%)</title><rect x="1161.5" y="803.0" width="4.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1164.5" y="814.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (6 samples, 0.69%)</title><rect x="1165.6" y="851.0" width="8.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1168.6" y="862.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (6 samples, 0.69%)</title><rect x="1165.6" y="835.0" width="8.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1168.6" y="846.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (6 samples, 0.69%)</title><rect x="1165.6" y="819.0" width="8.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1168.6" y="830.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (6 samples, 0.69%)</title><rect x="1165.6" y="803.0" width="8.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1168.6" y="814.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (6 samples, 0.69%)</title><rect x="1165.6" y="787.0" width="8.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1168.6" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.35%)</title><rect x="1165.6" y="771.0" width="4.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1168.6" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.23%)</title><rect x="1166.9" y="755.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.9" y="766.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (3 samples, 0.35%)</title><rect x="1169.6" y="771.0" width="4.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.6" y="782.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (3 samples, 0.35%)</title><rect x="1169.6" y="755.0" width="4.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.6" y="766.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.12%)</title><rect x="1169.6" y="739.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1172.6" y="750.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.12%)</title><rect x="1169.6" y="723.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.6" y="734.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.12%)</title><rect x="1171.0" y="739.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1174.0" y="750.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.12%)</title><rect x="1172.3" y="739.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.3" y="750.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.12%)</title><rect x="1173.7" y="867.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1176.7" y="878.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.12%)</title><rect x="1173.7" y="851.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.7" y="862.0"></text>
</g>
<g>
<title>ParallelSPCleanupThreadClosure::do_thread(Thread*) (1 samples, 0.12%)</title><rect x="1173.7" y="835.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.7" y="846.0"></text>
</g>
<g>
<title>ObjectSynchronizer::deflate_thread_local_monitors(Thread*, DeflateMonitorCounters*) (1 samples, 0.12%)</title><rect x="1173.7" y="819.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.7" y="830.0"></text>
</g>
<g>
<title>Thread::muxAcquire(long volatile*, char const*) (1 samples, 0.12%)</title><rect x="1173.7" y="803.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.7" y="814.0"></text>
</g>
<g>
<title>JavaThread::run() (11 samples, 1.27%)</title><rect x="1175.1" y="883.0" width="14.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1178.1" y="894.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (11 samples, 1.27%)</title><rect x="1175.1" y="867.0" width="14.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1178.1" y="878.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (11 samples, 1.27%)</title><rect x="1175.1" y="851.0" width="14.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1178.1" y="862.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (9 samples, 1.04%)</title><rect x="1175.1" y="835.0" width="12.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1178.1" y="846.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (9 samples, 1.04%)</title><rect x="1175.1" y="819.0" width="12.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1178.1" y="830.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (5 samples, 0.58%)</title><rect x="1175.1" y="803.0" width="6.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1178.1" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (5 samples, 0.58%)</title><rect x="1175.1" y="787.0" width="6.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.1" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (3 samples, 0.35%)</title><rect x="1175.1" y="771.0" width="4.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1178.1" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.12%)</title><rect x="1176.4" y="755.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.4" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.12%)</title><rect x="1177.8" y="755.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1180.8" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 0.12%)</title><rect x="1179.1" y="771.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1182.1" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.12%)</title><rect x="1179.1" y="755.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.1" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.12%)</title><rect x="1180.5" y="771.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.5" y="782.0"></text>
</g>
<g>
<title>Compile::Optimize() (1 samples, 0.12%)</title><rect x="1181.9" y="803.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.9" y="814.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.12%)</title><rect x="1181.9" y="787.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.9" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.35%)</title><rect x="1183.2" y="803.0" width="4.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.2" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.35%)</title><rect x="1183.2" y="787.0" width="4.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.2" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.23%)</title><rect x="1183.2" y="771.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.2" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.23%)</title><rect x="1183.2" y="755.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.2" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.23%)</title><rect x="1183.2" y="739.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.2" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.23%)</title><rect x="1183.2" y="723.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.2" y="734.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.12%)</title><rect x="1183.2" y="707.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.2" y="718.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.12%)</title><rect x="1183.2" y="691.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.2" y="702.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.12%)</title><rect x="1183.2" y="675.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.2" y="686.0"></text>
</g>
<g>
<title>InlineTree::build_inline_tree_for_callee(ciMethod*, JVMState*, int) (1 samples, 0.12%)</title><rect x="1183.2" y="659.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.2" y="670.0"></text>
</g>
<g>
<title>JVMState::JVMState(ciMethod*, JVMState*) (1 samples, 0.12%)</title><rect x="1183.2" y="643.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.2" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="1184.6" y="707.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.6" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.12%)</title><rect x="1184.6" y="691.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.6" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.12%)</title><rect x="1184.6" y="675.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.6" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.12%)</title><rect x="1184.6" y="659.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.6" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.12%)</title><rect x="1184.6" y="643.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.6" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.12%)</title><rect x="1184.6" y="627.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.6" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="1184.6" y="611.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.6" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.12%)</title><rect x="1184.6" y="595.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.6" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.12%)</title><rect x="1184.6" y="579.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.6" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.12%)</title><rect x="1184.6" y="563.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.6" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.12%)</title><rect x="1184.6" y="547.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.6" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.12%)</title><rect x="1184.6" y="531.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.6" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="1184.6" y="515.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.6" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.12%)</title><rect x="1184.6" y="499.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.6" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.12%)</title><rect x="1184.6" y="483.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.6" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.12%)</title><rect x="1184.6" y="467.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.6" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.12%)</title><rect x="1184.6" y="451.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.6" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.12%)</title><rect x="1184.6" y="435.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.6" y="446.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.12%)</title><rect x="1184.6" y="419.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.6" y="430.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.12%)</title><rect x="1184.6" y="403.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.6" y="414.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.12%)</title><rect x="1184.6" y="387.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.6" y="398.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.12%)</title><rect x="1184.6" y="371.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.6" y="382.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.12%)</title><rect x="1184.6" y="355.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.6" y="366.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.12%)</title><rect x="1184.6" y="339.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.6" y="350.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.12%)</title><rect x="1184.6" y="323.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.6" y="334.0"></text>
</g>
<g>
<title>ciTypeFlow::Block::successors(ciBytecodeStream*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.12%)</title><rect x="1184.6" y="307.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.6" y="318.0"></text>
</g>
<g>
<title>ciTypeFlow::block_at(int, ciTypeFlow::JsrSet*, ciTypeFlow::CreateOption) [clone .constprop.160] (1 samples, 0.12%)</title><rect x="1184.6" y="291.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.6" y="302.0"></text>
</g>
<g>
<title>ciType::make(BasicType) (1 samples, 0.12%)</title><rect x="1184.6" y="275.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.6" y="286.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.12%)</title><rect x="1185.9" y="771.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.9" y="782.0"></text>
</g>
<g>
<title>GraphKit::GraphKit(JVMState*) (1 samples, 0.12%)</title><rect x="1185.9" y="755.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.9" y="766.0"></text>
</g>
<g>
<title>Phase::Phase(Phase::PhaseNumber) (1 samples, 0.12%)</title><rect x="1185.9" y="739.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.9" y="750.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.23%)</title><rect x="1187.3" y="835.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.3" y="846.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (2 samples, 0.23%)</title><rect x="1187.3" y="819.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.3" y="830.0"></text>
</g>
<g>
<title>Compilation::compile_method() (2 samples, 0.23%)</title><rect x="1187.3" y="803.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.3" y="814.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (2 samples, 0.23%)</title><rect x="1187.3" y="787.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.3" y="798.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (2 samples, 0.23%)</title><rect x="1187.3" y="771.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.3" y="782.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (2 samples, 0.23%)</title><rect x="1187.3" y="755.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.3" y="766.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (2 samples, 0.23%)</title><rect x="1187.3" y="739.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.3" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (2 samples, 0.23%)</title><rect x="1187.3" y="723.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.3" y="734.0"></text>
</g>
<g>
<title>BlockListBuilder::set_entries(int) (1 samples, 0.12%)</title><rect x="1187.3" y="707.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.3" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.12%)</title><rect x="1188.6" y="707.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.6" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.12%)</title><rect x="1188.6" y="691.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.6" y="702.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.12%)</title><rect x="1188.6" y="675.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.6" y="686.0"></text>
</g>
<g>
<title>ciBytecodeStream::has_appendix() (1 samples, 0.12%)</title><rect x="1188.6" y="659.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.6" y="670.0"></text>
</g>
<g>
<title>JavaThread::check_safepoint_and_suspend_for_native_trans(JavaThread*) (1 samples, 0.12%)</title><rect x="1188.6" y="643.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.6" y="654.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.12%)</title><rect x="1188.6" y="627.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.6" y="638.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.12%)</title><rect x="1188.6" y="611.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1191.6" y="622.0"></text>
</g>
</g>
</svg>
