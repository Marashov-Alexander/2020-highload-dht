<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (2,927 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (1 samples, 0.03%)</title><rect x="10.0" y="899.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.03%)</title><rect x="10.0" y="883.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.03%)</title><rect x="10.0" y="867.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::loop_predicate(int, int, CompLevel, Method*) (1 samples, 0.03%)</title><rect x="10.0" y="851.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.14%)</title><rect x="10.4" y="899.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.4" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.07%)</title><rect x="11.2" y="883.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="14.2" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (2 samples, 0.07%)</title><rect x="11.2" y="867.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="14.2" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.07%)</title><rect x="11.2" y="851.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="14.2" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.07%)</title><rect x="11.2" y="835.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.2" y="846.0"></text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.03%)</title><rect x="12.0" y="899.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="15.0" y="910.0"></text>
</g>
<g>
<title>[not_walkable_Java] (8 samples, 0.27%)</title><rect x="12.4" y="899.0" width="3.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="15.4" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (2 samples, 0.07%)</title><rect x="12.4" y="883.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="15.4" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="13.2" y="883.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="16.2" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.07%)</title><rect x="13.6" y="883.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="16.6" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.07%)</title><rect x="13.6" y="867.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="16.6" y="878.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.07%)</title><rect x="13.6" y="851.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.6" y="862.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.03%)</title><rect x="14.0" y="835.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="17.0" y="846.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.03%)</title><rect x="14.0" y="819.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="17.0" y="830.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.10%)</title><rect x="14.4" y="883.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.4" y="894.0"></text>
</g>
<g>
<title>[unknown_Java] (69 samples, 2.36%)</title><rect x="15.6" y="899.0" width="27.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="18.6" y="910.0">[..</text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.07%)</title><rect x="15.6" y="883.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="18.6" y="894.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (2 samples, 0.07%)</title><rect x="15.6" y="867.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="18.6" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="16.5" y="883.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="19.5" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (64 samples, 2.19%)</title><rect x="16.9" y="883.0" width="25.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="19.9" y="894.0">S..</text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (64 samples, 2.19%)</title><rect x="16.9" y="867.0" width="25.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="19.9" y="878.0">O..</text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.07%)</title><rect x="42.7" y="883.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="45.7" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="42.7" y="867.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="45.7" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="42.7" y="851.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="45.7" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.07%)</title><rect x="42.7" y="835.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="45.7" y="846.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.07%)</title><rect x="42.7" y="819.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="45.7" y="830.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.07%)</title><rect x="42.7" y="803.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="45.7" y="814.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="42.7" y="787.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="45.7" y="798.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="43.1" y="787.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="46.1" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="43.1" y="771.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="46.1" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="43.1" y="755.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="46.1" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,632 samples, 89.92%)</title><rect x="43.5" y="899.0" width="1061.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="46.5" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,632 samples, 89.92%)</title><rect x="43.5" y="883.0" width="1061.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="46.5" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,632 samples, 89.92%)</title><rect x="43.5" y="867.0" width="1061.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="46.5" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (2 samples, 0.07%)</title><rect x="43.9" y="851.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.07%)</title><rect x="43.9" y="835.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="46.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (2 samples, 0.07%)</title><rect x="43.9" y="819.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="46.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.07%)</title><rect x="43.9" y="803.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="46.9" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.07%)</title><rect x="43.9" y="787.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="46.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (69 samples, 2.36%)</title><rect x="44.7" y="851.0" width="27.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="47.7" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (63 samples, 2.15%)</title><rect x="47.1" y="835.0" width="25.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="50.1" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (1 samples, 0.03%)</title><rect x="47.1" y="819.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="50.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.03%)</title><rect x="47.1" y="803.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="50.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.03%)</title><rect x="47.1" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="50.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.03%)</title><rect x="47.1" y="771.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="50.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (47 samples, 1.61%)</title><rect x="47.5" y="819.0" width="18.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.14%)</title><rect x="50.3" y="803.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="53.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (36 samples, 1.23%)</title><rect x="51.9" y="803.0" width="14.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (35 samples, 1.20%)</title><rect x="52.3" y="787.0" width="14.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.3" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (16 samples, 0.55%)</title><rect x="53.1" y="771.0" width="6.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="56.1" y="782.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.07%)</title><rect x="53.5" y="755.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="56.5" y="766.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="54.3" y="755.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="57.3" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.17%)</title><rect x="54.7" y="755.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="57.7" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.10%)</title><rect x="55.6" y="739.0" width="1.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="58.6" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="56.8" y="755.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="59.8" y="766.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.10%)</title><rect x="57.2" y="755.0" width="1.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="60.2" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.10%)</title><rect x="57.2" y="739.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="60.2" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.10%)</title><rect x="57.2" y="723.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="60.2" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.10%)</title><rect x="57.2" y="707.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="60.2" y="718.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.10%)</title><rect x="57.2" y="691.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="60.2" y="702.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.07%)</title><rect x="57.2" y="675.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="60.2" y="686.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="58.0" y="675.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="61.0" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="58.4" y="755.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="61.4" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="58.8" y="755.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="61.8" y="766.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="59.2" y="755.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="62.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.58%)</title><rect x="59.6" y="771.0" width="6.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="62.6" y="782.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.07%)</title><rect x="59.6" y="755.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="62.6" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.03%)</title><rect x="60.4" y="755.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="63.4" y="766.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (14 samples, 0.48%)</title><rect x="60.8" y="755.0" width="5.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="63.8" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.41%)</title><rect x="61.6" y="739.0" width="4.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="64.6" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.41%)</title><rect x="61.6" y="723.0" width="4.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="64.6" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.34%)</title><rect x="62.4" y="707.0" width="4.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="65.4" y="718.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.34%)</title><rect x="62.4" y="691.0" width="4.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="65.4" y="702.0"></text>
</g>
<g>
<title>futex_wait (9 samples, 0.31%)</title><rect x="62.8" y="675.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="65.8" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 0.17%)</title><rect x="62.8" y="659.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="65.8" y="670.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="63.2" y="643.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="66.2" y="654.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.03%)</title><rect x="63.6" y="643.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="66.6" y="654.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.07%)</title><rect x="64.0" y="643.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="67.0" y="654.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.07%)</title><rect x="64.0" y="627.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="67.0" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="64.4" y="611.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="67.4" y="622.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.10%)</title><rect x="64.8" y="659.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="67.8" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="65.6" y="643.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="68.6" y="654.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.03%)</title><rect x="66.0" y="659.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="69.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.14%)</title><rect x="66.4" y="819.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (2 samples, 0.07%)</title><rect x="66.4" y="803.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.07%)</title><rect x="67.2" y="803.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.03%)</title><rect x="67.2" y="787.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="67.2" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="70.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.03%)</title><rect x="67.2" y="755.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="67.6" y="787.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="67.6" y="771.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="67.6" y="755.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="70.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="67.6" y="739.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="70.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="67.6" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="70.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.38%)</title><rect x="68.1" y="819.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="71.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.38%)</title><rect x="68.1" y="803.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.38%)</title><rect x="68.1" y="787.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.38%)</title><rect x="68.1" y="771.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.38%)</title><rect x="68.1" y="755.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.1" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="68.1" y="739.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="71.1" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.07%)</title><rect x="68.5" y="739.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="71.5" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.07%)</title><rect x="68.5" y="723.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="71.5" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.27%)</title><rect x="69.3" y="739.0" width="3.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="72.3" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.17%)</title><rect x="70.5" y="723.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="73.5" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.17%)</title><rect x="70.5" y="707.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="73.5" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.17%)</title><rect x="70.5" y="691.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="73.5" y="702.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.17%)</title><rect x="70.5" y="675.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="73.5" y="686.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.14%)</title><rect x="70.5" y="659.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="73.5" y="670.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.14%)</title><rect x="70.5" y="643.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="73.5" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.14%)</title><rect x="70.5" y="627.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="73.5" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.14%)</title><rect x="70.5" y="611.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="73.5" y="622.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="72.1" y="659.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="75.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$129/964019704.run (2,547 samples, 87.02%)</title><rect x="72.5" y="851.0" width="1026.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="75.5" y="862.0">ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$129/964019704.run</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityGet$1 (2,547 samples, 87.02%)</title><rect x="72.5" y="835.0" width="1026.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="75.5" y="846.0">ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityGet$1</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.07%)</title><rect x="72.9" y="819.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="75.9" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.07%)</title><rect x="72.9" y="803.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="75.9" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="73.3" y="787.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="76.3" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="73.3" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.3" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="73.3" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="73.7" y="819.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="76.7" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (2,075 samples, 70.89%)</title><rect x="74.1" y="819.0" width="836.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.1" y="830.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (44 samples, 1.50%)</title><rect x="74.5" y="803.0" width="17.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="77.5" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (44 samples, 1.50%)</title><rect x="74.5" y="787.0" width="17.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="77.5" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (44 samples, 1.50%)</title><rect x="74.5" y="771.0" width="17.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="77.5" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (44 samples, 1.50%)</title><rect x="74.5" y="755.0" width="17.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="77.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (44 samples, 1.50%)</title><rect x="74.5" y="739.0" width="17.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.5" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (42 samples, 1.43%)</title><rect x="74.5" y="723.0" width="16.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="77.5" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.07%)</title><rect x="74.5" y="707.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.5" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.07%)</title><rect x="74.5" y="691.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.5" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.03%)</title><rect x="74.9" y="675.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.9" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (40 samples, 1.37%)</title><rect x="75.3" y="707.0" width="16.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.3" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (40 samples, 1.37%)</title><rect x="75.3" y="691.0" width="16.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.3" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (40 samples, 1.37%)</title><rect x="75.3" y="675.0" width="16.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.3" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (40 samples, 1.37%)</title><rect x="75.3" y="659.0" width="16.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.3" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (40 samples, 1.37%)</title><rect x="75.3" y="643.0" width="16.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.3" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (40 samples, 1.37%)</title><rect x="75.3" y="627.0" width="16.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="78.3" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (40 samples, 1.37%)</title><rect x="75.3" y="611.0" width="16.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (40 samples, 1.37%)</title><rect x="75.3" y="595.0" width="16.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (40 samples, 1.37%)</title><rect x="75.3" y="579.0" width="16.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="78.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (12 samples, 0.41%)</title><rect x="75.3" y="563.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="78.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (3 samples, 0.10%)</title><rect x="75.3" y="547.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="78.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.10%)</title><rect x="75.3" y="531.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.10%)</title><rect x="75.3" y="515.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.10%)</title><rect x="75.3" y="499.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="78.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.10%)</title><rect x="75.3" y="483.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.10%)</title><rect x="75.3" y="467.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.10%)</title><rect x="75.3" y="451.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.3" y="462.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="75.3" y="435.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="78.3" y="446.0"></text>
</g>
<g>
<title>pread64 (3 samples, 0.10%)</title><rect x="75.3" y="419.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="78.3" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.10%)</title><rect x="75.3" y="403.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="78.3" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.10%)</title><rect x="75.3" y="387.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="78.3" y="398.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.07%)</title><rect x="75.7" y="371.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="78.7" y="382.0"></text>
</g>
<g>
<title>ksys_pread64 (2 samples, 0.07%)</title><rect x="75.7" y="355.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="78.7" y="366.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="75.7" y="339.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="78.7" y="350.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="75.7" y="323.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="78.7" y="334.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="75.7" y="307.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="78.7" y="318.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.03%)</title><rect x="76.1" y="339.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="79.1" y="350.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.03%)</title><rect x="76.1" y="323.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="79.1" y="334.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.03%)</title><rect x="76.1" y="307.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="79.1" y="318.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.03%)</title><rect x="76.1" y="291.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="79.1" y="302.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.03%)</title><rect x="76.1" y="275.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="79.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (6 samples, 0.20%)</title><rect x="76.5" y="547.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.20%)</title><rect x="76.5" y="531.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="79.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.20%)</title><rect x="76.5" y="515.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.17%)</title><rect x="76.9" y="499.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="79.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.17%)</title><rect x="76.9" y="483.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="79.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.17%)</title><rect x="76.9" y="467.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="79.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.17%)</title><rect x="76.9" y="451.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="79.9" y="462.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="76.9" y="435.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="79.9" y="446.0"></text>
</g>
<g>
<title>pread64 (5 samples, 0.17%)</title><rect x="76.9" y="419.0" width="2.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="79.9" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.17%)</title><rect x="76.9" y="403.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="79.9" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.17%)</title><rect x="76.9" y="387.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="79.9" y="398.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.14%)</title><rect x="77.3" y="371.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="80.3" y="382.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.14%)</title><rect x="77.3" y="355.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="80.3" y="366.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="77.3" y="339.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="80.3" y="350.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="77.3" y="323.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="80.3" y="334.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="77.3" y="307.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="80.3" y="318.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="77.7" y="339.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="80.7" y="350.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.07%)</title><rect x="78.1" y="339.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="81.1" y="350.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.03%)</title><rect x="78.5" y="323.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="81.5" y="334.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.03%)</title><rect x="78.5" y="307.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="81.5" y="318.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.03%)</title><rect x="78.5" y="291.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="81.5" y="302.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.03%)</title><rect x="78.5" y="275.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="81.5" y="286.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.03%)</title><rect x="78.5" y="259.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="81.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (3 samples, 0.10%)</title><rect x="78.9" y="547.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="81.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.10%)</title><rect x="78.9" y="531.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.10%)</title><rect x="78.9" y="515.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.03%)</title><rect x="78.9" y="499.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="81.9" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="78.9" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.07%)</title><rect x="79.3" y="499.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="82.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.07%)</title><rect x="79.3" y="483.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.07%)</title><rect x="79.3" y="467.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.07%)</title><rect x="79.3" y="451.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="82.3" y="462.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.03%)</title><rect x="79.3" y="435.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="82.3" y="446.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="79.7" y="435.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="82.7" y="446.0"></text>
</g>
<g>
<title>pread64 (1 samples, 0.03%)</title><rect x="79.7" y="419.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="82.7" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="79.7" y="403.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="82.7" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="79.7" y="387.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="82.7" y="398.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.03%)</title><rect x="79.7" y="371.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="82.7" y="382.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.03%)</title><rect x="79.7" y="355.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="82.7" y="366.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="79.7" y="339.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="82.7" y="350.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="79.7" y="323.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="82.7" y="334.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="79.7" y="307.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="82.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.value (28 samples, 0.96%)</title><rect x="80.1" y="563.0" width="11.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (8 samples, 0.27%)</title><rect x="80.1" y="547.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="83.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (8 samples, 0.27%)</title><rect x="80.1" y="531.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (8 samples, 0.27%)</title><rect x="80.1" y="515.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (8 samples, 0.27%)</title><rect x="80.1" y="499.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="83.1" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="80.1" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.1" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.03%)</title><rect x="80.1" y="467.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="83.1" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.03%)</title><rect x="80.1" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="83.1" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="80.1" y="435.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="83.1" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="80.1" y="419.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.1" y="430.0"></text>
</g>
<g>
<title>unsafe_arraycopy (1 samples, 0.03%)</title><rect x="80.1" y="403.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="83.1" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.24%)</title><rect x="80.6" y="483.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="83.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.24%)</title><rect x="80.6" y="467.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.6" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.24%)</title><rect x="80.6" y="451.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.6" y="462.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.20%)</title><rect x="81.0" y="435.0" width="2.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="84.0" y="446.0"></text>
</g>
<g>
<title>pread64 (6 samples, 0.20%)</title><rect x="81.0" y="419.0" width="2.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="84.0" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.20%)</title><rect x="81.0" y="403.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="84.0" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.20%)</title><rect x="81.0" y="387.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="84.0" y="398.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.17%)</title><rect x="81.4" y="371.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="84.4" y="382.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.17%)</title><rect x="81.4" y="355.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="84.4" y="366.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.17%)</title><rect x="81.4" y="339.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="84.4" y="350.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.10%)</title><rect x="81.4" y="323.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="84.4" y="334.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.10%)</title><rect x="81.4" y="307.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="84.4" y="318.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.10%)</title><rect x="81.4" y="291.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="84.4" y="302.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.10%)</title><rect x="81.4" y="275.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="84.4" y="286.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.07%)</title><rect x="81.8" y="259.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="84.8" y="270.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.07%)</title><rect x="81.8" y="243.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="84.8" y="254.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.07%)</title><rect x="82.6" y="323.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="85.6" y="334.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.07%)</title><rect x="82.6" y="307.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="85.6" y="318.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.07%)</title><rect x="82.6" y="291.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="85.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (11 samples, 0.38%)</title><rect x="83.4" y="547.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (11 samples, 0.38%)</title><rect x="83.4" y="531.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="86.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (11 samples, 0.38%)</title><rect x="83.4" y="515.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="86.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.34%)</title><rect x="83.4" y="499.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="86.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (10 samples, 0.34%)</title><rect x="83.4" y="483.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.4" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (10 samples, 0.34%)</title><rect x="83.4" y="467.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="86.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (10 samples, 0.34%)</title><rect x="83.4" y="451.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="86.4" y="462.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="84.6" y="435.0" width="2.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="87.6" y="446.0"></text>
</g>
<g>
<title>pread64 (7 samples, 0.24%)</title><rect x="84.6" y="419.0" width="2.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="87.6" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.24%)</title><rect x="84.6" y="403.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="87.6" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.24%)</title><rect x="84.6" y="387.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="87.6" y="398.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (6 samples, 0.20%)</title><rect x="85.0" y="371.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="88.0" y="382.0"></text>
</g>
<g>
<title>ksys_pread64 (6 samples, 0.20%)</title><rect x="85.0" y="355.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="88.0" y="366.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="85.0" y="339.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="88.0" y="350.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="85.0" y="323.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="88.0" y="334.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="85.0" y="307.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="88.0" y="318.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.17%)</title><rect x="85.4" y="339.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="88.4" y="350.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.10%)</title><rect x="85.4" y="323.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="88.4" y="334.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.10%)</title><rect x="85.4" y="307.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="88.4" y="318.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.10%)</title><rect x="85.4" y="291.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="88.4" y="302.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.10%)</title><rect x="85.4" y="275.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="88.4" y="286.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.03%)</title><rect x="85.4" y="259.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="88.4" y="270.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.03%)</title><rect x="85.4" y="243.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="88.4" y="254.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.03%)</title><rect x="85.8" y="259.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="88.8" y="270.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.03%)</title><rect x="86.2" y="259.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="89.2" y="270.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="86.6" y="323.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="89.6" y="334.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.03%)</title><rect x="87.0" y="323.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="90.0" y="334.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="87.0" y="307.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="90.0" y="318.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="87.0" y="291.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="90.0" y="302.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="87.0" y="275.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="90.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.03%)</title><rect x="87.4" y="499.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="90.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getLongFrom (6 samples, 0.20%)</title><rect x="87.8" y="547.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="90.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.20%)</title><rect x="87.8" y="531.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.20%)</title><rect x="87.8" y="515.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.03%)</title><rect x="87.8" y="499.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="90.8" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="87.8" y="483.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.8" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.17%)</title><rect x="88.2" y="499.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="91.2" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="88.2" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.2" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.03%)</title><rect x="88.2" y="467.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.2" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.03%)</title><rect x="88.2" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="91.2" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="88.2" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.2" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="88.2" y="419.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.2" y="430.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="88.2" y="403.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="91.2" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.10%)</title><rect x="88.6" y="483.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="91.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.10%)</title><rect x="88.6" y="467.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.6" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.10%)</title><rect x="88.6" y="451.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.6" y="462.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="88.6" y="435.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="91.6" y="446.0"></text>
</g>
<g>
<title>pread64 (3 samples, 0.10%)</title><rect x="88.6" y="419.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="91.6" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="89.0" y="403.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="92.0" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="89.0" y="387.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="92.0" y="398.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.07%)</title><rect x="89.0" y="371.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="92.0" y="382.0"></text>
</g>
<g>
<title>ksys_pread64 (2 samples, 0.07%)</title><rect x="89.0" y="355.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="92.0" y="366.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.07%)</title><rect x="89.0" y="339.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="92.0" y="350.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.07%)</title><rect x="89.0" y="323.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="92.0" y="334.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.07%)</title><rect x="89.0" y="307.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="92.0" y="318.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.03%)</title><rect x="89.4" y="291.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="92.4" y="302.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.03%)</title><rect x="89.4" y="275.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="92.4" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.03%)</title><rect x="89.4" y="259.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="92.4" y="270.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.03%)</title><rect x="89.4" y="243.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="92.4" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="89.8" y="483.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="92.8" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.03%)</title><rect x="89.8" y="467.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="92.8" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (1 samples, 0.03%)</title><rect x="89.8" y="451.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="92.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (3 samples, 0.10%)</title><rect x="90.2" y="547.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.2" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.10%)</title><rect x="90.2" y="531.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="93.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.10%)</title><rect x="90.2" y="515.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.2" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.07%)</title><rect x="90.2" y="499.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.07%)</title><rect x="90.2" y="483.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="93.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.07%)</title><rect x="90.2" y="467.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.07%)</title><rect x="90.2" y="451.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.2" y="462.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="90.2" y="435.0" width="0.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="93.2" y="446.0"></text>
</g>
<g>
<title>pread64 (2 samples, 0.07%)</title><rect x="90.2" y="419.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="93.2" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="90.2" y="403.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="93.2" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="90.2" y="387.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="93.2" y="398.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.03%)</title><rect x="90.6" y="371.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="93.6" y="382.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.03%)</title><rect x="90.6" y="355.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="93.6" y="366.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.03%)</title><rect x="90.6" y="339.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="93.6" y="350.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.03%)</title><rect x="90.6" y="323.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="93.6" y="334.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.03%)</title><rect x="90.6" y="307.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="93.6" y="318.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.03%)</title><rect x="90.6" y="291.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="93.6" y="302.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.03%)</title><rect x="90.6" y="275.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="93.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.03%)</title><rect x="91.0" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="94.0" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (2 samples, 0.07%)</title><rect x="91.4" y="723.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.4" y="734.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.07%)</title><rect x="91.4" y="707.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="94.4" y="718.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.03%)</title><rect x="91.8" y="691.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="94.8" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.03%)</title><rect x="92.2" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.2" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (1 samples, 0.03%)</title><rect x="92.2" y="787.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="95.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl$$Lambda$132/1153658684.apply (1 samples, 0.03%)</title><rect x="92.2" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.lambda$iterator$2 (1 samples, 0.03%)</title><rect x="92.2" y="755.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="95.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (1 samples, 0.03%)</title><rect x="92.2" y="739.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="95.2" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="92.2" y="723.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="95.2" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="92.2" y="707.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.2" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="92.2" y="691.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="95.2" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="92.2" y="675.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.03%)</title><rect x="92.6" y="803.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="95.6" y="814.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="92.6" y="787.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="95.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (1 samples, 0.03%)</title><rect x="93.0" y="803.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.0" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.03%)</title><rect x="93.0" y="787.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.0" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="93.0" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="96.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.iterator (2,027 samples, 69.25%)</title><rect x="93.5" y="803.0" width="817.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.5" y="814.0">ru/mail/polis/dao/alexander/marashov/DAOImpl.iterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (195 samples, 6.66%)</title><rect x="94.3" y="787.0" width="78.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="97.3" y="798.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (195 samples, 6.66%)</title><rect x="94.3" y="771.0" width="78.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.3" y="782.0">com/googl..</text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.03%)</title><rect x="94.3" y="755.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="97.3" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="94.3" y="739.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="97.3" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (191 samples, 6.53%)</title><rect x="94.7" y="755.0" width="77.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="97.7" y="766.0">java/util..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (190 samples, 6.49%)</title><rect x="95.1" y="739.0" width="76.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="98.1" y="750.0">java/uti..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (3 samples, 0.10%)</title><rect x="95.1" y="723.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="98.1" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="95.9" y="707.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="98.9" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (187 samples, 6.39%)</title><rect x="96.3" y="723.0" width="75.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.3" y="734.0">java/uti..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (187 samples, 6.39%)</title><rect x="96.3" y="707.0" width="75.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.3" y="718.0">java/uti..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (186 samples, 6.35%)</title><rect x="96.7" y="691.0" width="75.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="99.7" y="702.0">com/goog..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (184 samples, 6.29%)</title><rect x="97.5" y="675.0" width="74.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.5" y="686.0">com/goog..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (183 samples, 6.25%)</title><rect x="97.5" y="659.0" width="73.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.5" y="670.0">com/goog..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (182 samples, 6.22%)</title><rect x="97.9" y="643.0" width="73.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="100.9" y="654.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (182 samples, 6.22%)</title><rect x="97.9" y="627.0" width="73.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="100.9" y="638.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (81 samples, 2.77%)</title><rect x="98.3" y="611.0" width="32.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.3" y="622.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (27 samples, 0.92%)</title><rect x="98.7" y="595.0" width="10.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="101.7" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.07%)</title><rect x="98.7" y="579.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.7" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="98.7" y="563.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="101.7" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="99.1" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.1" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="99.1" y="547.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.1" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (1 samples, 0.03%)</title><rect x="99.5" y="579.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.5" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.flip (1 samples, 0.03%)</title><rect x="99.5" y="563.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="102.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (24 samples, 0.82%)</title><rect x="99.9" y="579.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (24 samples, 0.82%)</title><rect x="99.9" y="563.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.14%)</title><rect x="99.9" y="547.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.9" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.14%)</title><rect x="99.9" y="531.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="102.9" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.03%)</title><rect x="100.7" y="515.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="103.7" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="101.1" y="515.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.1" y="526.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="101.1" y="499.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="104.1" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="101.1" y="483.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="104.1" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (18 samples, 0.61%)</title><rect x="101.5" y="547.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.5" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="101.5" y="531.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.5" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.03%)</title><rect x="101.5" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="104.5" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.03%)</title><rect x="101.5" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.5" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="101.5" y="483.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="104.5" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="101.5" y="467.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (16 samples, 0.55%)</title><rect x="101.9" y="531.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="104.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (16 samples, 0.55%)</title><rect x="101.9" y="515.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (16 samples, 0.55%)</title><rect x="101.9" y="499.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="104.9" y="510.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.51%)</title><rect x="102.3" y="483.0" width="6.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="105.3" y="494.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="102.3" y="467.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="105.3" y="478.0"></text>
</g>
<g>
<title>pread64 (14 samples, 0.48%)</title><rect x="102.7" y="467.0" width="5.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="105.7" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.44%)</title><rect x="103.1" y="451.0" width="5.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="106.1" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.03%)</title><rect x="103.1" y="435.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="106.1" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.41%)</title><rect x="103.5" y="435.0" width="4.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="106.5" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (12 samples, 0.41%)</title><rect x="103.5" y="419.0" width="4.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="106.5" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (12 samples, 0.41%)</title><rect x="103.5" y="403.0" width="4.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="106.5" y="414.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="103.5" y="387.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="106.5" y="398.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="103.5" y="371.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="106.5" y="382.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="103.5" y="355.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="106.5" y="366.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="103.9" y="387.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="106.9" y="398.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="103.9" y="371.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="106.9" y="382.0"></text>
</g>
<g>
<title>vfs_read (10 samples, 0.34%)</title><rect x="104.3" y="387.0" width="4.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="107.3" y="398.0"></text>
</g>
<g>
<title>__vfs_read (9 samples, 0.31%)</title><rect x="104.3" y="371.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="107.3" y="382.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.03%)</title><rect x="104.3" y="355.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="107.3" y="366.0"></text>
</g>
<g>
<title>new_sync_read (8 samples, 0.27%)</title><rect x="104.7" y="355.0" width="3.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="107.7" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (6 samples, 0.20%)</title><rect x="105.5" y="339.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="108.5" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (6 samples, 0.20%)</title><rect x="105.5" y="323.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="108.5" y="334.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.07%)</title><rect x="105.9" y="307.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="108.9" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.07%)</title><rect x="106.8" y="307.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="109.8" y="318.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.07%)</title><rect x="106.8" y="291.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="109.8" y="302.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.03%)</title><rect x="107.6" y="307.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="110.6" y="318.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="108.0" y="371.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="111.0" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="108.4" y="531.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.4" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="108.4" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="111.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.07%)</title><rect x="108.8" y="547.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="111.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (23 samples, 0.79%)</title><rect x="109.6" y="595.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="112.6" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="109.6" y="579.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="112.6" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="109.6" y="563.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.6" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="109.6" y="547.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="112.6" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="109.6" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="109.6" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="112.6" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="109.6" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (22 samples, 0.75%)</title><rect x="110.0" y="579.0" width="8.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.0" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (22 samples, 0.75%)</title><rect x="110.0" y="563.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (18 samples, 0.61%)</title><rect x="110.0" y="547.0" width="7.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (15 samples, 0.51%)</title><rect x="110.0" y="531.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (15 samples, 0.51%)</title><rect x="110.0" y="515.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="113.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (15 samples, 0.51%)</title><rect x="110.0" y="499.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.0" y="510.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.03%)</title><rect x="110.0" y="483.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="113.0" y="494.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.48%)</title><rect x="110.4" y="483.0" width="5.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="113.4" y="494.0"></text>
</g>
<g>
<title>pread64 (14 samples, 0.48%)</title><rect x="110.4" y="467.0" width="5.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="113.4" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.48%)</title><rect x="110.4" y="451.0" width="5.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="113.4" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.48%)</title><rect x="110.4" y="435.0" width="5.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="113.4" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (12 samples, 0.41%)</title><rect x="111.2" y="419.0" width="4.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="114.2" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (12 samples, 0.41%)</title><rect x="111.2" y="403.0" width="4.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="114.2" y="414.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="111.2" y="387.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="114.2" y="398.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="111.2" y="371.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="114.2" y="382.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="111.6" y="387.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="114.6" y="398.0"></text>
</g>
<g>
<title>vfs_read (10 samples, 0.34%)</title><rect x="112.0" y="387.0" width="4.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="115.0" y="398.0"></text>
</g>
<g>
<title>__vfs_read (6 samples, 0.20%)</title><rect x="112.0" y="371.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="115.0" y="382.0"></text>
</g>
<g>
<title>new_sync_read (6 samples, 0.20%)</title><rect x="112.0" y="355.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="115.0" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (4 samples, 0.14%)</title><rect x="112.8" y="339.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="115.8" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (4 samples, 0.14%)</title><rect x="112.8" y="323.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="115.8" y="334.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.03%)</title><rect x="113.6" y="307.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="116.6" y="318.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.03%)</title><rect x="113.6" y="291.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="116.6" y="302.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.03%)</title><rect x="114.0" y="307.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="117.0" y="318.0"></text>
</g>
<g>
<title>PageHuge (1 samples, 0.03%)</title><rect x="114.0" y="291.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="117.0" y="302.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="114.4" y="371.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="117.4" y="382.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.10%)</title><rect x="114.8" y="371.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="117.8" y="382.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.10%)</title><rect x="114.8" y="355.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="117.8" y="366.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.07%)</title><rect x="114.8" y="339.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="117.8" y="350.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.07%)</title><rect x="114.8" y="323.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="117.8" y="334.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.07%)</title><rect x="114.8" y="307.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="117.8" y="318.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="115.6" y="339.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="118.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.07%)</title><rect x="116.0" y="531.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.0" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="116.0" y="515.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.03%)</title><rect x="116.4" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="119.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="116.8" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="119.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.07%)</title><rect x="117.2" y="547.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="120.2" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.07%)</title><rect x="117.2" y="531.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="120.2" y="542.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.03%)</title><rect x="117.6" y="515.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="120.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.07%)</title><rect x="118.0" y="547.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (30 samples, 1.02%)</title><rect x="118.8" y="595.0" width="12.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="121.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (28 samples, 0.96%)</title><rect x="119.7" y="579.0" width="11.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (28 samples, 0.96%)</title><rect x="119.7" y="563.0" width="11.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="122.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.10%)</title><rect x="120.1" y="547.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="123.1" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.10%)</title><rect x="120.1" y="531.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="123.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.03%)</title><rect x="121.3" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.3" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.03%)</title><rect x="121.3" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="124.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (20 samples, 0.68%)</title><rect x="121.7" y="547.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (20 samples, 0.68%)</title><rect x="121.7" y="531.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (19 samples, 0.65%)</title><rect x="122.1" y="515.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (19 samples, 0.65%)</title><rect x="122.1" y="499.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="125.1" y="510.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.65%)</title><rect x="122.1" y="483.0" width="7.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="125.1" y="494.0"></text>
</g>
<g>
<title>pread64 (19 samples, 0.65%)</title><rect x="122.1" y="467.0" width="7.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="125.1" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.61%)</title><rect x="122.5" y="451.0" width="7.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="125.5" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.03%)</title><rect x="122.5" y="435.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="125.5" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.58%)</title><rect x="122.9" y="435.0" width="6.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="125.9" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (15 samples, 0.51%)</title><rect x="123.7" y="419.0" width="6.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="126.7" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (15 samples, 0.51%)</title><rect x="123.7" y="403.0" width="6.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="126.7" y="414.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="123.7" y="387.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="126.7" y="398.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="123.7" y="371.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="126.7" y="382.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="123.7" y="355.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="126.7" y="366.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="124.1" y="387.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="127.1" y="398.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="124.5" y="387.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="127.5" y="398.0"></text>
</g>
<g>
<title>vfs_read (12 samples, 0.41%)</title><rect x="124.9" y="387.0" width="4.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="127.9" y="398.0"></text>
</g>
<g>
<title>__vfs_read (10 samples, 0.34%)</title><rect x="124.9" y="371.0" width="4.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="127.9" y="382.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.03%)</title><rect x="124.9" y="355.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="127.9" y="366.0"></text>
</g>
<g>
<title>new_sync_read (9 samples, 0.31%)</title><rect x="125.3" y="355.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="128.3" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (9 samples, 0.31%)</title><rect x="125.3" y="339.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="128.3" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (9 samples, 0.31%)</title><rect x="125.3" y="323.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="128.3" y="334.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.03%)</title><rect x="125.7" y="307.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="128.7" y="318.0"></text>
</g>
<g>
<title>pagecache_get_page (4 samples, 0.14%)</title><rect x="126.1" y="307.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="129.1" y="318.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.14%)</title><rect x="126.1" y="291.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="129.1" y="302.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.03%)</title><rect x="127.3" y="275.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="130.3" y="286.0"></text>
</g>
<g>
<title>touch_atime (3 samples, 0.10%)</title><rect x="127.7" y="307.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="130.7" y="318.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.07%)</title><rect x="128.1" y="291.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="131.1" y="302.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.03%)</title><rect x="128.5" y="275.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="131.5" y="286.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="128.9" y="371.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="131.9" y="382.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.03%)</title><rect x="129.3" y="371.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="132.3" y="382.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="129.3" y="355.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="132.3" y="366.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="129.3" y="339.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="132.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.07%)</title><rect x="129.7" y="547.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="132.7" y="558.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="130.1" y="531.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="133.1" y="542.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="130.1" y="515.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="133.1" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="130.1" y="499.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="133.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.03%)</title><rect x="130.5" y="547.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="133.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.value (100 samples, 3.42%)</title><rect x="130.9" y="611.0" width="40.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="133.9" y="622.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (17 samples, 0.58%)</title><rect x="130.9" y="595.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (17 samples, 0.58%)</title><rect x="130.9" y="579.0" width="6.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (17 samples, 0.58%)</title><rect x="130.9" y="563.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="133.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (16 samples, 0.55%)</title><rect x="131.3" y="547.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="134.3" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.07%)</title><rect x="131.7" y="531.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.7" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.07%)</title><rect x="131.7" y="515.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.7" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.07%)</title><rect x="131.7" y="499.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="134.7" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.07%)</title><rect x="131.7" y="483.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.7" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.07%)</title><rect x="131.7" y="467.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.7" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="131.7" y="451.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="134.7" y="462.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="132.2" y="451.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="135.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (12 samples, 0.41%)</title><rect x="132.6" y="531.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="135.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (12 samples, 0.41%)</title><rect x="132.6" y="515.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="135.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (12 samples, 0.41%)</title><rect x="132.6" y="499.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="135.6" y="510.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="133.0" y="483.0" width="4.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="136.0" y="494.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="133.0" y="467.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="136.0" y="478.0"></text>
</g>
<g>
<title>pread64 (10 samples, 0.34%)</title><rect x="133.4" y="467.0" width="4.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="136.4" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.34%)</title><rect x="133.4" y="451.0" width="4.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="136.4" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.34%)</title><rect x="133.4" y="435.0" width="4.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="136.4" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (8 samples, 0.27%)</title><rect x="134.2" y="419.0" width="3.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="137.2" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (8 samples, 0.27%)</title><rect x="134.2" y="403.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="137.2" y="414.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="134.2" y="387.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="137.2" y="398.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="134.2" y="371.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="137.2" y="382.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="134.2" y="355.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="137.2" y="366.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.24%)</title><rect x="134.6" y="387.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="137.6" y="398.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.17%)</title><rect x="134.6" y="371.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="137.6" y="382.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.03%)</title><rect x="134.6" y="355.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="137.6" y="366.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.14%)</title><rect x="135.0" y="355.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="138.0" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (4 samples, 0.14%)</title><rect x="135.0" y="339.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="138.0" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (4 samples, 0.14%)</title><rect x="135.0" y="323.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="138.0" y="334.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.03%)</title><rect x="135.4" y="307.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="138.4" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.03%)</title><rect x="135.8" y="307.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="138.8" y="318.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.03%)</title><rect x="135.8" y="291.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="138.8" y="302.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.03%)</title><rect x="136.2" y="307.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="139.2" y="318.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="136.6" y="371.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="139.6" y="382.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.03%)</title><rect x="137.0" y="371.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="140.0" y="382.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="137.0" y="355.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="140.0" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="137.4" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (1 samples, 0.03%)</title><rect x="137.4" y="515.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (41 samples, 1.40%)</title><rect x="137.8" y="595.0" width="16.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="140.8" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.07%)</title><rect x="137.8" y="579.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="140.8" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="137.8" y="563.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="140.8" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="137.8" y="547.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="140.8" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="137.8" y="531.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="140.8" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="137.8" y="515.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="140.8" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="137.8" y="499.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="140.8" y="510.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="137.8" y="483.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="140.8" y="494.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="137.8" y="467.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="140.8" y="478.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.03%)</title><rect x="137.8" y="451.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="140.8" y="462.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.03%)</title><rect x="137.8" y="435.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="140.8" y="446.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.03%)</title><rect x="137.8" y="419.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="140.8" y="430.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.03%)</title><rect x="137.8" y="403.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="140.8" y="414.0"></text>
</g>
<g>
<title>G1Analytics::predict_card_num(unsigned long, bool) const (1 samples, 0.03%)</title><rect x="137.8" y="387.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="140.8" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="138.2" y="563.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.2" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="138.2" y="547.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.2" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="138.2" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="141.2" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="138.2" y="515.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="141.2" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="138.2" y="499.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (39 samples, 1.33%)</title><rect x="138.6" y="579.0" width="15.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="141.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (39 samples, 1.33%)</title><rect x="138.6" y="563.0" width="15.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="141.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.03%)</title><rect x="138.6" y="547.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="141.6" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="138.6" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="141.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (32 samples, 1.09%)</title><rect x="139.0" y="547.0" width="12.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.0" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="139.4" y="531.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="142.4" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.03%)</title><rect x="139.4" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="142.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="139.4" y="499.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="142.4" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (1 samples, 0.03%)</title><rect x="139.4" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.4" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (28 samples, 0.96%)</title><rect x="139.8" y="531.0" width="11.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="142.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (28 samples, 0.96%)</title><rect x="139.8" y="515.0" width="11.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="142.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (28 samples, 0.96%)</title><rect x="139.8" y="499.0" width="11.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.8" y="510.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.03%)</title><rect x="140.2" y="483.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="143.2" y="494.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.89%)</title><rect x="140.6" y="483.0" width="10.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="143.6" y="494.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="140.6" y="467.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="143.6" y="478.0"></text>
</g>
<g>
<title>pread64 (25 samples, 0.85%)</title><rect x="141.0" y="467.0" width="10.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="144.0" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.82%)</title><rect x="141.4" y="451.0" width="9.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="144.4" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.10%)</title><rect x="141.4" y="435.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="144.4" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.72%)</title><rect x="142.6" y="435.0" width="8.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="145.6" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (13 samples, 0.44%)</title><rect x="145.9" y="419.0" width="5.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="148.9" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (13 samples, 0.44%)</title><rect x="145.9" y="403.0" width="5.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="148.9" y="414.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="145.9" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="148.9" y="398.0"></text>
</g>
<g>
<title>vfs_read (12 samples, 0.41%)</title><rect x="146.3" y="387.0" width="4.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="149.3" y="398.0"></text>
</g>
<g>
<title>__vfs_read (10 samples, 0.34%)</title><rect x="146.3" y="371.0" width="4.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="149.3" y="382.0"></text>
</g>
<g>
<title>new_sync_read (10 samples, 0.34%)</title><rect x="146.3" y="355.0" width="4.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="149.3" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (10 samples, 0.34%)</title><rect x="146.3" y="339.0" width="4.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="149.3" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (10 samples, 0.34%)</title><rect x="146.3" y="323.0" width="4.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="149.3" y="334.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="147.1" y="307.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="150.1" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.10%)</title><rect x="147.5" y="307.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="150.5" y="318.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.10%)</title><rect x="147.5" y="291.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="150.5" y="302.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.10%)</title><rect x="148.7" y="307.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="151.7" y="318.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.10%)</title><rect x="148.7" y="291.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="151.7" y="302.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.07%)</title><rect x="149.1" y="275.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="152.1" y="286.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.03%)</title><rect x="149.9" y="307.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="152.9" y="318.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.07%)</title><rect x="150.3" y="371.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="153.3" y="382.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.07%)</title><rect x="150.3" y="355.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="153.3" y="366.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.07%)</title><rect x="150.3" y="339.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="153.3" y="350.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.07%)</title><rect x="150.3" y="323.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="153.3" y="334.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.03%)</title><rect x="150.7" y="307.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="153.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.07%)</title><rect x="151.1" y="531.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.1" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.07%)</title><rect x="151.1" y="515.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.1" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.03%)</title><rect x="151.1" y="499.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="154.1" y="510.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="151.5" y="499.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="154.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.14%)</title><rect x="151.9" y="547.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="153.1" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.07%)</title><rect x="153.5" y="547.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="156.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getLongFrom (15 samples, 0.51%)</title><rect x="154.3" y="595.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="157.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (15 samples, 0.51%)</title><rect x="154.3" y="579.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="157.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (15 samples, 0.51%)</title><rect x="154.3" y="563.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="157.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.07%)</title><rect x="155.1" y="547.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.1" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.07%)</title><rect x="155.1" y="531.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="158.1" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="155.5" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="158.5" y="526.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="155.5" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.5" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="155.5" y="483.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (11 samples, 0.38%)</title><rect x="155.9" y="547.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="158.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.31%)</title><rect x="155.9" y="531.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="158.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (9 samples, 0.31%)</title><rect x="155.9" y="515.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.31%)</title><rect x="155.9" y="499.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="158.9" y="510.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="155.9" y="483.0" width="3.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="158.9" y="494.0"></text>
</g>
<g>
<title>pread64 (9 samples, 0.31%)</title><rect x="155.9" y="467.0" width="3.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="158.9" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.31%)</title><rect x="155.9" y="451.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="158.9" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.31%)</title><rect x="155.9" y="435.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="158.9" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (9 samples, 0.31%)</title><rect x="155.9" y="419.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="158.9" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (9 samples, 0.31%)</title><rect x="155.9" y="403.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="158.9" y="414.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="155.9" y="387.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="158.9" y="398.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="155.9" y="371.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="158.9" y="382.0"></text>
</g>
<g>
<title>vfs_read (8 samples, 0.27%)</title><rect x="156.3" y="387.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="159.3" y="398.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.17%)</title><rect x="156.7" y="371.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="159.7" y="382.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.17%)</title><rect x="156.7" y="355.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="159.7" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.10%)</title><rect x="157.6" y="339.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="160.6" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.10%)</title><rect x="157.6" y="323.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="160.6" y="334.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.03%)</title><rect x="158.4" y="307.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="161.4" y="318.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.03%)</title><rect x="158.4" y="291.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="161.4" y="302.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.03%)</title><rect x="158.4" y="275.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="161.4" y="286.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.07%)</title><rect x="158.8" y="371.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="161.8" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="159.6" y="531.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.6" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="159.6" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="162.6" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.03%)</title><rect x="159.6" y="499.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="162.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="160.0" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.0" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="160.0" y="515.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="163.0" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="160.0" y="499.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (27 samples, 0.92%)</title><rect x="160.4" y="595.0" width="10.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="163.4" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="160.8" y="579.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.8" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="160.8" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="160.8" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="163.8" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="160.8" y="531.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="163.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="160.8" y="515.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.8" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="160.8" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="163.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (1 samples, 0.03%)</title><rect x="161.2" y="579.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="164.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (24 samples, 0.82%)</title><rect x="161.6" y="579.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="164.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (24 samples, 0.82%)</title><rect x="161.6" y="563.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="164.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (23 samples, 0.79%)</title><rect x="162.0" y="547.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="165.0" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="162.8" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.8" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.03%)</title><rect x="162.8" y="515.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="165.8" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="162.8" y="499.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="165.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (18 samples, 0.61%)</title><rect x="163.2" y="531.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (18 samples, 0.61%)</title><rect x="163.2" y="515.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="166.2" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (18 samples, 0.61%)</title><rect x="163.2" y="499.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.2" y="510.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.61%)</title><rect x="163.2" y="483.0" width="7.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="166.2" y="494.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="163.2" y="467.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="166.2" y="478.0"></text>
</g>
<g>
<title>pread64 (17 samples, 0.58%)</title><rect x="163.6" y="467.0" width="6.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="166.6" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.58%)</title><rect x="163.6" y="451.0" width="6.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="166.6" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.03%)</title><rect x="163.6" y="435.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="166.6" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.55%)</title><rect x="164.0" y="435.0" width="6.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="167.0" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (16 samples, 0.55%)</title><rect x="164.0" y="419.0" width="6.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="167.0" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (16 samples, 0.55%)</title><rect x="164.0" y="403.0" width="6.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="167.0" y="414.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="164.0" y="387.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="167.0" y="398.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="164.4" y="387.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="167.4" y="398.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="164.4" y="371.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="167.4" y="382.0"></text>
</g>
<g>
<title>vfs_read (14 samples, 0.48%)</title><rect x="164.8" y="387.0" width="5.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="167.8" y="398.0"></text>
</g>
<g>
<title>__vfs_read (12 samples, 0.41%)</title><rect x="165.2" y="371.0" width="4.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="168.2" y="382.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.07%)</title><rect x="165.2" y="355.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="168.2" y="366.0"></text>
</g>
<g>
<title>new_sync_read (10 samples, 0.34%)</title><rect x="166.0" y="355.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="169.0" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (9 samples, 0.31%)</title><rect x="166.4" y="339.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="169.4" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (9 samples, 0.31%)</title><rect x="166.4" y="323.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="169.4" y="334.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.10%)</title><rect x="166.8" y="307.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="169.8" y="318.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.10%)</title><rect x="166.8" y="291.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="169.8" y="302.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.07%)</title><rect x="168.0" y="307.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="171.0" y="318.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.07%)</title><rect x="168.0" y="291.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="171.0" y="302.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.03%)</title><rect x="168.0" y="275.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="171.0" y="286.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.03%)</title><rect x="168.4" y="275.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="171.4" y="286.0"></text>
</g>
<g>
<title>touch_atime (3 samples, 0.10%)</title><rect x="168.8" y="307.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="171.8" y="318.0"></text>
</g>
<g>
<title>atime_needs_update (3 samples, 0.10%)</title><rect x="168.8" y="291.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="171.8" y="302.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.10%)</title><rect x="168.8" y="275.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="171.8" y="286.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="169.2" y="259.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="172.2" y="270.0"></text>
</g>
<g>
<title>timestamp_truncate (1 samples, 0.03%)</title><rect x="169.6" y="259.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="172.6" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.03%)</title><rect x="170.0" y="371.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="173.0" y="382.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="170.0" y="355.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="173.0" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="170.5" y="531.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="173.5" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="170.5" y="515.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="173.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="170.9" y="531.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="173.9" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="170.9" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.9" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/2003981913.compare (1 samples, 0.03%)</title><rect x="171.3" y="659.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="174.3" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1 samples, 0.03%)</title><rect x="171.3" y="643.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="174.3" y="654.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3 samples, 0.10%)</title><rect x="171.7" y="755.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="174.7" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (3 samples, 0.10%)</title><rect x="171.7" y="739.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="174.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (3 samples, 0.10%)</title><rect x="171.7" y="723.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="174.7" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.07%)</title><rect x="171.7" y="707.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.7" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$126/785992843.getAsBoolean (2 samples, 0.07%)</title><rect x="171.7" y="691.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="174.7" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.07%)</title><rect x="171.7" y="675.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="174.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2 samples, 0.07%)</title><rect x="171.7" y="659.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="174.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="171.7" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="171.7" y="627.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="174.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.03%)</title><rect x="171.7" y="611.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="174.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1 samples, 0.03%)</title><rect x="171.7" y="595.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.03%)</title><rect x="172.1" y="643.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="175.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$122/1873754548.apply (1 samples, 0.03%)</title><rect x="172.1" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (1 samples, 0.03%)</title><rect x="172.1" y="611.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.1" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="172.1" y="595.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="175.1" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="172.1" y="579.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="175.1" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (1 samples, 0.03%)</title><rect x="172.5" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="175.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="172.5" y="691.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="175.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="172.5" y="675.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="175.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$126/785992843.get$Lambda (1 samples, 0.03%)</title><rect x="172.5" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="175.5" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.07%)</title><rect x="172.9" y="787.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="175.9" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.14%)</title><rect x="173.7" y="787.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.7" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.14%)</title><rect x="173.7" y="771.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="176.7" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.14%)</title><rect x="173.7" y="755.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.7" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.07%)</title><rect x="174.5" y="739.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="177.5" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.03%)</title><rect x="174.9" y="723.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (7 samples, 0.24%)</title><rect x="175.3" y="787.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (7 samples, 0.24%)</title><rect x="175.3" y="771.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="178.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (7 samples, 0.24%)</title><rect x="175.3" y="755.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="178.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (1 samples, 0.03%)</title><rect x="175.7" y="739.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="178.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="175.7" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (5 samples, 0.17%)</title><rect x="176.1" y="739.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="179.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="176.9" y="723.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="179.9" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (1 samples, 0.03%)</title><rect x="176.9" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (2 samples, 0.07%)</title><rect x="177.3" y="723.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="180.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="177.7" y="707.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="180.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.07%)</title><rect x="178.1" y="787.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (2 samples, 0.07%)</title><rect x="178.1" y="771.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="181.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (2 samples, 0.07%)</title><rect x="178.1" y="755.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="181.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (1 samples, 0.03%)</title><rect x="178.5" y="739.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="181.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findLast (1 samples, 0.03%)</title><rect x="178.5" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="181.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.03%)</title><rect x="178.9" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="181.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.03%)</title><rect x="178.9" y="771.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="181.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.03%)</title><rect x="178.9" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (5 samples, 0.17%)</title><rect x="179.3" y="787.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="182.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (5 samples, 0.17%)</title><rect x="179.3" y="771.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="182.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (5 samples, 0.17%)</title><rect x="179.3" y="755.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="182.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock.readLock (1 samples, 0.03%)</title><rect x="181.3" y="787.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="184.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (49 samples, 1.67%)</title><rect x="181.7" y="787.0" width="19.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (49 samples, 1.67%)</title><rect x="181.7" y="771.0" width="19.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="184.7" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (49 samples, 1.67%)</title><rect x="181.7" y="755.0" width="19.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="184.7" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.10%)</title><rect x="181.7" y="739.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="184.7" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.10%)</title><rect x="181.7" y="723.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="184.7" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.10%)</title><rect x="181.7" y="707.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.7" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.07%)</title><rect x="182.1" y="691.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="185.1" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (46 samples, 1.57%)</title><rect x="182.9" y="739.0" width="18.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="185.9" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (46 samples, 1.57%)</title><rect x="182.9" y="723.0" width="18.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="185.9" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (46 samples, 1.57%)</title><rect x="182.9" y="707.0" width="18.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="185.9" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (46 samples, 1.57%)</title><rect x="182.9" y="691.0" width="18.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.9" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (46 samples, 1.57%)</title><rect x="182.9" y="675.0" width="18.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="185.9" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (46 samples, 1.57%)</title><rect x="182.9" y="659.0" width="18.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="185.9" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (46 samples, 1.57%)</title><rect x="182.9" y="643.0" width="18.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="185.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (46 samples, 1.57%)</title><rect x="182.9" y="627.0" width="18.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="185.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (46 samples, 1.57%)</title><rect x="182.9" y="611.0" width="18.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="185.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (18 samples, 0.61%)</title><rect x="182.9" y="595.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="185.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (3 samples, 0.10%)</title><rect x="182.9" y="579.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="185.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="182.9" y="563.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="185.9" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="182.9" y="547.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="185.9" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="182.9" y="531.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="185.9" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="182.9" y="515.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="185.9" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="182.9" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.9" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="182.9" y="483.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="185.9" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="182.9" y="467.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="185.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.07%)</title><rect x="183.4" y="563.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.07%)</title><rect x="183.4" y="547.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="186.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.07%)</title><rect x="183.4" y="531.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.07%)</title><rect x="183.4" y="515.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.07%)</title><rect x="183.4" y="499.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="186.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.07%)</title><rect x="183.4" y="483.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.4" y="494.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="183.4" y="467.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="186.4" y="478.0"></text>
</g>
<g>
<title>pread64 (2 samples, 0.07%)</title><rect x="183.4" y="451.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="186.4" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="183.8" y="435.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="186.8" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="183.8" y="419.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="186.8" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.03%)</title><rect x="183.8" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="186.8" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.03%)</title><rect x="183.8" y="387.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="186.8" y="398.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.03%)</title><rect x="183.8" y="371.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="186.8" y="382.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.03%)</title><rect x="183.8" y="355.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="186.8" y="366.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.03%)</title><rect x="183.8" y="339.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="186.8" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.03%)</title><rect x="183.8" y="323.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="186.8" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.03%)</title><rect x="183.8" y="307.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="186.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (7 samples, 0.24%)</title><rect x="184.2" y="579.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="184.2" y="563.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="187.2" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="184.2" y="547.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="187.2" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="184.2" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="187.2" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="184.2" y="515.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="187.2" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="184.2" y="499.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.2" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="184.2" y="483.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.2" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="184.2" y="467.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="187.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.20%)</title><rect x="184.6" y="563.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="187.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.20%)</title><rect x="184.6" y="547.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="187.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.17%)</title><rect x="184.6" y="531.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.14%)</title><rect x="184.6" y="515.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="187.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.14%)</title><rect x="184.6" y="499.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="187.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.14%)</title><rect x="184.6" y="483.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="187.6" y="494.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="184.6" y="467.0" width="1.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="187.6" y="478.0"></text>
</g>
<g>
<title>pread64 (4 samples, 0.14%)</title><rect x="184.6" y="451.0" width="1.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="187.6" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.14%)</title><rect x="184.6" y="435.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="187.6" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.14%)</title><rect x="184.6" y="419.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="187.6" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.10%)</title><rect x="185.0" y="403.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="188.0" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.10%)</title><rect x="185.0" y="387.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="188.0" y="398.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.10%)</title><rect x="185.0" y="371.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="188.0" y="382.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.10%)</title><rect x="185.0" y="355.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="188.0" y="366.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.10%)</title><rect x="185.0" y="339.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="188.0" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.07%)</title><rect x="185.4" y="323.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="188.4" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.07%)</title><rect x="185.4" y="307.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="188.4" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.03%)</title><rect x="185.8" y="291.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="188.8" y="302.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.03%)</title><rect x="185.8" y="275.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="188.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="186.2" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.2" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (1 samples, 0.03%)</title><rect x="186.2" y="499.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="189.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.03%)</title><rect x="186.6" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (8 samples, 0.27%)</title><rect x="187.0" y="579.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="190.0" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="187.0" y="563.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="190.0" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="187.0" y="547.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="190.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.24%)</title><rect x="187.4" y="563.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.24%)</title><rect x="187.4" y="547.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="190.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.03%)</title><rect x="187.4" y="531.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="190.4" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="187.4" y="515.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="190.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.17%)</title><rect x="187.8" y="531.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="190.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.10%)</title><rect x="188.6" y="515.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.10%)</title><rect x="188.6" y="499.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.10%)</title><rect x="188.6" y="483.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="191.6" y="494.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="188.6" y="467.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="191.6" y="478.0"></text>
</g>
<g>
<title>pread64 (3 samples, 0.10%)</title><rect x="188.6" y="451.0" width="1.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="191.6" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.10%)</title><rect x="188.6" y="435.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="191.6" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.10%)</title><rect x="188.6" y="419.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="191.6" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.10%)</title><rect x="188.6" y="403.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="191.6" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.10%)</title><rect x="188.6" y="387.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="191.6" y="398.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.10%)</title><rect x="188.6" y="371.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="191.6" y="382.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.10%)</title><rect x="188.6" y="355.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="191.6" y="366.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.10%)</title><rect x="188.6" y="339.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="191.6" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.10%)</title><rect x="188.6" y="323.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="191.6" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.10%)</title><rect x="188.6" y="307.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="191.6" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.07%)</title><rect x="188.6" y="291.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="191.6" y="302.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.07%)</title><rect x="188.6" y="275.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="191.6" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.03%)</title><rect x="189.4" y="291.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="192.4" y="302.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.03%)</title><rect x="189.4" y="275.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="192.4" y="286.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.03%)</title><rect x="189.4" y="259.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="192.4" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.03%)</title><rect x="189.8" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.value (28 samples, 0.96%)</title><rect x="190.2" y="595.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (3 samples, 0.10%)</title><rect x="190.2" y="579.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="193.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.10%)</title><rect x="190.2" y="563.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="193.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.10%)</title><rect x="190.2" y="547.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="193.2" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.03%)</title><rect x="190.6" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="193.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.03%)</title><rect x="191.0" y="531.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="194.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (14 samples, 0.48%)</title><rect x="191.4" y="579.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="194.4" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (14 samples, 0.48%)</title><rect x="191.4" y="563.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="194.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (14 samples, 0.48%)</title><rect x="191.4" y="547.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="194.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.03%)</title><rect x="191.4" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="194.4" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="191.4" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="194.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 0.41%)</title><rect x="191.8" y="531.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="194.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.31%)</title><rect x="191.8" y="515.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="194.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (9 samples, 0.31%)</title><rect x="191.8" y="499.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="194.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.31%)</title><rect x="191.8" y="483.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="194.8" y="494.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="192.6" y="467.0" width="2.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="195.6" y="478.0"></text>
</g>
<g>
<title>pread64 (7 samples, 0.24%)</title><rect x="192.6" y="451.0" width="2.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="195.6" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.20%)</title><rect x="193.0" y="435.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="196.0" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.20%)</title><rect x="193.0" y="419.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="196.0" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.17%)</title><rect x="193.4" y="403.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="196.4" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.17%)</title><rect x="193.4" y="387.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="196.4" y="398.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.17%)</title><rect x="193.4" y="371.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="196.4" y="382.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.17%)</title><rect x="193.4" y="355.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="196.4" y="366.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.17%)</title><rect x="193.4" y="339.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="196.4" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (5 samples, 0.17%)</title><rect x="193.4" y="323.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="196.4" y="334.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="193.4" y="307.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="196.4" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (4 samples, 0.14%)</title><rect x="193.8" y="307.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="196.8" y="318.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.03%)</title><rect x="195.0" y="291.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="198.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.10%)</title><rect x="195.4" y="515.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="198.4" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.10%)</title><rect x="195.4" y="499.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="198.4" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.03%)</title><rect x="195.8" y="483.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.8" y="494.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="196.3" y="483.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="199.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.03%)</title><rect x="196.7" y="531.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="199.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getLongFrom (3 samples, 0.10%)</title><rect x="197.1" y="579.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="200.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.10%)</title><rect x="197.1" y="563.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="200.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.10%)</title><rect x="197.1" y="547.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="200.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.10%)</title><rect x="197.1" y="531.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="200.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.10%)</title><rect x="197.1" y="515.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="200.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.10%)</title><rect x="197.1" y="499.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="200.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.10%)</title><rect x="197.1" y="483.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="200.1" y="494.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="197.1" y="467.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="200.1" y="478.0"></text>
</g>
<g>
<title>pread64 (3 samples, 0.10%)</title><rect x="197.1" y="451.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="200.1" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.10%)</title><rect x="197.1" y="435.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="200.1" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.10%)</title><rect x="197.1" y="419.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="200.1" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.10%)</title><rect x="197.1" y="403.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="200.1" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.10%)</title><rect x="197.1" y="387.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="200.1" y="398.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.10%)</title><rect x="197.1" y="371.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="200.1" y="382.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.07%)</title><rect x="197.1" y="355.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="200.1" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.03%)</title><rect x="197.1" y="339.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="200.1" y="350.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.03%)</title><rect x="197.5" y="339.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="200.5" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.03%)</title><rect x="197.5" y="323.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="200.5" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.03%)</title><rect x="197.5" y="307.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="200.5" y="318.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.03%)</title><rect x="197.5" y="291.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="200.5" y="302.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.03%)</title><rect x="197.5" y="275.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="200.5" y="286.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.03%)</title><rect x="197.5" y="259.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="200.5" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.03%)</title><rect x="197.9" y="355.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="200.9" y="366.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="197.9" y="339.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="200.9" y="350.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="197.9" y="323.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="200.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (8 samples, 0.27%)</title><rect x="198.3" y="579.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="201.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="198.3" y="563.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="201.3" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="198.3" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="201.3" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="198.3" y="531.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="201.3" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="198.3" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="201.3" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="198.3" y="499.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="201.3" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="198.3" y="483.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.24%)</title><rect x="198.7" y="563.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="201.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.24%)</title><rect x="198.7" y="547.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="201.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.20%)</title><rect x="199.1" y="531.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="202.1" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="199.1" y="515.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="202.1" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.03%)</title><rect x="199.1" y="499.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="202.1" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="199.1" y="483.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="202.1" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.03%)</title><rect x="199.1" y="467.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="202.1" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (1 samples, 0.03%)</title><rect x="199.1" y="451.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="202.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.17%)</title><rect x="199.5" y="515.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.17%)</title><rect x="199.5" y="499.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="202.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.17%)</title><rect x="199.5" y="483.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="202.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="199.5" y="467.0" width="2.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="202.5" y="478.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="199.5" y="451.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="202.5" y="462.0"></text>
</g>
<g>
<title>pread64 (4 samples, 0.14%)</title><rect x="199.9" y="451.0" width="1.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="202.9" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.10%)</title><rect x="200.3" y="435.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="203.3" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.10%)</title><rect x="200.3" y="419.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="203.3" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.07%)</title><rect x="200.7" y="403.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="203.7" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (2 samples, 0.07%)</title><rect x="200.7" y="387.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="203.7" y="398.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="200.7" y="371.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="203.7" y="382.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="200.7" y="355.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="203.7" y="366.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="200.7" y="339.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="203.7" y="350.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.03%)</title><rect x="201.1" y="371.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="204.1" y="382.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.03%)</title><rect x="201.1" y="355.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="204.1" y="366.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.03%)</title><rect x="201.1" y="339.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="204.1" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.03%)</title><rect x="201.1" y="323.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="204.1" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.03%)</title><rect x="201.1" y="307.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="204.1" y="318.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.03%)</title><rect x="201.1" y="291.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="204.1" y="302.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.03%)</title><rect x="201.1" y="275.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="204.1" y="286.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.03%)</title><rect x="201.1" y="259.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="204.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.iterator (10 samples, 0.34%)</title><rect x="201.5" y="787.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.5" y="798.0"></text>
</g>
<g>
<title>java/util/Collection.stream (10 samples, 0.34%)</title><rect x="201.5" y="771.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="204.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (10 samples, 0.34%)</title><rect x="201.5" y="755.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (10 samples, 0.34%)</title><rect x="201.5" y="739.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="204.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (10 samples, 0.34%)</title><rect x="201.5" y="723.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (9 samples, 0.31%)</title><rect x="201.9" y="707.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="204.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (9 samples, 0.31%)</title><rect x="201.9" y="691.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="204.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="201.9" y="675.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="204.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="201.9" y="659.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (8 samples, 0.27%)</title><rect x="202.3" y="675.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="205.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.24%)</title><rect x="202.7" y="659.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="205.7" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.24%)</title><rect x="202.7" y="643.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="205.7" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.10%)</title><rect x="204.3" y="627.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.3" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.07%)</title><rect x="204.7" y="611.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="207.7" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.03%)</title><rect x="205.1" y="595.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="208.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.iterator (1,749 samples, 59.75%)</title><rect x="205.5" y="787.0" width="705.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.5" y="798.0">ru/mail/polis/dao/alexander/marashov/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.&lt;init&gt; (1,749 samples, 59.75%)</title><rect x="205.5" y="771.0" width="705.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="208.5" y="782.0">ru/mail/polis/dao/alexander/marashov/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.binarySearch (1,749 samples, 59.75%)</title><rect x="205.5" y="755.0" width="705.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="208.5" y="766.0">ru/mail/polis/dao/alexander/marashov/SSTable.binarySearch</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.38%)</title><rect x="207.5" y="739.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="210.5" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.14%)</title><rect x="210.4" y="723.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="213.4" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.07%)</title><rect x="210.4" y="707.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="213.4" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.07%)</title><rect x="210.4" y="691.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="213.4" y="702.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.07%)</title><rect x="211.2" y="707.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="214.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (1,733 samples, 59.21%)</title><rect x="212.0" y="739.0" width="698.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="215.0" y="750.0">ru/mail/polis/dao/alexander/marashov/SSTable.key</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (554 samples, 18.93%)</title><rect x="212.0" y="723.0" width="223.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="215.0" y="734.0">ru/mail/polis/dao/alexander/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="212.0" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="215.0" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="212.0" y="691.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="215.0" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="212.0" y="675.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="215.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (553 samples, 18.89%)</title><rect x="212.4" y="707.0" width="222.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="215.4" y="718.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (553 samples, 18.89%)</title><rect x="212.4" y="691.0" width="222.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="215.4" y="702.0">sun/nio/ch/FileChannelImpl.re..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (3 samples, 0.10%)</title><rect x="220.4" y="675.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (28 samples, 0.96%)</title><rect x="221.7" y="675.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="224.7" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (28 samples, 0.96%)</title><rect x="221.7" y="659.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="224.7" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.10%)</title><rect x="231.7" y="643.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.7" y="654.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.10%)</title><rect x="231.7" y="627.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="234.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.10%)</title><rect x="231.7" y="611.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="234.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (5 samples, 0.17%)</title><rect x="232.9" y="675.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="235.9" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (5 samples, 0.17%)</title><rect x="232.9" y="659.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="235.9" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (384 samples, 13.12%)</title><rect x="235.0" y="675.0" width="154.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="238.0" y="686.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (13 samples, 0.44%)</title><rect x="239.0" y="659.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="242.0" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (11 samples, 0.38%)</title><rect x="239.8" y="643.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="242.8" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (1 samples, 0.03%)</title><rect x="239.8" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.8" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.07%)</title><rect x="240.2" y="627.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="243.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.07%)</title><rect x="240.2" y="611.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.2" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.17%)</title><rect x="241.0" y="627.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="244.0" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.17%)</title><rect x="241.0" y="611.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="244.0" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.17%)</title><rect x="241.0" y="595.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="244.0" y="606.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="241.8" y="579.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="244.8" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.07%)</title><rect x="242.2" y="579.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="245.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.10%)</title><rect x="243.0" y="627.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="246.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.10%)</title><rect x="243.0" y="611.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="246.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.07%)</title><rect x="243.0" y="595.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="246.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (2 samples, 0.07%)</title><rect x="243.0" y="579.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="246.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkSize (1 samples, 0.03%)</title><rect x="243.8" y="595.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="246.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (325 samples, 11.10%)</title><rect x="244.2" y="659.0" width="131.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="247.2" y="670.0">sun/nio/ch/IOUti..</text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="246.2" y="643.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="249.2" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.07%)</title><rect x="246.6" y="643.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="249.6" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.07%)</title><rect x="246.6" y="627.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="249.6" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.07%)</title><rect x="246.6" y="611.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="249.6" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.07%)</title><rect x="246.6" y="595.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="249.6" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (316 samples, 10.80%)</title><rect x="247.5" y="643.0" width="127.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="250.5" y="654.0">sun/nio/ch/FileD..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (316 samples, 10.80%)</title><rect x="247.5" y="627.0" width="127.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.5" y="638.0">sun/nio/ch/FileD..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (5 samples, 0.17%)</title><rect x="251.5" y="611.0" width="2.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="254.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (301 samples, 10.28%)</title><rect x="253.5" y="611.0" width="121.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="256.5" y="622.0">[unknown]</text>
</g>
<g>
<title>__libc_disable_asynccancel (5 samples, 0.17%)</title><rect x="253.5" y="595.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="256.5" y="606.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.10%)</title><rect x="255.5" y="595.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="258.5" y="606.0"></text>
</g>
<g>
<title>pread64 (293 samples, 10.01%)</title><rect x="256.7" y="595.0" width="118.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="259.7" y="606.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (275 samples, 9.40%)</title><rect x="264.0" y="579.0" width="110.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="267.0" y="590.0">entry_SYSCALL..</text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.10%)</title><rect x="264.0" y="563.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="267.0" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (272 samples, 9.29%)</title><rect x="265.2" y="563.0" width="109.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="268.2" y="574.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (232 samples, 7.93%)</title><rect x="280.1" y="547.0" width="93.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="283.1" y="558.0">__x64_sys_p..</text>
</g>
<g>
<title>ksys_pread64 (232 samples, 7.93%)</title><rect x="280.1" y="531.0" width="93.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="283.1" y="542.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (37 samples, 1.26%)</title><rect x="280.5" y="515.0" width="14.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="283.5" y="526.0"></text>
</g>
<g>
<title>__fget_light (37 samples, 1.26%)</title><rect x="280.5" y="499.0" width="14.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="283.5" y="510.0"></text>
</g>
<g>
<title>__fget (35 samples, 1.20%)</title><rect x="281.3" y="483.0" width="14.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="284.3" y="494.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.07%)</title><rect x="295.4" y="515.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="298.4" y="526.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.03%)</title><rect x="296.2" y="515.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="299.2" y="526.0"></text>
</g>
<g>
<title>fput (7 samples, 0.24%)</title><rect x="296.6" y="515.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="299.6" y="526.0"></text>
</g>
<g>
<title>fput_many (7 samples, 0.24%)</title><rect x="296.6" y="499.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="299.6" y="510.0"></text>
</g>
<g>
<title>vfs_read (184 samples, 6.29%)</title><rect x="299.5" y="515.0" width="74.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="302.5" y="526.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.14%)</title><rect x="300.3" y="499.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="303.3" y="510.0"></text>
</g>
<g>
<title>__vfs_read (140 samples, 4.78%)</title><rect x="301.9" y="499.0" width="56.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="304.9" y="510.0">__vfs_..</text>
</g>
<g>
<title>ext4_file_read_iter (5 samples, 0.17%)</title><rect x="302.7" y="483.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="305.7" y="494.0"></text>
</g>
<g>
<title>new_sync_read (133 samples, 4.54%)</title><rect x="304.7" y="483.0" width="53.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="307.7" y="494.0">new_s..</text>
</g>
<g>
<title>ext4_file_read_iter (120 samples, 4.10%)</title><rect x="308.7" y="467.0" width="48.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="311.7" y="478.0">ext4..</text>
</g>
<g>
<title>generic_file_read_iter (107 samples, 3.66%)</title><rect x="313.6" y="451.0" width="43.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="316.6" y="462.0">gene..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="330.1" y="435.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="333.1" y="446.0"></text>
</g>
<g>
<title>atime_needs_update (3 samples, 0.10%)</title><rect x="330.5" y="435.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="333.5" y="446.0"></text>
</g>
<g>
<title>copy_page_to_iter (35 samples, 1.20%)</title><rect x="331.7" y="435.0" width="14.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="334.7" y="446.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.07%)</title><rect x="334.5" y="419.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="337.5" y="430.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.07%)</title><rect x="334.5" y="403.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="337.5" y="414.0"></text>
</g>
<g>
<title>copy_user_generic_string (26 samples, 0.89%)</title><rect x="335.3" y="419.0" width="10.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="338.3" y="430.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.03%)</title><rect x="345.8" y="435.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="348.8" y="446.0"></text>
</g>
<g>
<title>pagecache_get_page (10 samples, 0.34%)</title><rect x="346.2" y="435.0" width="4.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="349.2" y="446.0"></text>
</g>
<g>
<title>find_get_entry (10 samples, 0.34%)</title><rect x="346.2" y="419.0" width="4.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="349.2" y="430.0"></text>
</g>
<g>
<title>xas_load (4 samples, 0.14%)</title><rect x="347.8" y="403.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="350.8" y="414.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.07%)</title><rect x="348.6" y="387.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="351.6" y="398.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.07%)</title><rect x="349.4" y="403.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="352.4" y="414.0"></text>
</g>
<g>
<title>touch_atime (16 samples, 0.55%)</title><rect x="350.3" y="435.0" width="6.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="353.3" y="446.0"></text>
</g>
<g>
<title>atime_needs_update (5 samples, 0.17%)</title><rect x="354.7" y="419.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="357.7" y="430.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.07%)</title><rect x="355.1" y="403.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="358.1" y="414.0"></text>
</g>
<g>
<title>timestamp_truncate (1 samples, 0.03%)</title><rect x="355.5" y="387.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="358.5" y="398.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="355.9" y="403.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="358.9" y="414.0"></text>
</g>
<g>
<title>timestamp_truncate (1 samples, 0.03%)</title><rect x="356.3" y="403.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="359.3" y="414.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.03%)</title><rect x="356.7" y="451.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="359.7" y="462.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.07%)</title><rect x="357.1" y="467.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="360.1" y="478.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.03%)</title><rect x="357.9" y="467.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="360.9" y="478.0"></text>
</g>
<g>
<title>fsnotify (9 samples, 0.31%)</title><rect x="358.3" y="499.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="361.3" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (29 samples, 0.99%)</title><rect x="361.9" y="499.0" width="11.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="364.9" y="510.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.07%)</title><rect x="362.3" y="483.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="365.3" y="494.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.14%)</title><rect x="363.2" y="483.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="366.2" y="494.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="364.8" y="483.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="367.8" y="494.0"></text>
</g>
<g>
<title>security_file_permission (21 samples, 0.72%)</title><rect x="365.2" y="483.0" width="8.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="368.2" y="494.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.10%)</title><rect x="366.4" y="467.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="369.4" y="478.0"></text>
</g>
<g>
<title>apparmor_file_permission (6 samples, 0.20%)</title><rect x="367.6" y="467.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="370.6" y="478.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.03%)</title><rect x="367.6" y="451.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="370.6" y="462.0"></text>
</g>
<g>
<title>common_file_perm (5 samples, 0.17%)</title><rect x="368.0" y="451.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="371.0" y="462.0"></text>
</g>
<g>
<title>aa_file_perm (3 samples, 0.10%)</title><rect x="368.8" y="435.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="371.8" y="446.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.14%)</title><rect x="370.0" y="467.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="373.0" y="478.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.17%)</title><rect x="371.6" y="467.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="374.6" y="478.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.10%)</title><rect x="373.6" y="547.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="376.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="374.8" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="377.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (23 samples, 0.79%)</title><rect x="375.2" y="659.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="378.2" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (18 samples, 0.61%)</title><rect x="376.5" y="643.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="379.5" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.07%)</title><rect x="381.3" y="627.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="384.3" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.07%)</title><rect x="381.3" y="611.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="384.3" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.nextIndex (2 samples, 0.07%)</title><rect x="381.3" y="595.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="384.3" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (3 samples, 0.10%)</title><rect x="382.1" y="627.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="385.1" y="638.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="383.3" y="627.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="386.3" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.07%)</title><rect x="383.7" y="643.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.7" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.03%)</title><rect x="384.1" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="387.1" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.03%)</title><rect x="384.1" y="611.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="387.1" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="384.1" y="595.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="387.1" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="384.1" y="579.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="387.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (13 samples, 0.44%)</title><rect x="384.5" y="659.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="387.5" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.24%)</title><rect x="385.3" y="643.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="388.3" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (6 samples, 0.20%)</title><rect x="385.7" y="627.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="388.7" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (4 samples, 0.14%)</title><rect x="388.1" y="643.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.1" y="654.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="389.4" y="627.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="392.4" y="638.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.03%)</title><rect x="389.4" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="392.4" y="622.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="389.4" y="595.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="392.4" y="606.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="389.4" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="392.4" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (63 samples, 2.15%)</title><rect x="389.8" y="675.0" width="25.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="392.8" y="686.0">s..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (17 samples, 0.58%)</title><rect x="404.3" y="659.0" width="6.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="407.3" y="670.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.03%)</title><rect x="404.3" y="643.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="407.3" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (16 samples, 0.55%)</title><rect x="404.7" y="643.0" width="6.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="407.7" y="654.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (2 samples, 0.07%)</title><rect x="404.7" y="627.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="407.7" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (13 samples, 0.44%)</title><rect x="405.5" y="627.0" width="5.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="408.5" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (8 samples, 0.27%)</title><rect x="407.5" y="611.0" width="3.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="410.5" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.03%)</title><rect x="410.7" y="627.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="413.7" y="638.0"></text>
</g>
<g>
<title>JavaThreadBlockedOnMonitorEnterState::JavaThreadBlockedOnMonitorEnterState(JavaThread*, ObjectMonitor*) (1 samples, 0.03%)</title><rect x="410.7" y="611.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="413.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (10 samples, 0.34%)</title><rect x="411.1" y="659.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="414.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (50 samples, 1.71%)</title><rect x="415.2" y="675.0" width="20.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="418.2" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.34%)</title><rect x="431.3" y="659.0" width="4.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="434.3" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (9 samples, 0.31%)</title><rect x="431.7" y="643.0" width="3.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="434.7" y="654.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.03%)</title><rect x="432.1" y="627.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="435.1" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.24%)</title><rect x="432.5" y="627.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="435.5" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.07%)</title><rect x="434.5" y="611.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="437.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (558 samples, 19.06%)</title><rect x="435.3" y="723.0" width="225.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="438.3" y="734.0">ru/mail/polis/dao/alexander/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (1 samples, 0.03%)</title><rect x="435.3" y="707.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="438.3" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.rewind (1 samples, 0.03%)</title><rect x="435.3" y="691.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="438.3" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (1 samples, 0.03%)</title><rect x="435.7" y="707.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="438.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (1 samples, 0.03%)</title><rect x="435.7" y="691.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="438.7" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (555 samples, 18.96%)</title><rect x="436.1" y="707.0" width="223.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="439.1" y="718.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (555 samples, 18.96%)</title><rect x="436.1" y="691.0" width="223.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="439.1" y="702.0">sun/nio/ch/FileChannelImpl.re..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (27 samples, 0.92%)</title><rect x="443.0" y="675.0" width="10.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="446.0" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (27 samples, 0.92%)</title><rect x="443.0" y="659.0" width="10.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="446.0" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.14%)</title><rect x="452.2" y="643.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="455.2" y="654.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.14%)</title><rect x="452.2" y="627.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="455.2" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.14%)</title><rect x="452.2" y="611.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="455.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.07%)</title><rect x="453.9" y="675.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="456.9" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.07%)</title><rect x="453.9" y="659.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="456.9" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (399 samples, 13.63%)</title><rect x="454.7" y="675.0" width="160.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="457.7" y="686.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (9 samples, 0.31%)</title><rect x="457.9" y="659.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="460.9" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.07%)</title><rect x="458.3" y="643.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.3" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.07%)</title><rect x="458.3" y="627.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.3" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (6 samples, 0.20%)</title><rect x="459.1" y="643.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="462.1" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (1 samples, 0.03%)</title><rect x="459.1" y="627.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="462.1" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (5 samples, 0.17%)</title><rect x="459.5" y="627.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="462.5" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (1 samples, 0.03%)</title><rect x="459.9" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="462.9" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.10%)</title><rect x="460.3" y="611.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="463.3" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (1 samples, 0.03%)</title><rect x="460.3" y="595.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="463.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (2 samples, 0.07%)</title><rect x="460.7" y="595.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (345 samples, 11.79%)</title><rect x="461.5" y="659.0" width="139.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="464.5" y="670.0">sun/nio/ch/IOUtil..</text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="463.1" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="466.1" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.07%)</title><rect x="463.5" y="643.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.5" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.07%)</title><rect x="463.5" y="627.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.5" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.07%)</title><rect x="463.5" y="611.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.5" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.07%)</title><rect x="463.5" y="595.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (337 samples, 11.51%)</title><rect x="464.3" y="643.0" width="135.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="467.3" y="654.0">sun/nio/ch/FileDi..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (337 samples, 11.51%)</title><rect x="464.3" y="627.0" width="135.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.3" y="638.0">sun/nio/ch/FileDi..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (4 samples, 0.14%)</title><rect x="468.8" y="611.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="471.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (319 samples, 10.90%)</title><rect x="470.4" y="611.0" width="128.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="473.4" y="622.0">[unknown]</text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.07%)</title><rect x="470.4" y="595.0" width="0.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="473.4" y="606.0"></text>
</g>
<g>
<title>pread64 (317 samples, 10.83%)</title><rect x="471.2" y="595.0" width="127.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="474.2" y="606.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (290 samples, 9.91%)</title><rect x="482.1" y="579.0" width="116.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="485.1" y="590.0">entry_SYSCALL_..</text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.17%)</title><rect x="482.1" y="563.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="485.1" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (285 samples, 9.74%)</title><rect x="484.1" y="563.0" width="114.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="487.1" y="574.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (256 samples, 8.75%)</title><rect x="495.8" y="547.0" width="103.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="498.8" y="558.0">__x64_sys_pr..</text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="495.8" y="531.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="498.8" y="542.0"></text>
</g>
<g>
<title>ksys_pread64 (255 samples, 8.71%)</title><rect x="496.2" y="531.0" width="102.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="499.2" y="542.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (25 samples, 0.85%)</title><rect x="496.6" y="515.0" width="10.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="499.6" y="526.0"></text>
</g>
<g>
<title>__fget_light (25 samples, 0.85%)</title><rect x="496.6" y="499.0" width="10.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="499.6" y="510.0"></text>
</g>
<g>
<title>__fget (25 samples, 0.85%)</title><rect x="496.6" y="483.0" width="10.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="499.6" y="494.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.10%)</title><rect x="506.7" y="515.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="509.7" y="526.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.10%)</title><rect x="507.9" y="515.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="510.9" y="526.0"></text>
</g>
<g>
<title>fput (3 samples, 0.10%)</title><rect x="509.1" y="515.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="512.1" y="526.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.10%)</title><rect x="509.1" y="499.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="512.1" y="510.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="510.3" y="515.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="513.3" y="526.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.07%)</title><rect x="510.7" y="515.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="513.7" y="526.0"></text>
</g>
<g>
<title>vfs_read (217 samples, 7.41%)</title><rect x="511.5" y="515.0" width="87.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="514.5" y="526.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.07%)</title><rect x="514.7" y="499.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="517.7" y="510.0"></text>
</g>
<g>
<title>__vfs_read (164 samples, 5.60%)</title><rect x="515.5" y="499.0" width="66.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="518.5" y="510.0">__vfs_r..</text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.07%)</title><rect x="515.5" y="483.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="518.5" y="494.0"></text>
</g>
<g>
<title>new_sync_read (162 samples, 5.53%)</title><rect x="516.3" y="483.0" width="65.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="519.3" y="494.0">new_syn..</text>
</g>
<g>
<title>ext4_file_read_iter (147 samples, 5.02%)</title><rect x="521.6" y="467.0" width="59.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="524.6" y="478.0">ext4_f..</text>
</g>
<g>
<title>generic_file_read_iter (133 samples, 4.54%)</title><rect x="527.2" y="451.0" width="53.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="530.2" y="462.0">gener..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="540.5" y="435.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="543.5" y="446.0"></text>
</g>
<g>
<title>atime_needs_update (3 samples, 0.10%)</title><rect x="540.9" y="435.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="543.9" y="446.0"></text>
</g>
<g>
<title>copy_page_to_iter (34 samples, 1.16%)</title><rect x="542.1" y="435.0" width="13.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="545.1" y="446.0"></text>
</g>
<g>
<title>copy_user_generic_string (24 samples, 0.82%)</title><rect x="545.8" y="419.0" width="9.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="548.8" y="430.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.03%)</title><rect x="555.5" y="419.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="558.5" y="430.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.07%)</title><rect x="555.9" y="435.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="558.9" y="446.0"></text>
</g>
<g>
<title>pagecache_get_page (40 samples, 1.37%)</title><rect x="556.7" y="435.0" width="16.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="559.7" y="446.0"></text>
</g>
<g>
<title>find_get_entry (39 samples, 1.33%)</title><rect x="557.1" y="419.0" width="15.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="560.1" y="430.0"></text>
</g>
<g>
<title>xas_load (10 samples, 0.34%)</title><rect x="568.0" y="403.0" width="4.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="571.0" y="414.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.07%)</title><rect x="571.2" y="387.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="574.2" y="398.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.07%)</title><rect x="572.0" y="403.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="575.0" y="414.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="572.8" y="435.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="575.8" y="446.0"></text>
</g>
<g>
<title>touch_atime (19 samples, 0.65%)</title><rect x="573.2" y="435.0" width="7.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="576.2" y="446.0"></text>
</g>
<g>
<title>atime_needs_update (5 samples, 0.17%)</title><rect x="578.8" y="419.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="581.8" y="430.0"></text>
</g>
<g>
<title>current_time (4 samples, 0.14%)</title><rect x="578.8" y="403.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="581.8" y="414.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.07%)</title><rect x="579.6" y="387.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="582.6" y="398.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="580.4" y="403.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="583.4" y="414.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.03%)</title><rect x="580.9" y="467.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="583.9" y="478.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.03%)</title><rect x="581.3" y="467.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="584.3" y="478.0"></text>
</g>
<g>
<title>fsnotify (9 samples, 0.31%)</title><rect x="581.7" y="499.0" width="3.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="584.7" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (34 samples, 1.16%)</title><rect x="585.3" y="499.0" width="13.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="588.3" y="510.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="585.3" y="483.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="588.3" y="494.0"></text>
</g>
<g>
<title>apparmor_file_permission (6 samples, 0.20%)</title><rect x="585.7" y="483.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="588.7" y="494.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="588.1" y="483.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="591.1" y="494.0"></text>
</g>
<g>
<title>security_file_permission (26 samples, 0.89%)</title><rect x="588.5" y="483.0" width="10.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="591.5" y="494.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.07%)</title><rect x="589.3" y="467.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="592.3" y="478.0"></text>
</g>
<g>
<title>apparmor_file_permission (18 samples, 0.61%)</title><rect x="590.1" y="467.0" width="7.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="593.1" y="478.0"></text>
</g>
<g>
<title>common_file_perm (18 samples, 0.61%)</title><rect x="590.1" y="451.0" width="7.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="593.1" y="462.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.07%)</title><rect x="596.2" y="435.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="599.2" y="446.0"></text>
</g>
<g>
<title>aa_label_is_subset (1 samples, 0.03%)</title><rect x="597.0" y="435.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="600.0" y="446.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.14%)</title><rect x="597.4" y="467.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="600.4" y="478.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="599.0" y="611.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="602.0" y="622.0"></text>
</g>
<g>
<title>pread64 (2 samples, 0.07%)</title><rect x="599.4" y="611.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="602.4" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="600.2" y="643.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (20 samples, 0.68%)</title><rect x="600.6" y="659.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="603.6" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (20 samples, 0.68%)</title><rect x="600.6" y="643.0" width="8.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="603.6" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (5 samples, 0.17%)</title><rect x="605.4" y="627.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="608.4" y="638.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.10%)</title><rect x="607.5" y="627.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="610.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (17 samples, 0.58%)</title><rect x="608.7" y="659.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="611.7" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (13 samples, 0.44%)</title><rect x="609.1" y="643.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="612.1" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (8 samples, 0.27%)</title><rect x="611.1" y="627.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="614.1" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (3 samples, 0.10%)</title><rect x="614.3" y="643.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="617.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (66 samples, 2.25%)</title><rect x="615.5" y="675.0" width="26.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="618.5" y="686.0">s..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (19 samples, 0.65%)</title><rect x="632.5" y="659.0" width="7.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="635.5" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (19 samples, 0.65%)</title><rect x="632.5" y="643.0" width="7.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="635.5" y="654.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (3 samples, 0.10%)</title><rect x="632.5" y="627.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="635.5" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (16 samples, 0.55%)</title><rect x="633.7" y="627.0" width="6.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="636.7" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (9 samples, 0.31%)</title><rect x="636.1" y="611.0" width="3.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="639.1" y="622.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="639.7" y="611.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="642.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.17%)</title><rect x="640.1" y="659.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="643.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (44 samples, 1.50%)</title><rect x="642.1" y="675.0" width="17.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="645.1" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.27%)</title><rect x="656.6" y="659.0" width="3.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="659.6" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (8 samples, 0.27%)</title><rect x="656.6" y="643.0" width="3.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="659.6" y="654.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.03%)</title><rect x="656.6" y="627.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="659.6" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.20%)</title><rect x="657.0" y="627.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="660.0" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (5 samples, 0.17%)</title><rect x="657.0" y="611.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="660.0" y="622.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="659.1" y="611.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="662.1" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.03%)</title><rect x="659.5" y="627.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="662.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.03%)</title><rect x="659.9" y="707.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.9" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="659.9" y="691.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="662.9" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.03%)</title><rect x="659.9" y="675.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="662.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="659.9" y="659.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="662.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (621 samples, 21.22%)</title><rect x="660.3" y="723.0" width="250.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.3" y="734.0">ru/mail/polis/dao/alexander/maras..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (9 samples, 0.31%)</title><rect x="660.7" y="707.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="663.7" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.07%)</title><rect x="660.7" y="691.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="663.7" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.07%)</title><rect x="660.7" y="675.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="663.7" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.07%)</title><rect x="660.7" y="659.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="663.7" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.07%)</title><rect x="660.7" y="643.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="663.7" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="661.1" y="627.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="664.1" y="638.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="661.1" y="611.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="664.1" y="622.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="661.1" y="595.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="664.1" y="606.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.03%)</title><rect x="661.1" y="579.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="664.1" y="590.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.03%)</title><rect x="661.1" y="563.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="664.1" y="574.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.03%)</title><rect x="661.1" y="547.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="664.1" y="558.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.03%)</title><rect x="661.1" y="531.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="664.1" y="542.0"></text>
</g>
<g>
<title>G1Policy::predict_yg_surv_rate(int, SurvRateGroup*) const (1 samples, 0.03%)</title><rect x="661.1" y="515.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="664.1" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.24%)</title><rect x="661.5" y="691.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="664.5" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.14%)</title><rect x="662.7" y="675.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="665.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (611 samples, 20.87%)</title><rect x="664.3" y="707.0" width="246.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="667.3" y="718.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (610 samples, 20.84%)</title><rect x="664.7" y="691.0" width="245.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="667.7" y="702.0">sun/nio/ch/FileChannelImpl.readIn..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (40 samples, 1.37%)</title><rect x="673.6" y="675.0" width="16.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="676.6" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (39 samples, 1.33%)</title><rect x="674.0" y="659.0" width="15.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="677.0" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.03%)</title><rect x="687.7" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="690.7" y="654.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.14%)</title><rect x="688.1" y="643.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.1" y="654.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.14%)</title><rect x="688.1" y="627.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="691.1" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.14%)</title><rect x="688.1" y="611.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.1" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (4 samples, 0.14%)</title><rect x="689.7" y="675.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="692.7" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (4 samples, 0.14%)</title><rect x="689.7" y="659.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="692.7" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.07%)</title><rect x="690.5" y="643.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="693.5" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.07%)</title><rect x="690.5" y="627.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="693.5" y="638.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.03%)</title><rect x="690.9" y="611.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="693.9" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (1 samples, 0.03%)</title><rect x="690.9" y="595.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="693.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (420 samples, 14.35%)</title><rect x="691.3" y="675.0" width="169.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="694.3" y="686.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (10 samples, 0.34%)</title><rect x="695.7" y="659.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="698.7" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (8 samples, 0.27%)</title><rect x="696.6" y="643.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="699.6" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (8 samples, 0.27%)</title><rect x="696.6" y="627.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="699.6" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (6 samples, 0.20%)</title><rect x="697.4" y="611.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (6 samples, 0.20%)</title><rect x="697.4" y="595.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="700.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (365 samples, 12.47%)</title><rect x="699.8" y="659.0" width="147.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.8" y="670.0">sun/nio/ch/IOUtil.r..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.03%)</title><rect x="701.4" y="643.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="704.4" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.03%)</title><rect x="701.4" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.4" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="701.4" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.4" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="701.4" y="595.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="704.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (360 samples, 12.30%)</title><rect x="701.8" y="643.0" width="145.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="704.8" y="654.0">sun/nio/ch/FileDis..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (360 samples, 12.30%)</title><rect x="701.8" y="627.0" width="145.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="704.8" y="638.0">sun/nio/ch/FileDis..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.07%)</title><rect x="709.1" y="611.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="712.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (337 samples, 11.51%)</title><rect x="709.9" y="611.0" width="135.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="712.9" y="622.0">[unknown]</text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.10%)</title><rect x="709.9" y="595.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="712.9" y="606.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.07%)</title><rect x="711.1" y="595.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="714.1" y="606.0"></text>
</g>
<g>
<title>pread64 (332 samples, 11.34%)</title><rect x="711.9" y="595.0" width="133.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="714.9" y="606.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (304 samples, 10.39%)</title><rect x="723.2" y="579.0" width="122.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="726.2" y="590.0">entry_SYSCALL_6..</text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.17%)</title><rect x="723.2" y="563.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="726.2" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (299 samples, 10.22%)</title><rect x="725.2" y="563.0" width="120.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="728.2" y="574.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (272 samples, 9.29%)</title><rect x="735.7" y="547.0" width="109.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="738.7" y="558.0">__x64_sys_pre..</text>
</g>
<g>
<title>__fdget (2 samples, 0.07%)</title><rect x="735.7" y="531.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="738.7" y="542.0"></text>
</g>
<g>
<title>fput (2 samples, 0.07%)</title><rect x="736.5" y="531.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="739.5" y="542.0"></text>
</g>
<g>
<title>ksys_pread64 (268 samples, 9.16%)</title><rect x="737.3" y="531.0" width="108.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="740.3" y="542.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (37 samples, 1.26%)</title><rect x="737.3" y="515.0" width="14.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="740.3" y="526.0"></text>
</g>
<g>
<title>__fget_light (37 samples, 1.26%)</title><rect x="737.3" y="499.0" width="14.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="740.3" y="510.0"></text>
</g>
<g>
<title>__fget (35 samples, 1.20%)</title><rect x="738.1" y="483.0" width="14.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="741.1" y="494.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="752.2" y="515.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="755.2" y="526.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="752.6" y="515.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="755.6" y="526.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.07%)</title><rect x="753.0" y="515.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="756.0" y="526.0"></text>
</g>
<g>
<title>fput (16 samples, 0.55%)</title><rect x="753.8" y="515.0" width="6.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="756.8" y="526.0"></text>
</g>
<g>
<title>fput_many (16 samples, 0.55%)</title><rect x="753.8" y="499.0" width="6.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="756.8" y="510.0"></text>
</g>
<g>
<title>vfs_read (211 samples, 7.21%)</title><rect x="760.2" y="515.0" width="85.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="763.2" y="526.0">vfs_read</text>
</g>
<g>
<title>__vfs_read (164 samples, 5.60%)</title><rect x="763.1" y="499.0" width="66.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="766.1" y="510.0">__vfs_r..</text>
</g>
<g>
<title>ext4_file_read_iter (6 samples, 0.20%)</title><rect x="763.5" y="483.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="766.5" y="494.0"></text>
</g>
<g>
<title>new_sync_read (157 samples, 5.36%)</title><rect x="765.9" y="483.0" width="63.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="768.9" y="494.0">new_syn..</text>
</g>
<g>
<title>ext4_file_read_iter (149 samples, 5.09%)</title><rect x="769.1" y="467.0" width="60.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="772.1" y="478.0">ext4_f..</text>
</g>
<g>
<title>generic_file_read_iter (139 samples, 4.75%)</title><rect x="772.3" y="451.0" width="56.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="775.3" y="462.0">generi..</text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.07%)</title><rect x="787.3" y="435.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="790.3" y="446.0"></text>
</g>
<g>
<title>copy_page_to_iter (32 samples, 1.09%)</title><rect x="788.1" y="435.0" width="12.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="791.1" y="446.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.07%)</title><rect x="790.5" y="419.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="793.5" y="430.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="790.9" y="403.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="793.9" y="414.0"></text>
</g>
<g>
<title>copy_user_generic_string (24 samples, 0.82%)</title><rect x="791.3" y="419.0" width="9.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="794.3" y="430.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.03%)</title><rect x="801.0" y="435.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="804.0" y="446.0"></text>
</g>
<g>
<title>mark_page_accessed (4 samples, 0.14%)</title><rect x="801.4" y="435.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="804.4" y="446.0"></text>
</g>
<g>
<title>pagecache_get_page (41 samples, 1.40%)</title><rect x="803.0" y="435.0" width="16.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="806.0" y="446.0"></text>
</g>
<g>
<title>find_get_entry (38 samples, 1.30%)</title><rect x="803.8" y="419.0" width="15.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="806.8" y="430.0"></text>
</g>
<g>
<title>xas_load (7 samples, 0.24%)</title><rect x="816.3" y="403.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="819.3" y="414.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.03%)</title><rect x="818.7" y="387.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="821.7" y="398.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.03%)</title><rect x="819.1" y="419.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="822.1" y="430.0"></text>
</g>
<g>
<title>touch_atime (22 samples, 0.75%)</title><rect x="819.5" y="435.0" width="8.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="822.5" y="446.0"></text>
</g>
<g>
<title>atime_needs_update (7 samples, 0.24%)</title><rect x="825.2" y="419.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="828.2" y="430.0"></text>
</g>
<g>
<title>current_time (7 samples, 0.24%)</title><rect x="825.2" y="403.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="828.2" y="414.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="826.0" y="387.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="829.0" y="398.0"></text>
</g>
<g>
<title>timestamp_truncate (4 samples, 0.14%)</title><rect x="826.4" y="387.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="829.4" y="398.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.03%)</title><rect x="828.0" y="419.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="831.0" y="430.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.03%)</title><rect x="828.4" y="451.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="831.4" y="462.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.03%)</title><rect x="828.8" y="451.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="831.8" y="462.0"></text>
</g>
<g>
<title>fsnotify (8 samples, 0.27%)</title><rect x="829.2" y="499.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="832.2" y="510.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.03%)</title><rect x="832.4" y="499.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="835.4" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (31 samples, 1.06%)</title><rect x="832.8" y="499.0" width="12.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="835.8" y="510.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.10%)</title><rect x="834.0" y="483.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="837.0" y="494.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="835.2" y="483.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="838.2" y="494.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.07%)</title><rect x="835.6" y="483.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="838.6" y="494.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="836.4" y="483.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="839.4" y="494.0"></text>
</g>
<g>
<title>security_file_permission (21 samples, 0.72%)</title><rect x="836.8" y="483.0" width="8.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="839.8" y="494.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="837.7" y="467.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="840.7" y="478.0"></text>
</g>
<g>
<title>apparmor_file_permission (8 samples, 0.27%)</title><rect x="838.1" y="467.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="841.1" y="478.0"></text>
</g>
<g>
<title>common_file_perm (8 samples, 0.27%)</title><rect x="838.1" y="451.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="841.1" y="462.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.03%)</title><rect x="840.9" y="435.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="843.9" y="446.0"></text>
</g>
<g>
<title>common_file_perm (5 samples, 0.17%)</title><rect x="841.3" y="467.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="844.3" y="478.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.17%)</title><rect x="843.3" y="467.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="846.3" y="478.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.03%)</title><rect x="845.3" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="848.3" y="558.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.10%)</title><rect x="845.7" y="611.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="848.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (22 samples, 0.75%)</title><rect x="846.9" y="659.0" width="8.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="849.9" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (17 samples, 0.58%)</title><rect x="847.3" y="643.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="850.3" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.07%)</title><rect x="850.6" y="627.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.6" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (2 samples, 0.07%)</title><rect x="851.4" y="627.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="854.4" y="638.0"></text>
</g>
<g>
<title>vtable stub (5 samples, 0.17%)</title><rect x="852.2" y="627.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="855.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.14%)</title><rect x="854.2" y="643.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="857.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (12 samples, 0.41%)</title><rect x="855.8" y="659.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="858.8" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (9 samples, 0.31%)</title><rect x="856.2" y="643.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="859.2" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (5 samples, 0.17%)</title><rect x="857.8" y="627.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="860.8" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (1 samples, 0.03%)</title><rect x="859.8" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="862.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (1 samples, 0.03%)</title><rect x="860.2" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="863.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (69 samples, 2.36%)</title><rect x="860.6" y="675.0" width="27.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="863.6" y="686.0">s..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (19 samples, 0.65%)</title><rect x="876.8" y="659.0" width="7.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="879.8" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (19 samples, 0.65%)</title><rect x="876.8" y="643.0" width="7.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="879.8" y="654.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (2 samples, 0.07%)</title><rect x="876.8" y="627.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="879.8" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (16 samples, 0.55%)</title><rect x="877.6" y="627.0" width="6.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="880.6" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (11 samples, 0.38%)</title><rect x="879.2" y="611.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="882.2" y="622.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="883.6" y="611.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="886.6" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.03%)</title><rect x="884.0" y="627.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="887.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (10 samples, 0.34%)</title><rect x="884.4" y="659.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="887.4" y="670.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.03%)</title><rect x="888.0" y="643.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="891.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (54 samples, 1.84%)</title><rect x="888.4" y="675.0" width="21.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="891.4" y="686.0">s..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (18 samples, 0.61%)</title><rect x="903.0" y="659.0" width="7.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="906.0" y="670.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="903.0" y="643.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="906.0" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (17 samples, 0.58%)</title><rect x="903.4" y="643.0" width="6.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="906.4" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (14 samples, 0.48%)</title><rect x="904.2" y="627.0" width="5.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="907.2" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (10 samples, 0.34%)</title><rect x="905.0" y="611.0" width="4.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="908.0" y="622.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.07%)</title><rect x="909.0" y="611.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="912.0" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.03%)</title><rect x="909.8" y="627.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="912.8" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="910.2" y="675.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="913.2" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (1 samples, 0.03%)</title><rect x="910.2" y="659.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="913.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.getBytes (1 samples, 0.03%)</title><rect x="910.6" y="819.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="913.6" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="910.6" y="803.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.6" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="910.6" y="787.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="913.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.proxyIfNotLocal (338 samples, 11.55%)</title><rect x="911.0" y="819.0" width="136.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="914.0" y="830.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.24%)</title><rect x="911.4" y="803.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="914.4" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.24%)</title><rect x="911.4" y="787.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="914.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equals (5 samples, 0.17%)</title><rect x="911.4" y="771.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="914.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (2 samples, 0.07%)</title><rect x="913.4" y="771.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="916.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (203 samples, 6.94%)</title><rect x="914.3" y="803.0" width="81.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="917.3" y="814.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (203 samples, 6.94%)</title><rect x="914.3" y="787.0" width="81.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="917.3" y="798.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (34 samples, 1.16%)</title><rect x="914.7" y="771.0" width="13.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="917.7" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.20%)</title><rect x="914.7" y="755.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="917.7" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.14%)</title><rect x="915.5" y="739.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="918.5" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.14%)</title><rect x="915.5" y="723.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="918.5" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.14%)</title><rect x="915.5" y="707.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="918.5" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (1 samples, 0.03%)</title><rect x="915.5" y="691.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="918.5" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="915.5" y="675.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="918.5" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.03%)</title><rect x="915.5" y="659.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="918.5" y="670.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (3 samples, 0.10%)</title><rect x="915.9" y="691.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="918.9" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (28 samples, 0.96%)</title><rect x="917.1" y="755.0" width="11.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="920.1" y="766.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.20%)</title><rect x="919.5" y="739.0" width="2.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="922.5" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.07%)</title><rect x="919.5" y="723.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="922.5" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="920.3" y="723.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="923.3" y="734.0"></text>
</g>
<g>
<title>__memmove_ssse3 (1 samples, 0.03%)</title><rect x="920.7" y="723.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="923.7" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.07%)</title><rect x="921.1" y="723.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="924.1" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.03%)</title><rect x="921.1" y="707.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="924.1" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="921.5" y="707.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="924.5" y="718.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="921.5" y="691.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="924.5" y="702.0"></text>
</g>
<g>
<title>__GI___recv (15 samples, 0.51%)</title><rect x="921.9" y="739.0" width="6.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="924.9" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.34%)</title><rect x="923.9" y="723.0" width="4.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="926.9" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.34%)</title><rect x="923.9" y="707.0" width="4.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="926.9" y="718.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (9 samples, 0.31%)</title><rect x="924.3" y="691.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="927.3" y="702.0"></text>
</g>
<g>
<title>__sys_recvfrom (7 samples, 0.24%)</title><rect x="924.7" y="675.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="927.7" y="686.0"></text>
</g>
<g>
<title>sock_recvmsg (7 samples, 0.24%)</title><rect x="924.7" y="659.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="927.7" y="670.0"></text>
</g>
<g>
<title>inet6_recvmsg (7 samples, 0.24%)</title><rect x="924.7" y="643.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="927.7" y="654.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="924.7" y="627.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="927.7" y="638.0"></text>
</g>
<g>
<title>tcp_recvmsg (6 samples, 0.20%)</title><rect x="925.1" y="627.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="928.1" y="638.0"></text>
</g>
<g>
<title>sk_wait_data (3 samples, 0.10%)</title><rect x="925.1" y="611.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="928.1" y="622.0"></text>
</g>
<g>
<title>add_wait_queue (1 samples, 0.03%)</title><rect x="925.5" y="595.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="928.5" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="925.5" y="579.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="928.5" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="925.9" y="595.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="928.9" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="925.9" y="579.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="928.9" y="590.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.03%)</title><rect x="925.9" y="563.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="928.9" y="574.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.10%)</title><rect x="926.3" y="611.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="929.3" y="622.0"></text>
</g>
<g>
<title>tcp_send_ack (3 samples, 0.10%)</title><rect x="926.3" y="595.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="929.3" y="606.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (3 samples, 0.10%)</title><rect x="926.3" y="579.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="929.3" y="590.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.10%)</title><rect x="926.3" y="563.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="929.3" y="574.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.10%)</title><rect x="926.3" y="547.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="929.3" y="558.0"></text>
</g>
<g>
<title>__ip_queue_xmit (3 samples, 0.10%)</title><rect x="926.3" y="531.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="929.3" y="542.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.10%)</title><rect x="926.3" y="515.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="929.3" y="526.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.10%)</title><rect x="926.3" y="499.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="929.3" y="510.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.10%)</title><rect x="926.3" y="483.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="929.3" y="494.0"></text>
</g>
<g>
<title>__ip_finish_output (3 samples, 0.10%)</title><rect x="926.3" y="467.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="929.3" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.10%)</title><rect x="926.3" y="451.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="929.3" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.07%)</title><rect x="926.3" y="435.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="929.3" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.20 (2 samples, 0.07%)</title><rect x="926.3" y="419.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="929.3" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.07%)</title><rect x="926.3" y="403.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="929.3" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.07%)</title><rect x="926.3" y="387.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="929.3" y="398.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.07%)</title><rect x="926.3" y="371.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="929.3" y="382.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.07%)</title><rect x="926.3" y="355.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="929.3" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.07%)</title><rect x="926.3" y="339.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="929.3" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.07%)</title><rect x="926.3" y="323.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="929.3" y="334.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.07%)</title><rect x="926.3" y="307.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="929.3" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="926.7" y="291.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="929.7" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="926.7" y="275.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="929.7" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="926.7" y="259.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="929.7" y="270.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.03%)</title><rect x="926.7" y="243.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="929.7" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="926.7" y="227.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="929.7" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="926.7" y="211.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="929.7" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="926.7" y="195.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="929.7" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="926.7" y="179.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="929.7" y="190.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="926.7" y="163.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="929.7" y="174.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="926.7" y="147.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="929.7" y="158.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.03%)</title><rect x="926.7" y="131.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="929.7" y="142.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="926.7" y="115.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="929.7" y="126.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.03%)</title><rect x="927.2" y="435.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="930.2" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.03%)</title><rect x="927.2" y="419.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="930.2" y="430.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="927.2" y="403.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="930.2" y="414.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="927.2" y="387.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="930.2" y="398.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="927.6" y="675.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="930.6" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="928.0" y="739.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="931.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (7 samples, 0.24%)</title><rect x="928.4" y="771.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="931.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (5 samples, 0.17%)</title><rect x="928.4" y="755.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="931.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.17%)</title><rect x="928.4" y="739.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="931.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.17%)</title><rect x="928.4" y="723.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="931.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.07%)</title><rect x="930.4" y="755.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="933.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (3 samples, 0.10%)</title><rect x="931.2" y="771.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="934.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.03%)</title><rect x="932.0" y="755.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="935.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.03%)</title><rect x="932.0" y="739.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="935.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="932.0" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="935.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.07%)</title><rect x="932.4" y="771.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="935.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (20 samples, 0.68%)</title><rect x="933.2" y="771.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="936.2" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (1 samples, 0.03%)</title><rect x="933.2" y="755.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="936.2" y="766.0"></text>
</g>
<g>
<title>__GI___setsockopt (19 samples, 0.65%)</title><rect x="933.6" y="755.0" width="7.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="936.6" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.61%)</title><rect x="934.0" y="739.0" width="7.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="937.0" y="750.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (1 samples, 0.03%)</title><rect x="934.0" y="723.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="937.0" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.58%)</title><rect x="934.4" y="723.0" width="6.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="937.4" y="734.0"></text>
</g>
<g>
<title>__sys_setsockopt (1 samples, 0.03%)</title><rect x="934.8" y="707.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="937.8" y="718.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (15 samples, 0.51%)</title><rect x="935.2" y="707.0" width="6.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="938.2" y="718.0"></text>
</g>
<g>
<title>__sys_setsockopt (15 samples, 0.51%)</title><rect x="935.2" y="691.0" width="6.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="938.2" y="702.0"></text>
</g>
<g>
<title>bpf_prog_array_is_empty (1 samples, 0.03%)</title><rect x="935.6" y="675.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="938.6" y="686.0"></text>
</g>
<g>
<title>fput (2 samples, 0.07%)</title><rect x="936.0" y="675.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="939.0" y="686.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.07%)</title><rect x="936.0" y="659.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="939.0" y="670.0"></text>
</g>
<g>
<title>security_socket_setsockopt (3 samples, 0.10%)</title><rect x="936.8" y="675.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="939.8" y="686.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (3 samples, 0.10%)</title><rect x="936.8" y="659.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="939.8" y="670.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (3 samples, 0.10%)</title><rect x="936.8" y="643.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="939.8" y="654.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.10%)</title><rect x="936.8" y="627.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="939.8" y="638.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.03%)</title><rect x="937.6" y="611.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="940.6" y="622.0"></text>
</g>
<g>
<title>aa_check_perms (1 samples, 0.03%)</title><rect x="937.6" y="595.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="940.6" y="606.0"></text>
</g>
<g>
<title>sock_setsockopt (5 samples, 0.17%)</title><rect x="938.0" y="675.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="941.0" y="686.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.10%)</title><rect x="938.8" y="659.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="941.8" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.03%)</title><rect x="939.2" y="643.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="942.2" y="654.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="939.2" y="627.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="942.2" y="638.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="939.6" y="643.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="942.6" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.10%)</title><rect x="940.1" y="675.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="943.1" y="686.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.10%)</title><rect x="940.1" y="659.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="943.1" y="670.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.10%)</title><rect x="940.1" y="643.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="943.1" y="654.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.07%)</title><rect x="940.5" y="627.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="943.5" y="638.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (122 samples, 4.17%)</title><rect x="941.3" y="771.0" width="49.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="944.3" y="782.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (3 samples, 0.10%)</title><rect x="941.7" y="755.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="944.7" y="766.0"></text>
</g>
<g>
<title>__memmove_ssse3 (1 samples, 0.03%)</title><rect x="941.7" y="739.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="944.7" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.07%)</title><rect x="942.1" y="739.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="945.1" y="750.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="942.5" y="723.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="945.5" y="734.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="942.5" y="707.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="945.5" y="718.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="942.9" y="755.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="945.9" y="766.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="943.3" y="755.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="946.3" y="766.0"></text>
</g>
<g>
<title>__libc_send (116 samples, 3.96%)</title><rect x="943.7" y="755.0" width="46.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="946.7" y="766.0">__li..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (114 samples, 3.89%)</title><rect x="944.5" y="739.0" width="45.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="947.5" y="750.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (114 samples, 3.89%)</title><rect x="944.5" y="723.0" width="45.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="947.5" y="734.0">do_s..</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.03%)</title><rect x="944.5" y="707.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="947.5" y="718.0"></text>
</g>
<g>
<title>__x64_sys_sendto (113 samples, 3.86%)</title><rect x="944.9" y="707.0" width="45.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="947.9" y="718.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (113 samples, 3.86%)</title><rect x="944.9" y="691.0" width="45.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="947.9" y="702.0">__sy..</text>
</g>
<g>
<title>inet6_sendmsg (2 samples, 0.07%)</title><rect x="945.3" y="675.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="948.3" y="686.0"></text>
</g>
<g>
<title>sock_sendmsg (110 samples, 3.76%)</title><rect x="946.1" y="675.0" width="44.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="949.1" y="686.0">sock..</text>
</g>
<g>
<title>inet6_sendmsg (109 samples, 3.72%)</title><rect x="946.1" y="659.0" width="43.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="949.1" y="670.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (109 samples, 3.72%)</title><rect x="946.1" y="643.0" width="43.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="949.1" y="654.0">tcp_..</text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.10%)</title><rect x="946.1" y="627.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="949.1" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (106 samples, 3.62%)</title><rect x="947.3" y="627.0" width="42.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="950.3" y="638.0">tcp_..</text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.27%)</title><rect x="947.7" y="611.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="950.7" y="622.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.27%)</title><rect x="947.7" y="595.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="950.7" y="606.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (4 samples, 0.14%)</title><rect x="948.1" y="579.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="951.1" y="590.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.07%)</title><rect x="948.1" y="563.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="951.1" y="574.0"></text>
</g>
<g>
<title>memset (2 samples, 0.07%)</title><rect x="948.9" y="563.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="951.9" y="574.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.03%)</title><rect x="949.7" y="579.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="952.7" y="590.0"></text>
</g>
<g>
<title>memset (2 samples, 0.07%)</title><rect x="950.1" y="579.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="953.1" y="590.0"></text>
</g>
<g>
<title>tcp_push (95 samples, 3.25%)</title><rect x="950.9" y="611.0" width="38.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="953.9" y="622.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (95 samples, 3.25%)</title><rect x="950.9" y="595.0" width="38.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="953.9" y="606.0">__t..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.33 (1 samples, 0.03%)</title><rect x="951.3" y="579.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="954.3" y="590.0"></text>
</g>
<g>
<title>tcp_write_xmit (93 samples, 3.18%)</title><rect x="951.7" y="579.0" width="37.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="954.7" y="590.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (89 samples, 3.04%)</title><rect x="952.5" y="563.0" width="35.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="955.5" y="574.0">__t..</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="953.0" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="956.0" y="558.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.07%)</title><rect x="953.4" y="547.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="956.4" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (85 samples, 2.90%)</title><rect x="954.2" y="547.0" width="34.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="957.2" y="558.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (85 samples, 2.90%)</title><rect x="954.2" y="531.0" width="34.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="957.2" y="542.0">__..</text>
</g>
<g>
<title>ip_local_out (85 samples, 2.90%)</title><rect x="954.2" y="515.0" width="34.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="957.2" y="526.0">ip..</text>
</g>
<g>
<title>__ip_local_out (13 samples, 0.44%)</title><rect x="954.2" y="499.0" width="5.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="957.2" y="510.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.03%)</title><rect x="954.2" y="483.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="957.2" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.38%)</title><rect x="954.6" y="483.0" width="4.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="957.6" y="494.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.03%)</title><rect x="954.6" y="467.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="957.6" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (7 samples, 0.24%)</title><rect x="955.0" y="467.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="958.0" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (6 samples, 0.20%)</title><rect x="955.0" y="451.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="958.0" y="462.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (3 samples, 0.10%)</title><rect x="955.0" y="435.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="958.0" y="446.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.03%)</title><rect x="956.2" y="435.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="959.2" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (2 samples, 0.07%)</title><rect x="956.6" y="435.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="959.6" y="446.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.03%)</title><rect x="957.0" y="419.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="960.0" y="430.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.03%)</title><rect x="957.4" y="451.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="960.4" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (3 samples, 0.10%)</title><rect x="957.8" y="467.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="960.8" y="478.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.03%)</title><rect x="958.2" y="451.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="961.2" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.03%)</title><rect x="958.6" y="451.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="961.6" y="462.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (1 samples, 0.03%)</title><rect x="958.6" y="435.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="961.6" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (1 samples, 0.03%)</title><rect x="959.0" y="483.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="962.0" y="494.0"></text>
</g>
<g>
<title>ip_output (69 samples, 2.36%)</title><rect x="959.4" y="499.0" width="27.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="962.4" y="510.0">i..</text>
</g>
<g>
<title>ip_finish_output (68 samples, 2.32%)</title><rect x="959.4" y="483.0" width="27.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="962.4" y="494.0">i..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="959.4" y="467.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="962.4" y="478.0"></text>
</g>
<g>
<title>__ip_finish_output (67 samples, 2.29%)</title><rect x="959.8" y="467.0" width="27.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="962.8" y="478.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (67 samples, 2.29%)</title><rect x="959.8" y="451.0" width="27.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="962.8" y="462.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (54 samples, 1.84%)</title><rect x="961.8" y="435.0" width="21.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="964.8" y="446.0">_..</text>
</g>
<g>
<title>do_softirq.part.20 (54 samples, 1.84%)</title><rect x="961.8" y="419.0" width="21.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="964.8" y="430.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (54 samples, 1.84%)</title><rect x="961.8" y="403.0" width="21.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="964.8" y="414.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (54 samples, 1.84%)</title><rect x="961.8" y="387.0" width="21.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="964.8" y="398.0">_..</text>
</g>
<g>
<title>net_rx_action (52 samples, 1.78%)</title><rect x="962.2" y="371.0" width="21.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="965.2" y="382.0"></text>
</g>
<g>
<title>process_backlog (51 samples, 1.74%)</title><rect x="962.6" y="355.0" width="20.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="965.6" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb (50 samples, 1.71%)</title><rect x="963.0" y="339.0" width="20.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="966.0" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (50 samples, 1.71%)</title><rect x="963.0" y="323.0" width="20.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="966.0" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="963.0" y="307.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="966.0" y="318.0"></text>
</g>
<g>
<title>ip_rcv (49 samples, 1.67%)</title><rect x="963.4" y="307.0" width="19.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="966.4" y="318.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.03%)</title><rect x="963.4" y="291.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="966.4" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish (45 samples, 1.54%)</title><rect x="963.8" y="291.0" width="18.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="966.8" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (45 samples, 1.54%)</title><rect x="963.8" y="275.0" width="18.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="966.8" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (42 samples, 1.43%)</title><rect x="963.8" y="259.0" width="17.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="966.8" y="270.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (42 samples, 1.43%)</title><rect x="963.8" y="243.0" width="17.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="966.8" y="254.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="963.8" y="227.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="966.8" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (41 samples, 1.40%)</title><rect x="964.2" y="227.0" width="16.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="967.2" y="238.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="965.0" y="211.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="968.0" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="965.4" y="211.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="968.4" y="222.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="965.4" y="195.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="968.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (37 samples, 1.26%)</title><rect x="965.9" y="211.0" width="14.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="968.9" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (37 samples, 1.26%)</title><rect x="965.9" y="195.0" width="14.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="968.9" y="206.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.10%)</title><rect x="966.7" y="179.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="969.7" y="190.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.10%)</title><rect x="966.7" y="163.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="969.7" y="174.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.10%)</title><rect x="966.7" y="147.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="969.7" y="158.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.10%)</title><rect x="966.7" y="131.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="969.7" y="142.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.10%)</title><rect x="966.7" y="115.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="969.7" y="126.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.31%)</title><rect x="967.9" y="179.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="970.9" y="190.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.03%)</title><rect x="968.3" y="163.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="971.3" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.20%)</title><rect x="968.7" y="163.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="971.7" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.14%)</title><rect x="969.1" y="147.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="972.1" y="158.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.14%)</title><rect x="969.1" y="131.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="972.1" y="142.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.03%)</title><rect x="969.1" y="115.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="972.1" y="126.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.10%)</title><rect x="969.5" y="115.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="972.5" y="126.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.03%)</title><rect x="970.7" y="147.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="973.7" y="158.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="971.1" y="163.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="974.1" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.03%)</title><rect x="971.5" y="179.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="974.5" y="190.0"></text>
</g>
<g>
<title>tcp_data_ready (20 samples, 0.68%)</title><rect x="971.9" y="179.0" width="8.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="974.9" y="190.0"></text>
</g>
<g>
<title>sock_def_readable (20 samples, 0.68%)</title><rect x="971.9" y="163.0" width="8.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="974.9" y="174.0"></text>
</g>
<g>
<title>__wake_up_sync_key (19 samples, 0.65%)</title><rect x="972.3" y="147.0" width="7.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="975.3" y="158.0"></text>
</g>
<g>
<title>__wake_up_common_lock (19 samples, 0.65%)</title><rect x="972.3" y="131.0" width="7.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="975.3" y="142.0"></text>
</g>
<g>
<title>__lock_text_start (19 samples, 0.65%)</title><rect x="972.3" y="115.0" width="7.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="975.3" y="126.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.03%)</title><rect x="980.0" y="179.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="983.0" y="190.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.03%)</title><rect x="980.4" y="179.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="983.4" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.07%)</title><rect x="980.8" y="259.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="983.8" y="270.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.03%)</title><rect x="981.2" y="243.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="984.2" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.03%)</title><rect x="981.2" y="227.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="984.2" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.03%)</title><rect x="981.6" y="259.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="984.6" y="270.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (1 samples, 0.03%)</title><rect x="982.0" y="291.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="985.0" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.03%)</title><rect x="982.4" y="291.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="985.4" y="302.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat] (1 samples, 0.03%)</title><rect x="982.8" y="291.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="985.8" y="302.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.03%)</title><rect x="983.2" y="371.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="986.2" y="382.0"></text>
</g>
<g>
<title>dev_queue_xmit (8 samples, 0.27%)</title><rect x="983.6" y="435.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="986.6" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.27%)</title><rect x="983.6" y="419.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="986.6" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.20%)</title><rect x="984.0" y="403.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="987.0" y="414.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.14%)</title><rect x="984.8" y="387.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="987.8" y="398.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.03%)</title><rect x="985.2" y="371.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="988.2" y="382.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.03%)</title><rect x="985.6" y="371.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="988.6" y="382.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.03%)</title><rect x="985.6" y="355.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="988.6" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.03%)</title><rect x="986.0" y="371.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="989.0" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="986.4" y="403.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="989.4" y="414.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="986.4" y="387.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="989.4" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.03%)</title><rect x="986.8" y="483.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="989.8" y="494.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.03%)</title><rect x="986.8" y="467.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="989.8" y="478.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.03%)</title><rect x="986.8" y="451.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="989.8" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.10%)</title><rect x="987.2" y="499.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="990.2" y="510.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="988.4" y="563.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="991.4" y="574.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.03%)</title><rect x="988.8" y="563.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="991.8" y="574.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="988.8" y="547.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="991.8" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.07%)</title><rect x="989.2" y="611.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="992.2" y="622.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.07%)</title><rect x="989.2" y="595.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="992.2" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.07%)</title><rect x="989.2" y="579.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="992.2" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.03%)</title><rect x="990.0" y="659.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="993.0" y="670.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.03%)</title><rect x="990.0" y="643.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="993.0" y="654.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.03%)</title><rect x="990.0" y="627.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="993.0" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.03%)</title><rect x="990.0" y="611.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="993.0" y="622.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="990.0" y="595.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="993.0" y="606.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (6 samples, 0.20%)</title><rect x="990.4" y="771.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="993.4" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (5 samples, 0.17%)</title><rect x="990.8" y="755.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="993.8" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (5 samples, 0.17%)</title><rect x="990.8" y="739.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="993.8" y="750.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (8 samples, 0.27%)</title><rect x="992.9" y="771.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="995.9" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (8 samples, 0.27%)</title><rect x="992.9" y="755.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="995.9" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (8 samples, 0.27%)</title><rect x="992.9" y="739.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="995.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.sendAnswerOrError (117 samples, 4.00%)</title><rect x="996.1" y="803.0" width="47.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="999.1" y="814.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (117 samples, 4.00%)</title><rect x="996.1" y="787.0" width="47.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="999.1" y="798.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="997.3" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1000.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="997.3" y="755.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1000.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="997.3" y="739.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1000.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (112 samples, 3.83%)</title><rect x="997.7" y="771.0" width="45.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1000.7" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.20%)</title><rect x="997.7" y="755.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1000.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.10%)</title><rect x="998.9" y="739.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1001.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.10%)</title><rect x="998.9" y="723.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1001.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.10%)</title><rect x="998.9" y="707.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1001.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (106 samples, 3.62%)</title><rect x="1000.1" y="755.0" width="42.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1003.1" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (106 samples, 3.62%)</title><rect x="1000.1" y="739.0" width="42.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1003.1" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (105 samples, 3.59%)</title><rect x="1000.5" y="723.0" width="42.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1003.5" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="1000.5" y="707.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1003.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (104 samples, 3.55%)</title><rect x="1000.9" y="707.0" width="42.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1003.9" y="718.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="1000.9" y="691.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1003.9" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="1000.9" y="675.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1003.9" y="686.0"></text>
</g>
<g>
<title>__libc_send (103 samples, 3.52%)</title><rect x="1001.3" y="691.0" width="41.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1004.3" y="702.0">__l..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (101 samples, 3.45%)</title><rect x="1002.1" y="675.0" width="40.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1005.1" y="686.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (101 samples, 3.45%)</title><rect x="1002.1" y="659.0" width="40.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1005.1" y="670.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (101 samples, 3.45%)</title><rect x="1002.1" y="643.0" width="40.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1005.1" y="654.0">__x..</text>
</g>
<g>
<title>__sys_sendto (101 samples, 3.45%)</title><rect x="1002.1" y="627.0" width="40.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1005.1" y="638.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (100 samples, 3.42%)</title><rect x="1002.5" y="611.0" width="40.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1005.5" y="622.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (98 samples, 3.35%)</title><rect x="1002.5" y="595.0" width="39.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1005.5" y="606.0">ine..</text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="1002.5" y="579.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1005.5" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (97 samples, 3.31%)</title><rect x="1002.9" y="579.0" width="39.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1005.9" y="590.0">tcp..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="1002.9" y="563.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1005.9" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="1002.9" y="547.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1005.9" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (96 samples, 3.28%)</title><rect x="1003.3" y="563.0" width="38.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1006.3" y="574.0">tcp..</text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.14%)</title><rect x="1003.7" y="547.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1006.7" y="558.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.14%)</title><rect x="1003.7" y="531.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1006.7" y="542.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.07%)</title><rect x="1005.4" y="547.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1008.4" y="558.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.07%)</title><rect x="1005.4" y="531.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1008.4" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (10 samples, 0.34%)</title><rect x="1006.2" y="547.0" width="4.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1009.2" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.31%)</title><rect x="1006.6" y="531.0" width="3.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1009.6" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (5 samples, 0.17%)</title><rect x="1007.0" y="515.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1010.0" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.17%)</title><rect x="1007.0" y="499.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1010.0" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="1007.8" y="483.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1010.8" y="494.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.07%)</title><rect x="1008.2" y="483.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1011.2" y="494.0"></text>
</g>
<g>
<title>memset (3 samples, 0.10%)</title><rect x="1009.0" y="515.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1012.0" y="526.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.03%)</title><rect x="1010.2" y="547.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1013.2" y="558.0"></text>
</g>
<g>
<title>tcp_push (77 samples, 2.63%)</title><rect x="1010.6" y="547.0" width="31.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1013.6" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (75 samples, 2.56%)</title><rect x="1011.4" y="531.0" width="30.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1014.4" y="542.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (75 samples, 2.56%)</title><rect x="1011.4" y="515.0" width="30.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1014.4" y="526.0">tc..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.03%)</title><rect x="1011.4" y="499.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1014.4" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (70 samples, 2.39%)</title><rect x="1011.8" y="499.0" width="28.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1014.8" y="510.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (66 samples, 2.25%)</title><rect x="1013.0" y="483.0" width="26.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1016.0" y="494.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (66 samples, 2.25%)</title><rect x="1013.0" y="467.0" width="26.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1016.0" y="478.0">_..</text>
</g>
<g>
<title>ip_local_out (63 samples, 2.15%)</title><rect x="1013.4" y="451.0" width="25.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1016.4" y="462.0">i..</text>
</g>
<g>
<title>__ip_local_out (16 samples, 0.55%)</title><rect x="1013.4" y="435.0" width="6.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1016.4" y="446.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.03%)</title><rect x="1013.4" y="419.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1016.4" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (14 samples, 0.48%)</title><rect x="1013.8" y="419.0" width="5.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1016.8" y="430.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.07%)</title><rect x="1013.8" y="403.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1016.8" y="414.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.07%)</title><rect x="1013.8" y="387.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1016.8" y="398.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (12 samples, 0.41%)</title><rect x="1014.6" y="403.0" width="4.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1017.6" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (12 samples, 0.41%)</title><rect x="1014.6" y="387.0" width="4.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1017.6" y="398.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (8 samples, 0.27%)</title><rect x="1014.6" y="371.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1017.6" y="382.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (3 samples, 0.10%)</title><rect x="1017.9" y="371.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1020.9" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.07%)</title><rect x="1018.3" y="355.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1021.3" y="366.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.07%)</title><rect x="1018.3" y="339.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1021.3" y="350.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.03%)</title><rect x="1019.1" y="371.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1022.1" y="382.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (1 samples, 0.03%)</title><rect x="1019.5" y="419.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1022.5" y="430.0"></text>
</g>
<g>
<title>ip_output (46 samples, 1.57%)</title><rect x="1019.9" y="435.0" width="18.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1022.9" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (46 samples, 1.57%)</title><rect x="1019.9" y="419.0" width="18.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1022.9" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (46 samples, 1.57%)</title><rect x="1019.9" y="403.0" width="18.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1022.9" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (46 samples, 1.57%)</title><rect x="1019.9" y="387.0" width="18.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1022.9" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (41 samples, 1.40%)</title><rect x="1020.3" y="371.0" width="16.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1023.3" y="382.0"></text>
</g>
<g>
<title>do_softirq.part.20 (40 samples, 1.37%)</title><rect x="1020.7" y="355.0" width="16.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1023.7" y="366.0"></text>
</g>
<g>
<title>do_softirq_own_stack (40 samples, 1.37%)</title><rect x="1020.7" y="339.0" width="16.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1023.7" y="350.0"></text>
</g>
<g>
<title>__softirqentry_text_start (40 samples, 1.37%)</title><rect x="1020.7" y="323.0" width="16.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1023.7" y="334.0"></text>
</g>
<g>
<title>net_rx_action (37 samples, 1.26%)</title><rect x="1021.5" y="307.0" width="14.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1024.5" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="1021.9" y="291.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1024.9" y="302.0"></text>
</g>
<g>
<title>process_backlog (35 samples, 1.20%)</title><rect x="1022.3" y="291.0" width="14.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1025.3" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb (34 samples, 1.16%)</title><rect x="1022.7" y="275.0" width="13.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1025.7" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (34 samples, 1.16%)</title><rect x="1022.7" y="259.0" width="13.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1025.7" y="270.0"></text>
</g>
<g>
<title>ip_rcv (33 samples, 1.13%)</title><rect x="1022.7" y="243.0" width="13.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1025.7" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (32 samples, 1.09%)</title><rect x="1022.7" y="227.0" width="12.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1025.7" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (32 samples, 1.09%)</title><rect x="1022.7" y="211.0" width="12.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1025.7" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (28 samples, 0.96%)</title><rect x="1022.7" y="195.0" width="11.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1025.7" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (27 samples, 0.92%)</title><rect x="1022.7" y="179.0" width="10.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1025.7" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (27 samples, 0.92%)</title><rect x="1022.7" y="163.0" width="10.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1025.7" y="174.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.10%)</title><rect x="1023.5" y="147.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1026.5" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="1024.7" y="147.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1027.7" y="158.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="1024.7" y="131.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1027.7" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (21 samples, 0.72%)</title><rect x="1025.1" y="147.0" width="8.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1028.1" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (21 samples, 0.72%)</title><rect x="1025.1" y="131.0" width="8.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1028.1" y="142.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.10%)</title><rect x="1025.1" y="115.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1028.1" y="126.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.10%)</title><rect x="1025.1" y="99.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1028.1" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.10%)</title><rect x="1025.1" y="83.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1028.1" y="94.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.10%)</title><rect x="1025.1" y="67.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1028.1" y="78.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.07%)</title><rect x="1025.1" y="51.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1028.1" y="62.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.03%)</title><rect x="1025.9" y="51.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1028.9" y="62.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.20%)</title><rect x="1026.3" y="115.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1029.3" y="126.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.03%)</title><rect x="1026.7" y="99.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1029.7" y="110.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.14%)</title><rect x="1027.1" y="99.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1030.1" y="110.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.07%)</title><rect x="1027.5" y="83.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1030.5" y="94.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.07%)</title><rect x="1027.5" y="67.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1030.5" y="78.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.07%)</title><rect x="1027.5" y="51.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1030.5" y="62.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.03%)</title><rect x="1028.3" y="83.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1031.3" y="94.0"></text>
</g>
<g>
<title>tcp_data_ready (12 samples, 0.41%)</title><rect x="1028.7" y="115.0" width="4.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1031.7" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (12 samples, 0.41%)</title><rect x="1028.7" y="99.0" width="4.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1031.7" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (12 samples, 0.41%)</title><rect x="1028.7" y="83.0" width="4.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1031.7" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (12 samples, 0.41%)</title><rect x="1028.7" y="67.0" width="4.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1031.7" y="78.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.41%)</title><rect x="1028.7" y="51.0" width="4.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1031.7" y="62.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.03%)</title><rect x="1033.6" y="179.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1036.6" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.10%)</title><rect x="1034.0" y="195.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1037.0" y="206.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (2 samples, 0.07%)</title><rect x="1034.4" y="179.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1037.4" y="190.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.03%)</title><rect x="1034.8" y="163.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1037.8" y="174.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.03%)</title><rect x="1035.2" y="195.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1038.2" y="206.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.03%)</title><rect x="1035.6" y="227.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1038.6" y="238.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.03%)</title><rect x="1036.0" y="243.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1039.0" y="254.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.03%)</title><rect x="1036.4" y="307.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1039.4" y="318.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.14%)</title><rect x="1036.8" y="371.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1039.8" y="382.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.14%)</title><rect x="1036.8" y="355.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1039.8" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.14%)</title><rect x="1036.8" y="339.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1039.8" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.10%)</title><rect x="1036.8" y="323.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1039.8" y="334.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.03%)</title><rect x="1036.8" y="307.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1039.8" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.03%)</title><rect x="1036.8" y="291.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1039.8" y="302.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.03%)</title><rect x="1036.8" y="275.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1039.8" y="286.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.07%)</title><rect x="1037.2" y="307.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1040.2" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.03%)</title><rect x="1038.0" y="323.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1041.0" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.03%)</title><rect x="1038.4" y="435.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1041.4" y="446.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.07%)</title><rect x="1038.8" y="451.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1041.8" y="462.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="1039.6" y="483.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1042.6" y="494.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="1039.6" y="467.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1042.6" y="478.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.03%)</title><rect x="1039.6" y="451.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1042.6" y="462.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="1040.0" y="499.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1043.0" y="510.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="1040.0" y="483.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1043.0" y="494.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="1040.4" y="499.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1043.4" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.03%)</title><rect x="1040.8" y="499.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1043.8" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="1040.8" y="483.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1043.8" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="1040.8" y="467.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1043.8" y="478.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="1040.8" y="451.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1043.8" y="462.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="1040.8" y="435.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1043.8" y="446.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="1041.2" y="499.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1044.2" y="510.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.03%)</title><rect x="1041.6" y="547.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1044.6" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.07%)</title><rect x="1042.0" y="595.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1045.0" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.07%)</title><rect x="1042.0" y="579.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1045.0" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.07%)</title><rect x="1042.0" y="563.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1045.0" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.03%)</title><rect x="1042.4" y="547.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1045.4" y="558.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.03%)</title><rect x="1042.4" y="531.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1045.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="1042.9" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1045.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="1042.9" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1045.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="1042.9" y="739.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1045.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.isLocal (1 samples, 0.03%)</title><rect x="1043.3" y="803.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1046.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.isLocal (1 samples, 0.03%)</title><rect x="1043.3" y="787.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1046.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.03%)</title><rect x="1043.3" y="771.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1046.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (9 samples, 0.31%)</title><rect x="1043.7" y="803.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1046.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (9 samples, 0.31%)</title><rect x="1043.7" y="787.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1046.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$NodeKeyPair.hashCodeOf (9 samples, 0.31%)</title><rect x="1043.7" y="771.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1046.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.10%)</title><rect x="1046.1" y="755.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1049.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.03%)</title><rect x="1046.9" y="739.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1049.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.sendAnswerOrError (128 samples, 4.37%)</title><rect x="1047.3" y="819.0" width="51.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1050.3" y="830.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (128 samples, 4.37%)</title><rect x="1047.3" y="803.0" width="51.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1050.3" y="814.0">one/n..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="1047.3" y="787.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1050.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="1047.3" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1050.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="1047.3" y="755.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1050.3" y="766.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="1047.3" y="739.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1050.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (126 samples, 4.30%)</title><rect x="1047.7" y="787.0" width="50.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1050.7" y="798.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.10%)</title><rect x="1047.7" y="771.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1050.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.03%)</title><rect x="1048.5" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1051.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.03%)</title><rect x="1048.5" y="739.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1051.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="1048.5" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1051.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (123 samples, 4.20%)</title><rect x="1048.9" y="771.0" width="49.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1051.9" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (123 samples, 4.20%)</title><rect x="1048.9" y="755.0" width="49.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1051.9" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.03%)</title><rect x="1049.3" y="739.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1052.3" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (121 samples, 4.13%)</title><rect x="1049.7" y="739.0" width="48.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1052.7" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (121 samples, 4.13%)</title><rect x="1049.7" y="723.0" width="48.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1052.7" y="734.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.10%)</title><rect x="1049.7" y="707.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1052.7" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.07%)</title><rect x="1050.1" y="691.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1053.1" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.07%)</title><rect x="1050.1" y="675.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1053.1" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="1050.9" y="707.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1053.9" y="718.0"></text>
</g>
<g>
<title>__libc_send (117 samples, 4.00%)</title><rect x="1051.3" y="707.0" width="47.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1054.3" y="718.0">__li..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (115 samples, 3.93%)</title><rect x="1052.1" y="691.0" width="46.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1055.1" y="702.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (115 samples, 3.93%)</title><rect x="1052.1" y="675.0" width="46.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1055.1" y="686.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (115 samples, 3.93%)</title><rect x="1052.1" y="659.0" width="46.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1055.1" y="670.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (115 samples, 3.93%)</title><rect x="1052.1" y="643.0" width="46.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1055.1" y="654.0">__sy..</text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="1052.1" y="627.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1055.1" y="638.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="1052.1" y="611.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1055.1" y="622.0"></text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.03%)</title><rect x="1052.5" y="627.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1055.5" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (113 samples, 3.86%)</title><rect x="1052.9" y="627.0" width="45.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1055.9" y="638.0">sock..</text>
</g>
<g>
<title>inet6_sendmsg (112 samples, 3.83%)</title><rect x="1052.9" y="611.0" width="45.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1055.9" y="622.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (112 samples, 3.83%)</title><rect x="1052.9" y="595.0" width="45.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1055.9" y="606.0">tcp_..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="1052.9" y="579.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1055.9" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="1053.3" y="579.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1056.3" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="1053.3" y="563.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1056.3" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (110 samples, 3.76%)</title><rect x="1053.7" y="579.0" width="44.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1056.7" y="590.0">tcp_..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.03%)</title><rect x="1054.5" y="563.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1057.5" y="574.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.03%)</title><rect x="1054.5" y="547.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1057.5" y="558.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.07%)</title><rect x="1054.9" y="563.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1057.9" y="574.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.07%)</title><rect x="1054.9" y="547.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1057.9" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.24%)</title><rect x="1055.8" y="563.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1058.8" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.17%)</title><rect x="1056.6" y="547.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1059.6" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.03%)</title><rect x="1056.6" y="531.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1059.6" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="1056.6" y="515.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1059.6" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.03%)</title><rect x="1056.6" y="499.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1059.6" y="510.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.07%)</title><rect x="1057.0" y="531.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1060.0" y="542.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.03%)</title><rect x="1057.8" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1060.8" y="542.0"></text>
</g>
<g>
<title>memset (1 samples, 0.03%)</title><rect x="1058.2" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1061.2" y="542.0"></text>
</g>
<g>
<title>tcp_push (96 samples, 3.28%)</title><rect x="1058.6" y="563.0" width="38.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1061.6" y="574.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (96 samples, 3.28%)</title><rect x="1058.6" y="547.0" width="38.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1061.6" y="558.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (96 samples, 3.28%)</title><rect x="1058.6" y="531.0" width="38.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1061.6" y="542.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (91 samples, 3.11%)</title><rect x="1059.4" y="515.0" width="36.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1062.4" y="526.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (83 samples, 2.84%)</title><rect x="1061.0" y="499.0" width="33.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1064.0" y="510.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (83 samples, 2.84%)</title><rect x="1061.0" y="483.0" width="33.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1064.0" y="494.0">__..</text>
</g>
<g>
<title>ip_local_out (81 samples, 2.77%)</title><rect x="1061.0" y="467.0" width="32.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1064.0" y="478.0">ip..</text>
</g>
<g>
<title>__ip_local_out (8 samples, 0.27%)</title><rect x="1061.0" y="451.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1064.0" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.27%)</title><rect x="1061.0" y="435.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1064.0" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.03%)</title><rect x="1061.0" y="419.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1064.0" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.03%)</title><rect x="1061.0" y="403.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1064.0" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (6 samples, 0.20%)</title><rect x="1061.4" y="419.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1064.4" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (6 samples, 0.20%)</title><rect x="1061.4" y="403.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1064.4" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.03%)</title><rect x="1061.8" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1064.8" y="398.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (1 samples, 0.03%)</title><rect x="1062.2" y="387.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1065.2" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (3 samples, 0.10%)</title><rect x="1062.6" y="387.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1065.6" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (1 samples, 0.03%)</title><rect x="1063.8" y="419.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1066.8" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.03%)</title><rect x="1063.8" y="403.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1066.8" y="414.0"></text>
</g>
<g>
<title>ip_output (72 samples, 2.46%)</title><rect x="1064.2" y="451.0" width="29.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1067.2" y="462.0">ip..</text>
</g>
<g>
<title>ip_finish_output (70 samples, 2.39%)</title><rect x="1064.2" y="435.0" width="28.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1067.2" y="446.0">ip..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="1064.2" y="419.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1067.2" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (69 samples, 2.36%)</title><rect x="1064.6" y="419.0" width="27.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1067.6" y="430.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (69 samples, 2.36%)</title><rect x="1064.6" y="403.0" width="27.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1067.6" y="414.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (61 samples, 2.08%)</title><rect x="1065.0" y="387.0" width="24.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1068.0" y="398.0">_..</text>
</g>
<g>
<title>do_softirq.part.20 (60 samples, 2.05%)</title><rect x="1065.4" y="371.0" width="24.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1068.4" y="382.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (58 samples, 1.98%)</title><rect x="1066.2" y="355.0" width="23.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1069.2" y="366.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (58 samples, 1.98%)</title><rect x="1066.2" y="339.0" width="23.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1069.2" y="350.0">_..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.03%)</title><rect x="1066.6" y="323.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1069.6" y="334.0"></text>
</g>
<g>
<title>net_rx_action (56 samples, 1.91%)</title><rect x="1067.0" y="323.0" width="22.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1070.0" y="334.0">n..</text>
</g>
<g>
<title>process_backlog (54 samples, 1.84%)</title><rect x="1067.8" y="307.0" width="21.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1070.8" y="318.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (52 samples, 1.78%)</title><rect x="1068.7" y="291.0" width="20.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1071.7" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (52 samples, 1.78%)</title><rect x="1068.7" y="275.0" width="20.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1071.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv (52 samples, 1.78%)</title><rect x="1068.7" y="259.0" width="20.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1071.7" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="1069.1" y="243.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1072.1" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (49 samples, 1.67%)</title><rect x="1069.5" y="243.0" width="19.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1072.5" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (49 samples, 1.67%)</title><rect x="1069.5" y="227.0" width="19.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1072.5" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (48 samples, 1.64%)</title><rect x="1069.5" y="211.0" width="19.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1072.5" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (48 samples, 1.64%)</title><rect x="1069.5" y="195.0" width="19.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1072.5" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (48 samples, 1.64%)</title><rect x="1069.5" y="179.0" width="19.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1072.5" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.07%)</title><rect x="1070.7" y="163.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1073.7" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="1071.5" y="163.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1074.5" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.03%)</title><rect x="1071.5" y="147.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1074.5" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (40 samples, 1.37%)</title><rect x="1071.9" y="163.0" width="16.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1074.9" y="174.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.03%)</title><rect x="1071.9" y="147.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1074.9" y="158.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.03%)</title><rect x="1072.3" y="147.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1075.3" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (38 samples, 1.30%)</title><rect x="1072.7" y="147.0" width="15.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1075.7" y="158.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.03%)</title><rect x="1073.1" y="131.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1076.1" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.03%)</title><rect x="1073.1" y="115.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1076.1" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="1073.1" y="99.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1076.1" y="110.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="1073.1" y="83.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1076.1" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="1073.1" y="67.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1076.1" y="78.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="1073.5" y="131.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1076.5" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="1073.9" y="131.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1076.9" y="142.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.27%)</title><rect x="1074.3" y="131.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1077.3" y="142.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="1074.7" y="115.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1077.7" y="126.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.03%)</title><rect x="1075.1" y="115.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1078.1" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.14%)</title><rect x="1075.5" y="115.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1078.5" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.07%)</title><rect x="1075.9" y="99.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1078.9" y="110.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.07%)</title><rect x="1075.9" y="83.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1078.9" y="94.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.07%)</title><rect x="1075.9" y="67.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1078.9" y="78.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.03%)</title><rect x="1076.3" y="51.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1079.3" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="1076.3" y="35.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1079.3" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (1 samples, 0.03%)</title><rect x="1076.7" y="99.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1079.7" y="110.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.03%)</title><rect x="1077.1" y="115.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1080.1" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (22 samples, 0.75%)</title><rect x="1077.5" y="131.0" width="8.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1080.5" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (22 samples, 0.75%)</title><rect x="1077.5" y="115.0" width="8.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1080.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="1077.5" y="99.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1080.5" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (21 samples, 0.72%)</title><rect x="1077.9" y="99.0" width="8.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1080.9" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (21 samples, 0.72%)</title><rect x="1077.9" y="83.0" width="8.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1080.9" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (20 samples, 0.68%)</title><rect x="1078.3" y="67.0" width="8.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1081.3" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.03%)</title><rect x="1086.4" y="131.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1089.4" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.07%)</title><rect x="1086.8" y="131.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1089.8" y="142.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="1086.8" y="115.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1089.8" y="126.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="1086.8" y="99.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1089.8" y="110.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="1087.2" y="115.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1090.2" y="126.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.03%)</title><rect x="1087.6" y="131.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1090.6" y="142.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.03%)</title><rect x="1088.0" y="163.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1091.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.03%)</title><rect x="1088.4" y="163.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1091.4" y="174.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.03%)</title><rect x="1088.4" y="147.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1091.4" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.03%)</title><rect x="1088.8" y="211.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1091.8" y="222.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.03%)</title><rect x="1088.8" y="195.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1091.8" y="206.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.03%)</title><rect x="1088.8" y="179.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1091.8" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.03%)</title><rect x="1089.2" y="243.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1092.2" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (1 samples, 0.03%)</title><rect x="1089.2" y="227.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1092.2" y="238.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.03%)</title><rect x="1089.2" y="211.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1092.2" y="222.0"></text>
</g>
<g>
<title>dev_queue_xmit (7 samples, 0.24%)</title><rect x="1089.6" y="387.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1092.6" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.20%)</title><rect x="1089.6" y="371.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1092.6" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.17%)</title><rect x="1089.6" y="355.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1092.6" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.03%)</title><rect x="1090.0" y="339.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1093.0" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.10%)</title><rect x="1090.4" y="339.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1093.4" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.07%)</title><rect x="1090.4" y="323.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1093.4" y="334.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.03%)</title><rect x="1091.2" y="323.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1094.2" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.03%)</title><rect x="1091.6" y="355.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1094.6" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="1092.0" y="371.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1095.0" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.07%)</title><rect x="1092.4" y="435.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1095.4" y="446.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.07%)</title><rect x="1092.4" y="419.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1095.4" y="430.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.03%)</title><rect x="1092.4" y="403.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1095.4" y="414.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.03%)</title><rect x="1092.8" y="403.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1095.8" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.03%)</title><rect x="1093.2" y="451.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1096.2" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.07%)</title><rect x="1093.6" y="467.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1096.6" y="478.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.07%)</title><rect x="1094.5" y="499.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1097.5" y="510.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.07%)</title><rect x="1094.5" y="483.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1097.5" y="494.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.07%)</title><rect x="1095.3" y="499.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1098.3" y="510.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.07%)</title><rect x="1096.1" y="515.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1099.1" y="526.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="1096.9" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1099.9" y="526.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="1096.9" y="499.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1099.9" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.07%)</title><rect x="1097.3" y="563.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1100.3" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="1097.3" y="547.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1100.3" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.03%)</title><rect x="1097.7" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1100.7" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.03%)</title><rect x="1098.1" y="611.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1101.1" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.03%)</title><rect x="1098.1" y="595.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1101.1" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.03%)</title><rect x="1098.1" y="579.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1101.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="1098.5" y="787.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1101.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="1098.5" y="771.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1101.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="1098.5" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1101.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.sendErrorOnWrongId (1 samples, 0.03%)</title><rect x="1098.9" y="819.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1101.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$75/895728776.run (5 samples, 0.17%)</title><rect x="1099.3" y="851.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1102.3" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityPut$2 (5 samples, 0.17%)</title><rect x="1099.3" y="835.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1102.3" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="1099.3" y="819.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1102.3" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="1099.3" y="803.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1102.3" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1099.3" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1102.3" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1099.3" y="771.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1102.3" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1099.3" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1102.3" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="1099.3" y="739.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1102.3" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="1099.3" y="723.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1102.3" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="1099.3" y="707.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1102.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (4 samples, 0.14%)</title><rect x="1099.7" y="819.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1102.7" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.10%)</title><rect x="1099.7" y="803.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1102.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityGet$1 (3 samples, 0.10%)</title><rect x="1099.7" y="787.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1102.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.03%)</title><rect x="1100.9" y="803.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1103.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.03%)</title><rect x="1100.9" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1103.9" y="798.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (8 samples, 0.27%)</title><rect x="1101.3" y="851.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1104.3" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (8 samples, 0.27%)</title><rect x="1101.3" y="835.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1104.3" y="846.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$109/1504332826.run (8 samples, 0.27%)</title><rect x="1101.3" y="819.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1104.3" y="830.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (8 samples, 0.27%)</title><rect x="1101.3" y="803.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1104.3" y="814.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (8 samples, 0.27%)</title><rect x="1101.3" y="787.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1104.3" y="798.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (8 samples, 0.27%)</title><rect x="1101.3" y="771.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1104.3" y="782.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (8 samples, 0.27%)</title><rect x="1101.3" y="755.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1104.3" y="766.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (8 samples, 0.27%)</title><rect x="1101.3" y="739.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1104.3" y="750.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (8 samples, 0.27%)</title><rect x="1101.3" y="723.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1104.3" y="734.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (8 samples, 0.27%)</title><rect x="1101.3" y="707.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1104.3" y="718.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (8 samples, 0.27%)</title><rect x="1101.3" y="691.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1104.3" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.14%)</title><rect x="1101.3" y="675.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1104.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.14%)</title><rect x="1101.3" y="659.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1104.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (4 samples, 0.14%)</title><rect x="1101.3" y="643.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1104.3" y="654.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (4 samples, 0.14%)</title><rect x="1101.3" y="627.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1104.3" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (3 samples, 0.10%)</title><rect x="1101.7" y="611.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1104.7" y="622.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (3 samples, 0.10%)</title><rect x="1101.7" y="595.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1104.7" y="606.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (3 samples, 0.10%)</title><rect x="1101.7" y="579.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1104.7" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (3 samples, 0.10%)</title><rect x="1101.7" y="563.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1104.7" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (3 samples, 0.10%)</title><rect x="1101.7" y="547.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1104.7" y="558.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (3 samples, 0.10%)</title><rect x="1101.7" y="531.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1104.7" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (3 samples, 0.10%)</title><rect x="1101.7" y="515.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1104.7" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (3 samples, 0.10%)</title><rect x="1101.7" y="499.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1104.7" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (3 samples, 0.10%)</title><rect x="1101.7" y="483.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1104.7" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (3 samples, 0.10%)</title><rect x="1101.7" y="467.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1104.7" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (3 samples, 0.10%)</title><rect x="1101.7" y="451.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1104.7" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (3 samples, 0.10%)</title><rect x="1101.7" y="435.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1104.7" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (3 samples, 0.10%)</title><rect x="1101.7" y="419.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1104.7" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.03%)</title><rect x="1101.7" y="403.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1104.7" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (1 samples, 0.03%)</title><rect x="1101.7" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1104.7" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.03%)</title><rect x="1101.7" y="371.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1104.7" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (1 samples, 0.03%)</title><rect x="1101.7" y="355.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1104.7" y="366.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1101.7" y="339.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1104.7" y="350.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (1 samples, 0.03%)</title><rect x="1101.7" y="323.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1104.7" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.03%)</title><rect x="1101.7" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1104.7" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.03%)</title><rect x="1101.7" y="291.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1104.7" y="302.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.07%)</title><rect x="1102.1" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1105.1" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.07%)</title><rect x="1102.1" y="387.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1105.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.07%)</title><rect x="1102.1" y="371.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1105.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (2 samples, 0.07%)</title><rect x="1102.1" y="355.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1105.1" y="366.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (2 samples, 0.07%)</title><rect x="1102.1" y="339.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1105.1" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.07%)</title><rect x="1102.1" y="323.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1105.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.07%)</title><rect x="1102.1" y="307.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1105.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (2 samples, 0.07%)</title><rect x="1102.1" y="291.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1105.1" y="302.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (2 samples, 0.07%)</title><rect x="1102.1" y="275.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1105.1" y="286.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (2 samples, 0.07%)</title><rect x="1102.1" y="259.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1105.1" y="270.0"></text>
</g>
<g>
<title>jmm_GetThreadInfo (2 samples, 0.07%)</title><rect x="1102.1" y="243.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1105.1" y="254.0"></text>
</g>
<g>
<title>Management::create_thread_info_instance(ThreadSnapshot*, Thread*) (2 samples, 0.07%)</title><rect x="1102.1" y="227.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1105.1" y="238.0"></text>
</g>
<g>
<title>JavaCalls::construct_new_instance(InstanceKlass*, Symbol*, JavaCallArguments*, Thread*) (1 samples, 0.03%)</title><rect x="1102.1" y="211.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1105.1" y="222.0"></text>
</g>
<g>
<title>JavaCalls::call_special(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (1 samples, 0.03%)</title><rect x="1102.1" y="195.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1105.1" y="206.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call(CallInfo&amp;, Handle, LinkInfo const&amp;, Thread*) (1 samples, 0.03%)</title><rect x="1102.1" y="179.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1105.1" y="190.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (1 samples, 0.03%)</title><rect x="1102.1" y="163.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1105.1" y="174.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.03%)</title><rect x="1102.1" y="147.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1105.1" y="158.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.03%)</title><rect x="1102.1" y="131.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1105.1" y="142.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.03%)</title><rect x="1102.1" y="115.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1105.1" y="126.0"></text>
</g>
<g>
<title>initialize_ThreadInfo_constructor_arguments(JavaCallArguments*, ThreadSnapshot*, Thread*) (1 samples, 0.03%)</title><rect x="1102.5" y="211.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1105.5" y="222.0"></text>
</g>
<g>
<title>ThreadStackTrace::allocate_fill_stack_trace_element_array(Thread*) (1 samples, 0.03%)</title><rect x="1102.5" y="195.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1105.5" y="206.0"></text>
</g>
<g>
<title>java_lang_StackTraceElement::create(methodHandle const&amp;, int, Thread*) (1 samples, 0.03%)</title><rect x="1102.5" y="179.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1105.5" y="190.0"></text>
</g>
<g>
<title>java_lang_StackTraceElement::fill_in(Handle, InstanceKlass*, methodHandle const&amp;, int, int, Symbol*, Thread*) (1 samples, 0.03%)</title><rect x="1102.5" y="163.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1105.5" y="174.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (1 samples, 0.03%)</title><rect x="1102.9" y="675.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1105.9" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.03%)</title><rect x="1102.9" y="659.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1105.9" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.03%)</title><rect x="1102.9" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1105.9" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (1 samples, 0.03%)</title><rect x="1102.9" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1105.9" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.03%)</title><rect x="1102.9" y="611.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1105.9" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.03%)</title><rect x="1102.9" y="595.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1105.9" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.03%)</title><rect x="1102.9" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1105.9" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.03%)</title><rect x="1102.9" y="563.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1105.9" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.03%)</title><rect x="1102.9" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1105.9" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.03%)</title><rect x="1102.9" y="531.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1105.9" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.03%)</title><rect x="1102.9" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1105.9" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.03%)</title><rect x="1102.9" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1105.9" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.03%)</title><rect x="1102.9" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1105.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.03%)</title><rect x="1102.9" y="467.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1105.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor32.invoke (1 samples, 0.03%)</title><rect x="1102.9" y="451.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1105.9" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.03%)</title><rect x="1102.9" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1105.9" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (1 samples, 0.03%)</title><rect x="1102.9" y="419.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1105.9" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.03%)</title><rect x="1102.9" y="403.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1105.9" y="414.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (1 samples, 0.03%)</title><rect x="1103.3" y="675.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1106.3" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.03%)</title><rect x="1103.3" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1106.3" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.03%)</title><rect x="1103.3" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1106.3" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.03%)</title><rect x="1103.3" y="627.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1106.3" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (1 samples, 0.03%)</title><rect x="1103.3" y="611.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1106.3" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.03%)</title><rect x="1103.3" y="595.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1106.3" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.03%)</title><rect x="1103.3" y="579.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1106.3" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (1 samples, 0.03%)</title><rect x="1103.3" y="563.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1106.3" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (1 samples, 0.03%)</title><rect x="1103.3" y="547.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1106.3" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readShort (1 samples, 0.03%)</title><rect x="1103.3" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1106.3" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readShort (1 samples, 0.03%)</title><rect x="1103.3" y="515.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1106.3" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$PeekInputStream.readFully (1 samples, 0.03%)</title><rect x="1103.3" y="499.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1106.3" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$PeekInputStream.read (1 samples, 0.03%)</title><rect x="1103.3" y="483.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1106.3" y="494.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.read (1 samples, 0.03%)</title><rect x="1103.3" y="467.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1106.3" y="478.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.read1 (1 samples, 0.03%)</title><rect x="1103.3" y="451.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1106.3" y="462.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1103.3" y="435.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1106.3" y="446.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.releaseOutputStream (2 samples, 0.07%)</title><rect x="1103.7" y="675.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1106.7" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.flush (2 samples, 0.07%)</title><rect x="1103.7" y="659.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1106.7" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.flush (2 samples, 0.07%)</title><rect x="1103.7" y="643.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1106.7" y="654.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (2 samples, 0.07%)</title><rect x="1103.7" y="627.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1106.7" y="638.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (2 samples, 0.07%)</title><rect x="1103.7" y="611.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1106.7" y="622.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.write (2 samples, 0.07%)</title><rect x="1103.7" y="595.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1106.7" y="606.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite (2 samples, 0.07%)</title><rect x="1103.7" y="579.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1106.7" y="590.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite0 (2 samples, 0.07%)</title><rect x="1103.7" y="563.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1106.7" y="574.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.07%)</title><rect x="1103.7" y="547.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1106.7" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="1103.7" y="531.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1106.7" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="1103.7" y="515.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1106.7" y="526.0"></text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.07%)</title><rect x="1103.7" y="499.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1106.7" y="510.0"></text>
</g>
<g>
<title>__sys_sendto (2 samples, 0.07%)</title><rect x="1103.7" y="483.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1106.7" y="494.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.07%)</title><rect x="1103.7" y="467.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1106.7" y="478.0"></text>
</g>
<g>
<title>inet6_sendmsg (2 samples, 0.07%)</title><rect x="1103.7" y="451.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1106.7" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.07%)</title><rect x="1103.7" y="435.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1106.7" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (2 samples, 0.07%)</title><rect x="1103.7" y="419.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1106.7" y="430.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.07%)</title><rect x="1103.7" y="403.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1106.7" y="414.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.07%)</title><rect x="1103.7" y="387.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1106.7" y="398.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.33 (1 samples, 0.03%)</title><rect x="1103.7" y="371.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1106.7" y="382.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.03%)</title><rect x="1104.1" y="371.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1107.1" y="382.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.03%)</title><rect x="1104.1" y="355.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1107.1" y="366.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.03%)</title><rect x="1104.1" y="339.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1107.1" y="350.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.03%)</title><rect x="1104.1" y="323.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1107.1" y="334.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.03%)</title><rect x="1104.1" y="307.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1107.1" y="318.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.03%)</title><rect x="1104.1" y="291.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1107.1" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.03%)</title><rect x="1104.1" y="275.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1107.1" y="286.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.03%)</title><rect x="1104.1" y="259.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1107.1" y="270.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.03%)</title><rect x="1104.1" y="243.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1107.1" y="254.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.03%)</title><rect x="1104.1" y="227.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1107.1" y="238.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (194 samples, 6.63%)</title><rect x="1104.5" y="899.0" width="78.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1107.5" y="910.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.03%)</title><rect x="1104.9" y="883.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1107.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.03%)</title><rect x="1105.3" y="883.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1108.3" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.03%)</title><rect x="1105.3" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1108.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (39 samples, 1.33%)</title><rect x="1105.7" y="883.0" width="15.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1108.7" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (4 samples, 0.14%)</title><rect x="1107.0" y="867.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1110.0" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (4 samples, 0.14%)</title><rect x="1107.0" y="851.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1110.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (32 samples, 1.09%)</title><rect x="1108.6" y="867.0" width="12.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1111.6" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.03%)</title><rect x="1110.2" y="851.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1113.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.92%)</title><rect x="1110.6" y="851.0" width="10.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1113.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1110.6" y="835.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1113.6" y="846.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="1110.6" y="819.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1113.6" y="830.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="1110.6" y="803.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1113.6" y="814.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1110.6" y="787.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1113.6" y="798.0"></text>
</g>
<g>
<title>epoll_wait (26 samples, 0.89%)</title><rect x="1111.0" y="835.0" width="10.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1114.0" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.79%)</title><rect x="1112.2" y="819.0" width="9.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1115.2" y="830.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.03%)</title><rect x="1112.2" y="803.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1115.2" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.75%)</title><rect x="1112.6" y="803.0" width="8.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1115.6" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (19 samples, 0.65%)</title><rect x="1113.8" y="787.0" width="7.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1116.8" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (19 samples, 0.65%)</title><rect x="1113.8" y="771.0" width="7.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1116.8" y="782.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.17%)</title><rect x="1113.8" y="755.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1116.8" y="766.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.17%)</title><rect x="1113.8" y="739.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1116.8" y="750.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.14%)</title><rect x="1114.2" y="723.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1117.2" y="734.0"></text>
</g>
<g>
<title>ep_poll (14 samples, 0.48%)</title><rect x="1115.8" y="755.0" width="5.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1118.8" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (8 samples, 0.27%)</title><rect x="1116.2" y="739.0" width="3.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1119.2" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.20%)</title><rect x="1116.6" y="723.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1119.6" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (5 samples, 0.17%)</title><rect x="1116.6" y="707.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1119.6" y="718.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.17%)</title><rect x="1116.6" y="691.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1119.6" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="1117.4" y="675.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1120.4" y="686.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.07%)</title><rect x="1117.8" y="675.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1120.8" y="686.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.03%)</title><rect x="1118.6" y="707.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1121.6" y="718.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="1119.0" y="723.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1122.0" y="734.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="1119.4" y="739.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1122.4" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.14%)</title><rect x="1119.9" y="739.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1122.9" y="750.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="1119.9" y="723.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1122.9" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.10%)</title><rect x="1120.3" y="723.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1123.3" y="734.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="1120.3" y="707.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1123.3" y="718.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.07%)</title><rect x="1120.7" y="707.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1123.7" y="718.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.07%)</title><rect x="1120.7" y="691.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1123.7" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (152 samples, 5.19%)</title><rect x="1121.5" y="883.0" width="61.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1124.5" y="894.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (151 samples, 5.16%)</title><rect x="1121.5" y="867.0" width="60.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1124.5" y="878.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (90 samples, 3.07%)</title><rect x="1122.7" y="851.0" width="36.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.7" y="862.0">one..</text>
</g>
<g>
<title>_new_array_Java (1 samples, 0.03%)</title><rect x="1123.1" y="835.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1126.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (84 samples, 2.87%)</title><rect x="1123.5" y="835.0" width="33.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1126.5" y="846.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (82 samples, 2.80%)</title><rect x="1124.3" y="819.0" width="33.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1127.3" y="830.0">on..</text>
</g>
<g>
<title>RequestHandler1_handleEntityGet.handleRequest (75 samples, 2.56%)</title><rect x="1124.7" y="803.0" width="30.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1127.7" y="814.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (5 samples, 0.17%)</title><rect x="1124.7" y="787.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1127.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.17%)</title><rect x="1124.7" y="771.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1127.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="1124.7" y="755.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1127.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="1124.7" y="739.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1127.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.07%)</title><rect x="1125.1" y="755.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1128.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.07%)</title><rect x="1125.1" y="739.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1128.1" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="1125.5" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1128.5" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="1125.5" y="707.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1128.5" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1125.5" y="691.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1128.5" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1125.5" y="675.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1128.5" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1125.5" y="659.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1128.5" y="670.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="1125.5" y="643.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1128.5" y="654.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1125.9" y="755.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1128.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="1126.3" y="755.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityGet (70 samples, 2.39%)</title><rect x="1126.7" y="787.0" width="28.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.7" y="798.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="1126.7" y="771.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1129.7" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="1126.7" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1129.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$129/964019704.get$Lambda (1 samples, 0.03%)</title><rect x="1126.7" y="739.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1129.7" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="1126.7" y="723.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1129.7" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="1126.7" y="707.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1129.7" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="1126.7" y="691.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1129.7" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1126.7" y="675.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1129.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.executeOrSendError (69 samples, 2.36%)</title><rect x="1127.1" y="771.0" width="27.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1130.1" y="782.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (68 samples, 2.32%)</title><rect x="1127.5" y="755.0" width="27.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1130.5" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (65 samples, 2.22%)</title><rect x="1128.3" y="739.0" width="26.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1131.3" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (5 samples, 0.17%)</title><rect x="1128.7" y="723.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1131.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.17%)</title><rect x="1128.7" y="707.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1131.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.17%)</title><rect x="1128.7" y="691.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1131.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.17%)</title><rect x="1128.7" y="675.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1131.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="1130.7" y="723.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1133.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="1130.7" y="707.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1133.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="1130.7" y="691.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1133.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (58 samples, 1.98%)</title><rect x="1131.1" y="723.0" width="23.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1134.1" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (58 samples, 1.98%)</title><rect x="1131.1" y="707.0" width="23.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1134.1" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (58 samples, 1.98%)</title><rect x="1131.1" y="691.0" width="23.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1134.1" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (58 samples, 1.98%)</title><rect x="1131.1" y="675.0" width="23.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1134.1" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (56 samples, 1.91%)</title><rect x="1131.9" y="659.0" width="22.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1134.9" y="670.0">j..</text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.07%)</title><rect x="1132.4" y="643.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1135.4" y="654.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.27%)</title><rect x="1133.2" y="643.0" width="3.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1136.2" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.07%)</title><rect x="1133.2" y="627.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1136.2" y="638.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="1134.0" y="627.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1137.0" y="638.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="1134.4" y="627.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1137.4" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.14%)</title><rect x="1134.8" y="627.0" width="1.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1137.8" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (44 samples, 1.50%)</title><rect x="1136.4" y="643.0" width="17.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1139.4" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 1.20%)</title><rect x="1140.0" y="627.0" width="14.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1143.0" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="1140.0" y="611.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1143.0" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 1.16%)</title><rect x="1140.4" y="611.0" width="13.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1143.4" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (34 samples, 1.16%)</title><rect x="1140.4" y="595.0" width="13.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1143.4" y="606.0"></text>
</g>
<g>
<title>do_futex (34 samples, 1.16%)</title><rect x="1140.4" y="579.0" width="13.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1143.4" y="590.0"></text>
</g>
<g>
<title>futex_wake (33 samples, 1.13%)</title><rect x="1140.8" y="563.0" width="13.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1143.8" y="574.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="1142.0" y="547.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1145.0" y="558.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (1 samples, 0.03%)</title><rect x="1142.0" y="531.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1145.0" y="542.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (1 samples, 0.03%)</title><rect x="1142.4" y="547.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1145.4" y="558.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.14%)</title><rect x="1142.8" y="547.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1145.8" y="558.0"></text>
</g>
<g>
<title>wake_up_q (24 samples, 0.82%)</title><rect x="1144.4" y="547.0" width="9.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1147.4" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (24 samples, 0.82%)</title><rect x="1144.4" y="531.0" width="9.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1147.4" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (24 samples, 0.82%)</title><rect x="1144.4" y="515.0" width="9.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1147.4" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1154.1" y="643.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1157.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.03%)</title><rect x="1154.5" y="739.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1157.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 0.20%)</title><rect x="1154.9" y="803.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1157.9" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.20%)</title><rect x="1154.9" y="787.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1157.9" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="1154.9" y="771.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1157.9" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.17%)</title><rect x="1155.3" y="771.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1158.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.17%)</title><rect x="1155.3" y="755.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1158.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (5 samples, 0.17%)</title><rect x="1155.3" y="739.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1158.3" y="750.0"></text>
</g>
<g>
<title>RequestHandler1_handleEntityGet.handleRequest (3 samples, 0.10%)</title><rect x="1155.3" y="723.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1158.3" y="734.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.07%)</title><rect x="1156.5" y="723.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1159.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.10%)</title><rect x="1157.3" y="835.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1160.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.07%)</title><rect x="1157.7" y="819.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1160.7" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="1158.6" y="835.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1161.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="1158.6" y="819.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1161.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1158.6" y="803.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1161.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1158.6" y="787.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1161.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.03%)</title><rect x="1158.6" y="771.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1161.6" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="1158.6" y="755.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1161.6" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1158.6" y="739.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.6" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1158.6" y="723.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1161.6" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1158.6" y="707.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1161.6" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (58 samples, 1.98%)</title><rect x="1159.0" y="851.0" width="23.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1162.0" y="862.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.03%)</title><rect x="1160.2" y="835.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1163.2" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (54 samples, 1.84%)</title><rect x="1160.6" y="835.0" width="21.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1163.6" y="846.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.14%)</title><rect x="1161.4" y="819.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1164.4" y="830.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="1161.4" y="803.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1164.4" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.10%)</title><rect x="1161.8" y="803.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1164.8" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.07%)</title><rect x="1161.8" y="787.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1164.8" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="1162.6" y="787.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1165.6" y="798.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="1162.6" y="771.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1165.6" y="782.0"></text>
</g>
<g>
<title>__GI___recv (47 samples, 1.61%)</title><rect x="1163.0" y="819.0" width="18.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1166.0" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 1.61%)</title><rect x="1163.0" y="803.0" width="18.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1166.0" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (47 samples, 1.61%)</title><rect x="1163.0" y="787.0" width="18.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1166.0" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (45 samples, 1.54%)</title><rect x="1163.8" y="771.0" width="18.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1166.8" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (44 samples, 1.50%)</title><rect x="1163.8" y="755.0" width="17.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1166.8" y="766.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="1164.2" y="739.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1167.2" y="750.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="1164.6" y="739.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1167.6" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (36 samples, 1.23%)</title><rect x="1165.0" y="739.0" width="14.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1168.0" y="750.0"></text>
</g>
<g>
<title>inet6_recvmsg (31 samples, 1.06%)</title><rect x="1165.0" y="723.0" width="12.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1168.0" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (31 samples, 1.06%)</title><rect x="1165.0" y="707.0" width="12.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1168.0" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.14%)</title><rect x="1169.4" y="691.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1172.4" y="702.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="1169.4" y="675.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1172.4" y="686.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.10%)</title><rect x="1169.8" y="675.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1172.8" y="686.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="1169.8" y="659.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1172.8" y="670.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.07%)</title><rect x="1170.2" y="659.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1173.2" y="670.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.07%)</title><rect x="1170.2" y="643.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1173.2" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.03%)</title><rect x="1171.1" y="691.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1174.1" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="1171.5" y="691.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1174.5" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="1171.5" y="675.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1174.5" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (10 samples, 0.34%)</title><rect x="1171.9" y="691.0" width="4.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1174.9" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (10 samples, 0.34%)</title><rect x="1171.9" y="675.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1174.9" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.17%)</title><rect x="1173.9" y="659.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1176.9" y="670.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.10%)</title><rect x="1173.9" y="643.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1176.9" y="654.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.07%)</title><rect x="1175.1" y="643.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1178.1" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.07%)</title><rect x="1175.1" y="627.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1178.1" y="638.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.10%)</title><rect x="1175.9" y="691.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1178.9" y="702.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="1177.1" y="691.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1180.1" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (5 samples, 0.17%)</title><rect x="1177.5" y="723.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1180.5" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.10%)</title><rect x="1178.3" y="707.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1181.3" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.10%)</title><rect x="1178.3" y="691.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1181.3" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.10%)</title><rect x="1178.3" y="675.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1181.3" y="686.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="1179.1" y="659.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1182.1" y="670.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="1179.1" y="643.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1182.1" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.17%)</title><rect x="1179.5" y="739.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1182.5" y="750.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.14%)</title><rect x="1179.5" y="723.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1182.5" y="734.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.14%)</title><rect x="1179.5" y="707.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1182.5" y="718.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="1180.7" y="691.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1183.7" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="1181.1" y="723.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1184.1" y="734.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="1181.5" y="755.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1184.5" y="766.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="1181.9" y="819.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1184.9" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="1182.3" y="867.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.3" y="878.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="1182.3" y="851.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1185.3" y="862.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1182.3" y="835.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1185.3" y="846.0"></text>
</g>
<g>
<title>start_thread (18 samples, 0.61%)</title><rect x="1182.7" y="899.0" width="7.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1185.7" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (18 samples, 0.61%)</title><rect x="1182.7" y="883.0" width="7.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1185.7" y="894.0"></text>
</g>
<g>
<title>Thread::call_run() (18 samples, 0.61%)</title><rect x="1182.7" y="867.0" width="7.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.7" y="878.0"></text>
</g>
<g>
<title>JavaThread::run() (17 samples, 0.58%)</title><rect x="1182.7" y="851.0" width="6.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.7" y="862.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (17 samples, 0.58%)</title><rect x="1182.7" y="835.0" width="6.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.7" y="846.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (16 samples, 0.55%)</title><rect x="1182.7" y="819.0" width="6.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.7" y="830.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (16 samples, 0.55%)</title><rect x="1182.7" y="803.0" width="6.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.7" y="814.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (16 samples, 0.55%)</title><rect x="1182.7" y="787.0" width="6.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.7" y="798.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (8 samples, 0.27%)</title><rect x="1182.7" y="771.0" width="3.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.7" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.03%)</title><rect x="1182.7" y="755.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.7" y="766.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.03%)</title><rect x="1182.7" y="739.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.7" y="750.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (1 samples, 0.03%)</title><rect x="1182.7" y="723.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.7" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (7 samples, 0.24%)</title><rect x="1183.1" y="755.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.1" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (2 samples, 0.07%)</title><rect x="1183.1" y="739.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.1" y="750.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="1183.1" y="723.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.1" y="734.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.03%)</title><rect x="1183.5" y="723.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.5" y="734.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="1183.5" y="707.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.5" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (2 samples, 0.07%)</title><rect x="1184.0" y="739.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.0" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.03%)</title><rect x="1184.0" y="723.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.0" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.03%)</title><rect x="1184.4" y="723.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.4" y="734.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="1184.4" y="707.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.4" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.03%)</title><rect x="1184.8" y="739.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.8" y="750.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.07%)</title><rect x="1185.2" y="739.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.2" y="750.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.03%)</title><rect x="1185.6" y="723.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.6" y="734.0"></text>
</g>
<g>
<title>Compile::Optimize() (5 samples, 0.17%)</title><rect x="1186.0" y="771.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.0" y="782.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.03%)</title><rect x="1186.0" y="755.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.0" y="766.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.03%)</title><rect x="1186.0" y="739.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.0" y="750.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (1 samples, 0.03%)</title><rect x="1186.4" y="755.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.4" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.03%)</title><rect x="1186.4" y="739.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.4" y="750.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1186.4" y="723.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.4" y="734.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1186.4" y="707.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.4" y="718.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1186.4" y="691.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.4" y="702.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1186.4" y="675.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.4" y="686.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1186.4" y="659.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.4" y="670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_unroll(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 0.03%)</title><rect x="1186.4" y="643.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.4" y="654.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 0.03%)</title><rect x="1186.4" y="627.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.4" y="638.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop_handle_data_uses(Node*, Node_List&amp;, IdealLoopTree*, IdealLoopTree*, Node_List*&amp;, Node_List*&amp;, Node_List*&amp;, Node_List&amp;, unsigned int, PhaseIdealLoop::CloneLoopMode) (1 samples, 0.03%)</title><rect x="1186.4" y="611.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.4" y="622.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.03%)</title><rect x="1186.4" y="595.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.4" y="606.0"></text>
</g>
<g>
<title>PhiNode::hash() const (1 samples, 0.03%)</title><rect x="1186.4" y="579.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.4" y="590.0"></text>
</g>
<g>
<title>TypeNode::hash() const (1 samples, 0.03%)</title><rect x="1186.4" y="563.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.4" y="574.0"></text>
</g>
<g>
<title>Compile::remove_opaque4_nodes(PhaseIterGVN&amp;) (1 samples, 0.03%)</title><rect x="1186.8" y="755.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.8" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.03%)</title><rect x="1187.2" y="755.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.2" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.03%)</title><rect x="1187.2" y="739.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.2" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.03%)</title><rect x="1187.2" y="723.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.2" y="734.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.03%)</title><rect x="1187.6" y="755.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.6" y="766.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.03%)</title><rect x="1187.6" y="739.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.6" y="750.0"></text>
</g>
<g>
<title>StoreNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1187.6" y="723.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.6" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="1188.0" y="771.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.0" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.07%)</title><rect x="1188.0" y="755.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.0" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.07%)</title><rect x="1188.0" y="739.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.0" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.07%)</title><rect x="1188.0" y="723.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.0" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.07%)</title><rect x="1188.0" y="707.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.0" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.07%)</title><rect x="1188.0" y="691.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.0" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1188.0" y="675.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.0" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1188.0" y="659.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.0" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1188.0" y="643.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.0" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1188.0" y="627.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.0" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1188.0" y="611.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.0" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1188.0" y="595.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.0" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1188.0" y="579.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.0" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1188.0" y="563.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.0" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1188.0" y="547.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.0" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1188.0" y="531.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.0" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1188.0" y="515.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.0" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1188.0" y="499.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.0" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1188.0" y="483.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.0" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1188.0" y="467.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.0" y="478.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.03%)</title><rect x="1188.0" y="451.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.0" y="462.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="1188.0" y="435.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.0" y="446.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="1188.0" y="419.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.0" y="430.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1188.0" y="403.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.0" y="414.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1188.0" y="387.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.0" y="398.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.03%)</title><rect x="1188.0" y="371.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.0" y="382.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.03%)</title><rect x="1188.0" y="355.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.0" y="366.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.03%)</title><rect x="1188.0" y="339.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.0" y="350.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1188.4" y="675.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.4" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1188.4" y="659.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.4" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1188.4" y="643.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.4" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1188.4" y="627.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.4" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1188.4" y="611.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.4" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1188.4" y="595.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.4" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1188.4" y="579.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.4" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1188.4" y="563.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.4" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1188.4" y="547.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.4" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1188.4" y="531.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.4" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1188.4" y="515.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.4" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1188.4" y="499.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.4" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1188.4" y="483.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.4" y="494.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1188.4" y="467.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.4" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1188.4" y="451.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.4" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1188.4" y="435.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.4" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1188.4" y="419.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.4" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1188.4" y="403.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.4" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1188.4" y="387.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.4" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1188.4" y="371.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.4" y="382.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1188.4" y="355.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.4" y="366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1188.4" y="339.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.4" y="350.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1188.4" y="323.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.4" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1188.4" y="307.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.4" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1188.4" y="291.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.4" y="302.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.03%)</title><rect x="1188.4" y="275.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.4" y="286.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.03%)</title><rect x="1188.4" y="259.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.4" y="270.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.03%)</title><rect x="1188.4" y="243.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.4" y="254.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.03%)</title><rect x="1188.4" y="227.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.4" y="238.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.03%)</title><rect x="1188.4" y="211.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.4" y="222.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.03%)</title><rect x="1188.4" y="195.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.4" y="206.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool) (1 samples, 0.03%)</title><rect x="1188.4" y="179.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.4" y="190.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1188.4" y="163.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.4" y="174.0"></text>
</g>
<g>
<title>LoadUBNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1188.4" y="147.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.4" y="158.0"></text>
</g>
<g>
<title>MemBarAcquireNode::Opcode() const (1 samples, 0.03%)</title><rect x="1188.4" y="131.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.4" y="142.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 0.03%)</title><rect x="1188.8" y="771.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.8" y="782.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (1 samples, 0.03%)</title><rect x="1188.8" y="755.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.8" y="766.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.03%)</title><rect x="1188.8" y="739.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.8" y="750.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads() (1 samples, 0.03%)</title><rect x="1189.2" y="819.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.2" y="830.0"></text>
</g>
<g>
<title>__sysinfo (1 samples, 0.03%)</title><rect x="1189.2" y="803.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1192.2" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1189.2" y="787.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1192.2" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1189.2" y="771.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1192.2" y="782.0"></text>
</g>
<g>
<title>__x64_sys_sysinfo (1 samples, 0.03%)</title><rect x="1189.2" y="755.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1192.2" y="766.0"></text>
</g>
<g>
<title>__do_sys_sysinfo (1 samples, 0.03%)</title><rect x="1189.2" y="739.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1192.2" y="750.0"></text>
</g>
<g>
<title>do_sysinfo (1 samples, 0.03%)</title><rect x="1189.2" y="723.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1192.2" y="734.0"></text>
</g>
<g>
<title>si_meminfo (1 samples, 0.03%)</title><rect x="1189.2" y="707.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1192.2" y="718.0"></text>
</g>
<g>
<title>nr_blockdev_pages (1 samples, 0.03%)</title><rect x="1189.2" y="691.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1192.2" y="702.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.03%)</title><rect x="1189.6" y="851.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.6" y="862.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.03%)</title><rect x="1189.6" y="835.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.6" y="846.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (1 samples, 0.03%)</title><rect x="1189.6" y="819.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.6" y="830.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.03%)</title><rect x="1189.6" y="803.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.6" y="814.0"></text>
</g>
<g>
<title>VM_ThreadDump::doit() (1 samples, 0.03%)</title><rect x="1189.6" y="787.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.6" y="798.0"></text>
</g>
<g>
<title>ThreadStackTrace::dump_stack_at_safepoint(int) (1 samples, 0.03%)</title><rect x="1189.6" y="771.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.6" y="782.0"></text>
</g>
<g>
<title>compiledVFrame::sender() const (1 samples, 0.03%)</title><rect x="1189.6" y="755.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.6" y="766.0"></text>
</g>
<g>
<title>vframe::sender() const (1 samples, 0.03%)</title><rect x="1189.6" y="739.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.6" y="750.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.03%)</title><rect x="1189.6" y="723.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.6" y="734.0"></text>
</g>
</g>
</svg>
