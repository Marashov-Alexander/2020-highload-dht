<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="421"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="421"> </text>
<g id="frames">
<g>
<title>all (3,404 samples, 100.00%)</title><rect x="10.0" y="387.0" width="1180.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="398.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=23137] (202 samples, 5.93%)</title><rect x="10.0" y="371.0" width="70.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="382.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (202 samples, 5.93%)</title><rect x="10.0" y="355.0" width="70.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="366.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (14 samples, 0.41%)</title><rect x="10.0" y="339.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (14 samples, 0.41%)</title><rect x="10.0" y="323.0" width="4.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (188 samples, 5.52%)</title><rect x="14.9" y="339.0" width="65.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.9" y="350.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (188 samples, 5.52%)</title><rect x="14.9" y="323.0" width="65.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.9" y="334.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (188 samples, 5.52%)</title><rect x="14.9" y="307.0" width="65.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.9" y="318.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (40 samples, 1.18%)</title><rect x="14.9" y="291.0" width="13.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (40 samples, 1.18%)</title><rect x="14.9" y="275.0" width="13.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.9" y="286.0"></text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (15 samples, 0.44%)</title><rect x="14.9" y="259.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (10 samples, 0.29%)</title><rect x="14.9" y="243.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.9" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.29%)</title><rect x="14.9" y="227.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.29%)</title><rect x="14.9" y="211.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="17.9" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.29%)</title><rect x="14.9" y="195.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.9" y="206.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.12%)</title><rect x="14.9" y="179.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="17.9" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.18%)</title><rect x="16.2" y="179.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.2" y="190.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.18%)</title><rect x="16.2" y="163.0" width="2.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="19.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut (5 samples, 0.15%)</title><rect x="18.3" y="243.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.15%)</title><rect x="18.3" y="227.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.15%)</title><rect x="18.3" y="211.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$67/849874983.get$Lambda (5 samples, 0.15%)</title><rect x="18.3" y="195.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.3" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ServiceImpl$$Lambda$67 (5 samples, 0.15%)</title><rect x="18.3" y="179.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="21.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (25 samples, 0.73%)</title><rect x="20.1" y="259.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.1" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (25 samples, 0.73%)</title><rect x="20.1" y="243.0" width="8.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (25 samples, 0.73%)</title><rect x="20.1" y="227.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="23.1" y="238.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.29%)</title><rect x="20.1" y="211.0" width="3.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="23.1" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.44%)</title><rect x="23.5" y="211.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="26.5" y="222.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.44%)</title><rect x="23.5" y="195.0" width="5.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="26.5" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (64 samples, 1.88%)</title><rect x="28.7" y="291.0" width="22.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="31.7" y="302.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (12 samples, 0.35%)</title><rect x="28.7" y="275.0" width="4.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="31.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (26 samples, 0.76%)</title><rect x="32.9" y="275.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="35.9" y="286.0"></text>
</g>
<g>
<title>java.lang.String[] (26 samples, 0.76%)</title><rect x="32.9" y="259.0" width="9.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="35.9" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 0.76%)</title><rect x="41.9" y="275.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="44.9" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 0.76%)</title><rect x="41.9" y="259.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="44.9" y="270.0"></text>
</g>
<g>
<title>char[] (12 samples, 0.35%)</title><rect x="41.9" y="243.0" width="4.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="44.9" y="254.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.09%)</title><rect x="46.1" y="243.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="49.1" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.32%)</title><rect x="47.1" y="243.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="50.1" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.32%)</title><rect x="47.1" y="227.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="50.1" y="238.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (11 samples, 0.32%)</title><rect x="47.1" y="211.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="50.1" y="222.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.32%)</title><rect x="47.1" y="195.0" width="3.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="50.1" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (14 samples, 0.41%)</title><rect x="50.9" y="291.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.9" y="302.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.41%)</title><rect x="50.9" y="275.0" width="4.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="53.9" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (18 samples, 0.53%)</title><rect x="55.8" y="291.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.8" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.53%)</title><rect x="55.8" y="275.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.53%)</title><rect x="55.8" y="259.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.8" y="270.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.24%)</title><rect x="55.8" y="243.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="58.8" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.29%)</title><rect x="58.5" y="243.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="61.5" y="254.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.29%)</title><rect x="58.5" y="227.0" width="3.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="61.5" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (52 samples, 1.53%)</title><rect x="62.0" y="291.0" width="18.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="65.0" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (52 samples, 1.53%)</title><rect x="62.0" y="275.0" width="18.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.0" y="286.0"></text>
</g>
<g>
<title>char[] (21 samples, 0.62%)</title><rect x="62.0" y="259.0" width="7.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="65.0" y="270.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.32%)</title><rect x="69.3" y="259.0" width="3.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="72.3" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.59%)</title><rect x="73.1" y="259.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="76.1" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.59%)</title><rect x="73.1" y="243.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (20 samples, 0.59%)</title><rect x="73.1" y="227.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="76.1" y="238.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.59%)</title><rect x="73.1" y="211.0" width="6.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="76.1" y="222.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=23138] (199 samples, 5.85%)</title><rect x="80.0" y="371.0" width="69.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="83.0" y="382.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (199 samples, 5.85%)</title><rect x="80.0" y="355.0" width="69.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.0" y="366.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (13 samples, 0.38%)</title><rect x="80.0" y="339.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.0" y="350.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (13 samples, 0.38%)</title><rect x="80.0" y="323.0" width="4.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="83.0" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (186 samples, 5.46%)</title><rect x="84.5" y="339.0" width="64.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.5" y="350.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (186 samples, 5.46%)</title><rect x="84.5" y="323.0" width="64.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.5" y="334.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (186 samples, 5.46%)</title><rect x="84.5" y="307.0" width="64.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.5" y="318.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (39 samples, 1.15%)</title><rect x="84.5" y="291.0" width="13.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (39 samples, 1.15%)</title><rect x="84.5" y="275.0" width="13.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="87.5" y="286.0"></text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (23 samples, 0.68%)</title><rect x="84.5" y="259.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (14 samples, 0.41%)</title><rect x="84.5" y="243.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="87.5" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (14 samples, 0.41%)</title><rect x="84.5" y="227.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.5" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.41%)</title><rect x="84.5" y="211.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.5" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.41%)</title><rect x="84.5" y="195.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.5" y="206.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.06%)</title><rect x="84.5" y="179.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="87.5" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.35%)</title><rect x="85.2" y="179.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="88.2" y="190.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.35%)</title><rect x="85.2" y="163.0" width="4.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="88.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut (9 samples, 0.26%)</title><rect x="89.4" y="243.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="92.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.24%)</title><rect x="89.4" y="227.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="92.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.24%)</title><rect x="89.4" y="211.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="92.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$67/849874983.get$Lambda (8 samples, 0.24%)</title><rect x="89.4" y="195.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.4" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ServiceImpl$$Lambda$67 (8 samples, 0.24%)</title><rect x="89.4" y="179.0" width="2.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="92.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.executeOrSendError (1 samples, 0.03%)</title><rect x="92.2" y="227.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="92.2" y="211.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.03%)</title><rect x="92.2" y="195.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="95.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="92.2" y="179.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="95.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="92.2" y="163.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="95.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="92.2" y="147.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="95.2" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.03%)</title><rect x="92.2" y="131.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="95.2" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (16 samples, 0.47%)</title><rect x="92.5" y="259.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="95.5" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.47%)</title><rect x="92.5" y="243.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="95.5" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.47%)</title><rect x="92.5" y="227.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="95.5" y="238.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.29%)</title><rect x="92.5" y="211.0" width="3.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="95.5" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.18%)</title><rect x="96.0" y="211.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="99.0" y="222.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.18%)</title><rect x="96.0" y="195.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="99.0" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (62 samples, 1.82%)</title><rect x="98.0" y="291.0" width="21.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="101.0" y="302.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (12 samples, 0.35%)</title><rect x="98.0" y="275.0" width="4.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="101.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (16 samples, 0.47%)</title><rect x="102.2" y="275.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="105.2" y="286.0"></text>
</g>
<g>
<title>java.lang.String[] (16 samples, 0.47%)</title><rect x="102.2" y="259.0" width="5.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="105.2" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (34 samples, 1.00%)</title><rect x="107.8" y="275.0" width="11.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.8" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (34 samples, 1.00%)</title><rect x="107.8" y="259.0" width="11.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.8" y="270.0"></text>
</g>
<g>
<title>char[] (19 samples, 0.56%)</title><rect x="107.8" y="243.0" width="6.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="110.8" y="254.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.18%)</title><rect x="114.3" y="243.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="117.3" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.26%)</title><rect x="116.4" y="243.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="119.4" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.26%)</title><rect x="116.4" y="227.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 0.26%)</title><rect x="116.4" y="211.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="119.4" y="222.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.26%)</title><rect x="116.4" y="195.0" width="3.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="119.4" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (7 samples, 0.21%)</title><rect x="119.5" y="291.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="122.5" y="302.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.21%)</title><rect x="119.5" y="275.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="122.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (13 samples, 0.38%)</title><rect x="122.0" y="291.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.0" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.38%)</title><rect x="122.0" y="275.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.38%)</title><rect x="122.0" y="259.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="125.0" y="270.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.26%)</title><rect x="122.0" y="243.0" width="3.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="125.0" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.12%)</title><rect x="125.1" y="243.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="128.1" y="254.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.12%)</title><rect x="125.1" y="227.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="128.1" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (65 samples, 1.91%)</title><rect x="126.5" y="291.0" width="22.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.5" y="302.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (65 samples, 1.91%)</title><rect x="126.5" y="275.0" width="22.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.5" y="286.0">o..</text>
</g>
<g>
<title>char[] (33 samples, 0.97%)</title><rect x="126.5" y="259.0" width="11.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="129.5" y="270.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.44%)</title><rect x="137.9" y="259.0" width="5.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="140.9" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.50%)</title><rect x="143.1" y="259.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.1" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.50%)</title><rect x="143.1" y="243.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (17 samples, 0.50%)</title><rect x="143.1" y="227.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.1" y="238.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.50%)</title><rect x="143.1" y="211.0" width="5.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="146.1" y="222.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=23139] (208 samples, 6.11%)</title><rect x="149.0" y="371.0" width="72.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="152.0" y="382.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (208 samples, 6.11%)</title><rect x="149.0" y="355.0" width="72.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="152.0" y="366.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (10 samples, 0.29%)</title><rect x="149.0" y="339.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="152.0" y="350.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (10 samples, 0.29%)</title><rect x="149.0" y="323.0" width="3.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="152.0" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (198 samples, 5.82%)</title><rect x="152.5" y="339.0" width="68.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.5" y="350.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (198 samples, 5.82%)</title><rect x="152.5" y="323.0" width="68.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.5" y="334.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (198 samples, 5.82%)</title><rect x="152.5" y="307.0" width="68.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="155.5" y="318.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (35 samples, 1.03%)</title><rect x="152.5" y="291.0" width="12.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="155.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (35 samples, 1.03%)</title><rect x="152.5" y="275.0" width="12.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.5" y="286.0"></text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (24 samples, 0.71%)</title><rect x="152.5" y="259.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="155.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (14 samples, 0.41%)</title><rect x="152.5" y="243.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.5" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (14 samples, 0.41%)</title><rect x="152.5" y="227.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.5" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.41%)</title><rect x="152.5" y="211.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.5" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.41%)</title><rect x="152.5" y="195.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.5" y="206.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.18%)</title><rect x="152.5" y="179.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="155.5" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.24%)</title><rect x="154.6" y="179.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.6" y="190.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.24%)</title><rect x="154.6" y="163.0" width="2.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="157.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut (10 samples, 0.29%)</title><rect x="157.3" y="243.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="160.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.29%)</title><rect x="157.3" y="227.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.29%)</title><rect x="157.3" y="211.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="160.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$67/849874983.get$Lambda (10 samples, 0.29%)</title><rect x="157.3" y="195.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="160.3" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ServiceImpl$$Lambda$67 (10 samples, 0.29%)</title><rect x="157.3" y="179.0" width="3.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="160.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (11 samples, 0.32%)</title><rect x="160.8" y="259.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.8" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.32%)</title><rect x="160.8" y="243.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.8" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.32%)</title><rect x="160.8" y="227.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="163.8" y="238.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.12%)</title><rect x="160.8" y="211.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="163.8" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.21%)</title><rect x="162.2" y="211.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.2" y="222.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.21%)</title><rect x="162.2" y="195.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="165.2" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (76 samples, 2.23%)</title><rect x="164.6" y="291.0" width="26.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="167.6" y="302.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (15 samples, 0.44%)</title><rect x="164.6" y="275.0" width="5.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="167.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (25 samples, 0.73%)</title><rect x="169.8" y="275.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="172.8" y="286.0"></text>
</g>
<g>
<title>java.lang.String[] (25 samples, 0.73%)</title><rect x="169.8" y="259.0" width="8.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="172.8" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 1.06%)</title><rect x="178.5" y="275.0" width="12.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="181.5" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 1.06%)</title><rect x="178.5" y="259.0" width="12.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="181.5" y="270.0"></text>
</g>
<g>
<title>char[] (21 samples, 0.62%)</title><rect x="178.5" y="243.0" width="7.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="181.5" y="254.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.21%)</title><rect x="185.8" y="243.0" width="2.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="188.8" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.24%)</title><rect x="188.2" y="243.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="191.2" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.24%)</title><rect x="188.2" y="227.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.24%)</title><rect x="188.2" y="211.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.2" y="222.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.24%)</title><rect x="188.2" y="195.0" width="2.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="191.2" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (11 samples, 0.32%)</title><rect x="191.0" y="291.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="194.0" y="302.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.32%)</title><rect x="191.0" y="275.0" width="3.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="194.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (16 samples, 0.47%)</title><rect x="194.8" y="291.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="197.8" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.47%)</title><rect x="194.8" y="275.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="197.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.47%)</title><rect x="194.8" y="259.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="197.8" y="270.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.18%)</title><rect x="194.8" y="243.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="197.8" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.29%)</title><rect x="196.8" y="243.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.8" y="254.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.29%)</title><rect x="196.8" y="227.0" width="3.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="199.8" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (60 samples, 1.76%)</title><rect x="200.3" y="291.0" width="20.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="203.3" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (60 samples, 1.76%)</title><rect x="200.3" y="275.0" width="20.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.3" y="286.0"></text>
</g>
<g>
<title>char[] (27 samples, 0.79%)</title><rect x="200.3" y="259.0" width="9.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="203.3" y="270.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.29%)</title><rect x="209.7" y="259.0" width="3.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="212.7" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23 samples, 0.68%)</title><rect x="213.1" y="259.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="216.1" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23 samples, 0.68%)</title><rect x="213.1" y="243.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="216.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (23 samples, 0.68%)</title><rect x="213.1" y="227.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="216.1" y="238.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.68%)</title><rect x="213.1" y="211.0" width="8.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="216.1" y="222.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=23140] (212 samples, 6.23%)</title><rect x="221.1" y="371.0" width="73.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="224.1" y="382.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (212 samples, 6.23%)</title><rect x="221.1" y="355.0" width="73.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="224.1" y="366.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (212 samples, 6.23%)</title><rect x="221.1" y="339.0" width="73.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="224.1" y="350.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (212 samples, 6.23%)</title><rect x="221.1" y="323.0" width="73.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="224.1" y="334.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (212 samples, 6.23%)</title><rect x="221.1" y="307.0" width="73.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="224.1" y="318.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (51 samples, 1.50%)</title><rect x="221.1" y="291.0" width="17.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="224.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (51 samples, 1.50%)</title><rect x="221.1" y="275.0" width="17.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="224.1" y="286.0"></text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (23 samples, 0.68%)</title><rect x="221.1" y="259.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="224.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (15 samples, 0.44%)</title><rect x="221.1" y="243.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="224.1" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (15 samples, 0.44%)</title><rect x="221.1" y="227.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="224.1" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.44%)</title><rect x="221.1" y="211.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="224.1" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.44%)</title><rect x="221.1" y="195.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="224.1" y="206.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.24%)</title><rect x="221.1" y="179.0" width="2.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="224.1" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.21%)</title><rect x="223.9" y="179.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="226.9" y="190.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.21%)</title><rect x="223.9" y="163.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="226.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut (8 samples, 0.24%)</title><rect x="226.3" y="243.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="229.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.24%)</title><rect x="226.3" y="227.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="229.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.24%)</title><rect x="226.3" y="211.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="229.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$67/849874983.get$Lambda (8 samples, 0.24%)</title><rect x="226.3" y="195.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="229.3" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ServiceImpl$$Lambda$67 (8 samples, 0.24%)</title><rect x="226.3" y="179.0" width="2.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="229.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (28 samples, 0.82%)</title><rect x="229.1" y="259.0" width="9.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="232.1" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (28 samples, 0.82%)</title><rect x="229.1" y="243.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="232.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.82%)</title><rect x="229.1" y="227.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="232.1" y="238.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.29%)</title><rect x="229.1" y="211.0" width="3.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="232.1" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.53%)</title><rect x="232.5" y="211.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="235.5" y="222.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.53%)</title><rect x="232.5" y="195.0" width="6.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="235.5" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (77 samples, 2.26%)</title><rect x="238.8" y="291.0" width="26.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="241.8" y="302.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (8 samples, 0.24%)</title><rect x="238.8" y="275.0" width="2.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="241.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (26 samples, 0.76%)</title><rect x="241.6" y="275.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="244.6" y="286.0"></text>
</g>
<g>
<title>java.lang.String[] (26 samples, 0.76%)</title><rect x="241.6" y="259.0" width="9.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="244.6" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (43 samples, 1.26%)</title><rect x="250.6" y="275.0" width="14.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="253.6" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (43 samples, 1.26%)</title><rect x="250.6" y="259.0" width="14.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="253.6" y="270.0"></text>
</g>
<g>
<title>char[] (21 samples, 0.62%)</title><rect x="250.6" y="243.0" width="7.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="253.6" y="254.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.15%)</title><rect x="257.9" y="243.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="260.9" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.50%)</title><rect x="259.6" y="243.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.6" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.50%)</title><rect x="259.6" y="227.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="262.6" y="238.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (17 samples, 0.50%)</title><rect x="259.6" y="211.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="262.6" y="222.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.50%)</title><rect x="259.6" y="195.0" width="5.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="262.6" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (7 samples, 0.21%)</title><rect x="265.5" y="291.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.5" y="302.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.21%)</title><rect x="265.5" y="275.0" width="2.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="268.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.35%)</title><rect x="267.9" y="291.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="270.9" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.35%)</title><rect x="267.9" y="275.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="270.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.35%)</title><rect x="267.9" y="259.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="270.9" y="270.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.15%)</title><rect x="267.9" y="243.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="270.9" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.21%)</title><rect x="269.6" y="243.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="272.6" y="254.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.21%)</title><rect x="269.6" y="227.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="272.6" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (65 samples, 1.91%)</title><rect x="272.1" y="291.0" width="22.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="275.1" y="302.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (65 samples, 1.91%)</title><rect x="272.1" y="275.0" width="22.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="275.1" y="286.0">o..</text>
</g>
<g>
<title>char[] (36 samples, 1.06%)</title><rect x="272.1" y="259.0" width="12.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="275.1" y="270.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.32%)</title><rect x="284.5" y="259.0" width="3.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="287.5" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 0.53%)</title><rect x="288.4" y="259.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="291.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 0.53%)</title><rect x="288.4" y="243.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="291.4" y="254.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (18 samples, 0.53%)</title><rect x="288.4" y="227.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="291.4" y="238.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.53%)</title><rect x="288.4" y="211.0" width="6.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="291.4" y="222.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=23141] (190 samples, 5.58%)</title><rect x="294.6" y="371.0" width="65.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="297.6" y="382.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (190 samples, 5.58%)</title><rect x="294.6" y="355.0" width="65.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="297.6" y="366.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.process (190 samples, 5.58%)</title><rect x="294.6" y="339.0" width="65.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="297.6" y="350.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (190 samples, 5.58%)</title><rect x="294.6" y="323.0" width="65.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="297.6" y="334.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (190 samples, 5.58%)</title><rect x="294.6" y="307.0" width="65.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="297.6" y="318.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (46 samples, 1.35%)</title><rect x="294.6" y="291.0" width="15.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="297.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (46 samples, 1.35%)</title><rect x="294.6" y="275.0" width="15.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="297.6" y="286.0"></text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (24 samples, 0.71%)</title><rect x="294.6" y="259.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="297.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (17 samples, 0.50%)</title><rect x="294.6" y="243.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="297.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (17 samples, 0.50%)</title><rect x="294.6" y="227.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="297.6" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (17 samples, 0.50%)</title><rect x="294.6" y="211.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="297.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17 samples, 0.50%)</title><rect x="294.6" y="195.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="297.6" y="206.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.24%)</title><rect x="294.6" y="179.0" width="2.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="297.6" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.26%)</title><rect x="297.4" y="179.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="300.4" y="190.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.26%)</title><rect x="297.4" y="163.0" width="3.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="300.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut (7 samples, 0.21%)</title><rect x="300.5" y="243.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="303.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.21%)</title><rect x="300.5" y="227.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="303.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.21%)</title><rect x="300.5" y="211.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="303.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$67/849874983.get$Lambda (7 samples, 0.21%)</title><rect x="300.5" y="195.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="303.5" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ServiceImpl$$Lambda$67 (7 samples, 0.21%)</title><rect x="300.5" y="179.0" width="2.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="303.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (22 samples, 0.65%)</title><rect x="302.9" y="259.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="305.9" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.65%)</title><rect x="302.9" y="243.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="305.9" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.65%)</title><rect x="302.9" y="227.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="305.9" y="238.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.29%)</title><rect x="302.9" y="211.0" width="3.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="305.9" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.35%)</title><rect x="306.4" y="211.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="309.4" y="222.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.35%)</title><rect x="306.4" y="195.0" width="4.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="309.4" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (60 samples, 1.76%)</title><rect x="310.5" y="291.0" width="20.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="313.5" y="302.0"></text>
</g>
<g>
<title>one.nio.http.Request (6 samples, 0.18%)</title><rect x="310.5" y="275.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="313.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (25 samples, 0.73%)</title><rect x="312.6" y="275.0" width="8.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.6" y="286.0"></text>
</g>
<g>
<title>java.lang.String[] (25 samples, 0.73%)</title><rect x="312.6" y="259.0" width="8.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="315.6" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (29 samples, 0.85%)</title><rect x="321.3" y="275.0" width="10.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="324.3" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (29 samples, 0.85%)</title><rect x="321.3" y="259.0" width="10.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.3" y="270.0"></text>
</g>
<g>
<title>char[] (17 samples, 0.50%)</title><rect x="321.3" y="243.0" width="5.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="324.3" y="254.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.18%)</title><rect x="327.2" y="243.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="330.2" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.18%)</title><rect x="329.3" y="243.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="332.3" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.18%)</title><rect x="329.3" y="227.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="332.3" y="238.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.18%)</title><rect x="329.3" y="211.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="332.3" y="222.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.18%)</title><rect x="329.3" y="195.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="332.3" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (12 samples, 0.35%)</title><rect x="331.3" y="291.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.3" y="302.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.35%)</title><rect x="331.3" y="275.0" width="4.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="334.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.35%)</title><rect x="335.5" y="291.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="338.5" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.35%)</title><rect x="335.5" y="275.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="338.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.35%)</title><rect x="335.5" y="259.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.5" y="270.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.12%)</title><rect x="335.5" y="243.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="338.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.24%)</title><rect x="336.9" y="243.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="339.9" y="254.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.24%)</title><rect x="336.9" y="227.0" width="2.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="339.9" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (60 samples, 1.76%)</title><rect x="339.7" y="291.0" width="20.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="342.7" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (60 samples, 1.76%)</title><rect x="339.7" y="275.0" width="20.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.7" y="286.0"></text>
</g>
<g>
<title>char[] (23 samples, 0.68%)</title><rect x="339.7" y="259.0" width="7.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="342.7" y="270.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.35%)</title><rect x="347.6" y="259.0" width="4.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="350.6" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.73%)</title><rect x="351.8" y="259.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="354.8" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.73%)</title><rect x="351.8" y="243.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="354.8" y="254.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (25 samples, 0.73%)</title><rect x="351.8" y="227.0" width="8.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="354.8" y="238.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.73%)</title><rect x="351.8" y="211.0" width="8.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="354.8" y="222.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=23142] (210 samples, 6.17%)</title><rect x="360.5" y="371.0" width="72.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="363.5" y="382.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (210 samples, 6.17%)</title><rect x="360.5" y="355.0" width="72.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="363.5" y="366.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (18 samples, 0.53%)</title><rect x="360.5" y="339.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="363.5" y="350.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (18 samples, 0.53%)</title><rect x="360.5" y="323.0" width="6.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="363.5" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (192 samples, 5.64%)</title><rect x="366.7" y="339.0" width="66.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="369.7" y="350.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (192 samples, 5.64%)</title><rect x="366.7" y="323.0" width="66.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="369.7" y="334.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (192 samples, 5.64%)</title><rect x="366.7" y="307.0" width="66.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="369.7" y="318.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (35 samples, 1.03%)</title><rect x="366.7" y="291.0" width="12.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (35 samples, 1.03%)</title><rect x="366.7" y="275.0" width="12.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="369.7" y="286.0"></text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (19 samples, 0.56%)</title><rect x="366.7" y="259.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="369.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (14 samples, 0.41%)</title><rect x="366.7" y="243.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="369.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (14 samples, 0.41%)</title><rect x="366.7" y="227.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.7" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.41%)</title><rect x="366.7" y="211.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="369.7" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.41%)</title><rect x="366.7" y="195.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="369.7" y="206.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.15%)</title><rect x="366.7" y="179.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="369.7" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.26%)</title><rect x="368.4" y="179.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="371.4" y="190.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.26%)</title><rect x="368.4" y="163.0" width="3.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="371.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut (5 samples, 0.15%)</title><rect x="371.6" y="243.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.12%)</title><rect x="371.6" y="227.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="374.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.12%)</title><rect x="371.6" y="211.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="374.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$67/849874983.get$Lambda (4 samples, 0.12%)</title><rect x="371.6" y="195.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="374.6" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ServiceImpl$$Lambda$67 (4 samples, 0.12%)</title><rect x="371.6" y="179.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="374.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.executeOrSendError (1 samples, 0.03%)</title><rect x="372.9" y="227.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="375.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="372.9" y="211.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="375.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.03%)</title><rect x="372.9" y="195.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="375.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="372.9" y="179.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="375.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="372.9" y="163.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="375.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="372.9" y="147.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="375.9" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.03%)</title><rect x="372.9" y="131.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="375.9" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (16 samples, 0.47%)</title><rect x="373.3" y="259.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="376.3" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.47%)</title><rect x="373.3" y="243.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="376.3" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.47%)</title><rect x="373.3" y="227.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="376.3" y="238.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.29%)</title><rect x="373.3" y="211.0" width="3.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="376.3" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.18%)</title><rect x="376.8" y="211.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="379.8" y="222.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.18%)</title><rect x="376.8" y="195.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="379.8" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (61 samples, 1.79%)</title><rect x="378.8" y="291.0" width="21.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="381.8" y="302.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (9 samples, 0.26%)</title><rect x="378.8" y="275.0" width="3.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="381.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (20 samples, 0.59%)</title><rect x="382.0" y="275.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="385.0" y="286.0"></text>
</g>
<g>
<title>java.lang.String[] (20 samples, 0.59%)</title><rect x="382.0" y="259.0" width="6.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="385.0" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 0.94%)</title><rect x="388.9" y="275.0" width="11.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="391.9" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 0.94%)</title><rect x="388.9" y="259.0" width="11.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="391.9" y="270.0"></text>
</g>
<g>
<title>char[] (17 samples, 0.50%)</title><rect x="388.9" y="243.0" width="5.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="391.9" y="254.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.18%)</title><rect x="394.8" y="243.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="397.8" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.26%)</title><rect x="396.9" y="243.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="399.9" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.26%)</title><rect x="396.9" y="227.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="399.9" y="238.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 0.26%)</title><rect x="396.9" y="211.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="399.9" y="222.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.26%)</title><rect x="396.9" y="195.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="399.9" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (7 samples, 0.21%)</title><rect x="400.0" y="291.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="403.0" y="302.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.21%)</title><rect x="400.0" y="275.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="403.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (16 samples, 0.47%)</title><rect x="402.4" y="291.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="405.4" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.47%)</title><rect x="402.4" y="275.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="405.4" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.47%)</title><rect x="402.4" y="259.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="405.4" y="270.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.18%)</title><rect x="402.4" y="243.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="405.4" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.29%)</title><rect x="404.5" y="243.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="407.5" y="254.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.29%)</title><rect x="404.5" y="227.0" width="3.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="407.5" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (73 samples, 2.14%)</title><rect x="408.0" y="291.0" width="25.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="411.0" y="302.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (73 samples, 2.14%)</title><rect x="408.0" y="275.0" width="25.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.0" y="286.0">o..</text>
</g>
<g>
<title>char[] (32 samples, 0.94%)</title><rect x="408.0" y="259.0" width="11.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="411.0" y="270.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.44%)</title><rect x="419.0" y="259.0" width="5.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="422.0" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26 samples, 0.76%)</title><rect x="424.2" y="259.0" width="9.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="427.2" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26 samples, 0.76%)</title><rect x="424.2" y="243.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="427.2" y="254.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (26 samples, 0.76%)</title><rect x="424.2" y="227.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="427.2" y="238.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.76%)</title><rect x="424.2" y="211.0" width="9.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="427.2" y="222.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=23143] (203 samples, 5.96%)</title><rect x="433.3" y="371.0" width="70.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="436.3" y="382.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (203 samples, 5.96%)</title><rect x="433.3" y="355.0" width="70.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="436.3" y="366.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (203 samples, 5.96%)</title><rect x="433.3" y="339.0" width="70.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="436.3" y="350.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (203 samples, 5.96%)</title><rect x="433.3" y="323.0" width="70.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="436.3" y="334.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (203 samples, 5.96%)</title><rect x="433.3" y="307.0" width="70.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="436.3" y="318.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (41 samples, 1.20%)</title><rect x="433.3" y="291.0" width="14.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (41 samples, 1.20%)</title><rect x="433.3" y="275.0" width="14.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="436.3" y="286.0"></text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (26 samples, 0.76%)</title><rect x="433.3" y="259.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="436.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (15 samples, 0.44%)</title><rect x="433.3" y="243.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="436.3" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (15 samples, 0.44%)</title><rect x="433.3" y="227.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="436.3" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.44%)</title><rect x="433.3" y="211.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="436.3" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.44%)</title><rect x="433.3" y="195.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="436.3" y="206.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.24%)</title><rect x="433.3" y="179.0" width="2.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="436.3" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.21%)</title><rect x="436.0" y="179.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.0" y="190.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.21%)</title><rect x="436.0" y="163.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="439.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut (11 samples, 0.32%)</title><rect x="438.5" y="243.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="441.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.32%)</title><rect x="438.5" y="227.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.32%)</title><rect x="438.5" y="211.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="441.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$67/849874983.get$Lambda (11 samples, 0.32%)</title><rect x="438.5" y="195.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="441.5" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ServiceImpl$$Lambda$67 (11 samples, 0.32%)</title><rect x="438.5" y="179.0" width="3.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="441.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (15 samples, 0.44%)</title><rect x="442.3" y="259.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="445.3" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.44%)</title><rect x="442.3" y="243.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.3" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.44%)</title><rect x="442.3" y="227.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="445.3" y="238.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.24%)</title><rect x="442.3" y="211.0" width="2.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="445.3" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.21%)</title><rect x="445.0" y="211.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="448.0" y="222.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.21%)</title><rect x="445.0" y="195.0" width="2.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="448.0" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (73 samples, 2.14%)</title><rect x="447.5" y="291.0" width="25.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="450.5" y="302.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (10 samples, 0.29%)</title><rect x="447.5" y="275.0" width="3.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="450.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (26 samples, 0.76%)</title><rect x="450.9" y="275.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="453.9" y="286.0"></text>
</g>
<g>
<title>java.lang.String[] (26 samples, 0.76%)</title><rect x="450.9" y="259.0" width="9.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="453.9" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (37 samples, 1.09%)</title><rect x="460.0" y="275.0" width="12.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.0" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (37 samples, 1.09%)</title><rect x="460.0" y="259.0" width="12.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="463.0" y="270.0"></text>
</g>
<g>
<title>char[] (25 samples, 0.73%)</title><rect x="460.0" y="243.0" width="8.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="463.0" y="254.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.21%)</title><rect x="468.6" y="243.0" width="2.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="471.6" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.15%)</title><rect x="471.0" y="243.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="474.0" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.15%)</title><rect x="471.0" y="227.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="474.0" y="238.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.15%)</title><rect x="471.0" y="211.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="474.0" y="222.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.15%)</title><rect x="471.0" y="195.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="474.0" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (12 samples, 0.35%)</title><rect x="472.8" y="291.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="475.8" y="302.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.35%)</title><rect x="472.8" y="275.0" width="4.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="475.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.32%)</title><rect x="476.9" y="291.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="479.9" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.32%)</title><rect x="476.9" y="275.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.32%)</title><rect x="476.9" y="259.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="479.9" y="270.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.18%)</title><rect x="476.9" y="243.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="479.9" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.15%)</title><rect x="479.0" y="243.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="482.0" y="254.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.15%)</title><rect x="479.0" y="227.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="482.0" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (66 samples, 1.94%)</title><rect x="480.8" y="291.0" width="22.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="483.8" y="302.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (66 samples, 1.94%)</title><rect x="480.8" y="275.0" width="22.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="483.8" y="286.0">o..</text>
</g>
<g>
<title>char[] (35 samples, 1.03%)</title><rect x="480.8" y="259.0" width="12.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="483.8" y="270.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.35%)</title><rect x="492.9" y="259.0" width="4.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="495.9" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (19 samples, 0.56%)</title><rect x="497.0" y="259.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="500.0" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (19 samples, 0.56%)</title><rect x="497.0" y="243.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="500.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (19 samples, 0.56%)</title><rect x="497.0" y="227.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="500.0" y="238.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.56%)</title><rect x="497.0" y="211.0" width="6.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="500.0" y="222.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=23144] (193 samples, 5.67%)</title><rect x="503.6" y="371.0" width="66.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="506.6" y="382.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (193 samples, 5.67%)</title><rect x="503.6" y="355.0" width="66.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="506.6" y="366.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.process (193 samples, 5.67%)</title><rect x="503.6" y="339.0" width="66.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="506.6" y="350.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (193 samples, 5.67%)</title><rect x="503.6" y="323.0" width="66.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="506.6" y="334.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (193 samples, 5.67%)</title><rect x="503.6" y="307.0" width="66.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="506.6" y="318.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (36 samples, 1.06%)</title><rect x="503.6" y="291.0" width="12.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="506.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (36 samples, 1.06%)</title><rect x="503.6" y="275.0" width="12.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="506.6" y="286.0"></text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (26 samples, 0.76%)</title><rect x="503.6" y="259.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (18 samples, 0.53%)</title><rect x="503.6" y="243.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="506.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (18 samples, 0.53%)</title><rect x="503.6" y="227.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="506.6" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.53%)</title><rect x="503.6" y="211.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="506.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.53%)</title><rect x="503.6" y="195.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="506.6" y="206.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.29%)</title><rect x="503.6" y="179.0" width="3.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="506.6" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.24%)</title><rect x="507.1" y="179.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="510.1" y="190.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.24%)</title><rect x="507.1" y="163.0" width="2.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="510.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut (8 samples, 0.24%)</title><rect x="509.9" y="243.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="512.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.24%)</title><rect x="509.9" y="227.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="512.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.24%)</title><rect x="509.9" y="211.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$67/849874983.get$Lambda (8 samples, 0.24%)</title><rect x="509.9" y="195.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="512.9" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ServiceImpl$$Lambda$67 (8 samples, 0.24%)</title><rect x="509.9" y="179.0" width="2.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="512.9" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (10 samples, 0.29%)</title><rect x="512.6" y="259.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="515.6" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.29%)</title><rect x="512.6" y="243.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="515.6" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.29%)</title><rect x="512.6" y="227.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.6" y="238.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.12%)</title><rect x="512.6" y="211.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="515.6" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.18%)</title><rect x="514.0" y="211.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="517.0" y="222.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.18%)</title><rect x="514.0" y="195.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="517.0" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (82 samples, 2.41%)</title><rect x="516.1" y="291.0" width="28.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.1" y="302.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (9 samples, 0.26%)</title><rect x="516.1" y="275.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="519.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (32 samples, 0.94%)</title><rect x="519.2" y="275.0" width="11.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.2" y="286.0"></text>
</g>
<g>
<title>java.lang.String[] (32 samples, 0.94%)</title><rect x="519.2" y="259.0" width="11.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="522.2" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (41 samples, 1.20%)</title><rect x="530.3" y="275.0" width="14.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="533.3" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (41 samples, 1.20%)</title><rect x="530.3" y="259.0" width="14.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="533.3" y="270.0"></text>
</g>
<g>
<title>char[] (27 samples, 0.79%)</title><rect x="530.3" y="243.0" width="9.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="533.3" y="254.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.24%)</title><rect x="539.7" y="243.0" width="2.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="542.7" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.18%)</title><rect x="542.5" y="243.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="545.5" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.18%)</title><rect x="542.5" y="227.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="545.5" y="238.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.18%)</title><rect x="542.5" y="211.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="545.5" y="222.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.18%)</title><rect x="542.5" y="195.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="545.5" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (5 samples, 0.15%)</title><rect x="544.5" y="291.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="547.5" y="302.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.15%)</title><rect x="544.5" y="275.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="547.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.32%)</title><rect x="546.3" y="291.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="549.3" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.32%)</title><rect x="546.3" y="275.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="549.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.32%)</title><rect x="546.3" y="259.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="549.3" y="270.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.21%)</title><rect x="546.3" y="243.0" width="2.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="549.3" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.12%)</title><rect x="548.7" y="243.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="551.7" y="254.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.12%)</title><rect x="548.7" y="227.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="551.7" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 1.73%)</title><rect x="550.1" y="291.0" width="20.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="553.1" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 1.73%)</title><rect x="550.1" y="275.0" width="20.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="553.1" y="286.0"></text>
</g>
<g>
<title>char[] (27 samples, 0.79%)</title><rect x="550.1" y="259.0" width="9.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="553.1" y="270.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.41%)</title><rect x="559.4" y="259.0" width="4.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="562.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 0.53%)</title><rect x="564.3" y="259.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="567.3" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 0.53%)</title><rect x="564.3" y="243.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.3" y="254.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (18 samples, 0.53%)</title><rect x="564.3" y="227.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="567.3" y="238.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.53%)</title><rect x="564.3" y="211.0" width="6.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="567.3" y="222.0"></text>
</g>
<g>
<title>[worker-0 tid=24967] (224 samples, 6.58%)</title><rect x="570.5" y="371.0" width="77.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="573.5" y="382.0">[worker-0..</text>
</g>
<g>
<title>java/lang/Thread.run (224 samples, 6.58%)</title><rect x="570.5" y="355.0" width="77.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.5" y="366.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (224 samples, 6.58%)</title><rect x="570.5" y="339.0" width="77.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="573.5" y="350.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (224 samples, 6.58%)</title><rect x="570.5" y="323.0" width="77.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.5" y="334.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.12%)</title><rect x="570.5" y="307.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="573.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (4 samples, 0.12%)</title><rect x="570.5" y="291.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.09%)</title><rect x="570.5" y="275.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="573.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.09%)</title><rect x="570.5" y="259.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.5" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.09%)</title><rect x="570.5" y="243.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="573.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.03%)</title><rect x="571.6" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.03%)</title><rect x="571.6" y="259.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="574.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.03%)</title><rect x="571.6" y="243.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="574.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="571.6" y="227.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.03%)</title><rect x="571.6" y="211.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="574.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$67/849874983.run (220 samples, 6.46%)</title><rect x="571.9" y="307.0" width="76.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.9" y="318.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityPut$3 (220 samples, 6.46%)</title><rect x="571.9" y="291.0" width="76.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.9" y="302.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.29%)</title><rect x="571.9" y="275.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="574.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (10 samples, 0.29%)</title><rect x="571.9" y="259.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="574.9" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (10 samples, 0.29%)</title><rect x="571.9" y="243.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="574.9" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.29%)</title><rect x="571.9" y="227.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.9" y="238.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.29%)</title><rect x="571.9" y="211.0" width="3.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="574.9" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.44%)</title><rect x="575.4" y="275.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="578.4" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.44%)</title><rect x="575.4" y="259.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="578.4" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.44%)</title><rect x="575.4" y="243.0" width="5.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="578.4" y="254.0"></text>
</g>
<g>
<title>one.nio.http.Response (8 samples, 0.24%)</title><rect x="580.6" y="275.0" width="2.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="583.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (15 samples, 0.44%)</title><rect x="583.4" y="275.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="586.4" y="286.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.26%)</title><rect x="583.4" y="259.0" width="3.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="586.4" y="270.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.15%)</title><rect x="586.5" y="259.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="589.5" y="270.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.03%)</title><rect x="588.2" y="259.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="591.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (37 samples, 1.09%)</title><rect x="588.6" y="275.0" width="12.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.6" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (24 samples, 0.71%)</title><rect x="588.6" y="259.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="591.6" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.71%)</title><rect x="588.6" y="243.0" width="8.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="591.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.03%)</title><rect x="596.9" y="259.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="599.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.03%)</title><rect x="596.9" y="243.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="599.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.03%)</title><rect x="596.9" y="227.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="599.9" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="596.9" y="211.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="599.9" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.03%)</title><rect x="596.9" y="195.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="599.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.03%)</title><rect x="596.9" y="179.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="599.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.03%)</title><rect x="596.9" y="163.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="599.9" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (1 samples, 0.03%)</title><rect x="596.9" y="147.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="599.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.upsert (12 samples, 0.35%)</title><rect x="597.2" y="259.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="600.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (5 samples, 0.15%)</title><rect x="597.2" y="243.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="600.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (5 samples, 0.15%)</title><rect x="597.2" y="227.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.2" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (1 samples, 0.03%)</title><rect x="597.2" y="211.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="600.2" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (4 samples, 0.12%)</title><rect x="597.6" y="211.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="600.6" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Value (3 samples, 0.09%)</title><rect x="599.0" y="243.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="602.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (4 samples, 0.12%)</title><rect x="600.0" y="243.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="603.0" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.12%)</title><rect x="600.0" y="227.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="603.0" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.12%)</title><rect x="600.0" y="211.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="603.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.proxyIfNotLocal (106 samples, 3.11%)</title><rect x="601.4" y="275.0" width="36.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="604.4" y="286.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (106 samples, 3.11%)</title><rect x="601.4" y="259.0" width="36.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="604.4" y="270.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (106 samples, 3.11%)</title><rect x="601.4" y="243.0" width="36.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="604.4" y="254.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.12%)</title><rect x="601.4" y="227.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="604.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.12%)</title><rect x="601.4" y="211.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.get$Lambda (4 samples, 0.12%)</title><rect x="601.4" y="195.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.4" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.topologies.RendezvousTopology$$Lambda$68 (4 samples, 0.12%)</title><rect x="601.4" y="179.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="604.4" y="190.0"></text>
</g>
<g>
<title>java/util/Collection.stream (21 samples, 0.62%)</title><rect x="602.8" y="227.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.8" y="238.0"></text>
</g>
<g>
<title>java/util/TreeSet.spliterator (10 samples, 0.29%)</title><rect x="602.8" y="211.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="605.8" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliteratorFor (10 samples, 0.29%)</title><rect x="602.8" y="195.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="605.8" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliterator (10 samples, 0.29%)</title><rect x="602.8" y="179.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.8" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySpliterator (10 samples, 0.29%)</title><rect x="602.8" y="163.0" width="3.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="605.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (11 samples, 0.32%)</title><rect x="606.2" y="211.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="609.2" y="222.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (11 samples, 0.32%)</title><rect x="606.2" y="195.0" width="3.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="609.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (49 samples, 1.44%)</title><rect x="610.1" y="227.0" width="16.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (49 samples, 1.44%)</title><rect x="610.1" y="211.0" width="16.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="613.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (49 samples, 1.44%)</title><rect x="610.1" y="195.0" width="16.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="613.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (46 samples, 1.35%)</title><rect x="610.1" y="179.0" width="15.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="613.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (35 samples, 1.03%)</title><rect x="610.1" y="163.0" width="12.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="613.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (35 samples, 1.03%)</title><rect x="610.1" y="147.0" width="12.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="613.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (26 samples, 0.76%)</title><rect x="610.1" y="131.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="613.1" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySpliterator.tryAdvance (26 samples, 0.76%)</title><rect x="610.1" y="115.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.1" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (26 samples, 0.76%)</title><rect x="610.1" y="99.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="613.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.apply (26 samples, 0.76%)</title><rect x="610.1" y="83.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="613.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.lambda$primaryFor$0 (26 samples, 0.76%)</title><rect x="610.1" y="67.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.1" y="78.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (9 samples, 0.26%)</title><rect x="610.1" y="51.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="613.1" y="62.0"></text>
</g>
<g>
<title>java.lang.Integer (9 samples, 0.26%)</title><rect x="610.1" y="35.0" width="3.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="613.1" y="46.0"></text>
</g>
<g>
<title>java/util/Map.entry (17 samples, 0.50%)</title><rect x="613.2" y="51.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="616.2" y="62.0"></text>
</g>
<g>
<title>java.util.KeyValueHolder (17 samples, 0.50%)</title><rect x="613.2" y="35.0" width="5.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="616.2" y="46.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (9 samples, 0.26%)</title><rect x="619.1" y="131.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="622.1" y="142.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$SizedRefSortingSink.begin (9 samples, 0.26%)</title><rect x="619.1" y="115.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="622.1" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.26%)</title><rect x="619.1" y="99.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="622.1" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (11 samples, 0.32%)</title><rect x="622.2" y="163.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="625.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (4 samples, 0.12%)</title><rect x="622.2" y="147.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.2" y="158.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (4 samples, 0.12%)</title><rect x="622.2" y="131.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="625.2" y="142.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$OfRef.opWrapSink (7 samples, 0.21%)</title><rect x="623.6" y="147.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="626.6" y="158.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$SizedRefSortingSink (7 samples, 0.21%)</title><rect x="623.6" y="131.0" width="2.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="626.6" y="142.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/447981768.get (3 samples, 0.09%)</title><rect x="626.0" y="179.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="629.0" y="190.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (3 samples, 0.09%)</title><rect x="626.0" y="163.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="629.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (20 samples, 0.59%)</title><rect x="627.0" y="227.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.0" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (20 samples, 0.59%)</title><rect x="627.0" y="211.0" width="7.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="630.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.sorted (12 samples, 0.35%)</title><rect x="634.0" y="227.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps.makeRef (12 samples, 0.35%)</title><rect x="634.0" y="211.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="637.0" y="222.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$OfRef (12 samples, 0.35%)</title><rect x="634.0" y="195.0" width="4.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="637.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.sendAnswerOrError (29 samples, 0.85%)</title><rect x="638.1" y="275.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="641.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (29 samples, 0.85%)</title><rect x="638.1" y="259.0" width="10.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="641.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (29 samples, 0.85%)</title><rect x="638.1" y="243.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="641.1" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (19 samples, 0.56%)</title><rect x="638.1" y="227.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="641.1" y="238.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (19 samples, 0.56%)</title><rect x="638.1" y="211.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="641.1" y="222.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.56%)</title><rect x="638.1" y="195.0" width="6.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="641.1" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.29%)</title><rect x="644.7" y="227.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="647.7" y="238.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (10 samples, 0.29%)</title><rect x="644.7" y="211.0" width="3.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="647.7" y="222.0"></text>
</g>
<g>
<title>[worker-1 tid=24968] (219 samples, 6.43%)</title><rect x="648.2" y="371.0" width="75.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="651.2" y="382.0">[worker-..</text>
</g>
<g>
<title>java/lang/Thread.run (219 samples, 6.43%)</title><rect x="648.2" y="355.0" width="75.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="651.2" y="366.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (219 samples, 6.43%)</title><rect x="648.2" y="339.0" width="75.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="651.2" y="350.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (219 samples, 6.43%)</title><rect x="648.2" y="323.0" width="75.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="651.2" y="334.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.18%)</title><rect x="648.2" y="307.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="651.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 0.18%)</title><rect x="648.2" y="291.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="651.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.18%)</title><rect x="648.2" y="275.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="651.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6 samples, 0.18%)</title><rect x="648.2" y="259.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.18%)</title><rect x="648.2" y="243.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="651.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$67/849874983.run (213 samples, 6.26%)</title><rect x="650.3" y="307.0" width="73.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="653.3" y="318.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityPut$3 (213 samples, 6.26%)</title><rect x="650.3" y="291.0" width="73.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="653.3" y="302.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (13 samples, 0.38%)</title><rect x="650.3" y="275.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (13 samples, 0.38%)</title><rect x="650.3" y="259.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="653.3" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (13 samples, 0.38%)</title><rect x="650.3" y="243.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="653.3" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.38%)</title><rect x="650.3" y="227.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.3" y="238.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.38%)</title><rect x="650.3" y="211.0" width="4.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="653.3" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.29%)</title><rect x="654.8" y="275.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="657.8" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.29%)</title><rect x="654.8" y="259.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="657.8" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.29%)</title><rect x="654.8" y="243.0" width="3.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="657.8" y="254.0"></text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.15%)</title><rect x="658.2" y="275.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="661.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (25 samples, 0.73%)</title><rect x="660.0" y="275.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="663.0" y="286.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.26%)</title><rect x="660.0" y="259.0" width="3.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="663.0" y="270.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.21%)</title><rect x="663.1" y="259.0" width="2.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="666.1" y="270.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.26%)</title><rect x="665.5" y="259.0" width="3.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="668.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (37 samples, 1.09%)</title><rect x="668.6" y="275.0" width="12.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.6" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (23 samples, 0.68%)</title><rect x="668.6" y="259.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="671.6" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.68%)</title><rect x="668.6" y="243.0" width="8.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="671.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.upsert (14 samples, 0.41%)</title><rect x="676.6" y="259.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (1 samples, 0.03%)</title><rect x="676.6" y="243.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="679.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.03%)</title><rect x="676.6" y="227.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="679.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (1 samples, 0.03%)</title><rect x="676.6" y="211.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="679.6" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Value (7 samples, 0.21%)</title><rect x="677.0" y="243.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="680.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (6 samples, 0.18%)</title><rect x="679.4" y="243.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.4" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.18%)</title><rect x="679.4" y="227.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="682.4" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.18%)</title><rect x="679.4" y="211.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="682.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.proxyIfNotLocal (101 samples, 2.97%)</title><rect x="681.5" y="275.0" width="35.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.5" y="286.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (101 samples, 2.97%)</title><rect x="681.5" y="259.0" width="35.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="684.5" y="270.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (101 samples, 2.97%)</title><rect x="681.5" y="243.0" width="35.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="684.5" y="254.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.18%)</title><rect x="681.5" y="227.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="684.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.18%)</title><rect x="681.5" y="211.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="684.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.get$Lambda (6 samples, 0.18%)</title><rect x="681.5" y="195.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="684.5" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.topologies.RendezvousTopology$$Lambda$68 (6 samples, 0.18%)</title><rect x="681.5" y="179.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="684.5" y="190.0"></text>
</g>
<g>
<title>java/util/Collection.stream (24 samples, 0.71%)</title><rect x="683.5" y="227.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="686.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeSet.spliterator (11 samples, 0.32%)</title><rect x="683.5" y="211.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.5" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliteratorFor (11 samples, 0.32%)</title><rect x="683.5" y="195.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.5" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliterator (11 samples, 0.32%)</title><rect x="683.5" y="179.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.5" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySpliterator (11 samples, 0.32%)</title><rect x="683.5" y="163.0" width="3.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="686.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (13 samples, 0.38%)</title><rect x="687.4" y="211.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="690.4" y="222.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (13 samples, 0.38%)</title><rect x="687.4" y="195.0" width="4.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="690.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (41 samples, 1.20%)</title><rect x="691.9" y="227.0" width="14.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="694.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (41 samples, 1.20%)</title><rect x="691.9" y="211.0" width="14.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (41 samples, 1.20%)</title><rect x="691.9" y="195.0" width="14.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="694.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (34 samples, 1.00%)</title><rect x="691.9" y="179.0" width="11.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="694.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (25 samples, 0.73%)</title><rect x="691.9" y="163.0" width="8.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="694.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (25 samples, 0.73%)</title><rect x="691.9" y="147.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (20 samples, 0.59%)</title><rect x="691.9" y="131.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="694.9" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySpliterator.tryAdvance (20 samples, 0.59%)</title><rect x="691.9" y="115.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="694.9" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (20 samples, 0.59%)</title><rect x="691.9" y="99.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="694.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.apply (20 samples, 0.59%)</title><rect x="691.9" y="83.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.lambda$primaryFor$0 (20 samples, 0.59%)</title><rect x="691.9" y="67.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.9" y="78.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (11 samples, 0.32%)</title><rect x="691.9" y="51.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="694.9" y="62.0"></text>
</g>
<g>
<title>java.lang.Integer (11 samples, 0.32%)</title><rect x="691.9" y="35.0" width="3.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="694.9" y="46.0"></text>
</g>
<g>
<title>java/util/Map.entry (9 samples, 0.26%)</title><rect x="695.7" y="51.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="698.7" y="62.0"></text>
</g>
<g>
<title>java.util.KeyValueHolder (9 samples, 0.26%)</title><rect x="695.7" y="35.0" width="3.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="698.7" y="46.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (5 samples, 0.15%)</title><rect x="698.8" y="131.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="701.8" y="142.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$SizedRefSortingSink.begin (5 samples, 0.15%)</title><rect x="698.8" y="115.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="701.8" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.15%)</title><rect x="698.8" y="99.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="701.8" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (9 samples, 0.26%)</title><rect x="700.5" y="163.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="703.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (4 samples, 0.12%)</title><rect x="700.5" y="147.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="703.5" y="158.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (4 samples, 0.12%)</title><rect x="700.5" y="131.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="703.5" y="142.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$OfRef.opWrapSink (5 samples, 0.15%)</title><rect x="701.9" y="147.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="704.9" y="158.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$SizedRefSortingSink (5 samples, 0.15%)</title><rect x="701.9" y="131.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="704.9" y="142.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/447981768.get (7 samples, 0.21%)</title><rect x="703.6" y="179.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="706.6" y="190.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (7 samples, 0.21%)</title><rect x="703.6" y="163.0" width="2.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="706.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (15 samples, 0.44%)</title><rect x="706.1" y="227.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.1" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (15 samples, 0.44%)</title><rect x="706.1" y="211.0" width="5.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="709.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.sorted (15 samples, 0.44%)</title><rect x="711.3" y="227.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="714.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps.makeRef (15 samples, 0.44%)</title><rect x="711.3" y="211.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.3" y="222.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$OfRef (15 samples, 0.44%)</title><rect x="711.3" y="195.0" width="5.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="714.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.sendAnswerOrError (22 samples, 0.65%)</title><rect x="716.5" y="275.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="719.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (22 samples, 0.65%)</title><rect x="716.5" y="259.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="719.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (22 samples, 0.65%)</title><rect x="716.5" y="243.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="719.5" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.38%)</title><rect x="716.5" y="227.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="719.5" y="238.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (13 samples, 0.38%)</title><rect x="716.5" y="211.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="719.5" y="222.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.38%)</title><rect x="716.5" y="195.0" width="4.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="719.5" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 0.26%)</title><rect x="721.0" y="227.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="724.0" y="238.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (9 samples, 0.26%)</title><rect x="721.0" y="211.0" width="3.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="724.0" y="222.0"></text>
</g>
<g>
<title>[worker-2 tid=24969] (233 samples, 6.84%)</title><rect x="724.1" y="371.0" width="80.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="727.1" y="382.0">[worker-2..</text>
</g>
<g>
<title>java/lang/Thread.run (233 samples, 6.84%)</title><rect x="724.1" y="355.0" width="80.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="727.1" y="366.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (233 samples, 6.84%)</title><rect x="724.1" y="339.0" width="80.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="727.1" y="350.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (233 samples, 6.84%)</title><rect x="724.1" y="323.0" width="80.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="727.1" y="334.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.18%)</title><rect x="724.1" y="307.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="727.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 0.18%)</title><rect x="724.1" y="291.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 0.15%)</title><rect x="724.1" y="275.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="727.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (5 samples, 0.15%)</title><rect x="724.1" y="259.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="727.1" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (5 samples, 0.15%)</title><rect x="724.1" y="243.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="727.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.03%)</title><rect x="725.8" y="275.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="728.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.03%)</title><rect x="725.8" y="259.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="728.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.03%)</title><rect x="725.8" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="728.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="725.8" y="227.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="728.8" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.03%)</title><rect x="725.8" y="211.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="728.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$67/849874983.run (227 samples, 6.67%)</title><rect x="726.2" y="307.0" width="78.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.2" y="318.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityPut$3 (227 samples, 6.67%)</title><rect x="726.2" y="291.0" width="78.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="729.2" y="302.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/String.getBytes (11 samples, 0.32%)</title><rect x="726.2" y="275.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="729.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (11 samples, 0.32%)</title><rect x="726.2" y="259.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (11 samples, 0.32%)</title><rect x="726.2" y="243.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="729.2" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.32%)</title><rect x="726.2" y="227.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="729.2" y="238.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.32%)</title><rect x="726.2" y="211.0" width="3.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="729.2" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (19 samples, 0.56%)</title><rect x="730.0" y="275.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="733.0" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (19 samples, 0.56%)</title><rect x="730.0" y="259.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="733.0" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 0.56%)</title><rect x="730.0" y="243.0" width="6.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="733.0" y="254.0"></text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.09%)</title><rect x="736.6" y="275.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="739.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (22 samples, 0.65%)</title><rect x="737.6" y="275.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.6" y="286.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.32%)</title><rect x="737.6" y="259.0" width="3.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="740.6" y="270.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.21%)</title><rect x="741.4" y="259.0" width="2.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="744.4" y="270.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.12%)</title><rect x="743.9" y="259.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="746.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (41 samples, 1.20%)</title><rect x="745.2" y="275.0" width="14.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="748.2" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (23 samples, 0.68%)</title><rect x="745.2" y="259.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="748.2" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.68%)</title><rect x="745.2" y="243.0" width="8.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="748.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.03%)</title><rect x="753.2" y="259.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="756.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.03%)</title><rect x="753.2" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.03%)</title><rect x="753.2" y="227.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.2" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="753.2" y="211.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.2" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.03%)</title><rect x="753.2" y="195.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.03%)</title><rect x="753.2" y="179.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.03%)</title><rect x="753.2" y="163.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="756.2" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (1 samples, 0.03%)</title><rect x="753.2" y="147.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="756.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.upsert (17 samples, 0.50%)</title><rect x="753.6" y="259.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="756.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (6 samples, 0.18%)</title><rect x="753.6" y="243.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="756.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (6 samples, 0.18%)</title><rect x="753.6" y="227.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="756.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (2 samples, 0.06%)</title><rect x="753.6" y="211.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="756.6" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (4 samples, 0.12%)</title><rect x="754.3" y="211.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="757.3" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Value (3 samples, 0.09%)</title><rect x="755.6" y="243.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="758.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (8 samples, 0.24%)</title><rect x="756.7" y="243.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="759.7" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.24%)</title><rect x="756.7" y="227.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="759.7" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.24%)</title><rect x="756.7" y="211.0" width="2.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="759.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.proxyIfNotLocal (100 samples, 2.94%)</title><rect x="759.5" y="275.0" width="34.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="762.5" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (100 samples, 2.94%)</title><rect x="759.5" y="259.0" width="34.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="762.5" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (100 samples, 2.94%)</title><rect x="759.5" y="243.0" width="34.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="762.5" y="254.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.09%)</title><rect x="759.5" y="227.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="762.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.09%)</title><rect x="759.5" y="211.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.get$Lambda (3 samples, 0.09%)</title><rect x="759.5" y="195.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.5" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.topologies.RendezvousTopology$$Lambda$68 (3 samples, 0.09%)</title><rect x="759.5" y="179.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="762.5" y="190.0"></text>
</g>
<g>
<title>java/util/Collection.stream (12 samples, 0.35%)</title><rect x="760.5" y="227.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeSet.spliterator (3 samples, 0.09%)</title><rect x="760.5" y="211.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="763.5" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliteratorFor (3 samples, 0.09%)</title><rect x="760.5" y="195.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="763.5" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliterator (3 samples, 0.09%)</title><rect x="760.5" y="179.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="763.5" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySpliterator (3 samples, 0.09%)</title><rect x="760.5" y="163.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="763.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (9 samples, 0.26%)</title><rect x="761.5" y="211.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="764.5" y="222.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (9 samples, 0.26%)</title><rect x="761.5" y="195.0" width="3.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="764.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (64 samples, 1.88%)</title><rect x="764.7" y="227.0" width="22.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="767.7" y="238.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (64 samples, 1.88%)</title><rect x="764.7" y="211.0" width="22.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="767.7" y="222.0">j..</text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (64 samples, 1.88%)</title><rect x="764.7" y="195.0" width="22.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="767.7" y="206.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (54 samples, 1.59%)</title><rect x="764.7" y="179.0" width="18.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="767.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (45 samples, 1.32%)</title><rect x="764.7" y="163.0" width="15.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="767.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (45 samples, 1.32%)</title><rect x="764.7" y="147.0" width="15.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="767.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (35 samples, 1.03%)</title><rect x="764.7" y="131.0" width="12.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="767.7" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySpliterator.tryAdvance (35 samples, 1.03%)</title><rect x="764.7" y="115.0" width="12.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="767.7" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (35 samples, 1.03%)</title><rect x="764.7" y="99.0" width="12.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="767.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.apply (35 samples, 1.03%)</title><rect x="764.7" y="83.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="767.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.lambda$primaryFor$0 (35 samples, 1.03%)</title><rect x="764.7" y="67.0" width="12.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="767.7" y="78.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (14 samples, 0.41%)</title><rect x="764.7" y="51.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="767.7" y="62.0"></text>
</g>
<g>
<title>java.lang.Integer (14 samples, 0.41%)</title><rect x="764.7" y="35.0" width="4.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="767.7" y="46.0"></text>
</g>
<g>
<title>java/util/Map.entry (21 samples, 0.62%)</title><rect x="769.5" y="51.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="772.5" y="62.0"></text>
</g>
<g>
<title>java.util.KeyValueHolder (21 samples, 0.62%)</title><rect x="769.5" y="35.0" width="7.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="772.5" y="46.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (10 samples, 0.29%)</title><rect x="776.8" y="131.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="779.8" y="142.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$SizedRefSortingSink.begin (10 samples, 0.29%)</title><rect x="776.8" y="115.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="779.8" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.29%)</title><rect x="776.8" y="99.0" width="3.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="779.8" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (9 samples, 0.26%)</title><rect x="780.3" y="163.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="783.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (6 samples, 0.18%)</title><rect x="780.3" y="147.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="783.3" y="158.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (6 samples, 0.18%)</title><rect x="780.3" y="131.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="783.3" y="142.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$OfRef.opWrapSink (3 samples, 0.09%)</title><rect x="782.3" y="147.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="785.3" y="158.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$SizedRefSortingSink (3 samples, 0.09%)</title><rect x="782.3" y="131.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="785.3" y="142.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/447981768.get (10 samples, 0.29%)</title><rect x="783.4" y="179.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="786.4" y="190.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (10 samples, 0.29%)</title><rect x="783.4" y="163.0" width="3.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="786.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (13 samples, 0.38%)</title><rect x="786.8" y="227.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="789.8" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (13 samples, 0.38%)</title><rect x="786.8" y="211.0" width="4.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="789.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.sorted (8 samples, 0.24%)</title><rect x="791.4" y="227.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps.makeRef (8 samples, 0.24%)</title><rect x="791.4" y="211.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="794.4" y="222.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$OfRef (8 samples, 0.24%)</title><rect x="791.4" y="195.0" width="2.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="794.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.sendAnswerOrError (31 samples, 0.91%)</title><rect x="794.1" y="275.0" width="10.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="797.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (31 samples, 0.91%)</title><rect x="794.1" y="259.0" width="10.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="797.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (31 samples, 0.91%)</title><rect x="794.1" y="243.0" width="10.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="797.1" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (22 samples, 0.65%)</title><rect x="794.1" y="227.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="797.1" y="238.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (22 samples, 0.65%)</title><rect x="794.1" y="211.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="797.1" y="222.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.65%)</title><rect x="794.1" y="195.0" width="7.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="797.1" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 0.26%)</title><rect x="801.8" y="227.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="804.8" y="238.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (9 samples, 0.26%)</title><rect x="801.8" y="211.0" width="3.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="804.8" y="222.0"></text>
</g>
<g>
<title>[worker-3 tid=24970] (229 samples, 6.73%)</title><rect x="804.9" y="371.0" width="79.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="807.9" y="382.0">[worker-3..</text>
</g>
<g>
<title>java/lang/Thread.run (229 samples, 6.73%)</title><rect x="804.9" y="355.0" width="79.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="807.9" y="366.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (229 samples, 6.73%)</title><rect x="804.9" y="339.0" width="79.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="807.9" y="350.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (229 samples, 6.73%)</title><rect x="804.9" y="323.0" width="79.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.9" y="334.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (16 samples, 0.47%)</title><rect x="804.9" y="307.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="807.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (16 samples, 0.47%)</title><rect x="804.9" y="291.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (15 samples, 0.44%)</title><rect x="804.9" y="275.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="807.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (15 samples, 0.44%)</title><rect x="804.9" y="259.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="807.9" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (15 samples, 0.44%)</title><rect x="804.9" y="243.0" width="5.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="807.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.03%)</title><rect x="810.1" y="275.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="813.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.03%)</title><rect x="810.1" y="259.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="813.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.03%)</title><rect x="810.1" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="810.1" y="227.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.1" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.03%)</title><rect x="810.1" y="211.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="813.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$67/849874983.run (213 samples, 6.26%)</title><rect x="810.4" y="307.0" width="73.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="813.4" y="318.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityPut$3 (213 samples, 6.26%)</title><rect x="810.4" y="291.0" width="73.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="813.4" y="302.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (15 samples, 0.44%)</title><rect x="810.4" y="275.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="813.4" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (15 samples, 0.44%)</title><rect x="810.4" y="259.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="813.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (15 samples, 0.44%)</title><rect x="810.4" y="243.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="813.4" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (15 samples, 0.44%)</title><rect x="810.4" y="227.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="813.4" y="238.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.44%)</title><rect x="810.4" y="211.0" width="5.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="813.4" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.32%)</title><rect x="815.6" y="275.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.32%)</title><rect x="815.6" y="259.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="818.6" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.32%)</title><rect x="815.6" y="243.0" width="3.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="818.6" y="254.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.06%)</title><rect x="819.4" y="275.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="822.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (18 samples, 0.53%)</title><rect x="820.1" y="275.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="823.1" y="286.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.15%)</title><rect x="820.1" y="259.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="823.1" y="270.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.18%)</title><rect x="821.9" y="259.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="824.9" y="270.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.21%)</title><rect x="823.9" y="259.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="826.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (36 samples, 1.06%)</title><rect x="826.4" y="275.0" width="12.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="829.4" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (24 samples, 0.71%)</title><rect x="826.4" y="259.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="829.4" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.71%)</title><rect x="826.4" y="243.0" width="8.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="829.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.upsert (12 samples, 0.35%)</title><rect x="834.7" y="259.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="837.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (2 samples, 0.06%)</title><rect x="834.7" y="243.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="837.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.06%)</title><rect x="834.7" y="227.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="837.7" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (2 samples, 0.06%)</title><rect x="834.7" y="211.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="837.7" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Value (6 samples, 0.18%)</title><rect x="835.4" y="243.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="838.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (4 samples, 0.12%)</title><rect x="837.5" y="243.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.5" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.12%)</title><rect x="837.5" y="227.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="840.5" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.12%)</title><rect x="837.5" y="211.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="840.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.proxyIfNotLocal (103 samples, 3.03%)</title><rect x="838.8" y="275.0" width="35.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="841.8" y="286.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (103 samples, 3.03%)</title><rect x="838.8" y="259.0" width="35.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="841.8" y="270.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (103 samples, 3.03%)</title><rect x="838.8" y="243.0" width="35.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="841.8" y="254.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.15%)</title><rect x="838.8" y="227.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="841.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.15%)</title><rect x="838.8" y="211.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="841.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.get$Lambda (5 samples, 0.15%)</title><rect x="838.8" y="195.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="841.8" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.topologies.RendezvousTopology$$Lambda$68 (5 samples, 0.15%)</title><rect x="838.8" y="179.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="841.8" y="190.0"></text>
</g>
<g>
<title>java/util/Collection.stream (25 samples, 0.73%)</title><rect x="840.6" y="227.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="843.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeSet.spliterator (11 samples, 0.32%)</title><rect x="840.6" y="211.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="843.6" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliteratorFor (11 samples, 0.32%)</title><rect x="840.6" y="195.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="843.6" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliterator (11 samples, 0.32%)</title><rect x="840.6" y="179.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="843.6" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySpliterator (11 samples, 0.32%)</title><rect x="840.6" y="163.0" width="3.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="843.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (14 samples, 0.41%)</title><rect x="844.4" y="211.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="847.4" y="222.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (14 samples, 0.41%)</title><rect x="844.4" y="195.0" width="4.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="847.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (51 samples, 1.50%)</title><rect x="849.2" y="227.0" width="17.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="852.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (51 samples, 1.50%)</title><rect x="849.2" y="211.0" width="17.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="852.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (51 samples, 1.50%)</title><rect x="849.2" y="195.0" width="17.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="852.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (45 samples, 1.32%)</title><rect x="849.2" y="179.0" width="15.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="852.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (29 samples, 0.85%)</title><rect x="849.2" y="163.0" width="10.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="852.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (29 samples, 0.85%)</title><rect x="849.2" y="147.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="852.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (26 samples, 0.76%)</title><rect x="849.2" y="131.0" width="9.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="852.2" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySpliterator.tryAdvance (26 samples, 0.76%)</title><rect x="849.2" y="115.0" width="9.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="852.2" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (26 samples, 0.76%)</title><rect x="849.2" y="99.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="852.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.apply (26 samples, 0.76%)</title><rect x="849.2" y="83.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="852.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.lambda$primaryFor$0 (26 samples, 0.76%)</title><rect x="849.2" y="67.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="852.2" y="78.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (9 samples, 0.26%)</title><rect x="849.2" y="51.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="852.2" y="62.0"></text>
</g>
<g>
<title>java.lang.Integer (9 samples, 0.26%)</title><rect x="849.2" y="35.0" width="3.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="852.2" y="46.0"></text>
</g>
<g>
<title>java/util/Map.entry (17 samples, 0.50%)</title><rect x="852.4" y="51.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.4" y="62.0"></text>
</g>
<g>
<title>java.util.KeyValueHolder (17 samples, 0.50%)</title><rect x="852.4" y="35.0" width="5.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="855.4" y="46.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (3 samples, 0.09%)</title><rect x="858.3" y="131.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="861.3" y="142.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$SizedRefSortingSink.begin (3 samples, 0.09%)</title><rect x="858.3" y="115.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="861.3" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.09%)</title><rect x="858.3" y="99.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="861.3" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (16 samples, 0.47%)</title><rect x="859.3" y="163.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="862.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (9 samples, 0.26%)</title><rect x="859.3" y="147.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="862.3" y="158.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (9 samples, 0.26%)</title><rect x="859.3" y="131.0" width="3.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="862.3" y="142.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$OfRef.opWrapSink (7 samples, 0.21%)</title><rect x="862.4" y="147.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="865.4" y="158.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$SizedRefSortingSink (7 samples, 0.21%)</title><rect x="862.4" y="131.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="865.4" y="142.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/447981768.get (6 samples, 0.18%)</title><rect x="864.8" y="179.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="867.8" y="190.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (6 samples, 0.18%)</title><rect x="864.8" y="163.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="867.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (7 samples, 0.21%)</title><rect x="866.9" y="227.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="869.9" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (7 samples, 0.21%)</title><rect x="866.9" y="211.0" width="2.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="869.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.sorted (15 samples, 0.44%)</title><rect x="869.3" y="227.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="872.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps.makeRef (15 samples, 0.44%)</title><rect x="869.3" y="211.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="872.3" y="222.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$OfRef (15 samples, 0.44%)</title><rect x="869.3" y="195.0" width="5.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="872.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.sendAnswerOrError (28 samples, 0.82%)</title><rect x="874.5" y="275.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="877.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (28 samples, 0.82%)</title><rect x="874.5" y="259.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="877.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (28 samples, 0.82%)</title><rect x="874.5" y="243.0" width="9.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="877.5" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (19 samples, 0.56%)</title><rect x="874.5" y="227.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="877.5" y="238.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (19 samples, 0.56%)</title><rect x="874.5" y="211.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="877.5" y="222.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.56%)</title><rect x="874.5" y="195.0" width="6.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="877.5" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 0.26%)</title><rect x="881.1" y="227.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="884.1" y="238.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (9 samples, 0.26%)</title><rect x="881.1" y="211.0" width="3.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="884.1" y="222.0"></text>
</g>
<g>
<title>[worker-4 tid=24971] (224 samples, 6.58%)</title><rect x="884.3" y="371.0" width="77.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="887.3" y="382.0">[worker-4..</text>
</g>
<g>
<title>java/lang/Thread.run (224 samples, 6.58%)</title><rect x="884.3" y="355.0" width="77.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="887.3" y="366.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (224 samples, 6.58%)</title><rect x="884.3" y="339.0" width="77.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="887.3" y="350.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (224 samples, 6.58%)</title><rect x="884.3" y="323.0" width="77.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="887.3" y="334.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.18%)</title><rect x="884.3" y="307.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 0.18%)</title><rect x="884.3" y="291.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="887.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 0.15%)</title><rect x="884.3" y="275.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="887.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (5 samples, 0.15%)</title><rect x="884.3" y="259.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="887.3" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (5 samples, 0.15%)</title><rect x="884.3" y="243.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="887.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.03%)</title><rect x="886.0" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="889.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.03%)</title><rect x="886.0" y="259.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="889.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.03%)</title><rect x="886.0" y="243.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="889.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="886.0" y="227.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.0" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.03%)</title><rect x="886.0" y="211.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="889.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$67/849874983.run (218 samples, 6.40%)</title><rect x="886.3" y="307.0" width="75.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="889.3" y="318.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityPut$3 (218 samples, 6.40%)</title><rect x="886.3" y="291.0" width="75.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="889.3" y="302.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (15 samples, 0.44%)</title><rect x="886.3" y="275.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="889.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (15 samples, 0.44%)</title><rect x="886.3" y="259.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="889.3" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (15 samples, 0.44%)</title><rect x="886.3" y="243.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="889.3" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (15 samples, 0.44%)</title><rect x="886.3" y="227.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="889.3" y="238.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.44%)</title><rect x="886.3" y="211.0" width="5.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="889.3" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.29%)</title><rect x="891.5" y="275.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.5" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.29%)</title><rect x="891.5" y="259.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="894.5" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.29%)</title><rect x="891.5" y="243.0" width="3.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="894.5" y="254.0"></text>
</g>
<g>
<title>one.nio.http.Response (7 samples, 0.21%)</title><rect x="895.0" y="275.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="898.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (21 samples, 0.62%)</title><rect x="897.4" y="275.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="900.4" y="286.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.29%)</title><rect x="897.4" y="259.0" width="3.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="900.4" y="270.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.24%)</title><rect x="900.9" y="259.0" width="2.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="903.9" y="270.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.09%)</title><rect x="903.7" y="259.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="906.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (32 samples, 0.94%)</title><rect x="904.7" y="275.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="907.7" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (18 samples, 0.53%)</title><rect x="904.7" y="259.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="907.7" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (18 samples, 0.53%)</title><rect x="904.7" y="243.0" width="6.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="907.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.03%)</title><rect x="910.9" y="259.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="913.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.03%)</title><rect x="910.9" y="243.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="913.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.03%)</title><rect x="910.9" y="227.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="913.9" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="910.9" y="211.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="913.9" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.03%)</title><rect x="910.9" y="195.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="913.9" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.03%)</title><rect x="910.9" y="179.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="913.9" y="190.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (1 samples, 0.03%)</title><rect x="910.9" y="163.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="913.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.upsert (13 samples, 0.38%)</title><rect x="911.3" y="259.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (6 samples, 0.18%)</title><rect x="911.3" y="243.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="914.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (6 samples, 0.18%)</title><rect x="911.3" y="227.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="914.3" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (4 samples, 0.12%)</title><rect x="911.3" y="211.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="914.3" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (2 samples, 0.06%)</title><rect x="912.7" y="211.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="915.7" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Value (6 samples, 0.18%)</title><rect x="913.4" y="243.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="916.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (1 samples, 0.03%)</title><rect x="915.5" y="243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.5" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="915.5" y="227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="918.5" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.03%)</title><rect x="915.5" y="211.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="918.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.proxyIfNotLocal (109 samples, 3.20%)</title><rect x="915.8" y="275.0" width="37.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="918.8" y="286.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (109 samples, 3.20%)</title><rect x="915.8" y="259.0" width="37.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="918.8" y="270.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (109 samples, 3.20%)</title><rect x="915.8" y="243.0" width="37.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="918.8" y="254.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.29%)</title><rect x="915.8" y="227.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="918.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.29%)</title><rect x="915.8" y="211.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.get$Lambda (10 samples, 0.29%)</title><rect x="915.8" y="195.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="918.8" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.topologies.RendezvousTopology$$Lambda$68 (10 samples, 0.29%)</title><rect x="915.8" y="179.0" width="3.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="918.8" y="190.0"></text>
</g>
<g>
<title>java/util/Collection.stream (19 samples, 0.56%)</title><rect x="919.3" y="227.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="922.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeSet.spliterator (7 samples, 0.21%)</title><rect x="919.3" y="211.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="922.3" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliteratorFor (7 samples, 0.21%)</title><rect x="919.3" y="195.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="922.3" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliterator (7 samples, 0.21%)</title><rect x="919.3" y="179.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="922.3" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySpliterator (7 samples, 0.21%)</title><rect x="919.3" y="163.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="922.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (12 samples, 0.35%)</title><rect x="921.7" y="211.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="924.7" y="222.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (12 samples, 0.35%)</title><rect x="921.7" y="195.0" width="4.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="924.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (46 samples, 1.35%)</title><rect x="925.9" y="227.0" width="15.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="928.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (46 samples, 1.35%)</title><rect x="925.9" y="211.0" width="15.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="928.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (46 samples, 1.35%)</title><rect x="925.9" y="195.0" width="15.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="928.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (43 samples, 1.26%)</title><rect x="925.9" y="179.0" width="14.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="928.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (35 samples, 1.03%)</title><rect x="925.9" y="163.0" width="12.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="928.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (35 samples, 1.03%)</title><rect x="925.9" y="147.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="928.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (26 samples, 0.76%)</title><rect x="925.9" y="131.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="928.9" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySpliterator.tryAdvance (26 samples, 0.76%)</title><rect x="925.9" y="115.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="928.9" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (26 samples, 0.76%)</title><rect x="925.9" y="99.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="928.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.apply (26 samples, 0.76%)</title><rect x="925.9" y="83.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="928.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.lambda$primaryFor$0 (26 samples, 0.76%)</title><rect x="925.9" y="67.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="928.9" y="78.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (10 samples, 0.29%)</title><rect x="925.9" y="51.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="928.9" y="62.0"></text>
</g>
<g>
<title>java.lang.Integer (10 samples, 0.29%)</title><rect x="925.9" y="35.0" width="3.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="928.9" y="46.0"></text>
</g>
<g>
<title>java/util/Map.entry (16 samples, 0.47%)</title><rect x="929.3" y="51.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="932.3" y="62.0"></text>
</g>
<g>
<title>java.util.KeyValueHolder (16 samples, 0.47%)</title><rect x="929.3" y="35.0" width="5.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="932.3" y="46.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (9 samples, 0.26%)</title><rect x="934.9" y="131.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="937.9" y="142.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$SizedRefSortingSink.begin (9 samples, 0.26%)</title><rect x="934.9" y="115.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="937.9" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.26%)</title><rect x="934.9" y="99.0" width="3.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="937.9" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (8 samples, 0.24%)</title><rect x="938.0" y="163.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="941.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (4 samples, 0.12%)</title><rect x="938.0" y="147.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="941.0" y="158.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (4 samples, 0.12%)</title><rect x="938.0" y="131.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="941.0" y="142.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$OfRef.opWrapSink (4 samples, 0.12%)</title><rect x="939.4" y="147.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="942.4" y="158.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$SizedRefSortingSink (4 samples, 0.12%)</title><rect x="939.4" y="131.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="942.4" y="142.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/447981768.get (3 samples, 0.09%)</title><rect x="940.8" y="179.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="943.8" y="190.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (3 samples, 0.09%)</title><rect x="940.8" y="163.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="943.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (20 samples, 0.59%)</title><rect x="941.8" y="227.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="944.8" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (20 samples, 0.59%)</title><rect x="941.8" y="211.0" width="6.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="944.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.sorted (14 samples, 0.41%)</title><rect x="948.7" y="227.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="951.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps.makeRef (14 samples, 0.41%)</title><rect x="948.7" y="211.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="951.7" y="222.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$OfRef (14 samples, 0.41%)</title><rect x="948.7" y="195.0" width="4.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="951.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.sendAnswerOrError (24 samples, 0.71%)</title><rect x="953.6" y="275.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="956.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (24 samples, 0.71%)</title><rect x="953.6" y="259.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="956.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (24 samples, 0.71%)</title><rect x="953.6" y="243.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="956.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.35%)</title><rect x="953.6" y="227.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="956.6" y="238.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (12 samples, 0.35%)</title><rect x="953.6" y="211.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="956.6" y="222.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.35%)</title><rect x="953.6" y="195.0" width="4.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="956.6" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (12 samples, 0.35%)</title><rect x="957.7" y="227.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="960.7" y="238.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (12 samples, 0.35%)</title><rect x="957.7" y="211.0" width="4.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="960.7" y="222.0"></text>
</g>
<g>
<title>[worker-5 tid=24972] (219 samples, 6.43%)</title><rect x="961.9" y="371.0" width="75.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="964.9" y="382.0">[worker-..</text>
</g>
<g>
<title>java/lang/Thread.run (219 samples, 6.43%)</title><rect x="961.9" y="355.0" width="75.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="964.9" y="366.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (219 samples, 6.43%)</title><rect x="961.9" y="339.0" width="75.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="964.9" y="350.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (219 samples, 6.43%)</title><rect x="961.9" y="323.0" width="75.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="964.9" y="334.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.26%)</title><rect x="961.9" y="307.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="964.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (9 samples, 0.26%)</title><rect x="961.9" y="291.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="964.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 0.26%)</title><rect x="961.9" y="275.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="964.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (9 samples, 0.26%)</title><rect x="961.9" y="259.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="964.9" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (9 samples, 0.26%)</title><rect x="961.9" y="243.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="964.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$67/849874983.run (210 samples, 6.17%)</title><rect x="965.0" y="307.0" width="72.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="968.0" y="318.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityPut$3 (210 samples, 6.17%)</title><rect x="965.0" y="291.0" width="72.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="968.0" y="302.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (13 samples, 0.38%)</title><rect x="965.0" y="275.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="968.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (13 samples, 0.38%)</title><rect x="965.0" y="259.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="968.0" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (13 samples, 0.38%)</title><rect x="965.0" y="243.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="968.0" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.38%)</title><rect x="965.0" y="227.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="968.0" y="238.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.38%)</title><rect x="965.0" y="211.0" width="4.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="968.0" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.29%)</title><rect x="969.5" y="275.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="972.5" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.29%)</title><rect x="969.5" y="259.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="972.5" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.29%)</title><rect x="969.5" y="243.0" width="3.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="972.5" y="254.0"></text>
</g>
<g>
<title>one.nio.http.Response (9 samples, 0.26%)</title><rect x="973.0" y="275.0" width="3.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="976.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (12 samples, 0.35%)</title><rect x="976.1" y="275.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="979.1" y="286.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.21%)</title><rect x="976.1" y="259.0" width="2.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="979.1" y="270.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.09%)</title><rect x="978.5" y="259.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="981.5" y="270.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.06%)</title><rect x="979.6" y="259.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="982.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (43 samples, 1.26%)</title><rect x="980.3" y="275.0" width="14.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="983.3" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (25 samples, 0.73%)</title><rect x="980.3" y="259.0" width="8.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="983.3" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.73%)</title><rect x="980.3" y="243.0" width="8.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="983.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.06%)</title><rect x="988.9" y="259.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="991.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.06%)</title><rect x="988.9" y="243.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="991.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.06%)</title><rect x="988.9" y="227.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="991.9" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.06%)</title><rect x="988.9" y="211.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="991.9" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.06%)</title><rect x="988.9" y="195.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="991.9" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.03%)</title><rect x="988.9" y="179.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="991.9" y="190.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (1 samples, 0.03%)</title><rect x="988.9" y="163.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="991.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.03%)</title><rect x="989.3" y="179.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="992.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.03%)</title><rect x="989.3" y="163.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="992.3" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (1 samples, 0.03%)</title><rect x="989.3" y="147.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="992.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.upsert (16 samples, 0.47%)</title><rect x="989.6" y="259.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="992.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (8 samples, 0.24%)</title><rect x="989.6" y="243.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="992.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (8 samples, 0.24%)</title><rect x="989.6" y="227.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="992.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (3 samples, 0.09%)</title><rect x="989.6" y="211.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="992.6" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (5 samples, 0.15%)</title><rect x="990.7" y="211.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="993.7" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Value (5 samples, 0.15%)</title><rect x="992.4" y="243.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="995.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (3 samples, 0.09%)</title><rect x="994.1" y="243.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="997.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.09%)</title><rect x="994.1" y="227.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="997.1" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.09%)</title><rect x="994.1" y="211.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="997.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.proxyIfNotLocal (104 samples, 3.06%)</title><rect x="995.2" y="275.0" width="36.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="998.2" y="286.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (104 samples, 3.06%)</title><rect x="995.2" y="259.0" width="36.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="998.2" y="270.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (104 samples, 3.06%)</title><rect x="995.2" y="243.0" width="36.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="998.2" y="254.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.21%)</title><rect x="995.2" y="227.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="998.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.21%)</title><rect x="995.2" y="211.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="998.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.get$Lambda (7 samples, 0.21%)</title><rect x="995.2" y="195.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="998.2" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.topologies.RendezvousTopology$$Lambda$68 (7 samples, 0.21%)</title><rect x="995.2" y="179.0" width="2.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="998.2" y="190.0"></text>
</g>
<g>
<title>java/util/Collection.stream (19 samples, 0.56%)</title><rect x="997.6" y="227.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1000.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeSet.spliterator (4 samples, 0.12%)</title><rect x="997.6" y="211.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1000.6" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliteratorFor (4 samples, 0.12%)</title><rect x="997.6" y="195.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1000.6" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliterator (4 samples, 0.12%)</title><rect x="997.6" y="179.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1000.6" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySpliterator (4 samples, 0.12%)</title><rect x="997.6" y="163.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1000.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (15 samples, 0.44%)</title><rect x="999.0" y="211.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1002.0" y="222.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (15 samples, 0.44%)</title><rect x="999.0" y="195.0" width="5.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1002.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (51 samples, 1.50%)</title><rect x="1004.2" y="227.0" width="17.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1007.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (51 samples, 1.50%)</title><rect x="1004.2" y="211.0" width="17.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1007.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (51 samples, 1.50%)</title><rect x="1004.2" y="195.0" width="17.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1007.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (44 samples, 1.29%)</title><rect x="1004.2" y="179.0" width="15.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1007.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (34 samples, 1.00%)</title><rect x="1004.2" y="163.0" width="11.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1007.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (34 samples, 1.00%)</title><rect x="1004.2" y="147.0" width="11.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1007.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (25 samples, 0.73%)</title><rect x="1004.2" y="131.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1007.2" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySpliterator.tryAdvance (25 samples, 0.73%)</title><rect x="1004.2" y="115.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1007.2" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (25 samples, 0.73%)</title><rect x="1004.2" y="99.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1007.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.apply (25 samples, 0.73%)</title><rect x="1004.2" y="83.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1007.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.lambda$primaryFor$0 (25 samples, 0.73%)</title><rect x="1004.2" y="67.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1007.2" y="78.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (14 samples, 0.41%)</title><rect x="1004.2" y="51.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1007.2" y="62.0"></text>
</g>
<g>
<title>java.lang.Integer (14 samples, 0.41%)</title><rect x="1004.2" y="35.0" width="4.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1007.2" y="46.0"></text>
</g>
<g>
<title>java/util/Map.entry (11 samples, 0.32%)</title><rect x="1009.0" y="51.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1012.0" y="62.0"></text>
</g>
<g>
<title>java.util.KeyValueHolder (11 samples, 0.32%)</title><rect x="1009.0" y="35.0" width="3.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1012.0" y="46.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (9 samples, 0.26%)</title><rect x="1012.9" y="131.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1015.9" y="142.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$SizedRefSortingSink.begin (9 samples, 0.26%)</title><rect x="1012.9" y="115.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1015.9" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.26%)</title><rect x="1012.9" y="99.0" width="3.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1015.9" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (10 samples, 0.29%)</title><rect x="1016.0" y="163.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1019.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (1 samples, 0.03%)</title><rect x="1016.0" y="147.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1019.0" y="158.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (1 samples, 0.03%)</title><rect x="1016.0" y="131.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1019.0" y="142.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$OfRef.opWrapSink (9 samples, 0.26%)</title><rect x="1016.3" y="147.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1019.3" y="158.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$SizedRefSortingSink (9 samples, 0.26%)</title><rect x="1016.3" y="131.0" width="3.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1019.3" y="142.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/447981768.get (7 samples, 0.21%)</title><rect x="1019.4" y="179.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1022.4" y="190.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (7 samples, 0.21%)</title><rect x="1019.4" y="163.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1022.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (16 samples, 0.47%)</title><rect x="1021.9" y="227.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1024.9" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (16 samples, 0.47%)</title><rect x="1021.9" y="211.0" width="5.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1024.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.sorted (11 samples, 0.32%)</title><rect x="1027.4" y="227.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1030.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps.makeRef (11 samples, 0.32%)</title><rect x="1027.4" y="211.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1030.4" y="222.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$OfRef (11 samples, 0.32%)</title><rect x="1027.4" y="195.0" width="3.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1030.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.sendAnswerOrError (19 samples, 0.56%)</title><rect x="1031.2" y="275.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1034.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (19 samples, 0.56%)</title><rect x="1031.2" y="259.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1034.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (19 samples, 0.56%)</title><rect x="1031.2" y="243.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1034.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (17 samples, 0.50%)</title><rect x="1031.2" y="227.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1034.2" y="238.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (17 samples, 0.50%)</title><rect x="1031.2" y="211.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1034.2" y="222.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.50%)</title><rect x="1031.2" y="195.0" width="5.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1034.2" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.06%)</title><rect x="1037.1" y="227.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1040.1" y="238.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.06%)</title><rect x="1037.1" y="211.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1040.1" y="222.0"></text>
</g>
<g>
<title>[worker-6 tid=24973] (216 samples, 6.35%)</title><rect x="1037.8" y="371.0" width="74.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1040.8" y="382.0">[worker-..</text>
</g>
<g>
<title>java/lang/Thread.run (216 samples, 6.35%)</title><rect x="1037.8" y="355.0" width="74.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1040.8" y="366.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (216 samples, 6.35%)</title><rect x="1037.8" y="339.0" width="74.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1040.8" y="350.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (216 samples, 6.35%)</title><rect x="1037.8" y="323.0" width="74.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1040.8" y="334.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.09%)</title><rect x="1037.8" y="307.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1040.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3 samples, 0.09%)</title><rect x="1037.8" y="291.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1040.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.09%)</title><rect x="1037.8" y="275.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1040.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.09%)</title><rect x="1037.8" y="259.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1040.8" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.09%)</title><rect x="1037.8" y="243.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1040.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$67/849874983.run (213 samples, 6.26%)</title><rect x="1038.9" y="307.0" width="73.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1041.9" y="318.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityPut$3 (213 samples, 6.26%)</title><rect x="1038.9" y="291.0" width="73.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1041.9" y="302.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.15%)</title><rect x="1038.9" y="275.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1041.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (5 samples, 0.15%)</title><rect x="1038.9" y="259.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1041.9" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (5 samples, 0.15%)</title><rect x="1038.9" y="243.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1041.9" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.15%)</title><rect x="1038.9" y="227.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1041.9" y="238.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.15%)</title><rect x="1038.9" y="211.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1041.9" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.53%)</title><rect x="1040.6" y="275.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1043.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.53%)</title><rect x="1040.6" y="259.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1043.6" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (18 samples, 0.53%)</title><rect x="1040.6" y="243.0" width="6.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1043.6" y="254.0"></text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.18%)</title><rect x="1046.8" y="275.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1049.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (10 samples, 0.29%)</title><rect x="1048.9" y="275.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1051.9" y="286.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.09%)</title><rect x="1048.9" y="259.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1051.9" y="270.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.09%)</title><rect x="1050.0" y="259.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1053.0" y="270.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.12%)</title><rect x="1051.0" y="259.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1054.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (34 samples, 1.00%)</title><rect x="1052.4" y="275.0" width="11.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1055.4" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (17 samples, 0.50%)</title><rect x="1052.4" y="259.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1055.4" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17 samples, 0.50%)</title><rect x="1052.4" y="243.0" width="5.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1055.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.upsert (17 samples, 0.50%)</title><rect x="1058.3" y="259.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1061.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (3 samples, 0.09%)</title><rect x="1058.3" y="243.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1061.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (3 samples, 0.09%)</title><rect x="1058.3" y="227.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1061.3" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (1 samples, 0.03%)</title><rect x="1058.3" y="211.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1061.3" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (2 samples, 0.06%)</title><rect x="1058.6" y="211.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1061.6" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Value (5 samples, 0.15%)</title><rect x="1059.3" y="243.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1062.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (9 samples, 0.26%)</title><rect x="1061.0" y="243.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1064.0" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.26%)</title><rect x="1061.0" y="227.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1064.0" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.26%)</title><rect x="1061.0" y="211.0" width="3.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1064.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.proxyIfNotLocal (110 samples, 3.23%)</title><rect x="1064.2" y="275.0" width="38.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1067.2" y="286.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (110 samples, 3.23%)</title><rect x="1064.2" y="259.0" width="38.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1067.2" y="270.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (110 samples, 3.23%)</title><rect x="1064.2" y="243.0" width="38.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1067.2" y="254.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.06%)</title><rect x="1064.2" y="227.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1067.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.06%)</title><rect x="1064.2" y="211.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1067.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.get$Lambda (2 samples, 0.06%)</title><rect x="1064.2" y="195.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1067.2" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.topologies.RendezvousTopology$$Lambda$68 (2 samples, 0.06%)</title><rect x="1064.2" y="179.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1067.2" y="190.0"></text>
</g>
<g>
<title>java/util/Collection.stream (22 samples, 0.65%)</title><rect x="1064.9" y="227.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1067.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeSet.spliterator (13 samples, 0.38%)</title><rect x="1064.9" y="211.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1067.9" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliteratorFor (13 samples, 0.38%)</title><rect x="1064.9" y="195.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1067.9" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliterator (13 samples, 0.38%)</title><rect x="1064.9" y="179.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1067.9" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySpliterator (13 samples, 0.38%)</title><rect x="1064.9" y="163.0" width="4.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1067.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (9 samples, 0.26%)</title><rect x="1069.4" y="211.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1072.4" y="222.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (9 samples, 0.26%)</title><rect x="1069.4" y="195.0" width="3.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1072.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (60 samples, 1.76%)</title><rect x="1072.5" y="227.0" width="20.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1075.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (60 samples, 1.76%)</title><rect x="1072.5" y="211.0" width="20.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1075.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (60 samples, 1.76%)</title><rect x="1072.5" y="195.0" width="20.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1075.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (54 samples, 1.59%)</title><rect x="1072.5" y="179.0" width="18.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1075.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (44 samples, 1.29%)</title><rect x="1072.5" y="163.0" width="15.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1075.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (44 samples, 1.29%)</title><rect x="1072.5" y="147.0" width="15.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1075.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (30 samples, 0.88%)</title><rect x="1072.5" y="131.0" width="10.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1075.5" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySpliterator.tryAdvance (30 samples, 0.88%)</title><rect x="1072.5" y="115.0" width="10.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1075.5" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (30 samples, 0.88%)</title><rect x="1072.5" y="99.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1075.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.apply (30 samples, 0.88%)</title><rect x="1072.5" y="83.0" width="10.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1075.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.lambda$primaryFor$0 (30 samples, 0.88%)</title><rect x="1072.5" y="67.0" width="10.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1075.5" y="78.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (10 samples, 0.29%)</title><rect x="1072.5" y="51.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1075.5" y="62.0"></text>
</g>
<g>
<title>java.lang.Integer (10 samples, 0.29%)</title><rect x="1072.5" y="35.0" width="3.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1075.5" y="46.0"></text>
</g>
<g>
<title>java/util/Map.entry (20 samples, 0.59%)</title><rect x="1076.0" y="51.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1079.0" y="62.0"></text>
</g>
<g>
<title>java.util.KeyValueHolder (20 samples, 0.59%)</title><rect x="1076.0" y="35.0" width="6.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1079.0" y="46.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (14 samples, 0.41%)</title><rect x="1082.9" y="131.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1085.9" y="142.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$SizedRefSortingSink.begin (14 samples, 0.41%)</title><rect x="1082.9" y="115.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1085.9" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.41%)</title><rect x="1082.9" y="99.0" width="4.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1085.9" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (10 samples, 0.29%)</title><rect x="1087.7" y="163.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1090.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (6 samples, 0.18%)</title><rect x="1087.7" y="147.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1090.7" y="158.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (6 samples, 0.18%)</title><rect x="1087.7" y="131.0" width="2.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1090.7" y="142.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$OfRef.opWrapSink (4 samples, 0.12%)</title><rect x="1089.8" y="147.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1092.8" y="158.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$SizedRefSortingSink (4 samples, 0.12%)</title><rect x="1089.8" y="131.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1092.8" y="142.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/447981768.get (6 samples, 0.18%)</title><rect x="1091.2" y="179.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1094.2" y="190.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (6 samples, 0.18%)</title><rect x="1091.2" y="163.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1094.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (14 samples, 0.41%)</title><rect x="1093.3" y="227.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1096.3" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (14 samples, 0.41%)</title><rect x="1093.3" y="211.0" width="4.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1096.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.sorted (12 samples, 0.35%)</title><rect x="1098.1" y="227.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1101.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps.makeRef (12 samples, 0.35%)</title><rect x="1098.1" y="211.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1101.1" y="222.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$OfRef (12 samples, 0.35%)</title><rect x="1098.1" y="195.0" width="4.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1101.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.sendAnswerOrError (30 samples, 0.88%)</title><rect x="1102.3" y="275.0" width="10.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1105.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (30 samples, 0.88%)</title><rect x="1102.3" y="259.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1105.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (30 samples, 0.88%)</title><rect x="1102.3" y="243.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1105.3" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (24 samples, 0.71%)</title><rect x="1102.3" y="227.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1105.3" y="238.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (24 samples, 0.71%)</title><rect x="1102.3" y="211.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1105.3" y="222.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.71%)</title><rect x="1102.3" y="195.0" width="8.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1105.3" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.18%)</title><rect x="1110.6" y="227.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1113.6" y="238.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6 samples, 0.18%)</title><rect x="1110.6" y="211.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1113.6" y="222.0"></text>
</g>
<g>
<title>[worker-7 tid=24974] (223 samples, 6.55%)</title><rect x="1112.7" y="371.0" width="77.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1115.7" y="382.0">[worker-7..</text>
</g>
<g>
<title>java/lang/Thread.run (223 samples, 6.55%)</title><rect x="1112.7" y="355.0" width="77.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1115.7" y="366.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (223 samples, 6.55%)</title><rect x="1112.7" y="339.0" width="77.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1115.7" y="350.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (223 samples, 6.55%)</title><rect x="1112.7" y="323.0" width="77.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1115.7" y="334.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (7 samples, 0.21%)</title><rect x="1112.7" y="307.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1115.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (7 samples, 0.21%)</title><rect x="1112.7" y="291.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1115.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.21%)</title><rect x="1112.7" y="275.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1115.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (7 samples, 0.21%)</title><rect x="1112.7" y="259.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1115.7" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (7 samples, 0.21%)</title><rect x="1112.7" y="243.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1115.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$67/849874983.run (216 samples, 6.35%)</title><rect x="1115.1" y="307.0" width="74.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1118.1" y="318.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityPut$3 (216 samples, 6.35%)</title><rect x="1115.1" y="291.0" width="74.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1118.1" y="302.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (12 samples, 0.35%)</title><rect x="1115.1" y="275.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1118.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (12 samples, 0.35%)</title><rect x="1115.1" y="259.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1118.1" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (12 samples, 0.35%)</title><rect x="1115.1" y="243.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1118.1" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.35%)</title><rect x="1115.1" y="227.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1118.1" y="238.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.35%)</title><rect x="1115.1" y="211.0" width="4.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1118.1" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.35%)</title><rect x="1119.3" y="275.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1122.3" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.35%)</title><rect x="1119.3" y="259.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1122.3" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.35%)</title><rect x="1119.3" y="243.0" width="4.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1122.3" y="254.0"></text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.15%)</title><rect x="1123.4" y="275.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1126.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (25 samples, 0.73%)</title><rect x="1125.2" y="275.0" width="8.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1128.2" y="286.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.24%)</title><rect x="1125.2" y="259.0" width="2.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1128.2" y="270.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.29%)</title><rect x="1127.9" y="259.0" width="3.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1130.9" y="270.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.21%)</title><rect x="1131.4" y="259.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1134.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (33 samples, 0.97%)</title><rect x="1133.8" y="275.0" width="11.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1136.8" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (22 samples, 0.65%)</title><rect x="1133.8" y="259.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1136.8" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.65%)</title><rect x="1133.8" y="243.0" width="7.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1136.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.03%)</title><rect x="1141.5" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1144.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.03%)</title><rect x="1141.5" y="243.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1144.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.03%)</title><rect x="1141.5" y="227.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1144.5" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="1141.5" y="211.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1144.5" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.03%)</title><rect x="1141.5" y="195.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1144.5" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.03%)</title><rect x="1141.5" y="179.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1144.5" y="190.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (1 samples, 0.03%)</title><rect x="1141.5" y="163.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1144.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.upsert (10 samples, 0.29%)</title><rect x="1141.8" y="259.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1144.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (2 samples, 0.06%)</title><rect x="1141.8" y="243.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1144.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.06%)</title><rect x="1141.8" y="227.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1144.8" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (2 samples, 0.06%)</title><rect x="1141.8" y="211.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1144.8" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Value (3 samples, 0.09%)</title><rect x="1142.5" y="243.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1145.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (5 samples, 0.15%)</title><rect x="1143.5" y="243.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1146.5" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.15%)</title><rect x="1143.5" y="227.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1146.5" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.15%)</title><rect x="1143.5" y="211.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1146.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.proxyIfNotLocal (102 samples, 3.00%)</title><rect x="1145.3" y="275.0" width="35.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1148.3" y="286.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (102 samples, 3.00%)</title><rect x="1145.3" y="259.0" width="35.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1148.3" y="270.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primaryFor (102 samples, 3.00%)</title><rect x="1145.3" y="243.0" width="35.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1148.3" y="254.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.06%)</title><rect x="1145.3" y="227.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1148.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.06%)</title><rect x="1145.3" y="211.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1148.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.get$Lambda (2 samples, 0.06%)</title><rect x="1145.3" y="195.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1148.3" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.topologies.RendezvousTopology$$Lambda$68 (2 samples, 0.06%)</title><rect x="1145.3" y="179.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1148.3" y="190.0"></text>
</g>
<g>
<title>java/util/Collection.stream (22 samples, 0.65%)</title><rect x="1146.0" y="227.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1149.0" y="238.0"></text>
</g>
<g>
<title>java/util/TreeSet.spliterator (11 samples, 0.32%)</title><rect x="1146.0" y="211.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1149.0" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliteratorFor (11 samples, 0.32%)</title><rect x="1146.0" y="195.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1149.0" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySpliterator (11 samples, 0.32%)</title><rect x="1146.0" y="179.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1149.0" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySpliterator (11 samples, 0.32%)</title><rect x="1146.0" y="163.0" width="3.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1149.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (11 samples, 0.32%)</title><rect x="1149.8" y="211.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1152.8" y="222.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (11 samples, 0.32%)</title><rect x="1149.8" y="195.0" width="3.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1152.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (52 samples, 1.53%)</title><rect x="1153.6" y="227.0" width="18.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1156.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (52 samples, 1.53%)</title><rect x="1153.6" y="211.0" width="18.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1156.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (52 samples, 1.53%)</title><rect x="1153.6" y="195.0" width="18.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1156.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (47 samples, 1.38%)</title><rect x="1153.6" y="179.0" width="16.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1156.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (35 samples, 1.03%)</title><rect x="1153.6" y="163.0" width="12.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1156.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (35 samples, 1.03%)</title><rect x="1153.6" y="147.0" width="12.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1156.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (29 samples, 0.85%)</title><rect x="1153.6" y="131.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1156.6" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySpliterator.tryAdvance (29 samples, 0.85%)</title><rect x="1153.6" y="115.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1156.6" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (29 samples, 0.85%)</title><rect x="1153.6" y="99.0" width="10.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1156.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$$Lambda$68/202675027.apply (29 samples, 0.85%)</title><rect x="1153.6" y="83.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1156.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.lambda$primaryFor$0 (29 samples, 0.85%)</title><rect x="1153.6" y="67.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1156.6" y="78.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (14 samples, 0.41%)</title><rect x="1153.6" y="51.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1156.6" y="62.0"></text>
</g>
<g>
<title>java.lang.Integer (14 samples, 0.41%)</title><rect x="1153.6" y="35.0" width="4.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1156.6" y="46.0"></text>
</g>
<g>
<title>java/util/Map.entry (15 samples, 0.44%)</title><rect x="1158.5" y="51.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1161.5" y="62.0"></text>
</g>
<g>
<title>java.util.KeyValueHolder (15 samples, 0.44%)</title><rect x="1158.5" y="35.0" width="5.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1161.5" y="46.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (6 samples, 0.18%)</title><rect x="1163.7" y="131.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1166.7" y="142.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$SizedRefSortingSink.begin (6 samples, 0.18%)</title><rect x="1163.7" y="115.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1166.7" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.18%)</title><rect x="1163.7" y="99.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1166.7" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (12 samples, 0.35%)</title><rect x="1165.7" y="163.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1168.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (5 samples, 0.15%)</title><rect x="1165.7" y="147.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1168.7" y="158.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (5 samples, 0.15%)</title><rect x="1165.7" y="131.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1168.7" y="142.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$OfRef.opWrapSink (7 samples, 0.21%)</title><rect x="1167.5" y="147.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1170.5" y="158.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$SizedRefSortingSink (7 samples, 0.21%)</title><rect x="1167.5" y="131.0" width="2.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1170.5" y="142.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$51/447981768.get (5 samples, 0.15%)</title><rect x="1169.9" y="179.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1172.9" y="190.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (5 samples, 0.15%)</title><rect x="1169.9" y="163.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1172.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (8 samples, 0.24%)</title><rect x="1171.6" y="227.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1174.6" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (8 samples, 0.24%)</title><rect x="1171.6" y="211.0" width="2.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1174.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.sorted (18 samples, 0.53%)</title><rect x="1174.4" y="227.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1177.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps.makeRef (18 samples, 0.53%)</title><rect x="1174.4" y="211.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1177.4" y="222.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$OfRef (18 samples, 0.53%)</title><rect x="1174.4" y="195.0" width="6.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1177.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.sendAnswerOrError (27 samples, 0.79%)</title><rect x="1180.6" y="275.0" width="9.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1183.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (27 samples, 0.79%)</title><rect x="1180.6" y="259.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1183.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (27 samples, 0.79%)</title><rect x="1180.6" y="243.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1183.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.41%)</title><rect x="1180.6" y="227.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1183.6" y="238.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (14 samples, 0.41%)</title><rect x="1180.6" y="211.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1183.6" y="222.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.41%)</title><rect x="1180.6" y="195.0" width="4.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1183.6" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (13 samples, 0.38%)</title><rect x="1185.5" y="227.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1188.5" y="238.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (13 samples, 0.38%)</title><rect x="1185.5" y="211.0" width="4.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1188.5" y="222.0"></text>
</g>
</g>
</svg>
