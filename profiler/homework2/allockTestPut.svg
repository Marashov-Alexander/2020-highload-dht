<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (5,361 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (436 samples, 8.13%)</title><rect x="10.0" y="803.0" width="96.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/T..</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (26 samples, 0.48%)</title><rect x="10.0" y="787.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (26 samples, 0.48%)</title><rect x="10.0" y="771.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/341391813.linkToTargetMethod (26 samples, 0.48%)</title><rect x="10.0" y="755.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1408441311.invoke (26 samples, 0.48%)</title><rect x="10.0" y="739.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.48%)</title><rect x="10.0" y="723.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (13 samples, 0.24%)</title><rect x="10.0" y="707.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.24%)</title><rect x="10.0" y="691.0" width="2.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (13 samples, 0.24%)</title><rect x="12.9" y="707.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (13 samples, 0.24%)</title><rect x="12.9" y="691.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="15.9" y="702.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.13%)</title><rect x="12.9" y="675.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="15.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray0 (6 samples, 0.11%)</title><rect x="14.4" y="675.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="17.4" y="686.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="14.4" y="659.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="17.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (410 samples, 7.65%)</title><rect x="15.7" y="787.0" width="90.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.7" y="798.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (410 samples, 7.65%)</title><rect x="15.7" y="771.0" width="90.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.7" y="782.0">java/util/..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (410 samples, 7.65%)</title><rect x="15.7" y="755.0" width="90.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.7" y="766.0">sun/rmi/tr..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (410 samples, 7.65%)</title><rect x="15.7" y="739.0" width="90.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.7" y="750.0">java/secur..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$92/1484123564.run (410 samples, 7.65%)</title><rect x="15.7" y="723.0" width="90.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.7" y="734.0">sun/rmi/tr..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (410 samples, 7.65%)</title><rect x="15.7" y="707.0" width="90.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.7" y="718.0">sun/rmi/tr..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (410 samples, 7.65%)</title><rect x="15.7" y="691.0" width="90.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.7" y="702.0">sun/rmi/tr..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (410 samples, 7.65%)</title><rect x="15.7" y="675.0" width="90.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.7" y="686.0">sun/rmi/tr..</text>
</g>
<g>
<title>java.io.DataOutputStream (6 samples, 0.11%)</title><rect x="15.7" y="659.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="18.7" y="670.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (402 samples, 7.50%)</title><rect x="17.5" y="659.0" width="88.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.5" y="670.0">sun/rmi/tr..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (336 samples, 6.27%)</title><rect x="17.7" y="643.0" width="74.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.7" y="654.0">java/sec..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (336 samples, 6.27%)</title><rect x="17.7" y="627.0" width="74.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.7" y="638.0">sun/rmi/..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (336 samples, 6.27%)</title><rect x="17.7" y="611.0" width="74.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="20.7" y="622.0">sun/rmi/..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (336 samples, 6.27%)</title><rect x="17.7" y="595.0" width="74.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.7" y="606.0">sun/rmi/..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (177 samples, 3.30%)</title><rect x="18.1" y="579.0" width="39.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.1" y="590.0">jav..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (177 samples, 3.30%)</title><rect x="18.1" y="563.0" width="39.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="21.1" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor40.invoke (176 samples, 3.28%)</title><rect x="18.4" y="547.0" width="38.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.4" y="558.0">jdk..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (176 samples, 3.28%)</title><rect x="18.4" y="531.0" width="38.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.4" y="542.0">jav..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (155 samples, 2.89%)</title><rect x="18.4" y="515.0" width="34.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="21.4" y="526.0">ja..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (155 samples, 2.89%)</title><rect x="18.4" y="499.0" width="34.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="21.4" y="510.0">ja..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (155 samples, 2.89%)</title><rect x="18.4" y="483.0" width="34.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.4" y="494.0">ja..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (155 samples, 2.89%)</title><rect x="18.4" y="467.0" width="34.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.4" y="478.0">co..</text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (155 samples, 2.89%)</title><rect x="18.4" y="451.0" width="34.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="21.4" y="462.0">co..</text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (155 samples, 2.89%)</title><rect x="18.4" y="435.0" width="34.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="21.4" y="446.0">ja..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (155 samples, 2.89%)</title><rect x="18.4" y="419.0" width="34.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.4" y="430.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (155 samples, 2.89%)</title><rect x="18.4" y="403.0" width="34.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.4" y="414.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (155 samples, 2.89%)</title><rect x="18.4" y="387.0" width="34.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="21.4" y="398.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (155 samples, 2.89%)</title><rect x="18.4" y="371.0" width="34.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.4" y="382.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (155 samples, 2.89%)</title><rect x="18.4" y="355.0" width="34.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.4" y="366.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (155 samples, 2.89%)</title><rect x="18.4" y="339.0" width="34.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="21.4" y="350.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (155 samples, 2.89%)</title><rect x="18.4" y="323.0" width="34.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="21.4" y="334.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (141 samples, 2.63%)</title><rect x="18.4" y="307.0" width="31.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="21.4" y="318.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (141 samples, 2.63%)</title><rect x="18.4" y="291.0" width="31.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.4" y="302.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (141 samples, 2.63%)</title><rect x="18.4" y="275.0" width="31.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.4" y="286.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (141 samples, 2.63%)</title><rect x="18.4" y="259.0" width="31.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="21.4" y="270.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (32 samples, 0.60%)</title><rect x="18.4" y="243.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="21.4" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (29 samples, 0.54%)</title><rect x="18.4" y="227.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.4" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (27 samples, 0.50%)</title><rect x="18.4" y="211.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.4" y="222.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (27 samples, 0.50%)</title><rect x="18.4" y="195.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.4" y="206.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (2 samples, 0.04%)</title><rect x="18.6" y="179.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="21.6" y="190.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (13 samples, 0.24%)</title><rect x="19.0" y="179.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.0" y="190.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.04%)</title><rect x="19.0" y="163.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.0" y="174.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (11 samples, 0.21%)</title><rect x="19.5" y="163.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.5" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (11 samples, 0.21%)</title><rect x="19.5" y="147.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="22.5" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (11 samples, 0.21%)</title><rect x="19.5" y="131.0" width="2.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="22.5" y="142.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (11 samples, 0.21%)</title><rect x="21.9" y="179.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.9" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.21%)</title><rect x="21.9" y="163.0" width="2.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="24.9" y="174.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (2 samples, 0.04%)</title><rect x="24.3" y="211.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.3" y="222.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeData[] (2 samples, 0.04%)</title><rect x="24.3" y="195.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="27.3" y="206.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (3 samples, 0.06%)</title><rect x="24.7" y="227.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.7" y="238.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.04%)</title><rect x="25.0" y="211.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.0" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="25.4" y="243.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="28.4" y="254.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (2 samples, 0.04%)</title><rect x="25.8" y="243.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="28.8" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (58 samples, 1.08%)</title><rect x="26.3" y="243.0" width="12.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="29.3" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (6 samples, 0.11%)</title><rect x="26.3" y="227.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.3" y="238.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (4 samples, 0.07%)</title><rect x="26.3" y="211.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="29.3" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (4 samples, 0.07%)</title><rect x="26.3" y="195.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="29.3" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (4 samples, 0.07%)</title><rect x="26.3" y="179.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.3" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (4 samples, 0.07%)</title><rect x="26.3" y="163.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="29.3" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (4 samples, 0.07%)</title><rect x="26.3" y="147.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="29.3" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySet (2 samples, 0.04%)</title><rect x="27.2" y="211.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.2" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (2 samples, 0.04%)</title><rect x="27.2" y="195.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.2" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (2 samples, 0.04%)</title><rect x="27.2" y="179.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="30.2" y="190.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (52 samples, 0.97%)</title><rect x="27.6" y="227.0" width="11.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.6" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.07%)</title><rect x="27.6" y="211.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="30.6" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (48 samples, 0.90%)</title><rect x="28.5" y="211.0" width="10.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="31.5" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (48 samples, 0.90%)</title><rect x="28.5" y="195.0" width="10.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="31.5" y="206.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (47 samples, 0.88%)</title><rect x="39.1" y="243.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.1" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (42 samples, 0.78%)</title><rect x="39.1" y="227.0" width="9.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="42.1" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.09%)</title><rect x="48.3" y="227.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.09%)</title><rect x="48.3" y="211.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="51.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (5 samples, 0.09%)</title><rect x="48.3" y="195.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="51.3" y="206.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (5 samples, 0.09%)</title><rect x="48.3" y="179.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="51.3" y="190.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.09%)</title><rect x="48.3" y="163.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.09%)</title><rect x="48.3" y="147.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="51.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor12.invoke (2 samples, 0.04%)</title><rect x="48.3" y="131.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="51.3" y="142.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getLockedMonitors (2 samples, 0.04%)</title><rect x="48.3" y="115.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.3" y="126.0"></text>
</g>
<g>
<title>java/lang/Object.clone (2 samples, 0.04%)</title><rect x="48.3" y="99.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="51.3" y="110.0"></text>
</g>
<g>
<title>java.lang.management.MonitorInfo[] (2 samples, 0.04%)</title><rect x="48.3" y="83.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="51.3" y="94.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor15.invoke (2 samples, 0.04%)</title><rect x="49.0" y="131.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.0" y="142.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getStackTrace (2 samples, 0.04%)</title><rect x="49.0" y="115.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="52.0" y="126.0"></text>
</g>
<g>
<title>java/lang/Object.clone (2 samples, 0.04%)</title><rect x="49.0" y="99.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.0" y="110.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (2 samples, 0.04%)</title><rect x="49.0" y="83.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="52.0" y="94.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (14 samples, 0.26%)</title><rect x="49.4" y="307.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.4" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (14 samples, 0.26%)</title><rect x="49.4" y="291.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (14 samples, 0.26%)</title><rect x="49.4" y="275.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="52.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (14 samples, 0.26%)</title><rect x="49.4" y="259.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.4" y="270.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (14 samples, 0.26%)</title><rect x="49.4" y="243.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.4" y="254.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (14 samples, 0.26%)</title><rect x="49.4" y="227.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (14 samples, 0.26%)</title><rect x="49.4" y="211.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="52.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (14 samples, 0.26%)</title><rect x="49.4" y="195.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.4" y="206.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (14 samples, 0.26%)</title><rect x="49.4" y="179.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="52.4" y="190.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (14 samples, 0.26%)</title><rect x="49.4" y="163.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.4" y="174.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (9 samples, 0.17%)</title><rect x="49.4" y="147.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="52.4" y="158.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.&lt;init&gt; (5 samples, 0.09%)</title><rect x="51.4" y="147.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.4" y="158.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.initialize (5 samples, 0.09%)</title><rect x="51.4" y="131.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.4" y="142.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (2 samples, 0.04%)</title><rect x="51.6" y="115.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="54.6" y="126.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (2 samples, 0.04%)</title><rect x="51.6" y="99.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.6" y="110.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="51.6" y="83.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="54.6" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="52.0" y="115.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="55.0" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (2 samples, 0.04%)</title><rect x="52.0" y="99.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.0" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/157683534.invoke (2 samples, 0.04%)</title><rect x="52.0" y="83.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.0" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="52.0" y="67.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.0" y="78.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.04%)</title><rect x="52.0" y="51.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.0" y="62.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.04%)</title><rect x="52.0" y="35.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="55.0" y="46.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getClassLoaderFor (2 samples, 0.04%)</title><rect x="52.5" y="515.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.5" y="526.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (19 samples, 0.35%)</title><rect x="52.9" y="515.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.9" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (7 samples, 0.13%)</title><rect x="52.9" y="499.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="55.9" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (7 samples, 0.13%)</title><rect x="52.9" y="483.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="55.9" y="494.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (7 samples, 0.13%)</title><rect x="52.9" y="467.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="55.9" y="478.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader.&lt;init&gt; (6 samples, 0.11%)</title><rect x="53.1" y="451.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.1" y="462.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (2 samples, 0.04%)</title><rect x="53.1" y="435.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="56.1" y="446.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (2 samples, 0.04%)</title><rect x="53.1" y="419.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.1" y="430.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader$ClassLoaderWrapper.&lt;init&gt; (4 samples, 0.07%)</title><rect x="53.6" y="435.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.6" y="446.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (4 samples, 0.07%)</title><rect x="53.6" y="419.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="56.6" y="430.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (4 samples, 0.07%)</title><rect x="53.6" y="403.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.6" y="414.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (3 samples, 0.06%)</title><rect x="53.8" y="387.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.04%)</title><rect x="54.0" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.0" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.04%)</title><rect x="54.0" y="355.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.0" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.04%)</title><rect x="54.0" y="339.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="57.0" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.04%)</title><rect x="54.0" y="323.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.0" y="334.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="54.0" y="307.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="57.0" y="318.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (12 samples, 0.22%)</title><rect x="54.5" y="499.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.5" y="510.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (12 samples, 0.22%)</title><rect x="54.5" y="483.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="57.5" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (8 samples, 0.15%)</title><rect x="54.5" y="467.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.5" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (8 samples, 0.15%)</title><rect x="54.5" y="451.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.5" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (8 samples, 0.15%)</title><rect x="54.5" y="435.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.5" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (8 samples, 0.15%)</title><rect x="54.5" y="419.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.5" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (3 samples, 0.06%)</title><rect x="54.5" y="403.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.5" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (3 samples, 0.06%)</title><rect x="54.5" y="387.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.5" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (2 samples, 0.04%)</title><rect x="54.5" y="371.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.5" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (2 samples, 0.04%)</title><rect x="54.5" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.5" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (2 samples, 0.04%)</title><rect x="54.5" y="339.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="57.5" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (2 samples, 0.04%)</title><rect x="54.5" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.5" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (2 samples, 0.04%)</title><rect x="54.5" y="307.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.5" y="318.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.04%)</title><rect x="54.5" y="291.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="57.5" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (5 samples, 0.09%)</title><rect x="55.1" y="403.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="58.1" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (4 samples, 0.07%)</title><rect x="55.3" y="387.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="58.3" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (3 samples, 0.06%)</title><rect x="55.3" y="371.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.3" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (3 samples, 0.06%)</title><rect x="55.3" y="355.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="58.3" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (3 samples, 0.06%)</title><rect x="55.3" y="339.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.3" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (3 samples, 0.06%)</title><rect x="55.3" y="323.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.3" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (3 samples, 0.06%)</title><rect x="55.3" y="307.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="58.3" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (3 samples, 0.06%)</title><rect x="55.3" y="291.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.3" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (3 samples, 0.06%)</title><rect x="55.3" y="275.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="58.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.04%)</title><rect x="55.6" y="259.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="58.6" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="55.6" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.6" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.04%)</title><rect x="55.6" y="227.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="58.6" y="238.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="55.6" y="211.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="58.6" y="222.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject$MarshalledObjectInputStream.&lt;init&gt; (4 samples, 0.07%)</title><rect x="56.2" y="467.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.2" y="478.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (4 samples, 0.07%)</title><rect x="56.2" y="451.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="59.2" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (4 samples, 0.07%)</title><rect x="56.2" y="435.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="59.2" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (4 samples, 0.07%)</title><rect x="56.2" y="419.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="59.2" y="430.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="56.2" y="403.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="59.2" y="414.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (2 samples, 0.04%)</title><rect x="56.7" y="403.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="59.7" y="414.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (86 samples, 1.60%)</title><rect x="57.1" y="579.0" width="18.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="60.1" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (86 samples, 1.60%)</title><rect x="57.1" y="563.0" width="18.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.1" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (86 samples, 1.60%)</title><rect x="57.1" y="547.0" width="18.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.1" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (85 samples, 1.59%)</title><rect x="57.1" y="531.0" width="18.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="60.1" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (85 samples, 1.59%)</title><rect x="57.1" y="515.0" width="18.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="60.1" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (81 samples, 1.51%)</title><rect x="57.1" y="499.0" width="17.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.1" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (81 samples, 1.51%)</title><rect x="57.1" y="483.0" width="17.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="60.1" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (81 samples, 1.51%)</title><rect x="57.1" y="467.0" width="17.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.1" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (81 samples, 1.51%)</title><rect x="57.1" y="451.0" width="17.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="60.1" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (77 samples, 1.44%)</title><rect x="57.1" y="435.0" width="17.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="60.1" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (6 samples, 0.11%)</title><rect x="57.1" y="419.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.1" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (6 samples, 0.11%)</title><rect x="57.1" y="403.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="60.1" y="414.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.04%)</title><rect x="57.1" y="387.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="60.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="57.5" y="387.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="60.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="58.0" y="387.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="61.0" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (71 samples, 1.32%)</title><rect x="58.4" y="419.0" width="15.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.4" y="430.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (3 samples, 0.06%)</title><rect x="58.4" y="403.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="61.4" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (7 samples, 0.13%)</title><rect x="59.1" y="403.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.1" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (7 samples, 0.13%)</title><rect x="59.1" y="387.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.1" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (7 samples, 0.13%)</title><rect x="59.1" y="371.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.1" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (7 samples, 0.13%)</title><rect x="59.1" y="355.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.1" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (7 samples, 0.13%)</title><rect x="59.1" y="339.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.1" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.13%)</title><rect x="59.1" y="323.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.13%)</title><rect x="59.1" y="307.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (7 samples, 0.13%)</title><rect x="59.1" y="291.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.1" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (7 samples, 0.13%)</title><rect x="59.1" y="275.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="62.1" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (7 samples, 0.13%)</title><rect x="59.1" y="259.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.1" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (7 samples, 0.13%)</title><rect x="59.1" y="243.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.1" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (5 samples, 0.09%)</title><rect x="59.1" y="227.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.1" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (5 samples, 0.09%)</title><rect x="59.1" y="211.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.1" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (5 samples, 0.09%)</title><rect x="59.1" y="195.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.1" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (5 samples, 0.09%)</title><rect x="59.1" y="179.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.1" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.06%)</title><rect x="59.1" y="163.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.1" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.06%)</title><rect x="59.1" y="147.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.1" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2 samples, 0.04%)</title><rect x="59.3" y="131.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.3" y="142.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.04%)</title><rect x="59.3" y="115.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.04%)</title><rect x="59.3" y="99.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.3" y="110.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (2 samples, 0.04%)</title><rect x="59.3" y="83.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.3" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (2 samples, 0.04%)</title><rect x="59.3" y="67.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.3" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.04%)</title><rect x="59.7" y="163.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.7" y="174.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.04%)</title><rect x="59.7" y="147.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="62.7" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.04%)</title><rect x="60.2" y="227.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.2" y="238.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.04%)</title><rect x="60.2" y="211.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="63.2" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (61 samples, 1.14%)</title><rect x="60.6" y="403.0" width="13.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.6" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="60.6" y="387.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="63.6" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (59 samples, 1.10%)</title><rect x="61.1" y="387.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (59 samples, 1.10%)</title><rect x="61.1" y="371.0" width="13.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (59 samples, 1.10%)</title><rect x="61.1" y="355.0" width="13.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.1" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (59 samples, 1.10%)</title><rect x="61.1" y="339.0" width="13.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.1" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (56 samples, 1.04%)</title><rect x="61.3" y="323.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.3" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (56 samples, 1.04%)</title><rect x="61.3" y="307.0" width="12.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.3" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (16 samples, 0.30%)</title><rect x="61.3" y="291.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.3" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (6 samples, 0.11%)</title><rect x="61.3" y="275.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="64.3" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (6 samples, 0.11%)</title><rect x="61.3" y="259.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.3" y="270.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.04%)</title><rect x="61.5" y="243.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="64.5" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="62.2" y="243.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="65.2" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (10 samples, 0.19%)</title><rect x="62.6" y="275.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="65.6" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (9 samples, 0.17%)</title><rect x="62.6" y="259.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="65.6" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (9 samples, 0.17%)</title><rect x="62.6" y="243.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="65.6" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (9 samples, 0.17%)</title><rect x="62.6" y="227.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.6" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.06%)</title><rect x="62.6" y="211.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="65.6" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (6 samples, 0.11%)</title><rect x="63.3" y="211.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.3" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (6 samples, 0.11%)</title><rect x="63.3" y="195.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="66.3" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (6 samples, 0.11%)</title><rect x="63.3" y="179.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.3" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (6 samples, 0.11%)</title><rect x="63.3" y="163.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.3" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.06%)</title><rect x="63.3" y="147.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="66.3" y="158.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.06%)</title><rect x="63.9" y="147.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="66.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.06%)</title><rect x="63.9" y="131.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="66.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (3 samples, 0.06%)</title><rect x="63.9" y="115.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.9" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (3 samples, 0.06%)</title><rect x="63.9" y="99.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="66.9" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.04%)</title><rect x="64.1" y="83.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="67.1" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.04%)</title><rect x="64.1" y="67.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.1" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.04%)</title><rect x="64.1" y="51.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.1" y="62.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.04%)</title><rect x="64.1" y="35.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="67.1" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (24 samples, 0.45%)</title><rect x="64.8" y="291.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="67.8" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (19 samples, 0.35%)</title><rect x="64.8" y="275.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.8" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (19 samples, 0.35%)</title><rect x="64.8" y="259.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.8" y="270.0"></text>
</g>
<g>
<title>int[] (6 samples, 0.11%)</title><rect x="65.0" y="243.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="68.0" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.21%)</title><rect x="66.6" y="243.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="69.6" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (5 samples, 0.09%)</title><rect x="69.0" y="275.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="72.0" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (5 samples, 0.09%)</title><rect x="69.0" y="259.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.0" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (5 samples, 0.09%)</title><rect x="69.0" y="243.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.0" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (4 samples, 0.07%)</title><rect x="69.0" y="227.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.0" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (4 samples, 0.07%)</title><rect x="69.0" y="211.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.0" y="222.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (2 samples, 0.04%)</title><rect x="69.0" y="195.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="72.0" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2 samples, 0.04%)</title><rect x="69.4" y="195.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="72.4" y="206.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.04%)</title><rect x="69.4" y="179.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.04%)</title><rect x="69.4" y="163.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (2 samples, 0.04%)</title><rect x="69.4" y="147.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="72.4" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (2 samples, 0.04%)</title><rect x="69.4" y="131.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.4" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.04%)</title><rect x="69.4" y="115.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.4" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.04%)</title><rect x="69.4" y="99.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.4" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.04%)</title><rect x="69.4" y="83.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="72.4" y="94.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.04%)</title><rect x="69.4" y="67.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="72.4" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (15 samples, 0.28%)</title><rect x="70.3" y="291.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.3" y="302.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (15 samples, 0.28%)</title><rect x="70.3" y="275.0" width="3.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="73.3" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (2 samples, 0.04%)</title><rect x="73.6" y="323.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.6" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (2 samples, 0.04%)</title><rect x="73.6" y="307.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="76.6" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (4 samples, 0.07%)</title><rect x="74.1" y="435.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.1" y="446.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (4 samples, 0.07%)</title><rect x="74.1" y="419.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="77.1" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (4 samples, 0.07%)</title><rect x="74.9" y="499.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.9" y="510.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (4 samples, 0.07%)</title><rect x="74.9" y="483.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="77.9" y="494.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (28 samples, 0.52%)</title><rect x="76.0" y="579.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="79.0" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$$Lambda$97/71728768.readString (2 samples, 0.04%)</title><rect x="76.0" y="563.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="79.0" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (2 samples, 0.04%)</title><rect x="76.0" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.0" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.04%)</title><rect x="76.0" y="531.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.0" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.04%)</title><rect x="76.0" y="515.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="79.0" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (2 samples, 0.04%)</title><rect x="76.0" y="499.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.0" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (2 samples, 0.04%)</title><rect x="76.0" y="483.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.0" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (2 samples, 0.04%)</title><rect x="76.0" y="467.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.04%)</title><rect x="76.0" y="451.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="79.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="76.0" y="435.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.0" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (26 samples, 0.48%)</title><rect x="76.5" y="563.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.5" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (26 samples, 0.48%)</title><rect x="76.5" y="547.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.5" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (26 samples, 0.48%)</title><rect x="76.5" y="531.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="79.5" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (25 samples, 0.47%)</title><rect x="76.7" y="515.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="79.7" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (3 samples, 0.06%)</title><rect x="76.7" y="499.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="79.7" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (3 samples, 0.06%)</title><rect x="76.7" y="483.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.7" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (3 samples, 0.06%)</title><rect x="76.7" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="79.7" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (2 samples, 0.04%)</title><rect x="76.9" y="451.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="79.9" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (2 samples, 0.04%)</title><rect x="76.9" y="435.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="79.9" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (2 samples, 0.04%)</title><rect x="76.9" y="419.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.9" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (2 samples, 0.04%)</title><rect x="76.9" y="403.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.9" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (22 samples, 0.41%)</title><rect x="77.4" y="499.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.4" y="510.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (2 samples, 0.04%)</title><rect x="77.6" y="483.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="80.6" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (8 samples, 0.15%)</title><rect x="78.0" y="483.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="81.0" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (8 samples, 0.15%)</title><rect x="78.0" y="467.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="81.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="78.2" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="78.2" y="435.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="81.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="78.2" y="419.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="78.2" y="403.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.04%)</title><rect x="78.2" y="387.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="81.2" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.04%)</title><rect x="78.2" y="371.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="78.2" y="355.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="81.2" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.07%)</title><rect x="78.9" y="451.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="81.9" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.07%)</title><rect x="78.9" y="435.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.9" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.07%)</title><rect x="78.9" y="419.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="81.9" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.04%)</title><rect x="78.9" y="403.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="81.9" y="414.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (2 samples, 0.04%)</title><rect x="78.9" y="387.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="81.9" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.04%)</title><rect x="79.3" y="403.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="82.3" y="414.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2 samples, 0.04%)</title><rect x="79.3" y="387.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="82.3" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (11 samples, 0.21%)</title><rect x="79.8" y="483.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.8" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (11 samples, 0.21%)</title><rect x="79.8" y="467.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="82.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (11 samples, 0.21%)</title><rect x="79.8" y="451.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (9 samples, 0.17%)</title><rect x="79.8" y="435.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.8" y="446.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (9 samples, 0.17%)</title><rect x="79.8" y="419.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.8" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.06%)</title><rect x="80.0" y="403.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="83.0" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.06%)</title><rect x="80.0" y="387.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="83.0" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (3 samples, 0.06%)</title><rect x="80.0" y="371.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.0" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (3 samples, 0.06%)</title><rect x="80.0" y="355.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.0" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (3 samples, 0.06%)</title><rect x="80.0" y="339.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="83.0" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (3 samples, 0.06%)</title><rect x="80.0" y="323.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.06%)</title><rect x="80.0" y="307.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="83.0" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.06%)</title><rect x="80.0" y="291.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.0" y="302.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="80.0" y="275.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="83.0" y="286.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (5 samples, 0.09%)</title><rect x="80.7" y="403.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.7" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toCharArray (2 samples, 0.04%)</title><rect x="80.9" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toChars (2 samples, 0.04%)</title><rect x="80.9" y="371.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="83.9" y="382.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.04%)</title><rect x="80.9" y="355.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="83.9" y="366.0"></text>
</g>
<g>
<title>javax/management/ObjectName.addProperty (2 samples, 0.04%)</title><rect x="81.3" y="387.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="84.3" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.04%)</title><rect x="81.3" y="371.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="84.3" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.04%)</title><rect x="81.3" y="355.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.3" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.04%)</title><rect x="81.3" y="339.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.3" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2 samples, 0.04%)</title><rect x="81.3" y="323.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="84.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor36.invoke (2 samples, 0.04%)</title><rect x="81.8" y="435.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="84.8" y="446.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.readObject (2 samples, 0.04%)</title><rect x="81.8" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.8" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadObject (2 samples, 0.04%)</title><rect x="81.8" y="403.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="84.8" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadFields (2 samples, 0.04%)</title><rect x="81.8" y="387.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.8" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.04%)</title><rect x="81.8" y="371.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.8" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (2 samples, 0.04%)</title><rect x="81.8" y="355.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="84.8" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (2 samples, 0.04%)</title><rect x="81.8" y="339.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.8" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (2 samples, 0.04%)</title><rect x="81.8" y="323.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="84.8" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (2 samples, 0.04%)</title><rect x="81.8" y="307.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="84.8" y="318.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (2 samples, 0.04%)</title><rect x="81.8" y="291.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="84.8" y="302.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (43 samples, 0.80%)</title><rect x="82.2" y="579.0" width="9.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="85.2" y="590.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (42 samples, 0.78%)</title><rect x="82.4" y="563.0" width="9.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.4" y="574.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (41 samples, 0.76%)</title><rect x="82.6" y="547.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.6" y="558.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (40 samples, 0.75%)</title><rect x="82.9" y="531.0" width="8.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.9" y="542.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (40 samples, 0.75%)</title><rect x="82.9" y="515.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="85.9" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (40 samples, 0.75%)</title><rect x="82.9" y="499.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.9" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (28 samples, 0.52%)</title><rect x="82.9" y="483.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="85.9" y="494.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.13%)</title><rect x="82.9" y="467.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="85.9" y="478.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.17%)</title><rect x="84.4" y="467.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="87.4" y="478.0"></text>
</g>
<g>
<title>char[] (7 samples, 0.13%)</title><rect x="86.4" y="467.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="89.4" y="478.0"></text>
</g>
<g>
<title>java.io.DataOutputStream (2 samples, 0.04%)</title><rect x="88.1" y="467.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="91.1" y="478.0"></text>
</g>
<g>
<title>java/io/DataOutputStream.&lt;init&gt; (2 samples, 0.04%)</title><rect x="88.6" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.6" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (4 samples, 0.07%)</title><rect x="89.0" y="483.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="92.0" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.06%)</title><rect x="89.2" y="467.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="92.2" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$ReplaceTable.&lt;init&gt; (8 samples, 0.15%)</title><rect x="89.9" y="483.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="92.9" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="90.1" y="467.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="93.1" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (5 samples, 0.09%)</title><rect x="90.6" y="467.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="93.6" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.07%)</title><rect x="90.8" y="451.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="93.8" y="462.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (65 samples, 1.21%)</title><rect x="91.7" y="643.0" width="14.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="94.7" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (65 samples, 1.21%)</title><rect x="91.7" y="627.0" width="14.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.7" y="638.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (65 samples, 1.21%)</title><rect x="91.7" y="611.0" width="14.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.7" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap (2 samples, 0.04%)</title><rect x="91.7" y="595.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="94.7" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (63 samples, 1.18%)</title><rect x="92.1" y="595.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.1" y="606.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$BlockDataInputStream (3 samples, 0.06%)</title><rect x="92.1" y="579.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="95.1" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (53 samples, 0.99%)</title><rect x="92.8" y="579.0" width="11.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.8" y="590.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.21%)</title><rect x="92.8" y="563.0" width="2.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="95.8" y="574.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.19%)</title><rect x="95.2" y="563.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="98.2" y="574.0"></text>
</g>
<g>
<title>char[] (11 samples, 0.21%)</title><rect x="97.4" y="563.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="100.4" y="574.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.04%)</title><rect x="99.8" y="563.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="102.8" y="574.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (17 samples, 0.32%)</title><rect x="100.7" y="563.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="103.7" y="574.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.13%)</title><rect x="100.7" y="547.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="103.7" y="558.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.19%)</title><rect x="102.2" y="547.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="105.2" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (7 samples, 0.13%)</title><rect x="104.4" y="579.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="107.4" y="590.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable$HandleList[] (4 samples, 0.07%)</title><rect x="104.4" y="563.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="107.4" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.06%)</title><rect x="105.3" y="563.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="108.3" y="574.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (4,925 samples, 91.87%)</title><rect x="106.0" y="803.0" width="1084.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="109.0" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (124 samples, 2.31%)</title><rect x="106.0" y="787.0" width="27.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="109.0" y="798.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (124 samples, 2.31%)</title><rect x="106.0" y="771.0" width="27.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="109.0" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (4,801 samples, 89.55%)</title><rect x="133.3" y="787.0" width="1056.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="136.3" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (4,801 samples, 89.55%)</title><rect x="133.3" y="771.0" width="1056.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.3" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4,801 samples, 89.55%)</title><rect x="133.3" y="755.0" width="1056.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.3" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,354 samples, 43.91%)</title><rect x="133.3" y="739.0" width="518.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="136.3" y="750.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,354 samples, 43.91%)</title><rect x="133.3" y="723.0" width="518.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.3" y="734.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (2,110 samples, 39.36%)</title><rect x="133.3" y="707.0" width="464.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.3" y="718.0">RequestHandler2_handleEntityPut.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (558 samples, 10.41%)</title><rect x="133.3" y="691.0" width="122.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.3" y="702.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (558 samples, 10.41%)</title><rect x="133.3" y="675.0" width="122.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="136.3" y="686.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (402 samples, 7.50%)</title><rect x="133.3" y="659.0" width="88.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="136.3" y="670.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (402 samples, 7.50%)</title><rect x="133.3" y="643.0" width="88.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.3" y="654.0">one/nio/ut..</text>
</g>
<g>
<title>byte[] (402 samples, 7.50%)</title><rect x="133.3" y="627.0" width="88.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="136.3" y="638.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (156 samples, 2.91%)</title><rect x="221.7" y="659.0" width="34.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="224.7" y="670.0">on..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (156 samples, 2.91%)</title><rect x="221.7" y="643.0" width="34.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="224.7" y="654.0">on..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (255 samples, 4.76%)</title><rect x="256.1" y="691.0" width="56.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="259.1" y="702.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (255 samples, 4.76%)</title><rect x="256.1" y="675.0" width="56.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.1" y="686.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.substring (255 samples, 4.76%)</title><rect x="256.1" y="659.0" width="56.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="259.1" y="670.0">java/l..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (255 samples, 4.76%)</title><rect x="256.1" y="643.0" width="56.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.1" y="654.0">java/l..</text>
</g>
<g>
<title>java.lang.String (107 samples, 2.00%)</title><rect x="256.1" y="627.0" width="23.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="259.1" y="638.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (148 samples, 2.76%)</title><rect x="279.6" y="627.0" width="32.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="282.6" y="638.0">ja..</text>
</g>
<g>
<title>byte[] (148 samples, 2.76%)</title><rect x="279.6" y="611.0" width="32.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="282.6" y="622.0">by..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut (1,297 samples, 24.19%)</title><rect x="312.2" y="691.0" width="285.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="315.2" y="702.0">ru/mail/polis/service/alexander/marash..</text>
</g>
<g>
<title>java/lang/String.getBytes (122 samples, 2.28%)</title><rect x="312.2" y="675.0" width="26.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="315.2" y="686.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (122 samples, 2.28%)</title><rect x="312.2" y="659.0" width="26.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="315.2" y="670.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (122 samples, 2.28%)</title><rect x="312.2" y="643.0" width="26.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="315.2" y="654.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (122 samples, 2.28%)</title><rect x="312.2" y="627.0" width="26.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="315.2" y="638.0">j..</text>
</g>
<g>
<title>byte[] (122 samples, 2.28%)</title><rect x="312.2" y="611.0" width="26.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="315.2" y="622.0">b..</text>
</g>
<g>
<title>one.nio.http.Response (90 samples, 1.68%)</title><rect x="339.1" y="675.0" width="19.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="342.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (429 samples, 8.00%)</title><rect x="358.9" y="675.0" width="94.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="361.9" y="686.0">one/nio/htt..</text>
</g>
<g>
<title>byte[] (168 samples, 3.13%)</title><rect x="358.9" y="659.0" width="36.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="361.9" y="670.0">byt..</text>
</g>
<g>
<title>java.lang.String[] (154 samples, 2.87%)</title><rect x="395.8" y="659.0" width="33.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="398.8" y="670.0">ja..</text>
</g>
<g>
<title>java.lang.String (107 samples, 2.00%)</title><rect x="429.7" y="659.0" width="23.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="432.7" y="670.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (656 samples, 12.24%)</title><rect x="453.3" y="675.0" width="144.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="456.3" y="686.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (383 samples, 7.14%)</title><rect x="453.3" y="659.0" width="84.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="456.3" y="670.0">java/nio/H..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (383 samples, 7.14%)</title><rect x="453.3" y="643.0" width="84.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="456.3" y="654.0">java.nio.H..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (8 samples, 0.15%)</title><rect x="537.6" y="659.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="540.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (8 samples, 0.15%)</title><rect x="537.6" y="643.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="540.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (8 samples, 0.15%)</title><rect x="537.6" y="627.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="540.6" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.15%)</title><rect x="537.6" y="611.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="540.6" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (8 samples, 0.15%)</title><rect x="537.6" y="595.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="540.6" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (3 samples, 0.06%)</title><rect x="537.6" y="579.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="540.6" y="590.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (3 samples, 0.06%)</title><rect x="537.6" y="563.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="540.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (5 samples, 0.09%)</title><rect x="538.3" y="579.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="541.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (5 samples, 0.09%)</title><rect x="538.3" y="563.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="541.3" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (5 samples, 0.09%)</title><rect x="538.3" y="547.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="541.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.upsert (265 samples, 4.94%)</title><rect x="539.4" y="659.0" width="58.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="542.4" y="670.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (21 samples, 0.39%)</title><rect x="539.4" y="643.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="542.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (21 samples, 0.39%)</title><rect x="539.4" y="627.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="542.4" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (9 samples, 0.17%)</title><rect x="539.4" y="611.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="542.4" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (12 samples, 0.22%)</title><rect x="541.3" y="611.0" width="2.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="544.3" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Value (92 samples, 1.72%)</title><rect x="544.0" y="643.0" width="20.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="547.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (152 samples, 2.84%)</title><rect x="564.2" y="643.0" width="33.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="567.2" y="654.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (152 samples, 2.84%)</title><rect x="564.2" y="627.0" width="33.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="567.2" y="638.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (152 samples, 2.84%)</title><rect x="564.2" y="611.0" width="33.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="567.2" y="622.0">ja..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (244 samples, 4.55%)</title><rect x="597.7" y="707.0" width="53.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="600.7" y="718.0">one/n..</text>
</g>
<g>
<title>java/lang/String.substring (244 samples, 4.55%)</title><rect x="597.7" y="691.0" width="53.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="600.7" y="702.0">java/..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (244 samples, 4.55%)</title><rect x="597.7" y="675.0" width="53.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.7" y="686.0">java/..</text>
</g>
<g>
<title>java.lang.String (105 samples, 1.96%)</title><rect x="597.7" y="659.0" width="23.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="600.7" y="670.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (139 samples, 2.59%)</title><rect x="620.8" y="659.0" width="30.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="623.8" y="670.0">ja..</text>
</g>
<g>
<title>byte[] (139 samples, 2.59%)</title><rect x="620.8" y="643.0" width="30.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="623.8" y="654.0">by..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,067 samples, 19.90%)</title><rect x="651.4" y="739.0" width="234.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="654.4" y="750.0">one/nio/http/HttpSession.parseR..</text>
</g>
<g>
<title>one.nio.http.Request (186 samples, 3.47%)</title><rect x="651.4" y="723.0" width="40.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="654.4" y="734.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (305 samples, 5.69%)</title><rect x="692.3" y="723.0" width="67.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.3" y="734.0">one/nio..</text>
</g>
<g>
<title>java.lang.String[] (305 samples, 5.69%)</title><rect x="692.3" y="707.0" width="67.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="695.3" y="718.0">java.la..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (576 samples, 10.74%)</title><rect x="759.5" y="723.0" width="126.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="762.5" y="734.0">one/nio/util/Utf..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (576 samples, 10.74%)</title><rect x="759.5" y="707.0" width="126.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="762.5" y="718.0">one/nio/util/Utf..</text>
</g>
<g>
<title>char[] (318 samples, 5.93%)</title><rect x="759.5" y="691.0" width="70.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="762.5" y="702.0">char[]</text>
</g>
<g>
<title>java.lang.String (109 samples, 2.03%)</title><rect x="829.5" y="691.0" width="24.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="832.5" y="702.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (149 samples, 2.78%)</title><rect x="853.5" y="691.0" width="32.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.5" y="702.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (149 samples, 2.78%)</title><rect x="853.5" y="675.0" width="32.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.5" y="686.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (149 samples, 2.78%)</title><rect x="853.5" y="659.0" width="32.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.5" y="670.0">ja..</text>
</g>
<g>
<title>byte[] (149 samples, 2.78%)</title><rect x="853.5" y="643.0" width="32.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="856.5" y="654.0">by..</text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (120 samples, 2.24%)</title><rect x="886.3" y="739.0" width="26.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="889.3" y="750.0">o..</text>
</g>
<g>
<title>byte[] (120 samples, 2.24%)</title><rect x="886.3" y="723.0" width="26.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="889.3" y="734.0">b..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (185 samples, 3.45%)</title><rect x="912.7" y="739.0" width="40.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="915.7" y="750.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (185 samples, 3.45%)</title><rect x="912.7" y="723.0" width="40.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.7" y="734.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (185 samples, 3.45%)</title><rect x="912.7" y="707.0" width="40.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="915.7" y="718.0">jav..</text>
</g>
<g>
<title>java.lang.String (94 samples, 1.75%)</title><rect x="912.7" y="691.0" width="20.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="915.7" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (91 samples, 1.70%)</title><rect x="933.4" y="691.0" width="20.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="936.4" y="702.0"></text>
</g>
<g>
<title>byte[] (91 samples, 1.70%)</title><rect x="933.4" y="675.0" width="20.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="936.4" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,075 samples, 20.05%)</title><rect x="953.4" y="739.0" width="236.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="956.4" y="750.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,075 samples, 20.05%)</title><rect x="953.4" y="723.0" width="236.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="956.4" y="734.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (451 samples, 8.41%)</title><rect x="953.4" y="707.0" width="99.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="956.4" y="718.0">char[]</text>
</g>
<g>
<title>java.lang.String (249 samples, 4.64%)</title><rect x="1052.7" y="707.0" width="54.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1055.7" y="718.0">java...</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (375 samples, 6.99%)</title><rect x="1107.5" y="707.0" width="82.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1110.5" y="718.0">java/lang..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (375 samples, 6.99%)</title><rect x="1107.5" y="691.0" width="82.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1110.5" y="702.0">java/lang..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (375 samples, 6.99%)</title><rect x="1107.5" y="675.0" width="82.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1110.5" y="686.0">java/lang..</text>
</g>
<g>
<title>byte[] (375 samples, 6.99%)</title><rect x="1107.5" y="659.0" width="82.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1110.5" y="670.0">byte[]</text>
</g>
</g>
</svg>
