<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1094" onload="init(evt)" viewBox="0 0 1200 1094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1077"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1077"> </text>
<g id="frames">
<g>
<title>all (1,542 samples, 100.00%)</title><rect x="10.0" y="1043.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1054.0">all</text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="10.0" y="1027.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1038.0"></text>
</g>
<g>
<title>__GI___open (1 samples, 0.06%)</title><rect x="10.0" y="1011.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="10.0" y="995.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="10.0" y="979.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>__x64_sys_openat (1 samples, 0.06%)</title><rect x="10.0" y="963.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>do_sys_open (1 samples, 0.06%)</title><rect x="10.0" y="947.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>do_filp_open (1 samples, 0.06%)</title><rect x="10.0" y="931.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>path_openat (1 samples, 0.06%)</title><rect x="10.0" y="915.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>link_path_walk.part.33 (1 samples, 0.06%)</title><rect x="10.0" y="899.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>walk_component (1 samples, 0.06%)</title><rect x="10.0" y="883.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>lookup_fast (1 samples, 0.06%)</title><rect x="10.0" y="867.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>kernfs_dop_revalidate (1 samples, 0.06%)</title><rect x="10.0" y="851.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.06%)</title><rect x="10.8" y="1027.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/Thread.run (13 samples, 0.84%)</title><rect x="11.5" y="1027.0" width="10.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (13 samples, 0.84%)</title><rect x="11.5" y="1011.0" width="10.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (13 samples, 0.84%)</title><rect x="11.5" y="995.0" width="10.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.5" y="1006.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (13 samples, 0.84%)</title><rect x="11.5" y="979.0" width="10.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.5" y="990.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (13 samples, 0.84%)</title><rect x="11.5" y="963.0" width="10.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.5" y="974.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$92/1484123564.run (13 samples, 0.84%)</title><rect x="11.5" y="947.0" width="10.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.5" y="958.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (13 samples, 0.84%)</title><rect x="11.5" y="931.0" width="10.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.5" y="942.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (13 samples, 0.84%)</title><rect x="11.5" y="915.0" width="10.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.5" y="926.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (13 samples, 0.84%)</title><rect x="11.5" y="899.0" width="10.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.5" y="910.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (2 samples, 0.13%)</title><rect x="11.5" y="883.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.5" y="894.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.read (2 samples, 0.13%)</title><rect x="11.5" y="867.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.5" y="878.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.fill (2 samples, 0.13%)</title><rect x="11.5" y="851.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="14.5" y="862.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.read (2 samples, 0.13%)</title><rect x="11.5" y="835.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.5" y="846.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.read (2 samples, 0.13%)</title><rect x="11.5" y="819.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.5" y="830.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.socketRead (1 samples, 0.06%)</title><rect x="12.3" y="803.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.3" y="814.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.socketRead0 (1 samples, 0.06%)</title><rect x="12.3" y="787.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="15.3" y="798.0"></text>
</g>
<g>
<title>__libc_poll (1 samples, 0.06%)</title><rect x="12.3" y="771.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="15.3" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="12.3" y="755.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="15.3" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="12.3" y="739.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="15.3" y="750.0"></text>
</g>
<g>
<title>__x64_sys_poll (1 samples, 0.06%)</title><rect x="12.3" y="723.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="15.3" y="734.0"></text>
</g>
<g>
<title>do_sys_poll (1 samples, 0.06%)</title><rect x="12.3" y="707.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="15.3" y="718.0"></text>
</g>
<g>
<title>poll_schedule_timeout.constprop.11 (1 samples, 0.06%)</title><rect x="12.3" y="691.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="15.3" y="702.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.06%)</title><rect x="12.3" y="675.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="15.3" y="686.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.06%)</title><rect x="12.3" y="659.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="15.3" y="670.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="12.3" y="643.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="15.3" y="654.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.06%)</title><rect x="12.3" y="627.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="15.3" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (11 samples, 0.71%)</title><rect x="13.1" y="883.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.1" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (9 samples, 0.58%)</title><rect x="13.1" y="867.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="16.1" y="878.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (9 samples, 0.58%)</title><rect x="13.1" y="851.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="16.1" y="862.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (9 samples, 0.58%)</title><rect x="13.1" y="835.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="16.1" y="846.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (9 samples, 0.58%)</title><rect x="13.1" y="819.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.1" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.19%)</title><rect x="13.1" y="803.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.19%)</title><rect x="13.1" y="787.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (1 samples, 0.06%)</title><rect x="13.1" y="771.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="16.1" y="782.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttribute (1 samples, 0.06%)</title><rect x="13.1" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="16.1" y="766.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 0.06%)</title><rect x="13.1" y="739.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="16.1" y="750.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (1 samples, 0.06%)</title><rect x="13.1" y="723.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.1" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (1 samples, 0.06%)</title><rect x="13.1" y="707.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="16.1" y="718.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttribute (1 samples, 0.06%)</title><rect x="13.1" y="691.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.1" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.cloneObjectName (1 samples, 0.06%)</title><rect x="13.1" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="16.1" y="686.0"></text>
</g>
<g>
<title>javax/management/ObjectName.getInstance (1 samples, 0.06%)</title><rect x="13.1" y="659.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="16.1" y="670.0"></text>
</g>
<g>
<title>java/lang/Object.equals (1 samples, 0.06%)</title><rect x="13.1" y="643.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (1 samples, 0.06%)</title><rect x="13.8" y="771.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="16.8" y="782.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttributes (1 samples, 0.06%)</title><rect x="13.8" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="16.8" y="766.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 0.06%)</title><rect x="13.8" y="739.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.8" y="750.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (1 samples, 0.06%)</title><rect x="13.8" y="723.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="16.8" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (1 samples, 0.06%)</title><rect x="13.8" y="707.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.8" y="718.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttributes (1 samples, 0.06%)</title><rect x="13.8" y="691.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="16.8" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttributes (1 samples, 0.06%)</title><rect x="13.8" y="675.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="16.8" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getMBean (1 samples, 0.06%)</title><rect x="13.8" y="659.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.8" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieve (1 samples, 0.06%)</title><rect x="13.8" y="643.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.8" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieveNamedObject (1 samples, 0.06%)</title><rect x="13.8" y="627.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="16.8" y="638.0"></text>
</g>
<g>
<title>javax/management/ObjectName.getCanonicalKeyPropertyListString (1 samples, 0.06%)</title><rect x="13.8" y="611.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor40.invoke (1 samples, 0.06%)</title><rect x="14.6" y="771.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="17.6" y="782.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (1 samples, 0.06%)</title><rect x="14.6" y="755.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.6" y="766.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 0.06%)</title><rect x="14.6" y="739.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.6" y="750.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (1 samples, 0.06%)</title><rect x="14.6" y="723.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.6" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (1 samples, 0.06%)</title><rect x="14.6" y="707.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.6" y="718.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (1 samples, 0.06%)</title><rect x="14.6" y="691.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.6" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (1 samples, 0.06%)</title><rect x="14.6" y="675.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.6" y="686.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (1 samples, 0.06%)</title><rect x="14.6" y="659.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.6" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (1 samples, 0.06%)</title><rect x="14.6" y="643.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.6" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (1 samples, 0.06%)</title><rect x="14.6" y="627.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.6" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (1 samples, 0.06%)</title><rect x="14.6" y="611.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="17.6" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.06%)</title><rect x="14.6" y="595.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.6" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.06%)</title><rect x="14.6" y="579.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.6" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.06%)</title><rect x="14.6" y="563.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.6" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.06%)</title><rect x="14.6" y="547.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.6" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.06%)</title><rect x="14.6" y="531.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.6" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (1 samples, 0.06%)</title><rect x="14.6" y="515.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.6" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.06%)</title><rect x="14.6" y="499.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.6" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (1 samples, 0.06%)</title><rect x="14.6" y="483.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.6" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.06%)</title><rect x="14.6" y="467.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.6" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (1 samples, 0.06%)</title><rect x="14.6" y="451.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.6" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.06%)</title><rect x="14.6" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.6" y="446.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (4 samples, 0.26%)</title><rect x="15.4" y="803.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.4" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.19%)</title><rect x="15.4" y="787.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.4" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.19%)</title><rect x="15.4" y="771.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.4" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (3 samples, 0.19%)</title><rect x="15.4" y="755.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.4" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (3 samples, 0.19%)</title><rect x="15.4" y="739.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.4" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.06%)</title><rect x="15.4" y="723.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.4" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.06%)</title><rect x="15.4" y="707.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.4" y="718.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.resolveClass (1 samples, 0.06%)</title><rect x="15.4" y="691.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.4" y="702.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader.loadClass (1 samples, 0.06%)</title><rect x="15.4" y="675.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.4" y="686.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader$2.loadClass (1 samples, 0.06%)</title><rect x="15.4" y="659.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.4" y="670.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClass (1 samples, 0.06%)</title><rect x="15.4" y="643.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.4" y="654.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClass (1 samples, 0.06%)</title><rect x="15.4" y="627.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 0.06%)</title><rect x="15.4" y="611.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.4" y="622.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 0.06%)</title><rect x="15.4" y="595.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.4" y="606.0"></text>
</g>
<g>
<title>JVM_FindClassFromCaller (1 samples, 0.06%)</title><rect x="15.4" y="579.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="18.4" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (2 samples, 0.13%)</title><rect x="16.1" y="723.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.1" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (2 samples, 0.13%)</title><rect x="16.1" y="707.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.1" y="718.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.13%)</title><rect x="16.1" y="691.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.13%)</title><rect x="16.1" y="675.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (2 samples, 0.13%)</title><rect x="16.1" y="659.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.1" y="670.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (2 samples, 0.13%)</title><rect x="16.1" y="643.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.1" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadObject (1 samples, 0.06%)</title><rect x="16.1" y="627.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.1" y="638.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (1 samples, 0.06%)</title><rect x="16.9" y="627.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.9" y="638.0"></text>
</g>
<g>
<title>javax/management/ObjectName.setCanonicalName (1 samples, 0.06%)</title><rect x="16.9" y="611.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/SharedSecrets.getJavaObjectInputStreamReadString (1 samples, 0.06%)</title><rect x="17.7" y="787.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.ensureClassInitialized (1 samples, 0.06%)</title><rect x="17.7" y="771.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="20.7" y="782.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (1 samples, 0.06%)</title><rect x="18.4" y="803.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.4" y="814.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.releaseOutputStream (1 samples, 0.06%)</title><rect x="19.2" y="803.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.2" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.flush (1 samples, 0.06%)</title><rect x="19.2" y="787.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="22.2" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.flush (1 samples, 0.06%)</title><rect x="19.2" y="771.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.2" y="782.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.06%)</title><rect x="19.2" y="755.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.2" y="766.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.06%)</title><rect x="19.2" y="739.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.2" y="750.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.write (1 samples, 0.06%)</title><rect x="19.2" y="723.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.2" y="734.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite (1 samples, 0.06%)</title><rect x="19.2" y="707.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.2" y="718.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite0 (1 samples, 0.06%)</title><rect x="19.2" y="691.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.2" y="702.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.06%)</title><rect x="19.2" y="675.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="22.2" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="19.2" y="659.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="22.2" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="19.2" y="643.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="22.2" y="654.0"></text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.06%)</title><rect x="19.2" y="627.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="22.2" y="638.0"></text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.06%)</title><rect x="19.2" y="611.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="22.2" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.06%)</title><rect x="19.2" y="595.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="22.2" y="606.0"></text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.06%)</title><rect x="19.2" y="579.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="22.2" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.06%)</title><rect x="19.2" y="563.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="22.2" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.06%)</title><rect x="19.2" y="547.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="22.2" y="558.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.06%)</title><rect x="19.2" y="531.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="22.2" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.06%)</title><rect x="19.2" y="515.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="22.2" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.06%)</title><rect x="19.2" y="499.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="22.2" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.06%)</title><rect x="19.2" y="483.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="22.2" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.06%)</title><rect x="19.2" y="467.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="22.2" y="478.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.06%)</title><rect x="19.2" y="451.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="22.2" y="462.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.06%)</title><rect x="19.2" y="435.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="22.2" y="446.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.06%)</title><rect x="19.2" y="419.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="22.2" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.06%)</title><rect x="19.2" y="403.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="22.2" y="414.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.06%)</title><rect x="19.2" y="387.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="22.2" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.06%)</title><rect x="19.2" y="371.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="22.2" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.06%)</title><rect x="19.2" y="355.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="22.2" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.20 (1 samples, 0.06%)</title><rect x="19.2" y="339.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="22.2" y="350.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="19.2" y="323.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="22.2" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="19.2" y="307.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="22.2" y="318.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="19.2" y="291.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="22.2" y="302.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.06%)</title><rect x="19.2" y="275.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="22.2" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.06%)</title><rect x="19.2" y="259.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="22.2" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.06%)</title><rect x="19.2" y="243.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="22.2" y="254.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.06%)</title><rect x="19.2" y="227.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="22.2" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.06%)</title><rect x="19.2" y="211.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="22.2" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.06%)</title><rect x="19.2" y="195.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="22.2" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.06%)</title><rect x="19.2" y="179.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="22.2" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.06%)</title><rect x="19.2" y="163.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="22.2" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.06%)</title><rect x="19.2" y="147.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="22.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.06%)</title><rect x="19.2" y="131.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="22.2" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.06%)</title><rect x="19.2" y="115.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="22.2" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.06%)</title><rect x="19.2" y="99.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="22.2" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.06%)</title><rect x="19.2" y="83.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="22.2" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.06%)</title><rect x="19.2" y="67.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="22.2" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.06%)</title><rect x="19.2" y="51.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="22.2" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="19.2" y="35.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="22.2" y="46.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (2 samples, 0.13%)</title><rect x="19.9" y="867.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.9" y="878.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (2 samples, 0.13%)</title><rect x="19.9" y="851.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.9" y="862.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (2 samples, 0.13%)</title><rect x="19.9" y="835.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.9" y="846.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (2 samples, 0.13%)</title><rect x="19.9" y="819.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.9" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (2 samples, 0.13%)</title><rect x="19.9" y="803.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.9" y="814.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,465 samples, 95.01%)</title><rect x="21.5" y="1027.0" width="1121.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.5" y="1038.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="26.1" y="1011.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="29.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="26.1" y="995.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="29.1" y="1006.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="26.1" y="979.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="29.1" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.13%)</title><rect x="26.8" y="1011.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="29.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (97 samples, 6.29%)</title><rect x="28.4" y="1011.0" width="74.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.4" y="1022.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (88 samples, 5.71%)</title><rect x="35.3" y="995.0" width="67.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="38.3" y="1006.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.13%)</title><rect x="48.3" y="979.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="51.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 4.02%)</title><rect x="49.8" y="979.0" width="47.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="52.8" y="990.0">[unk..</text>
</g>
<g>
<title>[unknown] (10 samples, 0.65%)</title><rect x="49.8" y="963.0" width="7.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="52.8" y="974.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.45%)</title><rect x="49.8" y="947.0" width="5.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="52.8" y="958.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.26%)</title><rect x="52.1" y="931.0" width="3.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="55.1" y="942.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.26%)</title><rect x="52.1" y="915.0" width="3.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="55.1" y="926.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.19%)</title><rect x="55.1" y="947.0" width="2.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="58.1" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.13%)</title><rect x="55.9" y="931.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="58.9" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.13%)</title><rect x="55.9" y="915.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="58.9" y="926.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.13%)</title><rect x="55.9" y="899.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="58.9" y="910.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.13%)</title><rect x="55.9" y="883.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="58.9" y="894.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.13%)</title><rect x="55.9" y="867.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="58.9" y="878.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (1 samples, 0.06%)</title><rect x="55.9" y="851.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="58.9" y="862.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.06%)</title><rect x="55.9" y="835.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="58.9" y="846.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.06%)</title><rect x="55.9" y="819.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="58.9" y="830.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.06%)</title><rect x="55.9" y="803.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="58.9" y="814.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.06%)</title><rect x="55.9" y="787.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="58.9" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.06%)</title><rect x="56.7" y="851.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="59.7" y="862.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.26%)</title><rect x="57.4" y="963.0" width="3.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="60.4" y="974.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.19%)</title><rect x="60.5" y="963.0" width="2.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="63.5" y="974.0"></text>
</g>
<g>
<title>epoll_wait (45 samples, 2.92%)</title><rect x="62.8" y="963.0" width="34.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="65.8" y="974.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 2.01%)</title><rect x="73.5" y="947.0" width="23.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="76.5" y="958.0">e..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.06%)</title><rect x="73.5" y="931.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="76.5" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 1.95%)</title><rect x="74.3" y="931.0" width="22.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="77.3" y="942.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (26 samples, 1.69%)</title><rect x="77.3" y="915.0" width="19.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="80.3" y="926.0"></text>
</g>
<g>
<title>do_epoll_wait (26 samples, 1.69%)</title><rect x="77.3" y="899.0" width="19.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="80.3" y="910.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.26%)</title><rect x="77.3" y="883.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="80.3" y="894.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.26%)</title><rect x="77.3" y="867.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="80.3" y="878.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.13%)</title><rect x="78.9" y="851.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="81.9" y="862.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="80.4" y="883.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="83.4" y="894.0"></text>
</g>
<g>
<title>ep_poll (21 samples, 1.36%)</title><rect x="81.2" y="883.0" width="16.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="84.2" y="894.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (13 samples, 0.84%)</title><rect x="81.9" y="867.0" width="10.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="84.9" y="878.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.39%)</title><rect x="86.5" y="851.0" width="4.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="89.5" y="862.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (5 samples, 0.32%)</title><rect x="87.3" y="835.0" width="3.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="90.3" y="846.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.13%)</title><rect x="88.8" y="819.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="91.8" y="830.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.06%)</title><rect x="89.6" y="803.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="92.6" y="814.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.06%)</title><rect x="90.4" y="819.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="93.4" y="830.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.06%)</title><rect x="91.1" y="851.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="94.1" y="862.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.06%)</title><rect x="91.9" y="867.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="94.9" y="878.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (6 samples, 0.39%)</title><rect x="92.6" y="867.0" width="4.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="95.6" y="878.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="92.6" y="851.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="95.6" y="862.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.32%)</title><rect x="93.4" y="851.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="96.4" y="862.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.32%)</title><rect x="93.4" y="835.0" width="3.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="96.4" y="846.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.26%)</title><rect x="94.2" y="819.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="97.2" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.13%)</title><rect x="95.7" y="803.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="98.7" y="814.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.06%)</title><rect x="96.5" y="787.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="99.5" y="798.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.06%)</title><rect x="96.5" y="771.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="99.5" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="96.5" y="755.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="99.5" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="96.5" y="739.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="99.5" y="750.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.45%)</title><rect x="97.2" y="979.0" width="5.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="100.2" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,354 samples, 87.81%)</title><rect x="102.6" y="1011.0" width="1036.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="105.6" y="1022.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,340 samples, 86.90%)</title><rect x="113.3" y="995.0" width="1025.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.3" y="1006.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (1 samples, 0.06%)</title><rect x="113.3" y="979.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="116.3" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut (1 samples, 0.06%)</title><rect x="113.3" y="963.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="116.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (1 samples, 0.06%)</title><rect x="113.3" y="947.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="116.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.06%)</title><rect x="113.3" y="931.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.06%)</title><rect x="113.3" y="915.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="116.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.06%)</title><rect x="113.3" y="899.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="116.3" y="910.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (1 samples, 0.06%)</title><rect x="113.3" y="883.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.3" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,116 samples, 72.37%)</title><rect x="114.1" y="979.0" width="854.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.1" y="990.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (4 samples, 0.26%)</title><rect x="117.9" y="963.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.9" y="974.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.19%)</title><rect x="121.0" y="963.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="124.0" y="974.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.13%)</title><rect x="123.3" y="963.0" width="1.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="126.3" y="974.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.13%)</title><rect x="124.8" y="963.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="127.8" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (999 samples, 64.79%)</title><rect x="126.3" y="963.0" width="764.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.3" y="974.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (999 samples, 64.79%)</title><rect x="126.3" y="947.0" width="764.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.3" y="958.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (974 samples, 63.16%)</title><rect x="133.2" y="931.0" width="745.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.2" y="942.0">RequestHandler2_handleEntityPut.handleRequest</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="138.6" y="915.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="141.6" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (736 samples, 47.73%)</title><rect x="139.3" y="915.0" width="563.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="142.3" y="926.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.58%)</title><rect x="142.4" y="899.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.4" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.58%)</title><rect x="142.4" y="883.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.4" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.58%)</title><rect x="142.4" y="867.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.4" y="878.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.13%)</title><rect x="144.7" y="851.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="147.7" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.26%)</title><rect x="146.2" y="851.0" width="3.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="149.2" y="862.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.26%)</title><rect x="146.2" y="835.0" width="3.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="149.2" y="846.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.26%)</title><rect x="146.2" y="819.0" width="3.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="149.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (709 samples, 45.98%)</title><rect x="149.3" y="899.0" width="542.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="152.3" y="910.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.06%)</title><rect x="149.3" y="883.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="152.3" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (34 samples, 2.20%)</title><rect x="150.0" y="883.0" width="26.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.0" y="894.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (17 samples, 1.10%)</title><rect x="163.0" y="867.0" width="13.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="166.0" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (17 samples, 1.10%)</title><rect x="163.0" y="851.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="166.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (17 samples, 1.10%)</title><rect x="163.0" y="835.0" width="13.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.0" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.26%)</title><rect x="173.0" y="819.0" width="3.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="176.0" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (674 samples, 43.71%)</title><rect x="176.1" y="883.0" width="515.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="179.1" y="894.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (674 samples, 43.71%)</title><rect x="176.1" y="867.0" width="515.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="179.1" y="878.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.06%)</title><rect x="178.4" y="851.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="181.4" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.06%)</title><rect x="179.1" y="851.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="182.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (669 samples, 43.39%)</title><rect x="179.9" y="851.0" width="511.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.9" y="862.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (669 samples, 43.39%)</title><rect x="179.9" y="835.0" width="511.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="182.9" y="846.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (13 samples, 0.84%)</title><rect x="186.0" y="819.0" width="10.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="189.0" y="830.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.19%)</title><rect x="186.8" y="803.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="189.8" y="814.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.06%)</title><rect x="189.1" y="803.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="192.1" y="814.0"></text>
</g>
<g>
<title>__memmove_ssse3 (3 samples, 0.19%)</title><rect x="189.8" y="803.0" width="2.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="192.8" y="814.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.26%)</title><rect x="192.1" y="803.0" width="3.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="195.1" y="814.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.06%)</title><rect x="193.7" y="787.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="196.7" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.06%)</title><rect x="194.4" y="787.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="197.4" y="798.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.06%)</title><rect x="195.2" y="803.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="198.2" y="814.0"></text>
</g>
<g>
<title>__libc_send (648 samples, 42.02%)</title><rect x="196.0" y="819.0" width="495.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="199.0" y="830.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (643 samples, 41.70%)</title><rect x="199.8" y="803.0" width="492.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="202.8" y="814.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.06%)</title><rect x="199.8" y="787.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="202.8" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (642 samples, 41.63%)</title><rect x="200.5" y="787.0" width="491.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="203.5" y="798.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.06%)</title><rect x="205.9" y="771.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="208.9" y="782.0"></text>
</g>
<g>
<title>__x64_sys_sendto (634 samples, 41.12%)</title><rect x="206.7" y="771.0" width="485.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="209.7" y="782.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (633 samples, 41.05%)</title><rect x="206.7" y="755.0" width="484.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="209.7" y="766.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="208.2" y="739.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="211.2" y="750.0"></text>
</g>
<g>
<title>fput (3 samples, 0.19%)</title><rect x="209.0" y="739.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="212.0" y="750.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.19%)</title><rect x="209.0" y="723.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="212.0" y="734.0"></text>
</g>
<g>
<title>inet6_sendmsg (3 samples, 0.19%)</title><rect x="211.3" y="739.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="214.3" y="750.0"></text>
</g>
<g>
<title>sock_sendmsg (619 samples, 40.14%)</title><rect x="213.6" y="739.0" width="473.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="216.6" y="750.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.26%)</title><rect x="214.3" y="723.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="217.3" y="734.0"></text>
</g>
<g>
<title>inet6_sendmsg (602 samples, 39.04%)</title><rect x="217.4" y="723.0" width="460.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="220.4" y="734.0">inet6_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.13%)</title><rect x="217.4" y="707.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="220.4" y="718.0"></text>
</g>
<g>
<title>tcp_sendmsg (600 samples, 38.91%)</title><rect x="218.9" y="707.0" width="459.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="221.9" y="718.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="218.9" y="691.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="221.9" y="702.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.06%)</title><rect x="219.7" y="691.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="222.7" y="702.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.06%)</title><rect x="220.4" y="691.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="223.4" y="702.0"></text>
</g>
<g>
<title>tcp_push (3 samples, 0.19%)</title><rect x="221.2" y="691.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="224.2" y="702.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.13%)</title><rect x="223.5" y="691.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="226.5" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (591 samples, 38.33%)</title><rect x="225.0" y="691.0" width="452.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="228.0" y="702.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.13%)</title><rect x="234.2" y="675.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="237.2" y="686.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.06%)</title><rect x="235.7" y="675.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="238.7" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.06%)</title><rect x="236.5" y="675.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="239.5" y="686.0"></text>
</g>
<g>
<title>_copy_from_iter_full (13 samples, 0.84%)</title><rect x="237.3" y="675.0" width="9.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="240.3" y="686.0"></text>
</g>
<g>
<title>copy_user_generic_string (11 samples, 0.71%)</title><rect x="237.3" y="659.0" width="8.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="240.3" y="670.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.13%)</title><rect x="245.7" y="659.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="248.7" y="670.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.06%)</title><rect x="247.2" y="675.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="250.2" y="686.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.06%)</title><rect x="248.0" y="675.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="251.0" y="686.0"></text>
</g>
<g>
<title>sk_page_frag_refill (7 samples, 0.45%)</title><rect x="248.8" y="675.0" width="5.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="251.8" y="686.0"></text>
</g>
<g>
<title>skb_page_frag_refill (6 samples, 0.39%)</title><rect x="249.5" y="659.0" width="4.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="252.5" y="670.0"></text>
</g>
<g>
<title>alloc_pages_current (1 samples, 0.06%)</title><rect x="253.3" y="643.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="256.3" y="654.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="253.3" y="627.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="256.3" y="638.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="253.3" y="611.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="256.3" y="622.0"></text>
</g>
<g>
<title>prep_new_page (1 samples, 0.06%)</title><rect x="253.3" y="595.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="256.3" y="606.0"></text>
</g>
<g>
<title>clear_page_rep (1 samples, 0.06%)</title><rect x="253.3" y="579.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="256.3" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (50 samples, 3.24%)</title><rect x="254.1" y="675.0" width="38.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="257.1" y="686.0">sk_..</text>
</g>
<g>
<title>__alloc_skb (45 samples, 2.92%)</title><rect x="256.4" y="659.0" width="34.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="259.4" y="670.0">__..</text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.06%)</title><rect x="257.2" y="643.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="260.2" y="654.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (20 samples, 1.30%)</title><rect x="257.9" y="643.0" width="15.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="260.9" y="654.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.32%)</title><rect x="259.5" y="627.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="262.5" y="638.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.06%)</title><rect x="262.5" y="611.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="265.5" y="622.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="263.3" y="627.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="266.3" y="638.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.13%)</title><rect x="264.1" y="627.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="267.1" y="638.0"></text>
</g>
<g>
<title>memset (10 samples, 0.65%)</title><rect x="265.6" y="627.0" width="7.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="268.6" y="638.0"></text>
</g>
<g>
<title>__ksize (10 samples, 0.65%)</title><rect x="273.2" y="643.0" width="7.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="276.2" y="654.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="280.9" y="643.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="283.9" y="654.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.39%)</title><rect x="281.7" y="643.0" width="4.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="284.7" y="654.0"></text>
</g>
<g>
<title>memset (5 samples, 0.32%)</title><rect x="286.3" y="643.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="289.3" y="654.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.06%)</title><rect x="290.1" y="643.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="293.1" y="654.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.06%)</title><rect x="290.8" y="659.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="293.8" y="670.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.06%)</title><rect x="291.6" y="659.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="294.6" y="670.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.26%)</title><rect x="292.4" y="675.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="295.4" y="686.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.06%)</title><rect x="294.7" y="659.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="297.7" y="670.0"></text>
</g>
<g>
<title>tcp_push (489 samples, 31.71%)</title><rect x="295.4" y="675.0" width="374.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="298.4" y="686.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (489 samples, 31.71%)</title><rect x="295.4" y="659.0" width="374.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="298.4" y="670.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>ktime_get (3 samples, 0.19%)</title><rect x="295.4" y="643.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="298.4" y="654.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.06%)</title><rect x="297.7" y="643.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="300.7" y="654.0"></text>
</g>
<g>
<title>tcp_write_xmit (485 samples, 31.45%)</title><rect x="298.5" y="643.0" width="371.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="301.5" y="654.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.06%)</title><rect x="305.4" y="627.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="308.4" y="638.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (449 samples, 29.12%)</title><rect x="306.1" y="627.0" width="343.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="309.1" y="638.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__skb_clone (2 samples, 0.13%)</title><rect x="316.9" y="611.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="319.9" y="622.0"></text>
</g>
<g>
<title>ip_queue_xmit (427 samples, 27.69%)</title><rect x="318.4" y="611.0" width="326.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="321.4" y="622.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (422 samples, 27.37%)</title><rect x="319.2" y="595.0" width="322.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="322.2" y="606.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (413 samples, 26.78%)</title><rect x="323.0" y="579.0" width="316.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="326.0" y="590.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (81 samples, 5.25%)</title><rect x="324.5" y="563.0" width="62.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="327.5" y="574.0">__ip_l..</text>
</g>
<g>
<title>ip_send_check (4 samples, 0.26%)</title><rect x="326.0" y="547.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="329.0" y="558.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.06%)</title><rect x="329.1" y="547.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="332.1" y="558.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.13%)</title><rect x="329.9" y="547.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="332.9" y="558.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.06%)</title><rect x="331.4" y="547.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="334.4" y="558.0"></text>
</g>
<g>
<title>nf_hook_slow (70 samples, 4.54%)</title><rect x="332.2" y="547.0" width="53.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="335.2" y="558.0">nf_ho..</text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.06%)</title><rect x="333.7" y="531.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="336.7" y="542.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (10 samples, 0.65%)</title><rect x="334.5" y="531.0" width="7.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="337.5" y="542.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (10 samples, 0.65%)</title><rect x="334.5" y="515.0" width="7.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="337.5" y="526.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (52 samples, 3.37%)</title><rect x="342.1" y="531.0" width="39.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="345.1" y="542.0">ipv..</text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (2 samples, 0.13%)</title><rect x="342.1" y="515.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="345.1" y="526.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.06%)</title><rect x="343.6" y="515.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="346.6" y="526.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (47 samples, 3.05%)</title><rect x="344.4" y="515.0" width="36.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="347.4" y="526.0">nf_..</text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (6 samples, 0.39%)</title><rect x="352.8" y="499.0" width="4.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="355.8" y="510.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (3 samples, 0.19%)</title><rect x="357.4" y="499.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="360.4" y="510.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (6 samples, 0.39%)</title><rect x="359.7" y="499.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="362.7" y="510.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (18 samples, 1.17%)</title><rect x="364.3" y="499.0" width="13.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="367.3" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.06%)</title><rect x="370.4" y="483.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="373.4" y="494.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.06%)</title><rect x="371.2" y="483.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="374.2" y="494.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (8 samples, 0.52%)</title><rect x="372.0" y="483.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="375.0" y="494.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (4 samples, 0.26%)</title><rect x="375.0" y="467.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="378.0" y="478.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (3 samples, 0.19%)</title><rect x="378.1" y="499.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="381.1" y="510.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.06%)</title><rect x="380.4" y="515.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="383.4" y="526.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.06%)</title><rect x="381.1" y="515.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="384.1" y="526.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.13%)</title><rect x="381.9" y="531.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="384.9" y="542.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (3 samples, 0.19%)</title><rect x="383.4" y="531.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="386.4" y="542.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.06%)</title><rect x="383.4" y="515.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="386.4" y="526.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (2 samples, 0.13%)</title><rect x="384.2" y="515.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="387.2" y="526.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.13%)</title><rect x="384.2" y="499.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="387.2" y="510.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (1 samples, 0.06%)</title><rect x="385.7" y="547.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="388.7" y="558.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.06%)</title><rect x="386.5" y="563.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="389.5" y="574.0"></text>
</g>
<g>
<title>ip_output (326 samples, 21.14%)</title><rect x="387.3" y="563.0" width="249.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="390.3" y="574.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.06%)</title><rect x="388.0" y="547.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="391.0" y="558.0"></text>
</g>
<g>
<title>ip_finish_output (318 samples, 20.62%)</title><rect x="388.8" y="547.0" width="243.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="391.8" y="558.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.19%)</title><rect x="391.1" y="531.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="394.1" y="542.0"></text>
</g>
<g>
<title>__ip_finish_output (309 samples, 20.04%)</title><rect x="393.4" y="531.0" width="236.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="396.4" y="542.0">__ip_finish_output</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.06%)</title><rect x="395.7" y="515.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="398.7" y="526.0"></text>
</g>
<g>
<title>ip_finish_output2 (305 samples, 19.78%)</title><rect x="396.4" y="515.0" width="233.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="399.4" y="526.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (265 samples, 17.19%)</title><rect x="404.1" y="499.0" width="202.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="407.1" y="510.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.20 (263 samples, 17.06%)</title><rect x="405.6" y="483.0" width="201.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="408.6" y="494.0">do_softirq.part.20</text>
</g>
<g>
<title>do_softirq_own_stack (260 samples, 16.86%)</title><rect x="407.9" y="467.0" width="199.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="410.9" y="478.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (260 samples, 16.86%)</title><rect x="407.9" y="451.0" width="199.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="410.9" y="462.0">__softirqentry_text_start</text>
</g>
<g>
<title>net_rx_action (252 samples, 16.34%)</title><rect x="413.3" y="435.0" width="192.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="416.3" y="446.0">net_rx_action</text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.06%)</title><rect x="414.8" y="419.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="417.8" y="430.0"></text>
</g>
<g>
<title>process_backlog (249 samples, 16.15%)</title><rect x="415.6" y="419.0" width="190.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="418.6" y="430.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (244 samples, 15.82%)</title><rect x="418.6" y="403.0" width="186.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="421.6" y="414.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="419.4" y="387.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="422.4" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (242 samples, 15.69%)</title><rect x="420.2" y="387.0" width="185.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="423.2" y="398.0">__netif_receive_skb_one_..</text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.32%)</title><rect x="421.7" y="371.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="424.7" y="382.0"></text>
</g>
<g>
<title>ip_rcv (235 samples, 15.24%)</title><rect x="425.5" y="371.0" width="179.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="428.5" y="382.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (5 samples, 0.32%)</title><rect x="427.1" y="355.0" width="3.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="430.1" y="366.0"></text>
</g>
<g>
<title>ip_rcv_finish (218 samples, 14.14%)</title><rect x="430.9" y="355.0" width="166.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="433.9" y="366.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (215 samples, 13.94%)</title><rect x="433.2" y="339.0" width="164.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="436.2" y="350.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (204 samples, 13.23%)</title><rect x="434.7" y="323.0" width="156.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="437.7" y="334.0">ip_local_deliver_fin..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (201 samples, 13.04%)</title><rect x="435.5" y="307.0" width="153.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="438.5" y="318.0">ip_protocol_deliver..</text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.06%)</title><rect x="438.5" y="291.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="441.5" y="302.0"></text>
</g>
<g>
<title>tcp_v4_rcv (196 samples, 12.71%)</title><rect x="439.3" y="291.0" width="150.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="442.3" y="302.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (9 samples, 0.58%)</title><rect x="446.2" y="275.0" width="6.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="449.2" y="286.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.06%)</title><rect x="452.3" y="259.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="455.3" y="270.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="453.1" y="275.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="456.1" y="286.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.06%)</title><rect x="453.8" y="275.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="456.8" y="286.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="454.6" y="275.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="457.6" y="286.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.06%)</title><rect x="455.4" y="275.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="458.4" y="286.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.19%)</title><rect x="456.1" y="275.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="459.1" y="286.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.13%)</title><rect x="456.1" y="259.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="459.1" y="270.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.06%)</title><rect x="457.7" y="259.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="460.7" y="270.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.06%)</title><rect x="458.4" y="275.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="461.4" y="286.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.06%)</title><rect x="459.2" y="275.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="462.2" y="286.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (166 samples, 10.77%)</title><rect x="460.0" y="275.0" width="127.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="463.0" y="286.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.06%)</title><rect x="460.7" y="259.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="463.7" y="270.0"></text>
</g>
<g>
<title>ktime_get_seconds (2 samples, 0.13%)</title><rect x="461.5" y="259.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="464.5" y="270.0"></text>
</g>
<g>
<title>tcp_data_ready (3 samples, 0.19%)</title><rect x="463.0" y="259.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="466.0" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (159 samples, 10.31%)</title><rect x="465.3" y="259.0" width="121.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="468.3" y="270.0">tcp_rcv_establi..</text>
</g>
<g>
<title>__tcp_ack_snd_check (7 samples, 0.45%)</title><rect x="467.6" y="243.0" width="5.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="470.6" y="254.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (7 samples, 0.45%)</title><rect x="467.6" y="227.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="470.6" y="238.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.45%)</title><rect x="467.6" y="211.0" width="5.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="470.6" y="222.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.45%)</title><rect x="467.6" y="195.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="470.6" y="206.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.32%)</title><rect x="468.4" y="179.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="471.4" y="190.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.06%)</title><rect x="472.2" y="179.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="475.2" y="190.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.06%)</title><rect x="473.0" y="243.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="476.0" y="254.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.13%)</title><rect x="473.7" y="243.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="476.7" y="254.0"></text>
</g>
<g>
<title>tcp_ack (54 samples, 3.50%)</title><rect x="475.3" y="243.0" width="41.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="478.3" y="254.0">tcp..</text>
</g>
<g>
<title>bictcp_acked (4 samples, 0.26%)</title><rect x="479.9" y="227.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="482.9" y="238.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.06%)</title><rect x="482.9" y="227.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="485.9" y="238.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (39 samples, 2.53%)</title><rect x="483.7" y="227.0" width="29.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="486.7" y="238.0">tc..</text>
</g>
<g>
<title>__kfree_skb (23 samples, 1.49%)</title><rect x="488.3" y="211.0" width="17.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="491.3" y="222.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.19%)</title><rect x="488.3" y="195.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="491.3" y="206.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.19%)</title><rect x="488.3" y="179.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="491.3" y="190.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.06%)</title><rect x="489.8" y="163.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="492.8" y="174.0"></text>
</g>
<g>
<title>skb_release_all (20 samples, 1.30%)</title><rect x="490.6" y="195.0" width="15.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="493.6" y="206.0"></text>
</g>
<g>
<title>skb_release_data (18 samples, 1.17%)</title><rect x="490.6" y="179.0" width="13.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="493.6" y="190.0"></text>
</g>
<g>
<title>skb_free_head (12 samples, 0.78%)</title><rect x="495.2" y="163.0" width="9.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="498.2" y="174.0"></text>
</g>
<g>
<title>kfree (12 samples, 0.78%)</title><rect x="495.2" y="147.0" width="9.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="498.2" y="158.0"></text>
</g>
<g>
<title>__slab_free (6 samples, 0.39%)</title><rect x="499.8" y="131.0" width="4.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="502.8" y="142.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.13%)</title><rect x="504.3" y="179.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="507.3" y="190.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.13%)</title><rect x="505.9" y="211.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="508.9" y="222.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.06%)</title><rect x="507.4" y="211.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="510.4" y="222.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (7 samples, 0.45%)</title><rect x="508.2" y="211.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="511.2" y="222.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.06%)</title><rect x="513.5" y="227.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="516.5" y="238.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (3 samples, 0.19%)</title><rect x="514.3" y="227.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="517.3" y="238.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.13%)</title><rect x="516.6" y="243.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="519.6" y="254.0"></text>
</g>
<g>
<title>tcp_data_ready (78 samples, 5.06%)</title><rect x="518.1" y="243.0" width="59.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="521.1" y="254.0">tcp_da..</text>
</g>
<g>
<title>sock_def_readable (78 samples, 5.06%)</title><rect x="518.1" y="227.0" width="59.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="521.1" y="238.0">sock_d..</text>
</g>
<g>
<title>__wake_up_sync_key (77 samples, 4.99%)</title><rect x="518.9" y="211.0" width="58.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="521.9" y="222.0">__wake..</text>
</g>
<g>
<title>__wake_up_common_lock (77 samples, 4.99%)</title><rect x="518.9" y="195.0" width="58.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="521.9" y="206.0">__wake..</text>
</g>
<g>
<title>__lock_text_start (77 samples, 4.99%)</title><rect x="518.9" y="179.0" width="58.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="521.9" y="190.0">__lock..</text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.26%)</title><rect x="577.8" y="243.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="580.8" y="254.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.32%)</title><rect x="580.9" y="243.0" width="3.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="583.9" y="254.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.06%)</title><rect x="580.9" y="227.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="583.9" y="238.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.06%)</title><rect x="580.9" y="211.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="583.9" y="222.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.26%)</title><rect x="581.6" y="227.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="584.6" y="238.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.06%)</title><rect x="584.7" y="243.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="587.7" y="254.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.06%)</title><rect x="585.5" y="243.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="588.5" y="254.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.06%)</title><rect x="586.2" y="243.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="589.2" y="254.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.13%)</title><rect x="587.0" y="275.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="590.0" y="286.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.06%)</title><rect x="588.5" y="275.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="591.5" y="286.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.06%)</title><rect x="589.3" y="307.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="592.3" y="318.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.06%)</title><rect x="590.1" y="307.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="593.1" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.52%)</title><rect x="590.8" y="323.0" width="6.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="593.8" y="334.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (7 samples, 0.45%)</title><rect x="590.8" y="307.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="593.8" y="318.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (7 samples, 0.45%)</title><rect x="590.8" y="291.0" width="5.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="593.8" y="302.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.06%)</title><rect x="596.2" y="307.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="599.2" y="318.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.06%)</title><rect x="596.2" y="291.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="599.2" y="302.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.06%)</title><rect x="596.9" y="323.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="599.9" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (2 samples, 0.13%)</title><rect x="597.7" y="355.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="600.7" y="366.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (1 samples, 0.06%)</title><rect x="599.2" y="355.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="602.2" y="366.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.13%)</title><rect x="600.0" y="355.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="603.0" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.26%)</title><rect x="601.5" y="355.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="604.5" y="366.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (1 samples, 0.06%)</title><rect x="602.3" y="339.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="605.3" y="350.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.06%)</title><rect x="602.3" y="323.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="605.3" y="334.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat] (2 samples, 0.13%)</title><rect x="603.1" y="339.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="606.1" y="350.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat] (1 samples, 0.06%)</title><rect x="604.6" y="355.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="607.6" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.06%)</title><rect x="605.4" y="403.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="608.4" y="414.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.06%)</title><rect x="606.1" y="435.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="609.1" y="446.0"></text>
</g>
<g>
<title>dev_queue_xmit (30 samples, 1.95%)</title><rect x="606.9" y="499.0" width="22.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="609.9" y="510.0">d..</text>
</g>
<g>
<title>__dev_queue_xmit (29 samples, 1.88%)</title><rect x="607.7" y="483.0" width="22.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="610.7" y="494.0">_..</text>
</g>
<g>
<title>dev_hard_start_xmit (18 samples, 1.17%)</title><rect x="612.2" y="467.0" width="13.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="615.2" y="478.0"></text>
</g>
<g>
<title>loopback_xmit (14 samples, 0.91%)</title><rect x="613.8" y="451.0" width="10.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="616.8" y="462.0"></text>
</g>
<g>
<title>netif_rx (11 samples, 0.71%)</title><rect x="613.8" y="435.0" width="8.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="616.8" y="446.0"></text>
</g>
<g>
<title>netif_rx_internal (11 samples, 0.71%)</title><rect x="613.8" y="419.0" width="8.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="616.8" y="430.0"></text>
</g>
<g>
<title>enqueue_to_backlog (11 samples, 0.71%)</title><rect x="613.8" y="403.0" width="8.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="616.8" y="414.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.06%)</title><rect x="622.2" y="435.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="625.2" y="446.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.06%)</title><rect x="623.0" y="435.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="626.0" y="446.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.06%)</title><rect x="623.7" y="435.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="626.7" y="446.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.06%)</title><rect x="624.5" y="451.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="627.5" y="462.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.06%)</title><rect x="625.3" y="451.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="628.3" y="462.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.06%)</title><rect x="626.0" y="467.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="629.0" y="478.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.26%)</title><rect x="626.8" y="467.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="629.8" y="478.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.13%)</title><rect x="628.3" y="451.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="631.3" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.06%)</title><rect x="629.8" y="531.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="632.8" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.13%)</title><rect x="630.6" y="531.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="633.6" y="542.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.26%)</title><rect x="632.1" y="547.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="635.1" y="558.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (3 samples, 0.19%)</title><rect x="632.9" y="531.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="635.9" y="542.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (2 samples, 0.13%)</title><rect x="633.7" y="515.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="636.7" y="526.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat] (2 samples, 0.13%)</title><rect x="635.2" y="547.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="638.2" y="558.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.19%)</title><rect x="636.7" y="563.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="639.7" y="574.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.26%)</title><rect x="639.0" y="579.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="642.0" y="590.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.06%)</title><rect x="642.1" y="595.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="645.1" y="606.0"></text>
</g>
<g>
<title>ip_copy_addrs (3 samples, 0.19%)</title><rect x="642.9" y="595.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="645.9" y="606.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.32%)</title><rect x="645.1" y="611.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="648.1" y="622.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.26%)</title><rect x="645.9" y="595.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="648.9" y="606.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.06%)</title><rect x="648.2" y="579.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="651.2" y="590.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.06%)</title><rect x="649.0" y="611.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="652.0" y="622.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.06%)</title><rect x="649.7" y="627.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="652.7" y="638.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.13%)</title><rect x="650.5" y="627.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="653.5" y="638.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.19%)</title><rect x="652.0" y="627.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="655.0" y="638.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.26%)</title><rect x="654.3" y="627.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="657.3" y="638.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.13%)</title><rect x="655.9" y="611.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="658.9" y="622.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.06%)</title><rect x="657.4" y="627.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="660.4" y="638.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.06%)</title><rect x="658.2" y="627.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="661.2" y="638.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (8 samples, 0.52%)</title><rect x="658.9" y="627.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="661.9" y="638.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.13%)</title><rect x="660.5" y="611.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="663.5" y="622.0"></text>
</g>
<g>
<title>rb_insert_color (2 samples, 0.13%)</title><rect x="660.5" y="595.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="663.5" y="606.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.26%)</title><rect x="662.0" y="611.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="665.0" y="622.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.26%)</title><rect x="662.0" y="595.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="665.0" y="606.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.26%)</title><rect x="662.0" y="579.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="665.0" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.26%)</title><rect x="662.0" y="563.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="665.0" y="574.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.06%)</title><rect x="665.0" y="627.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="668.0" y="638.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.13%)</title><rect x="665.8" y="627.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="668.8" y="638.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.13%)</title><rect x="667.3" y="627.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="670.3" y="638.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.06%)</title><rect x="668.1" y="611.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="671.1" y="622.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.33 (1 samples, 0.06%)</title><rect x="668.9" y="627.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="671.9" y="638.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.13%)</title><rect x="669.6" y="675.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="672.6" y="686.0"></text>
</g>
<g>
<title>tcp_send_mss (8 samples, 0.52%)</title><rect x="671.2" y="675.0" width="6.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="674.2" y="686.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.06%)</title><rect x="671.2" y="659.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="674.2" y="670.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.39%)</title><rect x="671.9" y="659.0" width="4.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="674.9" y="670.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.13%)</title><rect x="674.2" y="643.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="677.2" y="654.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.06%)</title><rect x="675.8" y="643.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="678.8" y="654.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.06%)</title><rect x="676.5" y="659.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="679.5" y="670.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.06%)</title><rect x="677.3" y="691.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="680.3" y="702.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.06%)</title><rect x="678.1" y="723.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="681.1" y="734.0"></text>
</g>
<g>
<title>security_socket_sendmsg (11 samples, 0.71%)</title><rect x="678.8" y="723.0" width="8.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="681.8" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (10 samples, 0.65%)</title><rect x="679.6" y="707.0" width="7.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="682.6" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (10 samples, 0.65%)</title><rect x="679.6" y="691.0" width="7.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="682.6" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (10 samples, 0.65%)</title><rect x="679.6" y="675.0" width="7.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="682.6" y="686.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (7 samples, 0.45%)</title><rect x="681.9" y="659.0" width="5.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="684.9" y="670.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.13%)</title><rect x="685.7" y="643.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="688.7" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.32%)</title><rect x="687.2" y="739.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="690.2" y="750.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.26%)</title><rect x="687.2" y="723.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="690.2" y="734.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.26%)</title><rect x="687.2" y="707.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="690.2" y="718.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="690.3" y="723.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="693.3" y="734.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.06%)</title><rect x="691.1" y="755.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="694.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (14 samples, 0.91%)</title><rect x="691.8" y="899.0" width="10.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="694.8" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.32%)</title><rect x="698.7" y="883.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.7" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.32%)</title><rect x="698.7" y="867.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="701.7" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (9 samples, 0.58%)</title><rect x="702.5" y="915.0" width="6.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="705.5" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.58%)</title><rect x="702.5" y="899.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.5" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="705.6" y="883.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="708.6" y="894.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.26%)</title><rect x="706.4" y="883.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="709.4" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.13%)</title><rect x="707.9" y="867.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="710.9" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.13%)</title><rect x="707.9" y="851.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="710.9" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.13%)</title><rect x="707.9" y="835.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut (221 samples, 14.33%)</title><rect x="709.4" y="915.0" width="169.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="712.4" y="926.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (221 samples, 14.33%)</title><rect x="709.4" y="899.0" width="169.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="712.4" y="910.0">ru/mail/polis/dao/alex..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.06%)</title><rect x="709.4" y="883.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.06%)</title><rect x="709.4" y="867.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="712.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.06%)</title><rect x="709.4" y="851.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="712.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (4 samples, 0.26%)</title><rect x="710.2" y="883.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="713.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (4 samples, 0.26%)</title><rect x="710.2" y="867.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (4 samples, 0.26%)</title><rect x="710.2" y="851.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="713.2" y="862.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (4 samples, 0.26%)</title><rect x="710.2" y="835.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.2" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.remove (1 samples, 0.06%)</title><rect x="710.2" y="819.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="713.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.19%)</title><rect x="711.0" y="819.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="714.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.upsert (216 samples, 14.01%)</title><rect x="713.3" y="883.0" width="165.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="716.3" y="894.0">ru/mail/polis/dao/ale..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (210 samples, 13.62%)</title><rect x="713.3" y="867.0" width="160.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="716.3" y="878.0">java/util/concurrent..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.13%)</title><rect x="730.1" y="851.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="733.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (183 samples, 11.87%)</title><rect x="731.6" y="851.0" width="140.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="734.6" y="862.0">java/util/concurre..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.13%)</title><rect x="756.9" y="835.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="759.9" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.13%)</title><rect x="756.9" y="819.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="759.9" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.06%)</title><rect x="758.4" y="835.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="761.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (47 samples, 3.05%)</title><rect x="759.2" y="835.0" width="35.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="762.2" y="846.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (5 samples, 0.32%)</title><rect x="795.1" y="835.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="798.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.06%)</title><rect x="795.9" y="819.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="798.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.19%)</title><rect x="796.7" y="819.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="799.7" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.13%)</title><rect x="797.4" y="803.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="800.4" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.13%)</title><rect x="797.4" y="787.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="800.4" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.13%)</title><rect x="797.4" y="771.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="800.4" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.06%)</title><rect x="798.2" y="755.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="801.2" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.06%)</title><rect x="798.2" y="739.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="801.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (89 samples, 5.77%)</title><rect x="799.0" y="835.0" width="68.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="802.0" y="846.0">java/ut..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (88 samples, 5.71%)</title><rect x="799.7" y="819.0" width="67.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="802.7" y="830.0">java/ni..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (52 samples, 3.37%)</title><rect x="827.3" y="803.0" width="39.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.3" y="814.0">jav..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (52 samples, 3.37%)</title><rect x="827.3" y="787.0" width="39.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="830.3" y="798.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (13 samples, 0.84%)</title><rect x="848.7" y="771.0" width="10.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="851.7" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (13 samples, 0.84%)</title><rect x="848.7" y="755.0" width="10.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="851.7" y="766.0"></text>
</g>
<g>
<title>vectorizedMismatch (11 samples, 0.71%)</title><rect x="858.7" y="771.0" width="8.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="861.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (6 samples, 0.39%)</title><rect x="867.1" y="835.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="870.1" y="846.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.13%)</title><rect x="871.7" y="851.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="874.7" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="873.2" y="851.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="876.2" y="862.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="873.2" y="835.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="876.2" y="846.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="873.2" y="819.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="876.2" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (6 samples, 0.39%)</title><rect x="874.0" y="867.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="877.0" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.39%)</title><rect x="874.0" y="851.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="877.0" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.39%)</title><rect x="874.0" y="835.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="877.0" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.39%)</title><rect x="874.0" y="819.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="877.0" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.39%)</title><rect x="874.0" y="803.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="877.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.39%)</title><rect x="874.0" y="787.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.39%)</title><rect x="874.0" y="771.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="877.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="878.5" y="931.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="881.5" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (7 samples, 0.45%)</title><rect x="879.3" y="931.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="882.3" y="942.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (5 samples, 0.32%)</title><rect x="884.7" y="931.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="887.7" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.32%)</title><rect x="884.7" y="915.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="887.7" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.13%)</title><rect x="884.7" y="899.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="887.7" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.19%)</title><rect x="886.2" y="899.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="889.2" y="910.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.19%)</title><rect x="886.2" y="883.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="889.2" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.19%)</title><rect x="886.2" y="867.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="889.2" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.19%)</title><rect x="888.5" y="931.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="891.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.13%)</title><rect x="888.5" y="915.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="891.5" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.13%)</title><rect x="888.5" y="899.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="891.5" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="889.3" y="883.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="892.3" y="894.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.06%)</title><rect x="890.0" y="915.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="893.0" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (22 samples, 1.43%)</title><rect x="890.8" y="963.0" width="16.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="893.8" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.39%)</title><rect x="890.8" y="947.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="893.8" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.39%)</title><rect x="890.8" y="931.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="893.8" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.39%)</title><rect x="890.8" y="915.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="893.8" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.39%)</title><rect x="890.8" y="899.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="893.8" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.71%)</title><rect x="895.4" y="947.0" width="8.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="898.4" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.71%)</title><rect x="895.4" y="931.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="898.4" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (5 samples, 0.32%)</title><rect x="903.8" y="947.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="906.8" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (14 samples, 0.91%)</title><rect x="907.6" y="963.0" width="10.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="910.6" y="974.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (14 samples, 0.91%)</title><rect x="907.6" y="947.0" width="10.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="910.6" y="958.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.32%)</title><rect x="909.9" y="931.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="912.9" y="942.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.32%)</title><rect x="909.9" y="915.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="912.9" y="926.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (6 samples, 0.39%)</title><rect x="913.7" y="931.0" width="4.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="916.7" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.45%)</title><rect x="918.3" y="963.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="921.3" y="974.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.32%)</title><rect x="919.9" y="947.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="922.9" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.32%)</title><rect x="919.9" y="931.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="922.9" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (58 samples, 3.76%)</title><rect x="923.7" y="963.0" width="44.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="926.7" y="974.0">one/..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.06%)</title><rect x="958.9" y="947.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="961.9" y="958.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="958.9" y="931.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="961.9" y="942.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="958.9" y="915.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="961.9" y="926.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="958.9" y="899.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="961.9" y="910.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.06%)</title><rect x="958.9" y="883.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="961.9" y="894.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.06%)</title><rect x="958.9" y="867.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="961.9" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="958.9" y="851.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="961.9" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.71%)</title><rect x="959.7" y="947.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="962.7" y="958.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="967.3" y="931.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="970.3" y="942.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="967.3" y="915.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="970.3" y="926.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.06%)</title><rect x="967.3" y="899.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="970.3" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="967.3" y="883.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="970.3" y="894.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="967.3" y="867.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="970.3" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="967.3" y="851.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="970.3" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="967.3" y="835.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="970.3" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="967.3" y="819.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="970.3" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="967.3" y="803.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="970.3" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.06%)</title><rect x="968.1" y="979.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="971.1" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (222 samples, 14.40%)</title><rect x="968.8" y="979.0" width="169.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="971.8" y="990.0">one/nio/net/Session.read</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (214 samples, 13.88%)</title><rect x="975.0" y="963.0" width="163.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="978.0" y="974.0">one/nio/net/NativeSoc..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (35 samples, 2.27%)</title><rect x="982.6" y="947.0" width="26.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="985.6" y="958.0">J..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="985.7" y="931.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="988.7" y="942.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.06%)</title><rect x="986.4" y="931.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="989.4" y="942.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="987.2" y="931.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="990.2" y="942.0"></text>
</g>
<g>
<title>__memmove_ssse3 (10 samples, 0.65%)</title><rect x="988.0" y="931.0" width="7.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="991.0" y="942.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (17 samples, 1.10%)</title><rect x="995.6" y="931.0" width="13.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="998.6" y="942.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.06%)</title><rect x="998.7" y="915.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1001.7" y="926.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.06%)</title><rect x="999.5" y="915.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1002.5" y="926.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.19%)</title><rect x="1000.2" y="915.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1003.2" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.06%)</title><rect x="1002.5" y="915.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1005.5" y="926.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (7 samples, 0.45%)</title><rect x="1003.3" y="915.0" width="5.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1006.3" y="926.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.13%)</title><rect x="1007.1" y="899.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1010.1" y="910.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.06%)</title><rect x="1008.6" y="931.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1011.6" y="942.0"></text>
</g>
<g>
<title>__GI___recv (165 samples, 10.70%)</title><rect x="1009.4" y="947.0" width="126.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1012.4" y="958.0">__GI___recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (161 samples, 10.44%)</title><rect x="1012.5" y="931.0" width="123.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1015.5" y="942.0">entry_SYSCALL_6..</text>
</g>
<g>
<title>__x64_sys_recvfrom (4 samples, 0.26%)</title><rect x="1012.5" y="915.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1015.5" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (157 samples, 10.18%)</title><rect x="1015.5" y="915.0" width="120.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1018.5" y="926.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_recvfrom (150 samples, 9.73%)</title><rect x="1020.9" y="899.0" width="114.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1023.9" y="910.0">__x64_sys_recv..</text>
</g>
<g>
<title>__sys_recvfrom (145 samples, 9.40%)</title><rect x="1020.9" y="883.0" width="110.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1023.9" y="894.0">__sys_recvfrom</text>
</g>
<g>
<title>fput_many (1 samples, 0.06%)</title><rect x="1025.5" y="867.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1028.5" y="878.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.06%)</title><rect x="1026.2" y="867.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1029.2" y="878.0"></text>
</g>
<g>
<title>inet6_recvmsg (3 samples, 0.19%)</title><rect x="1027.0" y="867.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1030.0" y="878.0"></text>
</g>
<g>
<title>sock_recvmsg (126 samples, 8.17%)</title><rect x="1029.3" y="867.0" width="96.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1032.3" y="878.0">sock_recvmsg</text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.19%)</title><rect x="1030.1" y="851.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1033.1" y="862.0"></text>
</g>
<g>
<title>inet6_recvmsg (91 samples, 5.90%)</title><rect x="1032.4" y="851.0" width="69.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1035.4" y="862.0">inet6_r..</text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.06%)</title><rect x="1033.1" y="835.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1036.1" y="846.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.06%)</title><rect x="1033.9" y="835.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1036.9" y="846.0"></text>
</g>
<g>
<title>tcp_recvmsg (88 samples, 5.71%)</title><rect x="1034.7" y="835.0" width="67.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1037.7" y="846.0">tcp_rec..</text>
</g>
<g>
<title>__kfree_skb (11 samples, 0.71%)</title><rect x="1051.5" y="819.0" width="8.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1054.5" y="830.0"></text>
</g>
<g>
<title>skb_release_all (11 samples, 0.71%)</title><rect x="1051.5" y="803.0" width="8.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1054.5" y="814.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.13%)</title><rect x="1052.3" y="787.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1055.3" y="798.0"></text>
</g>
<g>
<title>skb_release_head_state (7 samples, 0.45%)</title><rect x="1053.8" y="787.0" width="5.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1056.8" y="798.0"></text>
</g>
<g>
<title>dst_release (4 samples, 0.26%)</title><rect x="1055.3" y="771.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1058.3" y="782.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.06%)</title><rect x="1058.4" y="771.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1061.4" y="782.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.06%)</title><rect x="1059.1" y="787.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1062.1" y="798.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.13%)</title><rect x="1059.9" y="819.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1062.9" y="830.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.13%)</title><rect x="1061.4" y="819.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1064.4" y="830.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.06%)</title><rect x="1061.4" y="803.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1064.4" y="814.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="1062.2" y="803.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1065.2" y="814.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.19%)</title><rect x="1063.0" y="819.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1066.0" y="830.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (35 samples, 2.27%)</title><rect x="1065.3" y="819.0" width="26.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1068.3" y="830.0">s..</text>
</g>
<g>
<title>__skb_datagram_iter (35 samples, 2.27%)</title><rect x="1065.3" y="803.0" width="26.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1068.3" y="814.0">_..</text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.06%)</title><rect x="1072.2" y="787.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1075.2" y="798.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.06%)</title><rect x="1072.2" y="771.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1075.2" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="1072.2" y="755.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1075.2" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="1072.2" y="739.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1075.2" y="750.0"></text>
</g>
<g>
<title>simple_copy_to_iter (25 samples, 1.62%)</title><rect x="1072.9" y="787.0" width="19.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1075.9" y="798.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.26%)</title><rect x="1073.7" y="771.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1076.7" y="782.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.13%)</title><rect x="1076.7" y="771.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1079.7" y="782.0"></text>
</g>
<g>
<title>_copy_to_iter (18 samples, 1.17%)</title><rect x="1078.3" y="771.0" width="13.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1081.3" y="782.0"></text>
</g>
<g>
<title>copy_user_generic_string (16 samples, 1.04%)</title><rect x="1079.0" y="755.0" width="12.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1082.0" y="766.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.06%)</title><rect x="1091.3" y="755.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1094.3" y="766.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.19%)</title><rect x="1092.0" y="819.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1095.0" y="830.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.06%)</title><rect x="1094.3" y="819.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1097.3" y="830.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (7 samples, 0.45%)</title><rect x="1095.1" y="819.0" width="5.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1098.1" y="830.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.13%)</title><rect x="1095.1" y="803.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1098.1" y="814.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.32%)</title><rect x="1096.6" y="803.0" width="3.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1099.6" y="814.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.19%)</title><rect x="1097.4" y="787.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1100.4" y="798.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.19%)</title><rect x="1097.4" y="771.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1100.4" y="782.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.06%)</title><rect x="1099.7" y="787.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1102.7" y="798.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.13%)</title><rect x="1100.5" y="819.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1103.5" y="830.0"></text>
</g>
<g>
<title>security_socket_recvmsg (31 samples, 2.01%)</title><rect x="1102.0" y="851.0" width="23.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1105.0" y="862.0">s..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (30 samples, 1.95%)</title><rect x="1102.8" y="835.0" width="22.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1105.8" y="846.0">a..</text>
</g>
<g>
<title>aa_sock_msg_perm (28 samples, 1.82%)</title><rect x="1104.3" y="819.0" width="21.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1107.3" y="830.0">a..</text>
</g>
<g>
<title>aa_sk_perm (26 samples, 1.69%)</title><rect x="1105.8" y="803.0" width="19.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1108.8" y="814.0"></text>
</g>
<g>
<title>aa_label_next_confined (2 samples, 0.13%)</title><rect x="1112.7" y="787.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1115.7" y="798.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (14 samples, 0.91%)</title><rect x="1114.2" y="787.0" width="10.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1117.2" y="798.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (1 samples, 0.06%)</title><rect x="1117.3" y="771.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1120.3" y="782.0"></text>
</g>
<g>
<title>aa_check_perms (1 samples, 0.06%)</title><rect x="1118.1" y="771.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1121.1" y="782.0"></text>
</g>
<g>
<title>aa_label_next_confined (2 samples, 0.13%)</title><rect x="1118.8" y="771.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1121.8" y="782.0"></text>
</g>
<g>
<title>aa_profile_af_perm (6 samples, 0.39%)</title><rect x="1120.4" y="771.0" width="4.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1123.4" y="782.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.06%)</title><rect x="1125.0" y="787.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1128.0" y="798.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.52%)</title><rect x="1125.7" y="867.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1128.7" y="878.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.32%)</title><rect x="1125.7" y="851.0" width="3.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1128.7" y="862.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.32%)</title><rect x="1125.7" y="835.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1128.7" y="846.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.32%)</title><rect x="1125.7" y="819.0" width="3.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1128.7" y="830.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.19%)</title><rect x="1129.5" y="851.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1132.5" y="862.0"></text>
</g>
<g>
<title>fput (1 samples, 0.06%)</title><rect x="1131.8" y="883.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1134.8" y="894.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.06%)</title><rect x="1132.6" y="883.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1135.6" y="894.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.19%)</title><rect x="1133.4" y="883.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1136.4" y="894.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.26%)</title><rect x="1135.7" y="947.0" width="3.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1138.7" y="958.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.32%)</title><rect x="1138.7" y="1011.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1141.7" y="1022.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="1138.7" y="995.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1141.7" y="1006.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.26%)</title><rect x="1139.5" y="995.0" width="3.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1142.5" y="1006.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.26%)</title><rect x="1139.5" y="979.0" width="3.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1142.5" y="990.0"></text>
</g>
<g>
<title>start_thread (62 samples, 4.02%)</title><rect x="1142.6" y="1027.0" width="47.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1145.6" y="1038.0">star..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (62 samples, 4.02%)</title><rect x="1142.6" y="1011.0" width="47.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1145.6" y="1022.0">thre..</text>
</g>
<g>
<title>Thread::call_run() (62 samples, 4.02%)</title><rect x="1142.6" y="995.0" width="47.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1145.6" y="1006.0">Thre..</text>
</g>
<g>
<title>GangWorker::loop() (28 samples, 1.82%)</title><rect x="1142.6" y="979.0" width="21.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1145.6" y="990.0">G..</text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (1 samples, 0.06%)</title><rect x="1142.6" y="963.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1145.6" y="974.0"></text>
</g>
<g>
<title>HeapRegionRemSet::clear_locked(bool) (1 samples, 0.06%)</title><rect x="1142.6" y="947.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1145.6" y="958.0"></text>
</g>
<g>
<title>SparsePRT::clear() (1 samples, 0.06%)</title><rect x="1142.6" y="931.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1145.6" y="942.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (25 samples, 1.62%)</title><rect x="1143.3" y="963.0" width="19.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1146.3" y="974.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (4 samples, 0.26%)</title><rect x="1143.3" y="947.0" width="3.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1146.3" y="958.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.06%)</title><rect x="1144.1" y="931.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1147.1" y="942.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.13%)</title><rect x="1144.9" y="931.0" width="1.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1147.9" y="942.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (21 samples, 1.36%)</title><rect x="1146.4" y="947.0" width="16.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1149.4" y="958.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (21 samples, 1.36%)</title><rect x="1146.4" y="931.0" width="16.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1149.4" y="942.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (21 samples, 1.36%)</title><rect x="1146.4" y="915.0" width="16.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1149.4" y="926.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (21 samples, 1.36%)</title><rect x="1146.4" y="899.0" width="16.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1149.4" y="910.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (21 samples, 1.36%)</title><rect x="1146.4" y="883.0" width="16.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1149.4" y="894.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.06%)</title><rect x="1146.4" y="867.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1149.4" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (19 samples, 1.23%)</title><rect x="1147.1" y="867.0" width="14.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1150.1" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (8 samples, 0.52%)</title><rect x="1153.3" y="851.0" width="6.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.3" y="862.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="1157.1" y="835.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1160.1" y="846.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="1157.1" y="819.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1160.1" y="830.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="1157.1" y="803.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1160.1" y="814.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="1157.1" y="787.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1160.1" y="798.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="1157.1" y="771.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1160.1" y="782.0"></text>
</g>
<g>
<title>mem_cgroup_commit_charge (1 samples, 0.06%)</title><rect x="1157.1" y="755.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1160.1" y="766.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.13%)</title><rect x="1157.9" y="835.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1160.9" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (3 samples, 0.19%)</title><rect x="1159.4" y="851.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1162.4" y="862.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (1 samples, 0.06%)</title><rect x="1161.7" y="867.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1164.7" y="878.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.06%)</title><rect x="1161.7" y="851.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1164.7" y="862.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.06%)</title><rect x="1161.7" y="835.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1164.7" y="846.0"></text>
</g>
<g>
<title>G1RedirtyLoggedCardsTask::work(unsigned int) (1 samples, 0.06%)</title><rect x="1162.5" y="963.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1165.5" y="974.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::par_apply_closure_to_all_completed_buffers(CardTableEntryClosure*) (1 samples, 0.06%)</title><rect x="1162.5" y="947.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1165.5" y="958.0"></text>
</g>
<g>
<title>RedirtyLoggedCardTableEntryClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.06%)</title><rect x="1162.5" y="931.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1165.5" y="942.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.06%)</title><rect x="1163.2" y="963.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1166.2" y="974.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.06%)</title><rect x="1163.2" y="947.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1166.2" y="958.0"></text>
</g>
<g>
<title>JavaThread::run() (33 samples, 2.14%)</title><rect x="1164.0" y="979.0" width="25.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1167.0" y="990.0">J..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (33 samples, 2.14%)</title><rect x="1164.0" y="963.0" width="25.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1167.0" y="974.0">C..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (33 samples, 2.14%)</title><rect x="1164.0" y="947.0" width="25.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1167.0" y="958.0">C..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (23 samples, 1.49%)</title><rect x="1164.0" y="931.0" width="17.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1167.0" y="942.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (23 samples, 1.49%)</title><rect x="1164.0" y="915.0" width="17.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1167.0" y="926.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (12 samples, 0.78%)</title><rect x="1164.0" y="899.0" width="9.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1167.0" y="910.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.06%)</title><rect x="1164.0" y="883.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1167.0" y="894.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.06%)</title><rect x="1164.0" y="867.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1167.0" y="878.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.06%)</title><rect x="1164.0" y="851.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1167.0" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (11 samples, 0.71%)</title><rect x="1164.7" y="883.0" width="8.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1167.7" y="894.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.06%)</title><rect x="1164.7" y="867.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1167.7" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.06%)</title><rect x="1165.5" y="867.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1168.5" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (2 samples, 0.13%)</title><rect x="1166.3" y="867.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1169.3" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.06%)</title><rect x="1166.3" y="851.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1169.3" y="862.0"></text>
</g>
<g>
<title>xorL_rRegNode::rule() const (1 samples, 0.06%)</title><rect x="1166.3" y="835.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1169.3" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.06%)</title><rect x="1167.0" y="851.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1170.0" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::de_ssa() (1 samples, 0.06%)</title><rect x="1167.8" y="867.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1170.8" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (3 samples, 0.19%)</title><rect x="1168.6" y="867.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1171.6" y="878.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.13%)</title><rect x="1169.3" y="851.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1172.3" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (3 samples, 0.19%)</title><rect x="1170.9" y="867.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1173.9" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (2 samples, 0.13%)</title><rect x="1171.6" y="851.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1174.6" y="862.0"></text>
</g>
<g>
<title>Compile::Optimize() (6 samples, 0.39%)</title><rect x="1173.2" y="899.0" width="4.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1176.2" y="910.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (1 samples, 0.06%)</title><rect x="1173.2" y="883.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1176.2" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.06%)</title><rect x="1173.2" y="867.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.2" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.06%)</title><rect x="1173.2" y="851.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.2" y="862.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.06%)</title><rect x="1173.9" y="883.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1176.9" y="894.0"></text>
</g>
<g>
<title>Node::find_out_with(int) (1 samples, 0.06%)</title><rect x="1173.9" y="867.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.9" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.19%)</title><rect x="1174.7" y="883.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1177.7" y="894.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.06%)</title><rect x="1174.7" y="867.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1177.7" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.06%)</title><rect x="1175.5" y="867.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1178.5" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.06%)</title><rect x="1176.2" y="867.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1179.2" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.06%)</title><rect x="1176.2" y="851.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1179.2" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.06%)</title><rect x="1176.2" y="835.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1179.2" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.06%)</title><rect x="1176.2" y="819.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.2" y="830.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.06%)</title><rect x="1177.0" y="883.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.0" y="894.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.06%)</title><rect x="1177.0" y="867.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.0" y="878.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1177.0" y="851.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.0" y="862.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="1177.0" y="835.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.0" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.32%)</title><rect x="1177.8" y="899.0" width="3.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1180.8" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.32%)</title><rect x="1177.8" y="883.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.8" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.32%)</title><rect x="1177.8" y="867.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.8" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.32%)</title><rect x="1177.8" y="851.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.8" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.32%)</title><rect x="1177.8" y="835.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1180.8" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.26%)</title><rect x="1178.5" y="819.0" width="3.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.5" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.19%)</title><rect x="1178.5" y="803.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.5" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.19%)</title><rect x="1178.5" y="787.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.5" y="798.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.06%)</title><rect x="1178.5" y="771.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.5" y="782.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.06%)</title><rect x="1178.5" y="755.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.5" y="766.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.06%)</title><rect x="1178.5" y="739.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.5" y="750.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) (1 samples, 0.06%)</title><rect x="1178.5" y="723.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.5" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.13%)</title><rect x="1179.3" y="771.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.3" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.13%)</title><rect x="1179.3" y="755.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.3" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.13%)</title><rect x="1179.3" y="739.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.3" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.13%)</title><rect x="1179.3" y="723.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.3" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.13%)</title><rect x="1179.3" y="707.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1182.3" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.13%)</title><rect x="1179.3" y="691.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.3" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.13%)</title><rect x="1179.3" y="675.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.3" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.13%)</title><rect x="1179.3" y="659.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1182.3" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.13%)</title><rect x="1179.3" y="643.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.3" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1180.1" y="627.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.1" y="638.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1180.1" y="611.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.1" y="622.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1180.1" y="595.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.1" y="606.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="1180.1" y="579.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.1" y="590.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="1180.1" y="563.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.1" y="574.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="1180.1" y="547.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.1" y="558.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1180.1" y="531.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.1" y="542.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1180.1" y="515.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.1" y="526.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1180.1" y="499.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1183.1" y="510.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1180.1" y="483.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.1" y="494.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.06%)</title><rect x="1180.1" y="467.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.1" y="478.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1180.1" y="451.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1183.1" y="462.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1180.1" y="435.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.1" y="446.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.06%)</title><rect x="1180.1" y="419.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.1" y="430.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.06%)</title><rect x="1180.1" y="403.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.1" y="414.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1180.8" y="803.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.8" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1180.8" y="787.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.8" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1180.8" y="771.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1180.8" y="755.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1180.8" y="739.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.8" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1180.8" y="723.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.8" y="734.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1180.8" y="707.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.8" y="718.0"></text>
</g>
<g>
<title>AddINode::Identity(PhaseGVN*) (1 samples, 0.06%)</title><rect x="1180.8" y="691.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.8" y="702.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="1180.8" y="675.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.8" y="686.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="1180.8" y="659.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.8" y="670.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (10 samples, 0.65%)</title><rect x="1181.6" y="931.0" width="7.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.6" y="942.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (10 samples, 0.65%)</title><rect x="1181.6" y="915.0" width="7.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.6" y="926.0"></text>
</g>
<g>
<title>Compilation::compile_method() (10 samples, 0.65%)</title><rect x="1181.6" y="899.0" width="7.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.6" y="910.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (9 samples, 0.58%)</title><rect x="1181.6" y="883.0" width="6.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.6" y="894.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (2 samples, 0.13%)</title><rect x="1181.6" y="867.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.6" y="878.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.06%)</title><rect x="1181.6" y="851.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.6" y="862.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.06%)</title><rect x="1181.6" y="835.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.6" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.06%)</title><rect x="1181.6" y="819.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.6" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.06%)</title><rect x="1181.6" y="803.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.6" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.06%)</title><rect x="1181.6" y="787.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.6" y="798.0"></text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (1 samples, 0.06%)</title><rect x="1181.6" y="771.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.6" y="782.0"></text>
</g>
<g>
<title>ValueStack::setup_phi_for_stack(BlockBegin*, int) (1 samples, 0.06%)</title><rect x="1181.6" y="755.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.6" y="766.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (1 samples, 0.06%)</title><rect x="1182.3" y="851.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.3" y="862.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (1 samples, 0.06%)</title><rect x="1182.3" y="835.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.3" y="846.0"></text>
</g>
<g>
<title>NullCheckEliminator::iterate_one(BlockBegin*) (1 samples, 0.06%)</title><rect x="1182.3" y="819.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.3" y="830.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (3 samples, 0.19%)</title><rect x="1183.1" y="867.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.1" y="878.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (3 samples, 0.19%)</title><rect x="1183.1" y="851.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.1" y="862.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op0(LIR_Op0*) (1 samples, 0.06%)</title><rect x="1183.1" y="835.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.1" y="846.0"></text>
</g>
<g>
<title>C1_MacroAssembler::build_frame(int, int) (1 samples, 0.06%)</title><rect x="1183.1" y="819.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.1" y="830.0"></text>
</g>
<g>
<title>AbstractAssembler::generate_stack_overflow_check(int) (1 samples, 0.06%)</title><rect x="1183.1" y="803.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.1" y="814.0"></text>
</g>
<g>
<title>Assembler::movl(Address, RegisterImpl*) (1 samples, 0.06%)</title><rect x="1183.1" y="787.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.1" y="798.0"></text>
</g>
<g>
<title>Assembler::emit_data(int, RelocationHolder const&amp;, int) (1 samples, 0.06%)</title><rect x="1183.1" y="771.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.1" y="782.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op1(LIR_Op1*) (2 samples, 0.13%)</title><rect x="1183.9" y="835.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.9" y="846.0"></text>
</g>
<g>
<title>LIR_Assembler::const2reg(LIR_OprDesc*, LIR_OprDesc*, LIR_PatchCode, CodeEmitInfo*) (1 samples, 0.06%)</title><rect x="1183.9" y="819.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.9" y="830.0"></text>
</g>
<g>
<title>LIR_Assembler::reg2mem(LIR_OprDesc*, LIR_OprDesc*, BasicType, LIR_PatchCode, CodeEmitInfo*, bool, bool, bool) (1 samples, 0.06%)</title><rect x="1184.6" y="819.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.6" y="830.0"></text>
</g>
<g>
<title>Assembler::movl(Address, RegisterImpl*) (1 samples, 0.06%)</title><rect x="1184.6" y="803.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.6" y="814.0"></text>
</g>
<g>
<title>Assembler::emit_operand(RegisterImpl*, RegisterImpl*, RegisterImpl*, Address::ScaleFactor, int, RelocationHolder const&amp;, int) (1 samples, 0.06%)</title><rect x="1184.6" y="787.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.6" y="798.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (4 samples, 0.26%)</title><rect x="1185.4" y="867.0" width="3.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.4" y="878.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (4 samples, 0.26%)</title><rect x="1185.4" y="851.0" width="3.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.4" y="862.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (1 samples, 0.06%)</title><rect x="1185.4" y="835.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.4" y="846.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (1 samples, 0.06%)</title><rect x="1185.4" y="819.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.4" y="830.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (1 samples, 0.06%)</title><rect x="1185.4" y="803.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.4" y="814.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (1 samples, 0.06%)</title><rect x="1185.4" y="787.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.4" y="798.0"></text>
</g>
<g>
<title>LinearScanWalker::find_free_reg(int, int, int, int, bool*) (1 samples, 0.06%)</title><rect x="1185.4" y="771.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.4" y="782.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (3 samples, 0.19%)</title><rect x="1186.2" y="835.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.2" y="846.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (3 samples, 0.19%)</title><rect x="1186.2" y="819.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.2" y="830.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.06%)</title><rect x="1187.7" y="803.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.7" y="814.0"></text>
</g>
<g>
<title>LIR_OpVisitState::append(LIR_OprDesc*&amp;, LIR_OpVisitState::OprMode) (1 samples, 0.06%)</title><rect x="1187.7" y="787.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.7" y="798.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.06%)</title><rect x="1188.5" y="883.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.5" y="894.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.06%)</title><rect x="1188.5" y="867.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.5" y="878.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.06%)</title><rect x="1188.5" y="851.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.5" y="862.0"></text>
</g>
<g>
<title>CodeBuffer::copy_code_to(CodeBlob*) (1 samples, 0.06%)</title><rect x="1188.5" y="835.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.5" y="846.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (1 samples, 0.06%)</title><rect x="1188.5" y="819.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1191.5" y="830.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="1188.5" y="803.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1191.5" y="814.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="1188.5" y="787.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1191.5" y="798.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="1188.5" y="771.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1191.5" y="782.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="1188.5" y="755.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1191.5" y="766.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="1188.5" y="739.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1191.5" y="750.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.06%)</title><rect x="1188.5" y="723.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1191.5" y="734.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="1188.5" y="707.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1191.5" y="718.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="1188.5" y="691.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1191.5" y="702.0"></text>
</g>
<g>
<title>prep_new_page (1 samples, 0.06%)</title><rect x="1188.5" y="675.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1191.5" y="686.0"></text>
</g>
<g>
<title>clear_page_rep (1 samples, 0.06%)</title><rect x="1188.5" y="659.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1191.5" y="670.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.06%)</title><rect x="1189.2" y="979.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.2" y="990.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.06%)</title><rect x="1189.2" y="963.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.2" y="974.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.06%)</title><rect x="1189.2" y="947.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.2" y="958.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.06%)</title><rect x="1189.2" y="931.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.2" y="942.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.06%)</title><rect x="1189.2" y="915.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.2" y="926.0"></text>
</g>
</g>
</svg>
