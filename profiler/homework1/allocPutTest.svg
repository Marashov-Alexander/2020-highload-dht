<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="805"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="805"> </text>
<g id="frames">
<g>
<title>all (656 samples, 100.00%)</title><rect x="10.0" y="771.0" width="1180.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="13.0" y="782.0">all</text>
</g>
<g>
<title>[no_Java_frame] (2 samples, 0.30%)</title><rect x="10.0" y="755.0" width="3.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.30%)</title><rect x="10.0" y="739.0" width="3.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.run (22 samples, 3.35%)</title><rect x="13.6" y="755.0" width="39.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="16.6" y="766.0">jav..</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (2 samples, 0.30%)</title><rect x="13.6" y="739.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="16.6" y="750.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (2 samples, 0.30%)</title><rect x="13.6" y="723.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="16.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1839893528.linkToTargetMethod (2 samples, 0.30%)</title><rect x="13.6" y="707.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="16.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/757865708.invoke (2 samples, 0.30%)</title><rect x="13.6" y="691.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="16.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.30%)</title><rect x="13.6" y="675.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="16.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.30%)</title><rect x="13.6" y="659.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="16.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.30%)</title><rect x="13.6" y="643.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray0 (2 samples, 0.30%)</title><rect x="13.6" y="627.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="16.6" y="638.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.30%)</title><rect x="13.6" y="611.0" width="3.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="16.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (20 samples, 3.05%)</title><rect x="17.2" y="739.0" width="36.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.2" y="750.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (20 samples, 3.05%)</title><rect x="17.2" y="723.0" width="36.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="20.2" y="734.0">jav..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (20 samples, 3.05%)</title><rect x="17.2" y="707.0" width="36.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.2" y="718.0">sun..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (20 samples, 3.05%)</title><rect x="17.2" y="691.0" width="36.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.2" y="702.0">jav..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$91/1348033445.run (20 samples, 3.05%)</title><rect x="17.2" y="675.0" width="36.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="20.2" y="686.0">sun..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (20 samples, 3.05%)</title><rect x="17.2" y="659.0" width="36.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.2" y="670.0">sun..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (20 samples, 3.05%)</title><rect x="17.2" y="643.0" width="36.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.2" y="654.0">sun..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (20 samples, 3.05%)</title><rect x="17.2" y="627.0" width="36.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.2" y="638.0">sun..</text>
</g>
<g>
<title>java.io.DataOutputStream (2 samples, 0.30%)</title><rect x="17.2" y="611.0" width="3.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="20.2" y="622.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (18 samples, 2.74%)</title><rect x="20.8" y="611.0" width="32.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.8" y="622.0">su..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (16 samples, 2.44%)</title><rect x="20.8" y="595.0" width="28.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.8" y="606.0">ja..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (16 samples, 2.44%)</title><rect x="20.8" y="579.0" width="28.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="23.8" y="590.0">su..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (16 samples, 2.44%)</title><rect x="20.8" y="563.0" width="28.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.8" y="574.0">su..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (16 samples, 2.44%)</title><rect x="20.8" y="547.0" width="28.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.8" y="558.0">su..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (9 samples, 1.37%)</title><rect x="20.8" y="531.0" width="16.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="23.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (9 samples, 1.37%)</title><rect x="20.8" y="515.0" width="16.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (9 samples, 1.37%)</title><rect x="20.8" y="499.0" width="16.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.8" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (9 samples, 1.37%)</title><rect x="20.8" y="483.0" width="16.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.8" y="494.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (7 samples, 1.07%)</title><rect x="20.8" y="467.0" width="12.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.8" y="478.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (7 samples, 1.07%)</title><rect x="20.8" y="451.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.8" y="462.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (7 samples, 1.07%)</title><rect x="20.8" y="435.0" width="12.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.8" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (7 samples, 1.07%)</title><rect x="20.8" y="419.0" width="12.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.8" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (7 samples, 1.07%)</title><rect x="20.8" y="403.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.8" y="414.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (7 samples, 1.07%)</title><rect x="20.8" y="387.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.8" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (7 samples, 1.07%)</title><rect x="20.8" y="371.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="23.8" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (7 samples, 1.07%)</title><rect x="20.8" y="355.0" width="12.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.8" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (7 samples, 1.07%)</title><rect x="20.8" y="339.0" width="12.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.8" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (7 samples, 1.07%)</title><rect x="20.8" y="323.0" width="12.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.8" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (7 samples, 1.07%)</title><rect x="20.8" y="307.0" width="12.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.8" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (7 samples, 1.07%)</title><rect x="20.8" y="291.0" width="12.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.8" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (7 samples, 1.07%)</title><rect x="20.8" y="275.0" width="12.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="23.8" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (7 samples, 1.07%)</title><rect x="20.8" y="259.0" width="12.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.8" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (7 samples, 1.07%)</title><rect x="20.8" y="243.0" width="12.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.8" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (7 samples, 1.07%)</title><rect x="20.8" y="227.0" width="12.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.8" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (7 samples, 1.07%)</title><rect x="20.8" y="211.0" width="12.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="23.8" y="222.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (3 samples, 0.46%)</title><rect x="20.8" y="195.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.8" y="206.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.15%)</title><rect x="20.8" y="179.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.8" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySet (1 samples, 0.15%)</title><rect x="20.8" y="163.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.8" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (1 samples, 0.15%)</title><rect x="20.8" y="147.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.8" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (1 samples, 0.15%)</title><rect x="20.8" y="131.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="23.8" y="142.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (2 samples, 0.30%)</title><rect x="22.6" y="179.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="25.6" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.30%)</title><rect x="22.6" y="163.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.6" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.30%)</title><rect x="22.6" y="147.0" width="3.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="25.6" y="158.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (4 samples, 0.61%)</title><rect x="26.2" y="195.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="29.2" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.46%)</title><rect x="26.2" y="179.0" width="5.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="29.2" y="190.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.15%)</title><rect x="31.6" y="179.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="34.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.15%)</title><rect x="31.6" y="163.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="34.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (1 samples, 0.15%)</title><rect x="31.6" y="147.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.6" y="158.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 0.15%)</title><rect x="31.6" y="131.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="34.6" y="142.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.15%)</title><rect x="31.6" y="115.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.15%)</title><rect x="31.6" y="99.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.6" y="110.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor13.invoke (1 samples, 0.15%)</title><rect x="31.6" y="83.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.6" y="94.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getLockedSynchronizers (1 samples, 0.15%)</title><rect x="31.6" y="67.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="34.6" y="78.0"></text>
</g>
<g>
<title>java/lang/Object.clone (1 samples, 0.15%)</title><rect x="31.6" y="51.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.6" y="62.0"></text>
</g>
<g>
<title>java.lang.management.LockInfo[] (1 samples, 0.15%)</title><rect x="31.6" y="35.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="34.6" y="46.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (2 samples, 0.30%)</title><rect x="33.4" y="467.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="36.4" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.15%)</title><rect x="33.4" y="451.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.4" y="462.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (1 samples, 0.15%)</title><rect x="33.4" y="435.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.4" y="446.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (1 samples, 0.15%)</title><rect x="33.4" y="419.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="36.4" y="430.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader.&lt;init&gt; (1 samples, 0.15%)</title><rect x="33.4" y="403.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="36.4" y="414.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader$ClassLoaderWrapper.&lt;init&gt; (1 samples, 0.15%)</title><rect x="33.4" y="387.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="36.4" y="398.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.15%)</title><rect x="33.4" y="371.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="36.4" y="382.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.15%)</title><rect x="33.4" y="355.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="36.4" y="366.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (1 samples, 0.15%)</title><rect x="33.4" y="339.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="36.4" y="350.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (1 samples, 0.15%)</title><rect x="33.4" y="323.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="36.4" y="334.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (1 samples, 0.15%)</title><rect x="33.4" y="307.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="36.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.15%)</title><rect x="33.4" y="291.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="36.4" y="302.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (1 samples, 0.15%)</title><rect x="35.2" y="451.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="38.2" y="462.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (1 samples, 0.15%)</title><rect x="35.2" y="435.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="38.2" y="446.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject$MarshalledObjectInputStream.&lt;init&gt; (1 samples, 0.15%)</title><rect x="35.2" y="419.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="38.2" y="430.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (1 samples, 0.15%)</title><rect x="35.2" y="403.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.2" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (1 samples, 0.15%)</title><rect x="35.2" y="387.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="38.2" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (1 samples, 0.15%)</title><rect x="35.2" y="371.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="38.2" y="382.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.15%)</title><rect x="35.2" y="355.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="38.2" y="366.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (4 samples, 0.61%)</title><rect x="37.0" y="531.0" width="7.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="40.0" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (4 samples, 0.61%)</title><rect x="37.0" y="515.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.0" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.61%)</title><rect x="37.0" y="499.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.0" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (4 samples, 0.61%)</title><rect x="37.0" y="483.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.0" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.61%)</title><rect x="37.0" y="467.0" width="7.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.0" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (4 samples, 0.61%)</title><rect x="37.0" y="451.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.0" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (4 samples, 0.61%)</title><rect x="37.0" y="435.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="40.0" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (4 samples, 0.61%)</title><rect x="37.0" y="419.0" width="7.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="40.0" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.61%)</title><rect x="37.0" y="403.0" width="7.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="40.0" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (4 samples, 0.61%)</title><rect x="37.0" y="387.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.0" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (4 samples, 0.61%)</title><rect x="37.0" y="371.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.0" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (4 samples, 0.61%)</title><rect x="37.0" y="355.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="40.0" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.61%)</title><rect x="37.0" y="339.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="40.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.61%)</title><rect x="37.0" y="323.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="40.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (4 samples, 0.61%)</title><rect x="37.0" y="307.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="40.0" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (4 samples, 0.61%)</title><rect x="37.0" y="291.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.0" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (4 samples, 0.61%)</title><rect x="37.0" y="275.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.0" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.61%)</title><rect x="37.0" y="259.0" width="7.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.0" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (1 samples, 0.15%)</title><rect x="37.0" y="243.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="40.0" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.15%)</title><rect x="37.0" y="227.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="40.0" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.15%)</title><rect x="37.0" y="211.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.0" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.15%)</title><rect x="37.0" y="195.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.0" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.15%)</title><rect x="37.0" y="179.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="40.0" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.15%)</title><rect x="37.0" y="163.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.0" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.15%)</title><rect x="37.0" y="147.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="40.0" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.15%)</title><rect x="37.0" y="131.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="40.0" y="142.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (1 samples, 0.15%)</title><rect x="37.0" y="115.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="40.0" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (2 samples, 0.30%)</title><rect x="38.8" y="243.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.8" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (2 samples, 0.30%)</title><rect x="38.8" y="227.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="41.8" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (2 samples, 0.30%)</title><rect x="38.8" y="211.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="41.8" y="222.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.15%)</title><rect x="38.8" y="195.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="41.8" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.15%)</title><rect x="40.6" y="195.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="43.6" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.15%)</title><rect x="42.4" y="243.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.4" y="254.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.15%)</title><rect x="42.4" y="227.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="45.4" y="238.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (3 samples, 0.46%)</title><rect x="44.2" y="531.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.2" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.46%)</title><rect x="44.2" y="515.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="47.2" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.46%)</title><rect x="44.2" y="499.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.2" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (3 samples, 0.46%)</title><rect x="44.2" y="483.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.2" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (1 samples, 0.15%)</title><rect x="44.2" y="467.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.2" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.15%)</title><rect x="44.2" y="451.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="47.2" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (1 samples, 0.15%)</title><rect x="44.2" y="435.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.2" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.15%)</title><rect x="44.2" y="419.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="47.2" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (2 samples, 0.30%)</title><rect x="46.0" y="467.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="49.0" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (2 samples, 0.30%)</title><rect x="46.0" y="451.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="49.0" y="462.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$FieldValues[] (1 samples, 0.15%)</title><rect x="46.0" y="435.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="49.0" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (1 samples, 0.15%)</title><rect x="47.8" y="435.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="50.8" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.15%)</title><rect x="47.8" y="419.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="50.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.15%)</title><rect x="47.8" y="403.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="50.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (1 samples, 0.15%)</title><rect x="47.8" y="387.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="50.8" y="398.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (1 samples, 0.15%)</title><rect x="47.8" y="371.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="50.8" y="382.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (1 samples, 0.15%)</title><rect x="47.8" y="355.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="50.8" y="366.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.15%)</title><rect x="47.8" y="339.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="50.8" y="350.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (2 samples, 0.30%)</title><rect x="49.6" y="595.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.6" y="606.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (2 samples, 0.30%)</title><rect x="49.6" y="579.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="52.6" y="590.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (2 samples, 0.30%)</title><rect x="49.6" y="563.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.6" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (2 samples, 0.30%)</title><rect x="49.6" y="547.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.6" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (2 samples, 0.30%)</title><rect x="49.6" y="531.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="52.6" y="542.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.30%)</title><rect x="49.6" y="515.0" width="3.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="52.6" y="526.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (632 samples, 96.34%)</title><rect x="53.2" y="755.0" width="1136.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.2" y="766.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (632 samples, 96.34%)</title><rect x="53.2" y="739.0" width="1136.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.2" y="750.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (632 samples, 96.34%)</title><rect x="53.2" y="723.0" width="1136.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.2" y="734.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (632 samples, 96.34%)</title><rect x="53.2" y="707.0" width="1136.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.2" y="718.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (553 samples, 84.30%)</title><rect x="53.2" y="691.0" width="994.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.2" y="702.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (553 samples, 84.30%)</title><rect x="53.2" y="675.0" width="994.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.2" y="686.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (552 samples, 84.15%)</title><rect x="53.2" y="659.0" width="992.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.2" y="670.0">RequestHandler2_handleEntityPut.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (20 samples, 3.05%)</title><rect x="53.2" y="643.0" width="35.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.2" y="654.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (20 samples, 3.05%)</title><rect x="53.2" y="627.0" width="35.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.2" y="638.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (20 samples, 3.05%)</title><rect x="53.2" y="611.0" width="35.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.2" y="622.0">one..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (20 samples, 3.05%)</title><rect x="53.2" y="595.0" width="35.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.2" y="606.0">one..</text>
</g>
<g>
<title>byte[] (20 samples, 3.05%)</title><rect x="53.2" y="579.0" width="35.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="56.2" y="590.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut (532 samples, 81.10%)</title><rect x="89.1" y="643.0" width="957.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="92.1" y="654.0">ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut</text>
</g>
<g>
<title>java/lang/String.format (270 samples, 41.16%)</title><rect x="89.1" y="627.0" width="485.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="92.1" y="638.0">java/lang/String.format</text>
</g>
<g>
<title>java.util.Formatter (17 samples, 2.59%)</title><rect x="89.1" y="611.0" width="30.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="92.1" y="622.0">ja..</text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (4 samples, 0.61%)</title><rect x="119.7" y="611.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="122.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.46%)</title><rect x="119.7" y="595.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="122.7" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.46%)</title><rect x="119.7" y="579.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="122.7" y="590.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.46%)</title><rect x="119.7" y="563.0" width="5.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="122.7" y="574.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.15%)</title><rect x="125.1" y="595.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="128.1" y="606.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.15%)</title><rect x="125.1" y="579.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.1" y="590.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.15%)</title><rect x="125.1" y="563.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="128.1" y="574.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.15%)</title><rect x="125.1" y="547.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.1" y="558.0"></text>
</g>
<g>
<title>java.text.DecimalFormatSymbols (1 samples, 0.15%)</title><rect x="125.1" y="531.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="128.1" y="542.0"></text>
</g>
<g>
<title>java/util/Formatter.format (236 samples, 35.98%)</title><rect x="126.9" y="611.0" width="424.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.9" y="622.0">java/util/Formatter.format</text>
</g>
<g>
<title>java/util/Formatter.format (236 samples, 35.98%)</title><rect x="126.9" y="595.0" width="424.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.9" y="606.0">java/util/Formatter.format</text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (79 samples, 12.04%)</title><rect x="126.9" y="579.0" width="142.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.9" y="590.0">java/util/Formatte..</text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.printString (79 samples, 12.04%)</title><rect x="126.9" y="563.0" width="142.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="129.9" y="574.0">java/util/Formatte..</text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (79 samples, 12.04%)</title><rect x="126.9" y="547.0" width="142.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="129.9" y="558.0">java/util/Formatte..</text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.appendJustified (79 samples, 12.04%)</title><rect x="126.9" y="531.0" width="142.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="129.9" y="542.0">java/util/Formatte..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (79 samples, 12.04%)</title><rect x="126.9" y="515.0" width="142.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.9" y="526.0">java/lang/StringBu..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (79 samples, 12.04%)</title><rect x="126.9" y="499.0" width="142.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="129.9" y="510.0">java/lang/StringBu..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (79 samples, 12.04%)</title><rect x="126.9" y="483.0" width="142.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="129.9" y="494.0">java/lang/Abstract..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (79 samples, 12.04%)</title><rect x="126.9" y="467.0" width="142.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="129.9" y="478.0">java/lang/StringBu..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (79 samples, 12.04%)</title><rect x="126.9" y="451.0" width="142.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.9" y="462.0">java/lang/StringBu..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (79 samples, 12.04%)</title><rect x="126.9" y="435.0" width="142.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.9" y="446.0">java/lang/Abstract..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (79 samples, 12.04%)</title><rect x="126.9" y="419.0" width="142.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.9" y="430.0">java/lang/Abstract..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (79 samples, 12.04%)</title><rect x="126.9" y="403.0" width="142.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="129.9" y="414.0">java/util/Arrays.c..</text>
</g>
<g>
<title>byte[] (79 samples, 12.04%)</title><rect x="126.9" y="387.0" width="142.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="129.9" y="398.0">byte[]</text>
</g>
<g>
<title>java/util/Formatter.parse (157 samples, 23.93%)</title><rect x="269.0" y="579.0" width="282.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="272.0" y="590.0">java/util/Formatter.parse</text>
</g>
<g>
<title>java.util.ArrayList (24 samples, 3.66%)</title><rect x="269.0" y="563.0" width="43.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="272.0" y="574.0">java..</text>
</g>
<g>
<title>java.util.Formatter$FixedString (3 samples, 0.46%)</title><rect x="312.2" y="563.0" width="5.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="315.2" y="574.0"></text>
</g>
<g>
<title>java.util.Formatter$FormatSpecifier (63 samples, 9.60%)</title><rect x="317.6" y="563.0" width="113.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="320.6" y="574.0">java.util.Form..</text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.91%)</title><rect x="430.9" y="563.0" width="10.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="433.9" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.91%)</title><rect x="430.9" y="547.0" width="10.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="433.9" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.91%)</title><rect x="430.9" y="531.0" width="10.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.9" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.91%)</title><rect x="430.9" y="515.0" width="10.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.9" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.91%)</title><rect x="430.9" y="499.0" width="10.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="433.9" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.91%)</title><rect x="430.9" y="483.0" width="10.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="433.9" y="494.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.&lt;init&gt; (1 samples, 0.15%)</title><rect x="441.7" y="563.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="444.7" y="574.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.checkGeneral (1 samples, 0.15%)</title><rect x="441.7" y="547.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="444.7" y="558.0"></text>
</g>
<g>
<title>java.util.Formatter$Flags[] (1 samples, 0.15%)</title><rect x="441.7" y="531.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="444.7" y="542.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (60 samples, 9.15%)</title><rect x="443.5" y="563.0" width="107.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="446.5" y="574.0">java/util/reg..</text>
</g>
<g>
<title>java.util.regex.Matcher (53 samples, 8.08%)</title><rect x="443.5" y="547.0" width="95.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="446.5" y="558.0">java.util.r..</text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (7 samples, 1.07%)</title><rect x="538.8" y="547.0" width="12.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.8" y="558.0"></text>
</g>
<g>
<title>int[] (7 samples, 1.07%)</title><rect x="538.8" y="531.0" width="12.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="541.8" y="542.0"></text>
</g>
<g>
<title>java/util/Formatter.toString (13 samples, 1.98%)</title><rect x="551.4" y="611.0" width="23.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="554.4" y="622.0">j..</text>
</g>
<g>
<title>java/lang/StringBuilder.toString (13 samples, 1.98%)</title><rect x="551.4" y="595.0" width="23.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.4" y="606.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 1.98%)</title><rect x="551.4" y="579.0" width="23.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="554.4" y="590.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 1.98%)</title><rect x="551.4" y="563.0" width="23.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="554.4" y="574.0">j..</text>
</g>
<g>
<title>byte[] (13 samples, 1.98%)</title><rect x="551.4" y="547.0" width="23.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="554.4" y="558.0">b..</text>
</g>
<g>
<title>java/util/Arrays.toString (62 samples, 9.45%)</title><rect x="574.8" y="627.0" width="111.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="577.8" y="638.0">java/util/Arr..</text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.15%)</title><rect x="574.8" y="611.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="577.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (7 samples, 1.07%)</title><rect x="576.6" y="611.0" width="12.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="579.6" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (7 samples, 1.07%)</title><rect x="576.6" y="595.0" width="12.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="579.6" y="606.0"></text>
</g>
<g>
<title>byte[] (7 samples, 1.07%)</title><rect x="576.6" y="579.0" width="12.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="579.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (17 samples, 2.59%)</title><rect x="589.2" y="611.0" width="30.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="592.2" y="622.0">ja..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (17 samples, 2.59%)</title><rect x="589.2" y="595.0" width="30.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="592.2" y="606.0">ja..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (17 samples, 2.59%)</title><rect x="589.2" y="579.0" width="30.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.2" y="590.0">ja..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 2.59%)</title><rect x="589.2" y="563.0" width="30.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="592.2" y="574.0">ja..</text>
</g>
<g>
<title>byte[] (17 samples, 2.59%)</title><rect x="589.2" y="547.0" width="30.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="592.2" y="558.0">by..</text>
</g>
<g>
<title>java/lang/StringBuilder.toString (37 samples, 5.64%)</title><rect x="619.8" y="611.0" width="66.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="622.8" y="622.0">java/la..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (37 samples, 5.64%)</title><rect x="619.8" y="595.0" width="66.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="622.8" y="606.0">java/la..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (37 samples, 5.64%)</title><rect x="619.8" y="579.0" width="66.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="622.8" y="590.0">java/ut..</text>
</g>
<g>
<title>byte[] (37 samples, 5.64%)</title><rect x="619.8" y="563.0" width="66.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="622.8" y="574.0">byte[]</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (37 samples, 5.64%)</title><rect x="686.3" y="627.0" width="66.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.3" y="638.0">one/nio..</text>
</g>
<g>
<title>byte[] (20 samples, 3.05%)</title><rect x="686.3" y="611.0" width="36.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="689.3" y="622.0">byt..</text>
</g>
<g>
<title>java.lang.String[] (17 samples, 2.59%)</title><rect x="722.3" y="611.0" width="30.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="725.3" y="622.0">ja..</text>
</g>
<g>
<title>org/apache/commons/logging/impl/Log4JLogger.debug (156 samples, 23.78%)</title><rect x="752.9" y="627.0" width="280.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="755.9" y="638.0">org/apache/commons/logging/impl/Log4JL..</text>
</g>
<g>
<title>org/apache/log4j/Category.log (156 samples, 23.78%)</title><rect x="752.9" y="611.0" width="280.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="755.9" y="622.0">org/apache/log4j/Category.log</text>
</g>
<g>
<title>org/apache/log4j/Category.forcedLog (156 samples, 23.78%)</title><rect x="752.9" y="595.0" width="280.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.9" y="606.0">org/apache/log4j/Category.forcedLog</text>
</g>
<g>
<title>org.apache.log4j.spi.LoggingEvent (28 samples, 4.27%)</title><rect x="752.9" y="579.0" width="50.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="755.9" y="590.0">org.a..</text>
</g>
<g>
<title>org/apache/log4j/Category.callAppenders (128 samples, 19.51%)</title><rect x="803.3" y="579.0" width="230.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="806.3" y="590.0">org/apache/log4j/Category.call..</text>
</g>
<g>
<title>org/apache/log4j/helpers/AppenderAttachableImpl.appendLoopOnAppenders (128 samples, 19.51%)</title><rect x="803.3" y="563.0" width="230.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="806.3" y="574.0">org/apache/log4j/helpers/Appen..</text>
</g>
<g>
<title>org/apache/log4j/AppenderSkeleton.doAppend (128 samples, 19.51%)</title><rect x="803.3" y="547.0" width="230.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="806.3" y="558.0">org/apache/log4j/AppenderSkele..</text>
</g>
<g>
<title>org/apache/log4j/WriterAppender.append (128 samples, 19.51%)</title><rect x="803.3" y="531.0" width="230.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="806.3" y="542.0">org/apache/log4j/WriterAppende..</text>
</g>
<g>
<title>org/apache/log4j/WriterAppender.subAppend (128 samples, 19.51%)</title><rect x="803.3" y="515.0" width="230.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="806.3" y="526.0">org/apache/log4j/WriterAppende..</text>
</g>
<g>
<title>org/apache/log4j/PatternLayout.format (38 samples, 5.79%)</title><rect x="803.3" y="499.0" width="68.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="806.3" y="510.0">org/apa..</text>
</g>
<g>
<title>java/lang/StringBuffer.toString (37 samples, 5.64%)</title><rect x="803.3" y="483.0" width="66.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="806.3" y="494.0">java/la..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (37 samples, 5.64%)</title><rect x="803.3" y="467.0" width="66.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="806.3" y="478.0">java/la..</text>
</g>
<g>
<title>java.lang.String (20 samples, 3.05%)</title><rect x="803.3" y="451.0" width="35.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="806.3" y="462.0">jav..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 2.59%)</title><rect x="839.2" y="451.0" width="30.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="842.2" y="462.0">ja..</text>
</g>
<g>
<title>byte[] (17 samples, 2.59%)</title><rect x="839.2" y="435.0" width="30.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="842.2" y="446.0">by..</text>
</g>
<g>
<title>org/apache/log4j/helpers/PatternConverter.format (1 samples, 0.15%)</title><rect x="869.8" y="483.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="872.8" y="494.0"></text>
</g>
<g>
<title>org/apache/log4j/helpers/PatternParser$BasicPatternConverter.convert (1 samples, 0.15%)</title><rect x="869.8" y="467.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="872.8" y="478.0"></text>
</g>
<g>
<title>java/lang/Long.toString (1 samples, 0.15%)</title><rect x="869.8" y="451.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="872.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.15%)</title><rect x="869.8" y="435.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="872.8" y="446.0"></text>
</g>
<g>
<title>org/apache/log4j/helpers/QuietWriter.write (90 samples, 13.72%)</title><rect x="871.6" y="499.0" width="161.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="874.6" y="510.0">org/apache/log4j/help..</text>
</g>
<g>
<title>java/io/Writer.write (90 samples, 13.72%)</title><rect x="871.6" y="483.0" width="161.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="874.6" y="494.0">java/io/Writer.write</text>
</g>
<g>
<title>java/io/OutputStreamWriter.write (90 samples, 13.72%)</title><rect x="871.6" y="467.0" width="161.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="874.6" y="478.0">java/io/OutputStreamW..</text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.write (90 samples, 13.72%)</title><rect x="871.6" y="451.0" width="161.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="874.6" y="462.0">sun/nio/cs/StreamEnco..</text>
</g>
<g>
<title>char[] (76 samples, 11.59%)</title><rect x="871.6" y="435.0" width="136.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="874.6" y="446.0">char[]</text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.write (14 samples, 2.13%)</title><rect x="1008.3" y="435.0" width="25.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1011.3" y="446.0">s..</text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.implWrite (14 samples, 2.13%)</title><rect x="1008.3" y="419.0" width="25.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1011.3" y="430.0">s..</text>
</g>
<g>
<title>java/nio/CharBuffer.wrap (14 samples, 2.13%)</title><rect x="1008.3" y="403.0" width="25.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1011.3" y="414.0">j..</text>
</g>
<g>
<title>java.nio.HeapCharBuffer (14 samples, 2.13%)</title><rect x="1008.3" y="387.0" width="25.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1011.3" y="398.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (7 samples, 1.07%)</title><rect x="1033.5" y="627.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1036.5" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 1.07%)</title><rect x="1033.5" y="611.0" width="12.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1036.5" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 1.07%)</title><rect x="1033.5" y="595.0" width="12.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1036.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.15%)</title><rect x="1046.1" y="659.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1049.1" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.15%)</title><rect x="1046.1" y="643.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1049.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.15%)</title><rect x="1046.1" y="627.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1049.1" y="638.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.15%)</title><rect x="1046.1" y="611.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1049.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (20 samples, 3.05%)</title><rect x="1047.9" y="691.0" width="36.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1050.9" y="702.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.76%)</title><rect x="1047.9" y="675.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1050.9" y="686.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.76%)</title><rect x="1047.9" y="659.0" width="9.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1050.9" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 2.29%)</title><rect x="1056.9" y="675.0" width="27.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1059.9" y="686.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 2.29%)</title><rect x="1056.9" y="659.0" width="27.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1059.9" y="670.0">o..</text>
</g>
<g>
<title>java.lang.String (8 samples, 1.22%)</title><rect x="1056.9" y="643.0" width="14.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1059.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 1.07%)</title><rect x="1071.3" y="643.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1074.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 1.07%)</title><rect x="1071.3" y="627.0" width="12.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1074.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 1.07%)</title><rect x="1071.3" y="611.0" width="12.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1074.3" y="622.0"></text>
</g>
<g>
<title>byte[] (7 samples, 1.07%)</title><rect x="1071.3" y="595.0" width="12.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1074.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (19 samples, 2.90%)</title><rect x="1083.9" y="691.0" width="34.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1086.9" y="702.0">on..</text>
</g>
<g>
<title>byte[] (19 samples, 2.90%)</title><rect x="1083.9" y="675.0" width="34.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1086.9" y="686.0">by..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (38 samples, 5.79%)</title><rect x="1118.0" y="691.0" width="68.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1121.0" y="702.0">one/nio..</text>
</g>
<g>
<title>java/lang/String.substring (38 samples, 5.79%)</title><rect x="1118.0" y="675.0" width="68.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1121.0" y="686.0">java/la..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (38 samples, 5.79%)</title><rect x="1118.0" y="659.0" width="68.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1121.0" y="670.0">java/la..</text>
</g>
<g>
<title>java.lang.String (20 samples, 3.05%)</title><rect x="1118.0" y="643.0" width="36.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1121.0" y="654.0">jav..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 2.74%)</title><rect x="1154.0" y="643.0" width="32.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1157.0" y="654.0">ja..</text>
</g>
<g>
<title>byte[] (18 samples, 2.74%)</title><rect x="1154.0" y="627.0" width="32.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1157.0" y="638.0">by..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.30%)</title><rect x="1186.4" y="691.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1189.4" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.30%)</title><rect x="1186.4" y="675.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1189.4" y="686.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.30%)</title><rect x="1186.4" y="659.0" width="3.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1189.4" y="670.0"></text>
</g>
</g>
</svg>
