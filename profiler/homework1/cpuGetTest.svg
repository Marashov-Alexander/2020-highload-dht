<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (1,980 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.15%)</title><rect x="10.0" y="883.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.15%)</title><rect x="10.0" y="867.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.15%)</title><rect x="10.0" y="851.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (3 samples, 0.15%)</title><rect x="10.0" y="835.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.15%)</title><rect x="10.0" y="819.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$91/1348033445.run (3 samples, 0.15%)</title><rect x="10.0" y="803.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (3 samples, 0.15%)</title><rect x="10.0" y="787.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (3 samples, 0.15%)</title><rect x="10.0" y="771.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (3 samples, 0.15%)</title><rect x="10.0" y="755.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (3 samples, 0.15%)</title><rect x="10.0" y="739.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.15%)</title><rect x="10.0" y="723.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (3 samples, 0.15%)</title><rect x="10.0" y="707.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (3 samples, 0.15%)</title><rect x="10.0" y="691.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (3 samples, 0.15%)</title><rect x="10.0" y="675.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.10%)</title><rect x="10.0" y="659.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.10%)</title><rect x="10.0" y="643.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (2 samples, 0.10%)</title><rect x="10.0" y="627.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (2 samples, 0.10%)</title><rect x="10.0" y="611.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 0.05%)</title><rect x="10.0" y="595.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (1 samples, 0.05%)</title><rect x="10.0" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (1 samples, 0.05%)</title><rect x="10.0" y="563.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (1 samples, 0.05%)</title><rect x="10.0" y="547.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (1 samples, 0.05%)</title><rect x="10.0" y="531.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (1 samples, 0.05%)</title><rect x="10.0" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (1 samples, 0.05%)</title><rect x="10.0" y="499.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (1 samples, 0.05%)</title><rect x="10.0" y="483.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (1 samples, 0.05%)</title><rect x="10.0" y="467.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.05%)</title><rect x="10.0" y="451.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.05%)</title><rect x="10.0" y="435.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.05%)</title><rect x="10.0" y="419.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.05%)</title><rect x="10.0" y="403.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.05%)</title><rect x="10.0" y="387.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (1 samples, 0.05%)</title><rect x="10.0" y="371.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.05%)</title><rect x="10.0" y="355.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (1 samples, 0.05%)</title><rect x="10.0" y="339.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.05%)</title><rect x="10.0" y="323.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.05%)</title><rect x="10.0" y="307.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.equals (1 samples, 0.05%)</title><rect x="10.0" y="291.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractSet.equals (1 samples, 0.05%)</title><rect x="10.0" y="275.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.containsAll (1 samples, 0.05%)</title><rect x="10.0" y="259.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.contains (1 samples, 0.05%)</title><rect x="10.0" y="243.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.05%)</title><rect x="10.0" y="227.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.05%)</title><rect x="10.0" y="211.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.05%)</title><rect x="10.0" y="195.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (1 samples, 0.05%)</title><rect x="10.6" y="595.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.6" y="606.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (1 samples, 0.05%)</title><rect x="10.6" y="579.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.6" y="590.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (1 samples, 0.05%)</title><rect x="10.6" y="563.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.6" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.05%)</title><rect x="10.6" y="547.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.6" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.05%)</title><rect x="10.6" y="531.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.6" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.05%)</title><rect x="10.6" y="515.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.6" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (1 samples, 0.05%)</title><rect x="10.6" y="499.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.6" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.05%)</title><rect x="10.6" y="483.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.6" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.05%)</title><rect x="10.6" y="467.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.6" y="478.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.resolveClass (1 samples, 0.05%)</title><rect x="10.6" y="451.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.6" y="462.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.latestUserDefinedLoader (1 samples, 0.05%)</title><rect x="10.6" y="435.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.latestUserDefinedLoader (1 samples, 0.05%)</title><rect x="10.6" y="419.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.latestUserDefinedLoader0 (1 samples, 0.05%)</title><rect x="10.6" y="403.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.6" y="414.0"></text>
</g>
<g>
<title>JVM_LatestUserDefinedLoader (1 samples, 0.05%)</title><rect x="10.6" y="387.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.6" y="398.0"></text>
</g>
<g>
<title>vframeStreamCommon::skip_reflection_related_frames() (1 samples, 0.05%)</title><rect x="10.6" y="371.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.6" y="382.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.05%)</title><rect x="10.6" y="355.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.6" y="366.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.05%)</title><rect x="10.6" y="339.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.6" y="350.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="10.6" y="323.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.6" y="334.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.05%)</title><rect x="10.6" y="307.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.6" y="318.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (1 samples, 0.05%)</title><rect x="11.2" y="659.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.2" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.05%)</title><rect x="11.2" y="643.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.2" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.05%)</title><rect x="11.2" y="627.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.2" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.05%)</title><rect x="11.2" y="611.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.2" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (1 samples, 0.05%)</title><rect x="11.2" y="595.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.2" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.05%)</title><rect x="11.2" y="579.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.2" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.05%)</title><rect x="11.2" y="563.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.2" y="574.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.resolveClass (1 samples, 0.05%)</title><rect x="11.2" y="547.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.2" y="558.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader.loadClass (1 samples, 0.05%)</title><rect x="11.2" y="531.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.2" y="542.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader$2.loadClass (1 samples, 0.05%)</title><rect x="11.2" y="515.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.2" y="526.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClass (1 samples, 0.05%)</title><rect x="11.2" y="499.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.2" y="510.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClass (1 samples, 0.05%)</title><rect x="11.2" y="483.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.2" y="494.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 0.05%)</title><rect x="11.2" y="467.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.2" y="478.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 0.05%)</title><rect x="11.2" y="451.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.2" y="462.0"></text>
</g>
<g>
<title>Java_java_lang_Class_forName0 (1 samples, 0.05%)</title><rect x="11.2" y="435.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="14.2" y="446.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="11.2" y="419.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="14.2" y="430.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,976 samples, 99.80%)</title><rect x="11.8" y="883.0" width="1177.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.8" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.05%)</title><rect x="11.8" y="867.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.8" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.05%)</title><rect x="11.8" y="851.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="11.8" y="835.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="14.8" y="846.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.05%)</title><rect x="11.8" y="819.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="14.8" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="11.8" y="803.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="14.8" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="11.8" y="787.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="14.8" y="798.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.05%)</title><rect x="11.8" y="771.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="14.8" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.05%)</title><rect x="11.8" y="755.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="14.8" y="766.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.05%)</title><rect x="11.8" y="739.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="14.8" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.05%)</title><rect x="11.8" y="723.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="14.8" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.05%)</title><rect x="11.8" y="707.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="14.8" y="718.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="11.8" y="691.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="14.8" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.05%)</title><rect x="11.8" y="675.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="14.8" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,975 samples, 99.75%)</title><rect x="12.4" y="867.0" width="1177.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.4" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,975 samples, 99.75%)</title><rect x="12.4" y="851.0" width="1177.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.4" y="862.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,975 samples, 99.75%)</title><rect x="12.4" y="835.0" width="1177.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.4" y="846.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,975 samples, 99.75%)</title><rect x="12.4" y="819.0" width="1177.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.4" y="830.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,975 samples, 99.75%)</title><rect x="12.4" y="803.0" width="1177.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.4" y="814.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_handleEntityGet.handleRequest (1,975 samples, 99.75%)</title><rect x="12.4" y="787.0" width="1177.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="15.4" y="798.0">RequestHandler1_handleEntityGet.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 0.51%)</title><rect x="12.4" y="771.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 0.51%)</title><rect x="12.4" y="755.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="15.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.51%)</title><rect x="12.4" y="739.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.51%)</title><rect x="12.4" y="723.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (10 samples, 0.51%)</title><rect x="12.4" y="707.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="15.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (10 samples, 0.51%)</title><rect x="12.4" y="691.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.4" y="702.0"></text>
</g>
<g>
<title>__libc_send (10 samples, 0.51%)</title><rect x="12.4" y="675.0" width="5.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="15.4" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.51%)</title><rect x="12.4" y="659.0" width="5.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="15.4" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.51%)</title><rect x="12.4" y="643.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="15.4" y="654.0"></text>
</g>
<g>
<title>__x64_sys_sendto (10 samples, 0.51%)</title><rect x="12.4" y="627.0" width="5.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="15.4" y="638.0"></text>
</g>
<g>
<title>__sys_sendto (10 samples, 0.51%)</title><rect x="12.4" y="611.0" width="5.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="15.4" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (8 samples, 0.40%)</title><rect x="13.6" y="595.0" width="4.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="16.6" y="606.0"></text>
</g>
<g>
<title>inet6_sendmsg (8 samples, 0.40%)</title><rect x="13.6" y="579.0" width="4.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="16.6" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (8 samples, 0.40%)</title><rect x="13.6" y="563.0" width="4.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="16.6" y="574.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="13.6" y="547.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="16.6" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (7 samples, 0.35%)</title><rect x="14.2" y="547.0" width="4.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="17.2" y="558.0"></text>
</g>
<g>
<title>tcp_push (7 samples, 0.35%)</title><rect x="14.2" y="531.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="17.2" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (7 samples, 0.35%)</title><rect x="14.2" y="515.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="17.2" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (7 samples, 0.35%)</title><rect x="14.2" y="499.0" width="4.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="17.2" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (7 samples, 0.35%)</title><rect x="14.2" y="483.0" width="4.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="17.2" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (7 samples, 0.35%)</title><rect x="14.2" y="467.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="17.2" y="478.0"></text>
</g>
<g>
<title>__ip_queue_xmit (7 samples, 0.35%)</title><rect x="14.2" y="451.0" width="4.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="17.2" y="462.0"></text>
</g>
<g>
<title>ip_local_out (6 samples, 0.30%)</title><rect x="14.8" y="435.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="17.8" y="446.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.05%)</title><rect x="14.8" y="419.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="17.8" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="14.8" y="403.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="17.8" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.05%)</title><rect x="14.8" y="387.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="17.8" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.05%)</title><rect x="14.8" y="371.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="17.8" y="382.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.05%)</title><rect x="14.8" y="355.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="17.8" y="366.0"></text>
</g>
<g>
<title>ip_output (5 samples, 0.25%)</title><rect x="15.4" y="419.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="18.4" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (4 samples, 0.20%)</title><rect x="15.4" y="403.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="18.4" y="414.0"></text>
</g>
<g>
<title>__ip_finish_output (4 samples, 0.20%)</title><rect x="15.4" y="387.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="18.4" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 0.20%)</title><rect x="15.4" y="371.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="18.4" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.10%)</title><rect x="16.0" y="355.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="19.0" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.20 (2 samples, 0.10%)</title><rect x="16.0" y="339.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="19.0" y="350.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.10%)</title><rect x="16.0" y="323.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="19.0" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.10%)</title><rect x="16.0" y="307.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="19.0" y="318.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.10%)</title><rect x="16.0" y="291.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="19.0" y="302.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.10%)</title><rect x="16.0" y="275.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="19.0" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.10%)</title><rect x="16.0" y="259.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="19.0" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.10%)</title><rect x="16.0" y="243.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="19.0" y="254.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.10%)</title><rect x="16.0" y="227.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="19.0" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.10%)</title><rect x="16.0" y="211.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="19.0" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.10%)</title><rect x="16.0" y="195.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="19.0" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.05%)</title><rect x="16.0" y="179.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="19.0" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.05%)</title><rect x="16.0" y="163.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="19.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.05%)</title><rect x="16.0" y="147.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="19.0" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.05%)</title><rect x="16.0" y="131.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="19.0" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.05%)</title><rect x="16.0" y="115.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="19.0" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.05%)</title><rect x="16.0" y="99.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="19.0" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.05%)</title><rect x="16.0" y="83.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="19.0" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.05%)</title><rect x="16.0" y="67.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="19.0" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.05%)</title><rect x="16.0" y="51.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="19.0" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="16.0" y="35.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="19.0" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="16.6" y="179.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="19.6" y="190.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="16.6" y="163.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="19.6" y="174.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.05%)</title><rect x="16.6" y="147.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="19.6" y="158.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.05%)</title><rect x="17.2" y="355.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="20.2" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.05%)</title><rect x="17.2" y="339.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="20.2" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.05%)</title><rect x="17.2" y="323.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="20.2" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.05%)</title><rect x="17.2" y="307.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="20.2" y="318.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="17.2" y="291.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="20.2" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="17.7" y="403.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="20.7" y="414.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="17.7" y="387.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="20.7" y="398.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="17.7" y="371.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="20.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityGet (1,965 samples, 99.24%)</title><rect x="18.3" y="771.0" width="1171.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.3" y="782.0">ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityGet</text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.05%)</title><rect x="18.9" y="755.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.9" y="766.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.05%)</title><rect x="18.9" y="739.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.9" y="750.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.05%)</title><rect x="18.9" y="723.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.9" y="734.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.05%)</title><rect x="18.9" y="707.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.9" y="718.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.05%)</title><rect x="18.9" y="691.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.9" y="702.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.05%)</title><rect x="18.9" y="675.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.9" y="686.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (1 samples, 0.05%)</title><rect x="18.9" y="659.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.9" y="670.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.05%)</title><rect x="18.9" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="21.9" y="654.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (1 samples, 0.05%)</title><rect x="18.9" y="627.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="21.9" y="638.0"></text>
</g>
<g>
<title>org/apache/commons/logging/impl/Log4JLogger.debug (2 samples, 0.10%)</title><rect x="19.5" y="755.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.5" y="766.0"></text>
</g>
<g>
<title>org/apache/log4j/Category.log (2 samples, 0.10%)</title><rect x="19.5" y="739.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.5" y="750.0"></text>
</g>
<g>
<title>org/apache/log4j/Category.forcedLog (2 samples, 0.10%)</title><rect x="19.5" y="723.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.5" y="734.0"></text>
</g>
<g>
<title>org/apache/log4j/Category.callAppenders (2 samples, 0.10%)</title><rect x="19.5" y="707.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.5" y="718.0"></text>
</g>
<g>
<title>org/apache/log4j/helpers/AppenderAttachableImpl.appendLoopOnAppenders (2 samples, 0.10%)</title><rect x="19.5" y="691.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="22.5" y="702.0"></text>
</g>
<g>
<title>org/apache/log4j/AppenderSkeleton.doAppend (2 samples, 0.10%)</title><rect x="19.5" y="675.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.5" y="686.0"></text>
</g>
<g>
<title>org/apache/log4j/WriterAppender.append (2 samples, 0.10%)</title><rect x="19.5" y="659.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="22.5" y="670.0"></text>
</g>
<g>
<title>org/apache/log4j/WriterAppender.subAppend (2 samples, 0.10%)</title><rect x="19.5" y="643.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.5" y="654.0"></text>
</g>
<g>
<title>org/apache/log4j/PatternLayout.format (1 samples, 0.05%)</title><rect x="19.5" y="627.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.5" y="638.0"></text>
</g>
<g>
<title>org/apache/log4j/helpers/PatternConverter.format (1 samples, 0.05%)</title><rect x="19.5" y="611.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (1 samples, 0.05%)</title><rect x="19.5" y="595.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="22.5" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="19.5" y="579.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.5" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.05%)</title><rect x="19.5" y="563.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.5" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="19.5" y="547.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.5" y="558.0"></text>
</g>
<g>
<title>org/apache/log4j/helpers/QuietWriter.flush (1 samples, 0.05%)</title><rect x="20.1" y="627.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.1" y="638.0"></text>
</g>
<g>
<title>java/io/OutputStreamWriter.flush (1 samples, 0.05%)</title><rect x="20.1" y="611.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="23.1" y="622.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.flush (1 samples, 0.05%)</title><rect x="20.1" y="595.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.implFlush (1 samples, 0.05%)</title><rect x="20.1" y="579.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.implFlushBuffer (1 samples, 0.05%)</title><rect x="20.1" y="563.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.writeBytes (1 samples, 0.05%)</title><rect x="20.1" y="547.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="23.1" y="558.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.05%)</title><rect x="20.1" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.1" y="542.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (1 samples, 0.05%)</title><rect x="20.1" y="515.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.1" y="526.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.05%)</title><rect x="20.1" y="499.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.1" y="510.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.05%)</title><rect x="20.1" y="483.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.1" y="494.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.05%)</title><rect x="20.1" y="467.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="23.1" y="478.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.05%)</title><rect x="20.1" y="451.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="23.1" y="462.0"></text>
</g>
<g>
<title>__GI_write (1 samples, 0.05%)</title><rect x="20.1" y="435.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="23.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,961 samples, 99.04%)</title><rect x="20.7" y="755.0" width="1168.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="23.7" y="766.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.iterator (1,961 samples, 99.04%)</title><rect x="20.7" y="739.0" width="1168.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.7" y="750.0">ru/mail/polis/dao/alexander/marashov/DAOImpl.iterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,961 samples, 99.04%)</title><rect x="20.7" y="723.0" width="1168.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.7" y="734.0">com/google/common/collect/Iterators.mergeSorted</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,961 samples, 99.04%)</title><rect x="20.7" y="707.0" width="1168.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="23.7" y="718.0">com/google/common/collect/Iterators$MergingIterator.&lt;init&gt;</text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.05%)</title><rect x="20.7" y="691.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="23.7" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.05%)</title><rect x="20.7" y="675.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.7" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.05%)</title><rect x="20.7" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.7" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1 samples, 0.05%)</title><rect x="20.7" y="643.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.7" y="654.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1,960 samples, 98.99%)</title><rect x="21.3" y="691.0" width="1168.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.3" y="702.0">java/util/Spliterators$1Adapter.hasNext</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1,960 samples, 98.99%)</title><rect x="21.3" y="675.0" width="1168.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.3" y="686.0">java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1,960 samples, 98.99%)</title><rect x="21.3" y="659.0" width="1168.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.3" y="670.0">java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance</text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (1,029 samples, 51.97%)</title><rect x="21.3" y="643.0" width="613.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.3" y="654.0">java/util/Spliterator.getExactSizeIfKnown</text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (1,029 samples, 51.97%)</title><rect x="21.3" y="627.0" width="613.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.3" y="638.0">java/util/Spliterators$IteratorSpliterator.estimateSize</text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (1,026 samples, 51.82%)</title><rect x="21.3" y="611.0" width="611.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.3" y="622.0">java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator</text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.&lt;init&gt; (1,026 samples, 51.82%)</title><rect x="21.3" y="595.0" width="611.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.3" y="606.0">java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.&lt;init&gt;</text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.&lt;init&gt; (1,026 samples, 51.82%)</title><rect x="21.3" y="579.0" width="611.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.3" y="590.0">java/util/TreeMap$NavigableSubMap$SubMapIterator.&lt;init&gt;</text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$EntrySetView.size (3 samples, 0.15%)</title><rect x="632.8" y="611.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="635.8" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (3 samples, 0.15%)</title><rect x="632.8" y="595.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="635.8" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (3 samples, 0.15%)</title><rect x="632.8" y="579.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="635.8" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (3 samples, 0.15%)</title><rect x="632.8" y="563.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="635.8" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (3 samples, 0.15%)</title><rect x="632.8" y="547.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.8" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (15 samples, 0.76%)</title><rect x="634.6" y="643.0" width="8.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="637.6" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$115/713990033.getAsBoolean (2 samples, 0.10%)</title><rect x="642.3" y="627.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="645.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.10%)</title><rect x="642.3" y="611.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="645.3" y="622.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.tryAdvance (2 samples, 0.10%)</title><rect x="642.3" y="595.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.10%)</title><rect x="642.3" y="579.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.3" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$114/1492897474.accept (2 samples, 0.10%)</title><rect x="642.3" y="563.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.accept (2 samples, 0.10%)</title><rect x="642.3" y="547.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (916 samples, 46.26%)</title><rect x="643.5" y="643.0" width="545.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="646.5" y="654.0">java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversa..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (57 samples, 2.88%)</title><rect x="1155.4" y="627.0" width="34.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1158.4" y="638.0">ja..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (57 samples, 2.88%)</title><rect x="1155.4" y="611.0" width="34.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1158.4" y="622.0">ja..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.&lt;init&gt; (50 samples, 2.53%)</title><rect x="1159.6" y="595.0" width="29.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1162.6" y="606.0">ja..</text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (50 samples, 2.53%)</title><rect x="1159.6" y="579.0" width="29.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1162.6" y="590.0">ja..</text>
</g>
<g>
<title>start_thread (1 samples, 0.05%)</title><rect x="1189.4" y="883.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1192.4" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.05%)</title><rect x="1189.4" y="867.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1192.4" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.05%)</title><rect x="1189.4" y="851.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.4" y="862.0"></text>
</g>
<g>
<title>JavaThread::run() (1 samples, 0.05%)</title><rect x="1189.4" y="835.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.4" y="846.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (1 samples, 0.05%)</title><rect x="1189.4" y="819.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.4" y="830.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (1 samples, 0.05%)</title><rect x="1189.4" y="803.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.4" y="814.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.05%)</title><rect x="1189.4" y="787.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.4" y="798.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (1 samples, 0.05%)</title><rect x="1189.4" y="771.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.4" y="782.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (1 samples, 0.05%)</title><rect x="1189.4" y="755.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.4" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (1 samples, 0.05%)</title><rect x="1189.4" y="739.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.4" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.05%)</title><rect x="1189.4" y="723.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.4" y="734.0"></text>
</g>
</g>
</svg>
