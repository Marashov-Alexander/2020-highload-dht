<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (127 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 2.36%)</title><rect x="10.0" y="899.0" width="27.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 2.36%)</title><rect x="10.0" y="883.0" width="27.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 2.36%)</title><rect x="10.0" y="867.0" width="27.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="878.0">j..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (3 samples, 2.36%)</title><rect x="10.0" y="851.0" width="27.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="862.0">s..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 2.36%)</title><rect x="10.0" y="835.0" width="27.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="846.0">j..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$91/1348033445.run (3 samples, 2.36%)</title><rect x="10.0" y="819.0" width="27.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="830.0">s..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (3 samples, 2.36%)</title><rect x="10.0" y="803.0" width="27.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="814.0">s..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (3 samples, 2.36%)</title><rect x="10.0" y="787.0" width="27.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="798.0">s..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (3 samples, 2.36%)</title><rect x="10.0" y="771.0" width="27.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="782.0">s..</text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (3 samples, 2.36%)</title><rect x="10.0" y="755.0" width="27.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="766.0">s..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 2.36%)</title><rect x="10.0" y="739.0" width="27.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="750.0">j..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (3 samples, 2.36%)</title><rect x="10.0" y="723.0" width="27.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="734.0">s..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (3 samples, 2.36%)</title><rect x="10.0" y="707.0" width="27.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="718.0">s..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (3 samples, 2.36%)</title><rect x="10.0" y="691.0" width="27.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="702.0">s..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.79%)</title><rect x="10.0" y="675.0" width="9.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.79%)</title><rect x="10.0" y="659.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (1 samples, 0.79%)</title><rect x="10.0" y="643.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (1 samples, 0.79%)</title><rect x="10.0" y="627.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (1 samples, 0.79%)</title><rect x="10.0" y="611.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (1 samples, 0.79%)</title><rect x="10.0" y="595.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (1 samples, 0.79%)</title><rect x="10.0" y="579.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.79%)</title><rect x="10.0" y="563.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.79%)</title><rect x="10.0" y="547.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.79%)</title><rect x="10.0" y="531.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (1 samples, 0.79%)</title><rect x="10.0" y="515.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.79%)</title><rect x="10.0" y="499.0" width="9.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.79%)</title><rect x="10.0" y="483.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.resolveClass (1 samples, 0.79%)</title><rect x="10.0" y="467.0" width="9.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.latestUserDefinedLoader (1 samples, 0.79%)</title><rect x="10.0" y="451.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.latestUserDefinedLoader (1 samples, 0.79%)</title><rect x="10.0" y="435.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.latestUserDefinedLoader0 (1 samples, 0.79%)</title><rect x="10.0" y="419.0" width="9.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>JVM_LatestUserDefinedLoader (1 samples, 0.79%)</title><rect x="10.0" y="403.0" width="9.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (1 samples, 0.79%)</title><rect x="19.3" y="675.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.3" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.79%)</title><rect x="19.3" y="659.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.3" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.79%)</title><rect x="19.3" y="643.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.3" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (1 samples, 0.79%)</title><rect x="19.3" y="627.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.3" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.79%)</title><rect x="19.3" y="611.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.3" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.79%)</title><rect x="19.3" y="595.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.3" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.79%)</title><rect x="19.3" y="579.0" width="9.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="22.3" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.79%)</title><rect x="19.3" y="563.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.3" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.79%)</title><rect x="19.3" y="547.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.3" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.79%)</title><rect x="19.3" y="531.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.3" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.79%)</title><rect x="19.3" y="515.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.3" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.79%)</title><rect x="19.3" y="499.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.3" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.79%)</title><rect x="19.3" y="483.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.79%)</title><rect x="19.3" y="467.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (1 samples, 0.79%)</title><rect x="19.3" y="451.0" width="9.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.3" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.79%)</title><rect x="19.3" y="435.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.3" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.79%)</title><rect x="19.3" y="419.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.3" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.79%)</title><rect x="19.3" y="403.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.3" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.79%)</title><rect x="19.3" y="387.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.3" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.79%)</title><rect x="19.3" y="371.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.3" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (1 samples, 0.79%)</title><rect x="19.3" y="355.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.3" y="366.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (1 samples, 0.79%)</title><rect x="28.6" y="675.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.6" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.79%)</title><rect x="28.6" y="659.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="31.6" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.79%)</title><rect x="28.6" y="643.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="31.6" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.79%)</title><rect x="28.6" y="627.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="31.6" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (1 samples, 0.79%)</title><rect x="28.6" y="611.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.6" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.79%)</title><rect x="28.6" y="595.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="31.6" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.79%)</title><rect x="28.6" y="579.0" width="9.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.6" y="590.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.resolveClass (1 samples, 0.79%)</title><rect x="28.6" y="563.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.6" y="574.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader.loadClass (1 samples, 0.79%)</title><rect x="28.6" y="547.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.6" y="558.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader$2.loadClass (1 samples, 0.79%)</title><rect x="28.6" y="531.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="31.6" y="542.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClass (1 samples, 0.79%)</title><rect x="28.6" y="515.0" width="9.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.6" y="526.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClass (1 samples, 0.79%)</title><rect x="28.6" y="499.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.6" y="510.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 0.79%)</title><rect x="28.6" y="483.0" width="9.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.6" y="494.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 0.79%)</title><rect x="28.6" y="467.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="31.6" y="478.0"></text>
</g>
<g>
<title>Java_java_lang_Class_forName0 (1 samples, 0.79%)</title><rect x="28.6" y="451.0" width="9.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="31.6" y="462.0"></text>
</g>
<g>
<title>JVM_FindClassFromCaller (1 samples, 0.79%)</title><rect x="28.6" y="435.0" width="9.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="31.6" y="446.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (1 samples, 0.79%)</title><rect x="28.6" y="419.0" width="9.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="31.6" y="430.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.79%)</title><rect x="28.6" y="403.0" width="9.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="31.6" y="414.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.79%)</title><rect x="28.6" y="387.0" width="9.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="31.6" y="398.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (122 samples, 96.06%)</title><rect x="37.9" y="899.0" width="1133.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="40.9" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 1.57%)</title><rect x="37.9" y="883.0" width="18.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 1.57%)</title><rect x="37.9" y="867.0" width="18.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 1.57%)</title><rect x="37.9" y="851.0" width="18.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="40.9" y="862.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 1.57%)</title><rect x="37.9" y="835.0" width="18.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="40.9" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.79%)</title><rect x="47.2" y="819.0" width="9.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="50.2" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.79%)</title><rect x="47.2" y="803.0" width="9.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="50.2" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.79%)</title><rect x="47.2" y="787.0" width="9.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="50.2" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.79%)</title><rect x="47.2" y="771.0" width="9.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="50.2" y="782.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.79%)</title><rect x="47.2" y="755.0" width="9.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="50.2" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (1 samples, 0.79%)</title><rect x="47.2" y="739.0" width="9.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="50.2" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.79%)</title><rect x="47.2" y="723.0" width="9.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="50.2" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.79%)</title><rect x="47.2" y="707.0" width="9.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="50.2" y="718.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.79%)</title><rect x="47.2" y="691.0" width="9.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="50.2" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.79%)</title><rect x="47.2" y="675.0" width="9.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="50.2" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (120 samples, 94.49%)</title><rect x="56.5" y="883.0" width="1114.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="59.5" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (120 samples, 94.49%)</title><rect x="56.5" y="867.0" width="1114.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="59.5" y="878.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (114 samples, 89.76%)</title><rect x="56.5" y="851.0" width="1059.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="59.5" y="862.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (109 samples, 85.83%)</title><rect x="65.7" y="835.0" width="1012.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.7" y="846.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (109 samples, 85.83%)</title><rect x="65.7" y="819.0" width="1012.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.7" y="830.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (108 samples, 85.04%)</title><rect x="65.7" y="803.0" width="1003.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.7" y="814.0">RequestHandler2_handleEntityPut.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (47 samples, 37.01%)</title><rect x="65.7" y="787.0" width="436.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="68.7" y="798.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (47 samples, 37.01%)</title><rect x="65.7" y="771.0" width="436.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="68.7" y="782.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/net/Session.write (47 samples, 37.01%)</title><rect x="65.7" y="755.0" width="436.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="68.7" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (47 samples, 37.01%)</title><rect x="65.7" y="739.0" width="436.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.7" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (47 samples, 37.01%)</title><rect x="65.7" y="723.0" width="436.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.7" y="734.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (47 samples, 37.01%)</title><rect x="65.7" y="707.0" width="436.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.7" y="718.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.79%)</title><rect x="65.7" y="691.0" width="9.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="68.7" y="702.0"></text>
</g>
<g>
<title>__memmove_ssse3 (1 samples, 0.79%)</title><rect x="65.7" y="675.0" width="9.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="68.7" y="686.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.79%)</title><rect x="75.0" y="691.0" width="9.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="78.0" y="702.0"></text>
</g>
<g>
<title>__libc_send (45 samples, 35.43%)</title><rect x="84.3" y="691.0" width="418.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="87.3" y="702.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 35.43%)</title><rect x="84.3" y="675.0" width="418.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="87.3" y="686.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (45 samples, 35.43%)</title><rect x="84.3" y="659.0" width="418.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="87.3" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (45 samples, 35.43%)</title><rect x="84.3" y="643.0" width="418.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="87.3" y="654.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (45 samples, 35.43%)</title><rect x="84.3" y="627.0" width="418.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="87.3" y="638.0">__sys_sendto</text>
</g>
<g>
<title>fput (1 samples, 0.79%)</title><rect x="84.3" y="611.0" width="9.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="87.3" y="622.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.79%)</title><rect x="84.3" y="595.0" width="9.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="87.3" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (44 samples, 34.65%)</title><rect x="93.6" y="611.0" width="408.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="96.6" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.79%)</title><rect x="93.6" y="595.0" width="9.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="96.6" y="606.0"></text>
</g>
<g>
<title>inet6_sendmsg (42 samples, 33.07%)</title><rect x="102.9" y="595.0" width="390.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="105.9" y="606.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (42 samples, 33.07%)</title><rect x="102.9" y="579.0" width="390.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="105.9" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (42 samples, 33.07%)</title><rect x="102.9" y="563.0" width="390.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="105.9" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.79%)</title><rect x="102.9" y="547.0" width="9.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="105.9" y="558.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.79%)</title><rect x="102.9" y="531.0" width="9.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="105.9" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 2.36%)</title><rect x="112.2" y="547.0" width="27.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="115.2" y="558.0">s..</text>
</g>
<g>
<title>__alloc_skb (3 samples, 2.36%)</title><rect x="112.2" y="531.0" width="27.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="115.2" y="542.0">_..</text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.79%)</title><rect x="112.2" y="515.0" width="9.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="115.2" y="526.0"></text>
</g>
<g>
<title>memset (1 samples, 0.79%)</title><rect x="112.2" y="499.0" width="9.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="115.2" y="510.0"></text>
</g>
<g>
<title>memset (2 samples, 1.57%)</title><rect x="121.5" y="515.0" width="18.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="124.5" y="526.0"></text>
</g>
<g>
<title>tcp_push (38 samples, 29.92%)</title><rect x="140.1" y="547.0" width="353.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="143.1" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (37 samples, 29.13%)</title><rect x="149.4" y="531.0" width="343.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="152.4" y="542.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (37 samples, 29.13%)</title><rect x="149.4" y="515.0" width="343.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="152.4" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (36 samples, 28.35%)</title><rect x="149.4" y="499.0" width="334.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="152.4" y="510.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (34 samples, 26.77%)</title><rect x="168.0" y="483.0" width="315.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="171.0" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (34 samples, 26.77%)</title><rect x="168.0" y="467.0" width="315.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="171.0" y="478.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (34 samples, 26.77%)</title><rect x="168.0" y="451.0" width="315.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="171.0" y="462.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (3 samples, 2.36%)</title><rect x="168.0" y="435.0" width="27.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="171.0" y="446.0">_..</text>
</g>
<g>
<title>nf_hook_slow (3 samples, 2.36%)</title><rect x="168.0" y="419.0" width="27.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="171.0" y="430.0">n..</text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 1.57%)</title><rect x="168.0" y="403.0" width="18.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="171.0" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 1.57%)</title><rect x="168.0" y="387.0" width="18.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="171.0" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (2 samples, 1.57%)</title><rect x="168.0" y="371.0" width="18.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="171.0" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 1.57%)</title><rect x="168.0" y="355.0" width="18.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="171.0" y="366.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.79%)</title><rect x="177.2" y="339.0" width="9.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="180.2" y="350.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (1 samples, 0.79%)</title><rect x="186.5" y="403.0" width="9.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="189.5" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.79%)</title><rect x="186.5" y="387.0" width="9.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="189.5" y="398.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.79%)</title><rect x="186.5" y="371.0" width="9.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="189.5" y="382.0"></text>
</g>
<g>
<title>ip_output (31 samples, 24.41%)</title><rect x="195.8" y="435.0" width="288.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="198.8" y="446.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (31 samples, 24.41%)</title><rect x="195.8" y="419.0" width="288.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="198.8" y="430.0">ip_finish_output</text>
</g>
<g>
<title>__ip_finish_output (30 samples, 23.62%)</title><rect x="195.8" y="403.0" width="278.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="198.8" y="414.0">__ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (30 samples, 23.62%)</title><rect x="195.8" y="387.0" width="278.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="198.8" y="398.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (27 samples, 21.26%)</title><rect x="205.1" y="371.0" width="250.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="208.1" y="382.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.20 (27 samples, 21.26%)</title><rect x="205.1" y="355.0" width="250.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="208.1" y="366.0">do_softirq.part.20</text>
</g>
<g>
<title>do_softirq_own_stack (26 samples, 20.47%)</title><rect x="214.4" y="339.0" width="241.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="217.4" y="350.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (26 samples, 20.47%)</title><rect x="214.4" y="323.0" width="241.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="217.4" y="334.0">__softirqentry_text_start</text>
</g>
<g>
<title>net_rx_action (26 samples, 20.47%)</title><rect x="214.4" y="307.0" width="241.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="217.4" y="318.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (26 samples, 20.47%)</title><rect x="214.4" y="291.0" width="241.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="217.4" y="302.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (26 samples, 20.47%)</title><rect x="214.4" y="275.0" width="241.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="217.4" y="286.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_one_core (26 samples, 20.47%)</title><rect x="214.4" y="259.0" width="241.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="217.4" y="270.0">__netif_receive_skb_one_core</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.79%)</title><rect x="214.4" y="243.0" width="9.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="217.4" y="254.0"></text>
</g>
<g>
<title>ip_rcv (24 samples, 18.90%)</title><rect x="223.7" y="243.0" width="223.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="226.7" y="254.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 1.57%)</title><rect x="223.7" y="227.0" width="18.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="226.7" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (21 samples, 16.54%)</title><rect x="242.3" y="227.0" width="195.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="245.3" y="238.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (21 samples, 16.54%)</title><rect x="242.3" y="211.0" width="195.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="245.3" y="222.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (20 samples, 15.75%)</title><rect x="242.3" y="195.0" width="185.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="245.3" y="206.0">ip_local_deliver_finish</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (20 samples, 15.75%)</title><rect x="242.3" y="179.0" width="185.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="245.3" y="190.0">ip_protocol_deliver_rcu</text>
</g>
<g>
<title>tcp_v4_rcv (20 samples, 15.75%)</title><rect x="242.3" y="163.0" width="185.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="245.3" y="174.0">tcp_v4_rcv</text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.79%)</title><rect x="251.6" y="147.0" width="9.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="254.6" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.79%)</title><rect x="251.6" y="131.0" width="9.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="254.6" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (18 samples, 14.17%)</title><rect x="260.9" y="147.0" width="167.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="263.9" y="158.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (18 samples, 14.17%)</title><rect x="260.9" y="131.0" width="167.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="263.9" y="142.0">tcp_rcv_established</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.79%)</title><rect x="260.9" y="115.0" width="9.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="263.9" y="126.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.79%)</title><rect x="260.9" y="99.0" width="9.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="263.9" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.79%)</title><rect x="260.9" y="83.0" width="9.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="263.9" y="94.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.79%)</title><rect x="260.9" y="67.0" width="9.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="263.9" y="78.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 4.72%)</title><rect x="270.2" y="115.0" width="55.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="273.2" y="126.0">tcp_ack</text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 2.36%)</title><rect x="279.4" y="99.0" width="27.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="282.4" y="110.0">t..</text>
</g>
<g>
<title>__kfree_skb (2 samples, 1.57%)</title><rect x="288.7" y="83.0" width="18.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="291.7" y="94.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 1.57%)</title><rect x="288.7" y="67.0" width="18.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="291.7" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 1.57%)</title><rect x="288.7" y="51.0" width="18.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="291.7" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.79%)</title><rect x="298.0" y="35.0" width="9.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="301.0" y="46.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.79%)</title><rect x="307.3" y="99.0" width="9.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="310.3" y="110.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.79%)</title><rect x="316.6" y="99.0" width="9.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="319.6" y="110.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.79%)</title><rect x="325.9" y="115.0" width="9.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="328.9" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (10 samples, 7.87%)</title><rect x="335.2" y="115.0" width="92.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="338.2" y="126.0">tcp_data_re..</text>
</g>
<g>
<title>sock_def_readable (10 samples, 7.87%)</title><rect x="335.2" y="99.0" width="92.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="338.2" y="110.0">sock_def_re..</text>
</g>
<g>
<title>__wake_up_sync_key (9 samples, 7.09%)</title><rect x="344.5" y="83.0" width="83.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="347.5" y="94.0">__wake_up..</text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.79%)</title><rect x="344.5" y="67.0" width="9.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="347.5" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (8 samples, 6.30%)</title><rect x="353.8" y="67.0" width="74.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="356.8" y="78.0">__wake_u..</text>
</g>
<g>
<title>__lock_text_start (8 samples, 6.30%)</title><rect x="353.8" y="51.0" width="74.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="356.8" y="62.0">__lock_t..</text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.79%)</title><rect x="428.1" y="195.0" width="9.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="431.1" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.79%)</title><rect x="437.4" y="227.0" width="9.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="440.4" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.79%)</title><rect x="446.7" y="243.0" width="9.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="449.7" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 1.57%)</title><rect x="456.0" y="371.0" width="18.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="459.0" y="382.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 1.57%)</title><rect x="456.0" y="355.0" width="18.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="459.0" y="366.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.79%)</title><rect x="474.6" y="403.0" width="9.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="477.6" y="414.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.79%)</title><rect x="483.9" y="499.0" width="9.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="486.9" y="510.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.79%)</title><rect x="493.1" y="595.0" width="9.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="496.1" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.79%)</title><rect x="493.1" y="579.0" width="9.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="496.1" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.79%)</title><rect x="493.1" y="563.0" width="9.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="496.1" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.79%)</title><rect x="493.1" y="547.0" width="9.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="496.1" y="558.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.79%)</title><rect x="493.1" y="531.0" width="9.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="496.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut (61 samples, 48.03%)</title><rect x="502.4" y="787.0" width="566.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="505.4" y="798.0">ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut</text>
</g>
<g>
<title>java/lang/String.format (18 samples, 14.17%)</title><rect x="502.4" y="771.0" width="167.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.4" y="782.0">java/lang/String.format</text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (2 samples, 1.57%)</title><rect x="502.4" y="755.0" width="18.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="505.4" y="766.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (2 samples, 1.57%)</title><rect x="502.4" y="739.0" width="18.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="505.4" y="750.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (2 samples, 1.57%)</title><rect x="502.4" y="723.0" width="18.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="505.4" y="734.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (2 samples, 1.57%)</title><rect x="502.4" y="707.0" width="18.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="505.4" y="718.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.79%)</title><rect x="502.4" y="691.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="505.4" y="702.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.79%)</title><rect x="502.4" y="675.0" width="9.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="505.4" y="686.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.79%)</title><rect x="502.4" y="659.0" width="9.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="505.4" y="670.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.getAdapter (1 samples, 0.79%)</title><rect x="502.4" y="643.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="505.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.79%)</title><rect x="502.4" y="627.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="505.4" y="638.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.getAdapter (1 samples, 0.79%)</title><rect x="511.7" y="691.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="514.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.79%)</title><rect x="511.7" y="675.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="514.7" y="686.0"></text>
</g>
<g>
<title>java/util/Formatter.format (16 samples, 12.60%)</title><rect x="521.0" y="755.0" width="148.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="524.0" y="766.0">java/util/Formatter..</text>
</g>
<g>
<title>java/util/Formatter.format (16 samples, 12.60%)</title><rect x="521.0" y="739.0" width="148.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.0" y="750.0">java/util/Formatter..</text>
</g>
<g>
<title>java/util/Formatter$FixedString.print (1 samples, 0.79%)</title><rect x="530.3" y="723.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="533.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.79%)</title><rect x="530.3" y="707.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="533.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.79%)</title><rect x="530.3" y="691.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="533.3" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.79%)</title><rect x="530.3" y="675.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="533.3" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.appendChars (1 samples, 0.79%)</title><rect x="530.3" y="659.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="533.3" y="670.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (14 samples, 11.02%)</title><rect x="539.6" y="723.0" width="130.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="542.6" y="734.0">java/util/Format..</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.79%)</title><rect x="558.2" y="707.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="561.2" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 2.36%)</title><rect x="567.5" y="707.0" width="27.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.5" y="718.0">j..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.79%)</title><rect x="567.5" y="691.0" width="9.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="570.5" y="702.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.79%)</title><rect x="567.5" y="675.0" width="9.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="570.5" y="686.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.79%)</title><rect x="567.5" y="659.0" width="9.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="570.5" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.79%)</title><rect x="567.5" y="643.0" width="9.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="570.5" y="654.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.79%)</title><rect x="567.5" y="627.0" width="9.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="570.5" y="638.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.79%)</title><rect x="567.5" y="611.0" width="9.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="570.5" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 1.57%)</title><rect x="576.8" y="691.0" width="18.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="579.8" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 1.57%)</title><rect x="576.8" y="675.0" width="18.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="579.8" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 1.57%)</title><rect x="576.8" y="659.0" width="18.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="579.8" y="670.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.&lt;init&gt; (1 samples, 0.79%)</title><rect x="595.4" y="707.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="598.4" y="718.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.flags (1 samples, 0.79%)</title><rect x="595.4" y="691.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="598.4" y="702.0"></text>
</g>
<g>
<title>java/util/Formatter$Flags.parse (1 samples, 0.79%)</title><rect x="595.4" y="675.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="598.4" y="686.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (4 samples, 3.15%)</title><rect x="604.6" y="707.0" width="37.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.6" y="718.0">jav..</text>
</g>
<g>
<title>java/util/regex/Matcher.search (4 samples, 3.15%)</title><rect x="604.6" y="691.0" width="37.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="607.6" y="702.0">jav..</text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (4 samples, 3.15%)</title><rect x="604.6" y="675.0" width="37.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="607.6" y="686.0">jav..</text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (4 samples, 3.15%)</title><rect x="604.6" y="659.0" width="37.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.6" y="670.0">jav..</text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (2 samples, 1.57%)</title><rect x="613.9" y="643.0" width="18.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="616.9" y="654.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.79%)</title><rect x="623.2" y="627.0" width="9.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="626.2" y="638.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.79%)</title><rect x="623.2" y="611.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="626.2" y="622.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (1 samples, 0.79%)</title><rect x="623.2" y="595.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="626.2" y="606.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$$Lambda$107/542890495.is (1 samples, 0.79%)</title><rect x="623.2" y="579.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="626.2" y="590.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.lambda$clazz$1 (1 samples, 0.79%)</title><rect x="623.2" y="563.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="626.2" y="574.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (1 samples, 0.79%)</title><rect x="632.5" y="643.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="635.5" y="654.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (3 samples, 2.36%)</title><rect x="641.8" y="707.0" width="27.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.8" y="718.0">j..</text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (1 samples, 0.79%)</title><rect x="660.4" y="691.0" width="9.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 1.57%)</title><rect x="669.7" y="771.0" width="18.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="672.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 1.57%)</title><rect x="669.7" y="755.0" width="18.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="672.7" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 1.57%)</title><rect x="669.7" y="739.0" width="18.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="672.7" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 1.57%)</title><rect x="669.7" y="723.0" width="18.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="672.7" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 1.57%)</title><rect x="669.7" y="707.0" width="18.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="672.7" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 1.57%)</title><rect x="669.7" y="691.0" width="18.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.7" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.79%)</title><rect x="679.0" y="675.0" width="9.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="682.0" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.79%)</title><rect x="679.0" y="659.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.0" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.toString (3 samples, 2.36%)</title><rect x="688.3" y="771.0" width="27.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.3" y="782.0">j..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 2.36%)</title><rect x="688.3" y="755.0" width="27.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.3" y="766.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 1.57%)</title><rect x="697.6" y="739.0" width="18.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="700.6" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.79%)</title><rect x="697.6" y="723.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.6" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.79%)</title><rect x="697.6" y="707.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="700.6" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.79%)</title><rect x="706.9" y="723.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="709.9" y="734.0"></text>
</g>
<g>
<title>org/apache/commons/logging/impl/Log4JLogger.debug (35 samples, 27.56%)</title><rect x="716.1" y="771.0" width="325.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="719.1" y="782.0">org/apache/commons/logging/impl/Log4JLogger...</text>
</g>
<g>
<title>org/apache/log4j/Category.log (35 samples, 27.56%)</title><rect x="716.1" y="755.0" width="325.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="719.1" y="766.0">org/apache/log4j/Category.log</text>
</g>
<g>
<title>org/apache/log4j/Category.forcedLog (33 samples, 25.98%)</title><rect x="716.1" y="739.0" width="306.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.1" y="750.0">org/apache/log4j/Category.forcedLog</text>
</g>
<g>
<title>org/apache/log4j/Category.callAppenders (33 samples, 25.98%)</title><rect x="716.1" y="723.0" width="306.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="719.1" y="734.0">org/apache/log4j/Category.callAppenders</text>
</g>
<g>
<title>org/apache/log4j/helpers/AppenderAttachableImpl.appendLoopOnAppenders (33 samples, 25.98%)</title><rect x="716.1" y="707.0" width="306.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.1" y="718.0">org/apache/log4j/helpers/AppenderAttachab..</text>
</g>
<g>
<title>org/apache/log4j/AppenderSkeleton.doAppend (33 samples, 25.98%)</title><rect x="716.1" y="691.0" width="306.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="719.1" y="702.0">org/apache/log4j/AppenderSkeleton.doAppend</text>
</g>
<g>
<title>org/apache/log4j/WriterAppender.append (33 samples, 25.98%)</title><rect x="716.1" y="675.0" width="306.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="719.1" y="686.0">org/apache/log4j/WriterAppender.append</text>
</g>
<g>
<title>org/apache/log4j/WriterAppender.subAppend (33 samples, 25.98%)</title><rect x="716.1" y="659.0" width="306.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="719.1" y="670.0">org/apache/log4j/WriterAppender.subAppend</text>
</g>
<g>
<title>org/apache/log4j/PatternLayout.format (7 samples, 5.51%)</title><rect x="716.1" y="643.0" width="65.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="719.1" y="654.0">org/apa..</text>
</g>
<g>
<title>org/apache/log4j/helpers/PatternConverter.format (5 samples, 3.94%)</title><rect x="716.1" y="627.0" width="46.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="719.1" y="638.0">org/..</text>
</g>
<g>
<title>org/apache/log4j/helpers/PatternParser$BasicPatternConverter.convert (5 samples, 3.94%)</title><rect x="716.1" y="611.0" width="46.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="719.1" y="622.0">org/..</text>
</g>
<g>
<title>org/apache/log4j/spi/LoggingEvent.getNDC (5 samples, 3.94%)</title><rect x="716.1" y="595.0" width="46.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="719.1" y="606.0">org/..</text>
</g>
<g>
<title>org/apache/log4j/NDC.get (5 samples, 3.94%)</title><rect x="716.1" y="579.0" width="46.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="719.1" y="590.0">org/..</text>
</g>
<g>
<title>org/apache/log4j/NDC.getCurrentStack (5 samples, 3.94%)</title><rect x="716.1" y="563.0" width="46.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.1" y="574.0">org/..</text>
</g>
<g>
<title>org/apache/log4j/helpers/PatternParser$LiteralPatternConverter.format (2 samples, 1.57%)</title><rect x="762.6" y="627.0" width="18.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="765.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (2 samples, 1.57%)</title><rect x="762.6" y="611.0" width="18.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="765.6" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.79%)</title><rect x="771.9" y="595.0" width="9.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="774.9" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.79%)</title><rect x="771.9" y="579.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="774.9" y="590.0"></text>
</g>
<g>
<title>org/apache/log4j/helpers/QuietWriter.flush (22 samples, 17.32%)</title><rect x="781.2" y="643.0" width="204.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="784.2" y="654.0">org/apache/log4j/helpers/Qu..</text>
</g>
<g>
<title>java/io/OutputStreamWriter.flush (22 samples, 17.32%)</title><rect x="781.2" y="627.0" width="204.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="784.2" y="638.0">java/io/OutputStreamWriter...</text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.flush (22 samples, 17.32%)</title><rect x="781.2" y="611.0" width="204.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="784.2" y="622.0">sun/nio/cs/StreamEncoder.fl..</text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.implFlush (22 samples, 17.32%)</title><rect x="781.2" y="595.0" width="204.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="784.2" y="606.0">sun/nio/cs/StreamEncoder.im..</text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.implFlushBuffer (22 samples, 17.32%)</title><rect x="781.2" y="579.0" width="204.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="784.2" y="590.0">sun/nio/cs/StreamEncoder.im..</text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.writeBytes (22 samples, 17.32%)</title><rect x="781.2" y="563.0" width="204.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="784.2" y="574.0">sun/nio/cs/StreamEncoder.wr..</text>
</g>
<g>
<title>java/io/PrintStream.write (22 samples, 17.32%)</title><rect x="781.2" y="547.0" width="204.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="784.2" y="558.0">java/io/PrintStream.write</text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.79%)</title><rect x="781.2" y="531.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="784.2" y="542.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (21 samples, 16.54%)</title><rect x="790.5" y="531.0" width="195.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="793.5" y="542.0">java/io/BufferedOutputStr..</text>
</g>
<g>
<title>java/io/FileOutputStream.write (21 samples, 16.54%)</title><rect x="790.5" y="515.0" width="195.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="793.5" y="526.0">java/io/FileOutputStream...</text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (21 samples, 16.54%)</title><rect x="790.5" y="499.0" width="195.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.5" y="510.0">java/io/FileOutputStream...</text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (6 samples, 4.72%)</title><rect x="799.8" y="483.0" width="55.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="802.8" y="494.0">Java_..</text>
</g>
<g>
<title>writeBytes (6 samples, 4.72%)</title><rect x="799.8" y="467.0" width="55.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="802.8" y="478.0">write..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.79%)</title><rect x="799.8" y="451.0" width="9.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="802.8" y="462.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.79%)</title><rect x="809.1" y="451.0" width="9.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="812.1" y="462.0"></text>
</g>
<g>
<title>__memmove_ssse3 (2 samples, 1.57%)</title><rect x="818.3" y="451.0" width="18.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="821.3" y="462.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.79%)</title><rect x="836.9" y="451.0" width="9.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="839.9" y="462.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.79%)</title><rect x="836.9" y="435.0" width="9.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="839.9" y="446.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.79%)</title><rect x="836.9" y="419.0" width="9.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="839.9" y="430.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.79%)</title><rect x="846.2" y="451.0" width="9.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="849.2" y="462.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.79%)</title><rect x="846.2" y="435.0" width="9.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="849.2" y="446.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 11.02%)</title><rect x="855.5" y="483.0" width="130.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="858.5" y="494.0">[unknown]</text>
</g>
<g>
<title>__GI_write (14 samples, 11.02%)</title><rect x="855.5" y="467.0" width="130.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="858.5" y="478.0">__GI_write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 11.02%)</title><rect x="855.5" y="451.0" width="130.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="858.5" y="462.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>do_syscall_64 (14 samples, 11.02%)</title><rect x="855.5" y="435.0" width="130.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="858.5" y="446.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_write (13 samples, 10.24%)</title><rect x="864.8" y="419.0" width="120.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="867.8" y="430.0">__x64_sys_write</text>
</g>
<g>
<title>ksys_write (13 samples, 10.24%)</title><rect x="864.8" y="403.0" width="120.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="867.8" y="414.0">ksys_write</text>
</g>
<g>
<title>vfs_write (13 samples, 10.24%)</title><rect x="864.8" y="387.0" width="120.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="867.8" y="398.0">vfs_write</text>
</g>
<g>
<title>__vfs_write (13 samples, 10.24%)</title><rect x="864.8" y="371.0" width="120.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="867.8" y="382.0">__vfs_write</text>
</g>
<g>
<title>new_sync_write (13 samples, 10.24%)</title><rect x="864.8" y="355.0" width="120.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="867.8" y="366.0">new_sync_write</text>
</g>
<g>
<title>pipe_write (13 samples, 10.24%)</title><rect x="864.8" y="339.0" width="120.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="867.8" y="350.0">pipe_write</text>
</g>
<g>
<title>__wake_up_sync_key (7 samples, 5.51%)</title><rect x="874.1" y="323.0" width="65.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="877.1" y="334.0">__wake_..</text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 5.51%)</title><rect x="874.1" y="307.0" width="65.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="877.1" y="318.0">__wake_..</text>
</g>
<g>
<title>__lock_text_start (6 samples, 4.72%)</title><rect x="874.1" y="291.0" width="55.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="877.1" y="302.0">__loc..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.79%)</title><rect x="929.8" y="291.0" width="9.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="932.8" y="302.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.79%)</title><rect x="939.1" y="323.0" width="9.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="942.1" y="334.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.79%)</title><rect x="948.4" y="323.0" width="9.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="951.4" y="334.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.79%)</title><rect x="948.4" y="307.0" width="9.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="951.4" y="318.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 2.36%)</title><rect x="957.7" y="323.0" width="27.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="960.7" y="334.0">m..</text>
</g>
<g>
<title>org/apache/log4j/helpers/QuietWriter.write (4 samples, 3.15%)</title><rect x="985.6" y="643.0" width="37.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="988.6" y="654.0">org..</text>
</g>
<g>
<title>java/io/Writer.write (4 samples, 3.15%)</title><rect x="985.6" y="627.0" width="37.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="988.6" y="638.0">jav..</text>
</g>
<g>
<title>java/io/OutputStreamWriter.write (4 samples, 3.15%)</title><rect x="985.6" y="611.0" width="37.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="988.6" y="622.0">jav..</text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.write (4 samples, 3.15%)</title><rect x="985.6" y="595.0" width="37.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="988.6" y="606.0">sun..</text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.write (3 samples, 2.36%)</title><rect x="994.9" y="579.0" width="27.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="997.9" y="590.0">s..</text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.implWrite (3 samples, 2.36%)</title><rect x="994.9" y="563.0" width="27.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="997.9" y="574.0">s..</text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.implWrite (3 samples, 2.36%)</title><rect x="994.9" y="547.0" width="27.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="997.9" y="558.0">s..</text>
</g>
<g>
<title>java/nio/charset/CharsetEncoder.encode (3 samples, 2.36%)</title><rect x="994.9" y="531.0" width="27.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="997.9" y="542.0">j..</text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encodeLoop (3 samples, 2.36%)</title><rect x="994.9" y="515.0" width="27.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="997.9" y="526.0">s..</text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encodeArrayLoop (3 samples, 2.36%)</title><rect x="994.9" y="499.0" width="27.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="997.9" y="510.0">s..</text>
</g>
<g>
<title>org/apache/log4j/Category.getEffectiveLevel (2 samples, 1.57%)</title><rect x="1022.8" y="739.0" width="18.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1025.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (3 samples, 2.36%)</title><rect x="1041.3" y="771.0" width="27.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1044.3" y="782.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.upsert (3 samples, 2.36%)</title><rect x="1041.3" y="755.0" width="27.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1044.3" y="766.0">r..</text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 2.36%)</title><rect x="1041.3" y="739.0" width="27.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1044.3" y="750.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 1.57%)</title><rect x="1050.6" y="723.0" width="18.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1053.6" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 1.57%)</title><rect x="1050.6" y="707.0" width="18.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1053.6" y="718.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 1.57%)</title><rect x="1050.6" y="691.0" width="18.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1053.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.79%)</title><rect x="1069.2" y="803.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1072.2" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.79%)</title><rect x="1069.2" y="787.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1072.2" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.79%)</title><rect x="1069.2" y="771.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1072.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.79%)</title><rect x="1069.2" y="755.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1072.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.79%)</title><rect x="1069.2" y="739.0" width="9.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1072.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 1.57%)</title><rect x="1078.5" y="835.0" width="18.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1081.5" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.79%)</title><rect x="1087.8" y="819.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1090.8" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.79%)</title><rect x="1087.8" y="803.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1090.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 1.57%)</title><rect x="1097.1" y="835.0" width="18.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1100.1" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 1.57%)</title><rect x="1097.1" y="819.0" width="18.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1100.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 4.72%)</title><rect x="1115.7" y="851.0" width="55.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1118.7" y="862.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 4.72%)</title><rect x="1115.7" y="835.0" width="55.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1118.7" y="846.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 1.57%)</title><rect x="1115.7" y="819.0" width="18.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1118.7" y="830.0"></text>
</g>
<g>
<title>__memmove_ssse3 (1 samples, 0.79%)</title><rect x="1115.7" y="803.0" width="9.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1118.7" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.79%)</title><rect x="1125.0" y="803.0" width="9.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1128.0" y="814.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.79%)</title><rect x="1125.0" y="787.0" width="9.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1128.0" y="798.0"></text>
</g>
<g>
<title>__GI___recv (4 samples, 3.15%)</title><rect x="1134.3" y="819.0" width="37.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1137.3" y="830.0">__G..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 3.15%)</title><rect x="1134.3" y="803.0" width="37.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1137.3" y="814.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (4 samples, 3.15%)</title><rect x="1134.3" y="787.0" width="37.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1137.3" y="798.0">do_..</text>
</g>
<g>
<title>__x64_sys_recvfrom (4 samples, 3.15%)</title><rect x="1134.3" y="771.0" width="37.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1137.3" y="782.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (4 samples, 3.15%)</title><rect x="1134.3" y="755.0" width="37.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1137.3" y="766.0">__s..</text>
</g>
<g>
<title>sock_recvmsg (3 samples, 2.36%)</title><rect x="1134.3" y="739.0" width="27.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1137.3" y="750.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (1 samples, 0.79%)</title><rect x="1134.3" y="723.0" width="9.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1137.3" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.79%)</title><rect x="1134.3" y="707.0" width="9.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1137.3" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.79%)</title><rect x="1134.3" y="691.0" width="9.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1137.3" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.79%)</title><rect x="1134.3" y="675.0" width="9.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1137.3" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 1.57%)</title><rect x="1143.5" y="723.0" width="18.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1146.5" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 1.57%)</title><rect x="1143.5" y="707.0" width="18.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1146.5" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 1.57%)</title><rect x="1143.5" y="691.0" width="18.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1146.5" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 1.57%)</title><rect x="1143.5" y="675.0" width="18.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1146.5" y="686.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.79%)</title><rect x="1152.8" y="659.0" width="9.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1155.8" y="670.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.79%)</title><rect x="1152.8" y="643.0" width="9.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1155.8" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.79%)</title><rect x="1162.1" y="739.0" width="9.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1165.1" y="750.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.79%)</title><rect x="1162.1" y="723.0" width="9.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1165.1" y="734.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.79%)</title><rect x="1162.1" y="707.0" width="9.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1165.1" y="718.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.79%)</title><rect x="1162.1" y="691.0" width="9.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1165.1" y="702.0"></text>
</g>
<g>
<title>start_thread (2 samples, 1.57%)</title><rect x="1171.4" y="899.0" width="18.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1174.4" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 1.57%)</title><rect x="1171.4" y="883.0" width="18.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1174.4" y="894.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 1.57%)</title><rect x="1171.4" y="867.0" width="18.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1174.4" y="878.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.79%)</title><rect x="1171.4" y="851.0" width="9.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1174.4" y="862.0"></text>
</g>
<g>
<title>G1ConcurrentRefineThread::run_service() (1 samples, 0.79%)</title><rect x="1171.4" y="835.0" width="9.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1174.4" y="846.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (1 samples, 0.79%)</title><rect x="1171.4" y="819.0" width="9.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1174.4" y="830.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (1 samples, 0.79%)</title><rect x="1171.4" y="803.0" width="9.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.4" y="814.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;false, G1ConcurrentRefineOopClosure&gt;(MemRegion, G1ConcurrentRefineOopClosure*) (1 samples, 0.79%)</title><rect x="1171.4" y="787.0" width="9.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1174.4" y="798.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.79%)</title><rect x="1171.4" y="771.0" width="9.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1174.4" y="782.0"></text>
</g>
<g>
<title>JavaThread::run() (1 samples, 0.79%)</title><rect x="1180.7" y="851.0" width="9.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.7" y="862.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (1 samples, 0.79%)</title><rect x="1180.7" y="835.0" width="9.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.7" y="846.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (1 samples, 0.79%)</title><rect x="1180.7" y="819.0" width="9.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.7" y="830.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.79%)</title><rect x="1180.7" y="803.0" width="9.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.7" y="814.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (1 samples, 0.79%)</title><rect x="1180.7" y="787.0" width="9.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.7" y="798.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (1 samples, 0.79%)</title><rect x="1180.7" y="771.0" width="9.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.7" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (1 samples, 0.79%)</title><rect x="1180.7" y="755.0" width="9.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.7" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.79%)</title><rect x="1180.7" y="739.0" width="9.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.7" y="750.0"></text>
</g>
</g>
</svg>
