<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1286" onload="init(evt)" viewBox="0 0 1200 1286" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1269"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1269"> </text>
<g id="frames">
<g>
<title>all (8,315 samples, 100.00%)</title><rect x="10.0" y="1235.0" width="1180.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="1246.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (23 samples, 0.28%)</title><rect x="10.0" y="1219.0" width="3.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="1230.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (21 samples, 0.25%)</title><rect x="10.3" y="1203.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.3" y="1214.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.02%)</title><rect x="10.3" y="1187.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.3" y="1198.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (19 samples, 0.23%)</title><rect x="10.6" y="1187.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.6" y="1198.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (13 samples, 0.16%)</title><rect x="11.3" y="1171.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="14.3" y="1182.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (5 samples, 0.06%)</title><rect x="11.3" y="1155.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="14.3" y="1166.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.06%)</title><rect x="12.0" y="1155.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="15.0" y="1166.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.02%)</title><rect x="12.7" y="1155.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="15.7" y="1166.0"></text>
</g>
<g>
<title>[no_Java_frame] (5 samples, 0.06%)</title><rect x="13.3" y="1219.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="16.3" y="1230.0"></text>
</g>
<g>
<title>[not_walkable_Java] (19 samples, 0.23%)</title><rect x="14.0" y="1219.0" width="2.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="17.0" y="1230.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (7 samples, 0.08%)</title><rect x="14.3" y="1203.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.3" y="1214.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (7 samples, 0.08%)</title><rect x="14.3" y="1187.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="17.3" y="1198.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.05%)</title><rect x="14.3" y="1171.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="17.3" y="1182.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.04%)</title><rect x="14.3" y="1155.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="17.3" y="1166.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.02%)</title><rect x="14.4" y="1139.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="17.4" y="1150.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.04%)</title><rect x="14.8" y="1171.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="17.8" y="1182.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.10%)</title><rect x="15.3" y="1203.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="18.3" y="1214.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.02%)</title><rect x="16.4" y="1203.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="19.4" y="1214.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="16.7" y="1219.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="19.7" y="1230.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.1 (2 samples, 0.02%)</title><rect x="16.7" y="1203.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="19.7" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="16.7" y="1187.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="19.7" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="16.7" y="1171.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="19.7" y="1182.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="16.7" y="1155.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="19.7" y="1166.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.02%)</title><rect x="16.7" y="1139.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="19.7" y="1150.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.02%)</title><rect x="16.7" y="1123.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="19.7" y="1134.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.02%)</title><rect x="16.7" y="1107.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="19.7" y="1118.0"></text>
</g>
<g>
<title>[unknown_Java] (113 samples, 1.36%)</title><rect x="17.1" y="1219.0" width="16.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="20.1" y="1230.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (70 samples, 0.84%)</title><rect x="17.5" y="1203.0" width="10.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="20.5" y="1214.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (70 samples, 0.84%)</title><rect x="17.5" y="1187.0" width="10.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="20.5" y="1198.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="27.6" y="1203.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="30.6" y="1214.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.05%)</title><rect x="27.6" y="1187.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="30.6" y="1198.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.04%)</title><rect x="27.7" y="1171.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="30.7" y="1182.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="27.7" y="1155.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="30.7" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_signal (35 samples, 0.42%)</title><rect x="28.2" y="1203.0" width="4.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="31.2" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.40%)</title><rect x="28.4" y="1187.0" width="4.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="31.4" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.40%)</title><rect x="28.4" y="1171.0" width="4.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="31.4" y="1182.0"></text>
</g>
<g>
<title>__x64_sys_futex (33 samples, 0.40%)</title><rect x="28.4" y="1155.0" width="4.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="31.4" y="1166.0"></text>
</g>
<g>
<title>do_futex (33 samples, 0.40%)</title><rect x="28.4" y="1139.0" width="4.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="31.4" y="1150.0"></text>
</g>
<g>
<title>futex_wake (32 samples, 0.38%)</title><rect x="28.6" y="1123.0" width="4.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="31.6" y="1134.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.02%)</title><rect x="29.0" y="1107.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="32.0" y="1118.0"></text>
</g>
<g>
<title>wake_up_q (27 samples, 0.32%)</title><rect x="29.3" y="1107.0" width="3.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="32.3" y="1118.0"></text>
</g>
<g>
<title>try_to_wake_up (27 samples, 0.32%)</title><rect x="29.3" y="1091.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="32.3" y="1102.0"></text>
</g>
<g>
<title>__lock_text_start (27 samples, 0.32%)</title><rect x="29.3" y="1075.0" width="3.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="32.3" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (8 samples, 0.10%)</title><rect x="33.3" y="1219.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="36.3" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.10%)</title><rect x="33.3" y="1203.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="36.3" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.10%)</title><rect x="33.3" y="1187.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="36.3" y="1198.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.07%)</title><rect x="33.4" y="1171.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="36.4" y="1182.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="33.4" y="1155.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="36.4" y="1166.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.02%)</title><rect x="33.4" y="1139.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="36.4" y="1150.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.02%)</title><rect x="34.0" y="1155.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="37.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/Thread.run (7,229 samples, 86.94%)</title><rect x="34.4" y="1219.0" width="1025.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.4" y="1230.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7,229 samples, 86.94%)</title><rect x="34.4" y="1203.0" width="1025.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="37.4" y="1214.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7,229 samples, 86.94%)</title><rect x="34.4" y="1187.0" width="1025.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.4" y="1198.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (4,693 samples, 56.44%)</title><rect x="34.6" y="1171.0" width="665.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.6" y="1182.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (449 samples, 5.40%)</title><rect x="34.7" y="1155.0" width="63.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.7" y="1166.0">java/ut..</text>
</g>
<g>
<title>itable stub (4 samples, 0.05%)</title><rect x="36.0" y="1139.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="39.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (64 samples, 0.77%)</title><rect x="36.5" y="1139.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (61 samples, 0.73%)</title><rect x="37.0" y="1123.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.05%)</title><rect x="37.0" y="1107.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (57 samples, 0.69%)</title><rect x="37.5" y="1107.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (55 samples, 0.66%)</title><rect x="37.8" y="1091.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (50 samples, 0.60%)</title><rect x="38.5" y="1075.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="41.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (50 samples, 0.60%)</title><rect x="38.5" y="1059.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (50 samples, 0.60%)</title><rect x="38.5" y="1043.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="41.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (50 samples, 0.60%)</title><rect x="38.5" y="1027.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (49 samples, 0.59%)</title><rect x="38.7" y="1011.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="41.7" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.12%)</title><rect x="38.8" y="995.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="41.8" y="1006.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.02%)</title><rect x="39.5" y="979.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="42.5" y="990.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.02%)</title><rect x="39.8" y="979.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="42.8" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (38 samples, 0.46%)</title><rect x="40.2" y="995.0" width="5.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="43.2" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.43%)</title><rect x="40.5" y="979.0" width="5.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="43.5" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 0.42%)</title><rect x="40.7" y="963.0" width="4.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="43.7" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (34 samples, 0.41%)</title><rect x="40.8" y="947.0" width="4.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="43.8" y="958.0"></text>
</g>
<g>
<title>do_futex (33 samples, 0.40%)</title><rect x="40.8" y="931.0" width="4.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="43.8" y="942.0"></text>
</g>
<g>
<title>futex_wake (33 samples, 0.40%)</title><rect x="40.8" y="915.0" width="4.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="43.8" y="926.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.02%)</title><rect x="41.4" y="899.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="44.4" y="910.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.02%)</title><rect x="41.6" y="899.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="44.6" y="910.0"></text>
</g>
<g>
<title>wake_up_q (25 samples, 0.30%)</title><rect x="41.9" y="899.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="44.9" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (25 samples, 0.30%)</title><rect x="41.9" y="883.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="44.9" y="894.0"></text>
</g>
<g>
<title>__lock_text_start (24 samples, 0.29%)</title><rect x="42.1" y="867.0" width="3.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="45.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (343 samples, 4.13%)</title><rect x="45.6" y="1139.0" width="48.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.6" y="1150.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.05%)</title><rect x="45.8" y="1123.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="48.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.05%)</title><rect x="45.8" y="1107.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="48.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$144/496278774.apply (338 samples, 4.06%)</title><rect x="46.3" y="1123.0" width="48.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="49.3" y="1134.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (338 samples, 4.06%)</title><rect x="46.3" y="1107.0" width="48.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.3" y="1118.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (338 samples, 4.06%)</title><rect x="46.3" y="1091.0" width="48.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="49.3" y="1102.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (258 samples, 3.10%)</title><rect x="46.5" y="1075.0" width="36.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.5" y="1086.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (258 samples, 3.10%)</title><rect x="46.5" y="1059.0" width="36.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="49.5" y="1070.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (258 samples, 3.10%)</title><rect x="46.5" y="1043.0" width="36.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.5" y="1054.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (157 samples, 1.89%)</title><rect x="46.5" y="1027.0" width="22.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.5" y="1038.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (157 samples, 1.89%)</title><rect x="46.5" y="1011.0" width="22.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.5" y="1022.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (157 samples, 1.89%)</title><rect x="46.5" y="995.0" width="22.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.5" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$337/1746647616.apply (157 samples, 1.89%)</title><rect x="46.5" y="979.0" width="22.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.5" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (157 samples, 1.89%)</title><rect x="46.5" y="963.0" width="22.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="49.5" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (157 samples, 1.89%)</title><rect x="46.5" y="947.0" width="22.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="49.5" y="958.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$174/745402377.apply (157 samples, 1.89%)</title><rect x="46.5" y="931.0" width="22.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="49.5" y="942.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (157 samples, 1.89%)</title><rect x="46.5" y="915.0" width="22.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.5" y="926.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (156 samples, 1.88%)</title><rect x="46.6" y="899.0" width="22.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="49.6" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (136 samples, 1.64%)</title><rect x="46.8" y="883.0" width="19.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (136 samples, 1.64%)</title><rect x="46.8" y="867.0" width="19.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="49.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$416/1681996229.apply (135 samples, 1.62%)</title><rect x="46.8" y="851.0" width="19.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (135 samples, 1.62%)</title><rect x="46.8" y="835.0" width="19.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (10 samples, 0.12%)</title><rect x="46.9" y="819.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (10 samples, 0.12%)</title><rect x="46.9" y="803.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.12%)</title><rect x="46.9" y="787.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.12%)</title><rect x="46.9" y="771.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="49.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.07%)</title><rect x="47.5" y="755.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="50.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.07%)</title><rect x="47.5" y="739.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="50.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5 samples, 0.06%)</title><rect x="47.6" y="723.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="50.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (4 samples, 0.05%)</title><rect x="47.7" y="707.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="50.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (3 samples, 0.04%)</title><rect x="47.9" y="691.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="50.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (3 samples, 0.04%)</title><rect x="47.9" y="675.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="50.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (3 samples, 0.04%)</title><rect x="47.9" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="50.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (3 samples, 0.04%)</title><rect x="47.9" y="643.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="50.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (3 samples, 0.04%)</title><rect x="47.9" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="50.9" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (3 samples, 0.04%)</title><rect x="47.9" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="50.9" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (3 samples, 0.04%)</title><rect x="47.9" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="50.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.04%)</title><rect x="47.9" y="579.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="50.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.04%)</title><rect x="47.9" y="563.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="50.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (3 samples, 0.04%)</title><rect x="47.9" y="547.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="50.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (3 samples, 0.04%)</title><rect x="47.9" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="50.9" y="542.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="47.9" y="515.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="50.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="47.9" y="499.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="50.9" y="510.0"></text>
</g>
<g>
<title>__GI___writev (3 samples, 0.04%)</title><rect x="47.9" y="483.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="50.9" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="47.9" y="467.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="50.9" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="47.9" y="451.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="50.9" y="462.0"></text>
</g>
<g>
<title>__x64_sys_writev (3 samples, 0.04%)</title><rect x="47.9" y="435.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="50.9" y="446.0"></text>
</g>
<g>
<title>do_writev (3 samples, 0.04%)</title><rect x="47.9" y="419.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="50.9" y="430.0"></text>
</g>
<g>
<title>vfs_writev (3 samples, 0.04%)</title><rect x="47.9" y="403.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="50.9" y="414.0"></text>
</g>
<g>
<title>do_iter_write (3 samples, 0.04%)</title><rect x="47.9" y="387.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="50.9" y="398.0"></text>
</g>
<g>
<title>do_iter_readv_writev (3 samples, 0.04%)</title><rect x="47.9" y="371.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="50.9" y="382.0"></text>
</g>
<g>
<title>sock_write_iter (3 samples, 0.04%)</title><rect x="47.9" y="355.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="50.9" y="366.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.04%)</title><rect x="47.9" y="339.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="50.9" y="350.0"></text>
</g>
<g>
<title>inet6_sendmsg (3 samples, 0.04%)</title><rect x="47.9" y="323.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="50.9" y="334.0"></text>
</g>
<g>
<title>tcp_sendmsg (3 samples, 0.04%)</title><rect x="47.9" y="307.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="50.9" y="318.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (3 samples, 0.04%)</title><rect x="47.9" y="291.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="50.9" y="302.0"></text>
</g>
<g>
<title>tcp_push (3 samples, 0.04%)</title><rect x="47.9" y="275.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="50.9" y="286.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (3 samples, 0.04%)</title><rect x="47.9" y="259.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="50.9" y="270.0"></text>
</g>
<g>
<title>tcp_write_xmit (3 samples, 0.04%)</title><rect x="47.9" y="243.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="50.9" y="254.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.02%)</title><rect x="48.0" y="227.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="51.0" y="238.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.02%)</title><rect x="48.0" y="211.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="51.0" y="222.0"></text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.02%)</title><rect x="48.0" y="195.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="51.0" y="206.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.02%)</title><rect x="48.0" y="179.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="51.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (42 samples, 0.51%)</title><rect x="48.3" y="819.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (42 samples, 0.51%)</title><rect x="48.3" y="803.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (9 samples, 0.11%)</title><rect x="48.3" y="787.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (9 samples, 0.11%)</title><rect x="48.3" y="771.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="51.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (8 samples, 0.10%)</title><rect x="48.5" y="755.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="51.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (7 samples, 0.08%)</title><rect x="48.5" y="739.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (7 samples, 0.08%)</title><rect x="48.5" y="723.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.5" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.06%)</title><rect x="48.7" y="707.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (33 samples, 0.40%)</title><rect x="49.6" y="787.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="52.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (33 samples, 0.40%)</title><rect x="49.6" y="771.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="52.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (24 samples, 0.29%)</title><rect x="50.7" y="755.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (24 samples, 0.29%)</title><rect x="50.7" y="739.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="53.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (24 samples, 0.29%)</title><rect x="50.7" y="723.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.7" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="51.0" y="707.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="54.0" y="718.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.02%)</title><rect x="51.0" y="691.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="54.0" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.02%)</title><rect x="51.0" y="675.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="54.0" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.02%)</title><rect x="51.0" y="659.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="54.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (20 samples, 0.24%)</title><rect x="51.3" y="707.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.3" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.04%)</title><rect x="51.9" y="691.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="54.9" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (13 samples, 0.16%)</title><rect x="52.3" y="691.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="55.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.13%)</title><rect x="52.4" y="675.0" width="1.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="55.4" y="686.0"></text>
</g>
<g>
<title>__GI_write (11 samples, 0.13%)</title><rect x="52.4" y="659.0" width="1.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="55.4" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.13%)</title><rect x="52.4" y="643.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="55.4" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.13%)</title><rect x="52.4" y="627.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="55.4" y="638.0"></text>
</g>
<g>
<title>__x64_sys_write (11 samples, 0.13%)</title><rect x="52.4" y="611.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="55.4" y="622.0"></text>
</g>
<g>
<title>ksys_write (11 samples, 0.13%)</title><rect x="52.4" y="595.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="55.4" y="606.0"></text>
</g>
<g>
<title>vfs_write (10 samples, 0.12%)</title><rect x="52.6" y="579.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="55.6" y="590.0"></text>
</g>
<g>
<title>__vfs_write (10 samples, 0.12%)</title><rect x="52.6" y="563.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="55.6" y="574.0"></text>
</g>
<g>
<title>new_sync_write (10 samples, 0.12%)</title><rect x="52.6" y="547.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="55.6" y="558.0"></text>
</g>
<g>
<title>pipe_write (10 samples, 0.12%)</title><rect x="52.6" y="531.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="55.6" y="542.0"></text>
</g>
<g>
<title>__wake_up_sync_key (8 samples, 0.10%)</title><rect x="52.6" y="515.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="55.6" y="526.0"></text>
</g>
<g>
<title>__wake_up_common_lock (8 samples, 0.10%)</title><rect x="52.6" y="499.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="55.6" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.10%)</title><rect x="52.6" y="483.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="55.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (82 samples, 0.99%)</title><rect x="54.3" y="819.0" width="11.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (12 samples, 0.14%)</title><rect x="54.3" y="803.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (12 samples, 0.14%)</title><rect x="54.3" y="787.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (12 samples, 0.14%)</title><rect x="54.3" y="771.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (3 samples, 0.04%)</title><rect x="55.6" y="755.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.6" y="766.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.02%)</title><rect x="56.0" y="803.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="59.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (46 samples, 0.55%)</title><rect x="56.3" y="803.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="59.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (3 samples, 0.04%)</title><rect x="56.3" y="787.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="59.3" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.04%)</title><rect x="56.3" y="771.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="59.3" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.04%)</title><rect x="56.3" y="755.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="59.3" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.04%)</title><rect x="56.3" y="739.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="59.3" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.04%)</title><rect x="56.3" y="723.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="59.3" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.04%)</title><rect x="56.3" y="707.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="59.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (23 samples, 0.28%)</title><rect x="56.7" y="787.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.7" y="798.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (3 samples, 0.04%)</title><rect x="57.1" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.1" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (3 samples, 0.04%)</title><rect x="57.1" y="755.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.1" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (3 samples, 0.04%)</title><rect x="57.1" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="60.1" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (3 samples, 0.04%)</title><rect x="57.1" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="60.1" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (3 samples, 0.04%)</title><rect x="57.1" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="60.1" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (3 samples, 0.04%)</title><rect x="57.1" y="691.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.1" y="702.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$463/1030327494.test (13 samples, 0.16%)</title><rect x="57.7" y="771.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.7" y="782.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (13 samples, 0.16%)</title><rect x="57.7" y="755.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="60.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$92/680779399.test (13 samples, 0.16%)</title><rect x="57.7" y="739.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (13 samples, 0.16%)</title><rect x="57.7" y="723.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="60.7" y="734.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$81/1210898719.test (13 samples, 0.16%)</title><rect x="57.7" y="707.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.7" y="718.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (13 samples, 0.16%)</title><rect x="57.7" y="691.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/274722023.test (13 samples, 0.16%)</title><rect x="57.7" y="675.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (13 samples, 0.16%)</title><rect x="57.7" y="659.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.7" y="670.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.07%)</title><rect x="57.7" y="643.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="60.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.02%)</title><rect x="57.7" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.02%)</title><rect x="57.7" y="611.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="60.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="58.0" y="627.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="61.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.05%)</title><rect x="58.0" y="611.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.07%)</title><rect x="58.7" y="643.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="58.7" y="627.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="61.7" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="59.1" y="627.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.1" y="638.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.02%)</title><rect x="59.5" y="771.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="62.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (19 samples, 0.23%)</title><rect x="60.1" y="787.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="63.1" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (19 samples, 0.23%)</title><rect x="60.1" y="771.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.1" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (16 samples, 0.19%)</title><rect x="60.5" y="755.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="63.5" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (13 samples, 0.16%)</title><rect x="60.9" y="739.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.9" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1651491428.accept (12 samples, 0.14%)</title><rect x="61.1" y="723.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.1" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (12 samples, 0.14%)</title><rect x="61.1" y="707.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.1" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.04%)</title><rect x="61.7" y="691.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.7" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.05%)</title><rect x="62.1" y="691.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.02%)</title><rect x="62.1" y="675.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.1" y="686.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.02%)</title><rect x="62.1" y="659.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.1" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.02%)</title><rect x="62.1" y="643.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="65.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.02%)</title><rect x="62.4" y="675.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (5 samples, 0.06%)</title><rect x="62.8" y="803.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.8" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (5 samples, 0.06%)</title><rect x="62.8" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (6 samples, 0.07%)</title><rect x="63.5" y="803.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="66.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (6 samples, 0.07%)</title><rect x="63.5" y="787.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (6 samples, 0.07%)</title><rect x="63.5" y="771.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="66.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (11 samples, 0.13%)</title><rect x="64.4" y="803.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="67.4" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (11 samples, 0.13%)</title><rect x="64.4" y="787.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="67.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.07%)</title><rect x="64.6" y="771.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.07%)</title><rect x="64.6" y="755.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.07%)</title><rect x="64.6" y="739.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.6" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.04%)</title><rect x="65.5" y="771.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="68.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (19 samples, 0.23%)</title><rect x="66.1" y="883.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (19 samples, 0.23%)</title><rect x="66.1" y="867.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19 samples, 0.23%)</title><rect x="66.1" y="851.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19 samples, 0.23%)</title><rect x="66.1" y="835.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10 samples, 0.12%)</title><rect x="67.3" y="819.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8 samples, 0.10%)</title><rect x="67.6" y="803.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="70.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6 samples, 0.07%)</title><rect x="67.8" y="787.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="70.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$312/807283364.run (6 samples, 0.07%)</title><rect x="67.8" y="771.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5 samples, 0.06%)</title><rect x="67.9" y="755.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="70.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (2 samples, 0.02%)</title><rect x="67.9" y="739.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (2 samples, 0.02%)</title><rect x="67.9" y="723.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2 samples, 0.02%)</title><rect x="67.9" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="70.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2 samples, 0.02%)</title><rect x="67.9" y="691.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="70.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.02%)</title><rect x="68.2" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (100 samples, 1.20%)</title><rect x="68.9" y="1027.0" width="14.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.04%)</title><rect x="69.2" y="1011.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="72.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.04%)</title><rect x="69.2" y="995.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (7 samples, 0.08%)</title><rect x="69.6" y="1011.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="72.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (7 samples, 0.08%)</title><rect x="69.6" y="995.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (4 samples, 0.05%)</title><rect x="69.6" y="979.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (4 samples, 0.05%)</title><rect x="69.6" y="963.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.6" y="974.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="69.9" y="947.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="72.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="70.3" y="979.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="73.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="70.3" y="963.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (88 samples, 1.06%)</title><rect x="70.6" y="1011.0" width="12.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (88 samples, 1.06%)</title><rect x="70.6" y="995.0" width="12.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (81 samples, 0.97%)</title><rect x="71.2" y="979.0" width="11.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="74.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (3 samples, 0.04%)</title><rect x="72.9" y="963.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="75.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (10 samples, 0.12%)</title><rect x="73.3" y="963.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="76.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (10 samples, 0.12%)</title><rect x="73.3" y="947.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="76.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (9 samples, 0.11%)</title><rect x="73.4" y="931.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.4" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.02%)</title><rect x="73.9" y="915.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (4 samples, 0.05%)</title><rect x="74.1" y="915.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.1" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (4 samples, 0.05%)</title><rect x="74.1" y="899.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="77.1" y="910.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (4 samples, 0.05%)</title><rect x="74.1" y="883.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.1" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (4 samples, 0.05%)</title><rect x="74.1" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.1" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (4 samples, 0.05%)</title><rect x="74.1" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="77.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (56 samples, 0.67%)</title><rect x="74.7" y="963.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.7" y="974.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (47 samples, 0.57%)</title><rect x="76.0" y="947.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.0" y="958.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (34 samples, 0.41%)</title><rect x="76.0" y="931.0" width="4.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="79.0" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.04%)</title><rect x="77.1" y="915.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="80.1" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (3 samples, 0.04%)</title><rect x="77.1" y="899.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="80.1" y="910.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.05%)</title><rect x="77.7" y="915.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="80.7" y="926.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (7 samples, 0.08%)</title><rect x="78.5" y="915.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="81.5" y="926.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (6 samples, 0.07%)</title><rect x="78.7" y="899.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="81.7" y="910.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.02%)</title><rect x="78.7" y="883.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="81.7" y="894.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.02%)</title><rect x="79.0" y="883.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="82.0" y="894.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.02%)</title><rect x="79.3" y="883.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="82.3" y="894.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (9 samples, 0.11%)</title><rect x="79.5" y="915.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="82.5" y="926.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.02%)</title><rect x="80.1" y="899.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="83.1" y="910.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.04%)</title><rect x="80.4" y="899.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="83.4" y="910.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.02%)</title><rect x="80.5" y="883.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="83.5" y="894.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.04%)</title><rect x="80.8" y="931.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="83.8" y="942.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.02%)</title><rect x="81.2" y="931.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="84.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$206/316910096.run (7 samples, 0.08%)</title><rect x="81.5" y="931.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="84.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (6 samples, 0.07%)</title><rect x="81.7" y="915.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.7" y="926.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (4 samples, 0.05%)</title><rect x="81.9" y="899.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.9" y="910.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (4 samples, 0.05%)</title><rect x="81.9" y="883.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.9" y="894.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (4 samples, 0.05%)</title><rect x="81.9" y="867.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.9" y="878.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (4 samples, 0.05%)</title><rect x="81.9" y="851.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="84.9" y="862.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (4 samples, 0.05%)</title><rect x="81.9" y="835.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="84.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (4 samples, 0.05%)</title><rect x="81.9" y="819.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (3 samples, 0.04%)</title><rect x="81.9" y="803.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (3 samples, 0.04%)</title><rect x="81.9" y="787.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="84.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (3 samples, 0.04%)</title><rect x="81.9" y="771.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="84.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (3 samples, 0.04%)</title><rect x="81.9" y="755.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.04%)</title><rect x="82.7" y="979.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="85.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.02%)</title><rect x="82.7" y="963.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="85.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (2 samples, 0.02%)</title><rect x="82.7" y="947.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="85.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (43 samples, 0.52%)</title><rect x="83.1" y="1075.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.1" y="1086.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="83.4" y="1059.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="86.4" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (11 samples, 0.13%)</title><rect x="83.7" y="1059.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.7" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (9 samples, 0.11%)</title><rect x="83.9" y="1043.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.02%)</title><rect x="84.4" y="1027.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.02%)</title><rect x="84.4" y="1011.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.02%)</title><rect x="84.4" y="995.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.4" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.02%)</title><rect x="84.6" y="1027.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (2 samples, 0.02%)</title><rect x="84.9" y="1027.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (28 samples, 0.34%)</title><rect x="85.2" y="1059.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.2" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (28 samples, 0.34%)</title><rect x="85.2" y="1043.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="88.2" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (24 samples, 0.29%)</title><rect x="85.8" y="1027.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.28%)</title><rect x="85.9" y="1011.0" width="3.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="88.9" y="1022.0"></text>
</g>
<g>
<title>__GI_write (21 samples, 0.25%)</title><rect x="85.9" y="995.0" width="3.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="88.9" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.25%)</title><rect x="85.9" y="979.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="88.9" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.25%)</title><rect x="85.9" y="963.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="88.9" y="974.0"></text>
</g>
<g>
<title>__x64_sys_write (21 samples, 0.25%)</title><rect x="85.9" y="947.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="88.9" y="958.0"></text>
</g>
<g>
<title>ksys_write (20 samples, 0.24%)</title><rect x="86.1" y="931.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="89.1" y="942.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.02%)</title><rect x="86.2" y="915.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="89.2" y="926.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="86.2" y="899.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="89.2" y="910.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="86.2" y="883.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="89.2" y="894.0"></text>
</g>
<g>
<title>vfs_write (17 samples, 0.20%)</title><rect x="86.5" y="915.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="89.5" y="926.0"></text>
</g>
<g>
<title>__vfs_write (15 samples, 0.18%)</title><rect x="86.5" y="899.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="89.5" y="910.0"></text>
</g>
<g>
<title>new_sync_write (15 samples, 0.18%)</title><rect x="86.5" y="883.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="89.5" y="894.0"></text>
</g>
<g>
<title>pipe_write (13 samples, 0.16%)</title><rect x="86.8" y="867.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="89.8" y="878.0"></text>
</g>
<g>
<title>__wake_up_sync_key (10 samples, 0.12%)</title><rect x="86.8" y="851.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="89.8" y="862.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.12%)</title><rect x="86.8" y="835.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="89.8" y="846.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.12%)</title><rect x="86.8" y="819.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="89.8" y="830.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.02%)</title><rect x="88.3" y="851.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="91.3" y="862.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.02%)</title><rect x="88.3" y="835.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="91.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (6 samples, 0.07%)</title><rect x="89.2" y="1075.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="92.2" y="1086.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.05%)</title><rect x="89.5" y="1059.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="92.5" y="1070.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.02%)</title><rect x="89.8" y="1043.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="92.8" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (2 samples, 0.02%)</title><rect x="89.8" y="1027.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="92.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (23 samples, 0.28%)</title><rect x="90.0" y="1075.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (18 samples, 0.22%)</title><rect x="90.3" y="1059.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (3 samples, 0.04%)</title><rect x="90.3" y="1043.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="93.3" y="1054.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (3 samples, 0.04%)</title><rect x="90.3" y="1027.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="93.3" y="1038.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (3 samples, 0.04%)</title><rect x="90.3" y="1011.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="93.3" y="1022.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (3 samples, 0.04%)</title><rect x="90.3" y="995.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="93.3" y="1006.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (3 samples, 0.04%)</title><rect x="90.3" y="979.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.3" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (3 samples, 0.04%)</title><rect x="90.3" y="963.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (15 samples, 0.18%)</title><rect x="90.7" y="1043.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.7" y="1054.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (12 samples, 0.14%)</title><rect x="91.2" y="1027.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="94.2" y="1038.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (4 samples, 0.05%)</title><rect x="91.2" y="1011.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="94.2" y="1022.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (2 samples, 0.02%)</title><rect x="91.5" y="995.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (2 samples, 0.02%)</title><rect x="91.5" y="979.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="94.5" y="990.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (2 samples, 0.02%)</title><rect x="91.5" y="963.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.5" y="974.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (7 samples, 0.08%)</title><rect x="91.7" y="1011.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="94.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (7 samples, 0.08%)</title><rect x="91.7" y="995.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="94.7" y="1006.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.02%)</title><rect x="92.2" y="979.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="95.2" y="990.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.02%)</title><rect x="92.5" y="979.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="95.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.request (3 samples, 0.04%)</title><rect x="92.9" y="1059.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (7 samples, 0.08%)</title><rect x="93.3" y="1075.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (7 samples, 0.08%)</title><rect x="93.3" y="1059.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="96.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (3 samples, 0.04%)</title><rect x="93.9" y="1043.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="96.9" y="1054.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.02%)</title><rect x="94.0" y="1027.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.0" y="1038.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (2 samples, 0.02%)</title><rect x="94.0" y="1011.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="97.0" y="1022.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.02%)</title><rect x="94.0" y="995.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="97.0" y="1006.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.02%)</title><rect x="94.0" y="979.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="97.0" y="990.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (2 samples, 0.02%)</title><rect x="94.0" y="963.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="97.0" y="974.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.02%)</title><rect x="94.0" y="947.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.0" y="958.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.02%)</title><rect x="94.0" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="97.0" y="942.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.02%)</title><rect x="94.0" y="915.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="97.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (22 samples, 0.26%)</title><rect x="94.3" y="1139.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="97.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.02%)</title><rect x="94.3" y="1123.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="97.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (20 samples, 0.24%)</title><rect x="94.6" y="1123.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="97.6" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/FutureAnalyzer$$Lambda$187/42186313.accept (19 samples, 0.23%)</title><rect x="94.7" y="1107.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="97.7" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/FutureAnalyzer.lambda$atLeastAsync$0 (19 samples, 0.23%)</title><rect x="94.7" y="1091.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="97.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (13 samples, 0.16%)</title><rect x="95.3" y="1075.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="98.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13 samples, 0.16%)</title><rect x="95.3" y="1059.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="98.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (13 samples, 0.16%)</title><rect x="95.3" y="1043.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (11 samples, 0.13%)</title><rect x="95.4" y="1027.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.13%)</title><rect x="95.4" y="1011.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="98.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (11 samples, 0.13%)</title><rect x="95.4" y="995.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="98.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.02%)</title><rect x="95.7" y="979.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="98.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.02%)</title><rect x="95.7" y="963.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="98.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.02%)</title><rect x="95.7" y="947.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="98.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.02%)</title><rect x="95.7" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.02%)</title><rect x="95.7" y="915.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="98.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.07%)</title><rect x="96.1" y="979.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.07%)</title><rect x="96.1" y="963.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.07%)</title><rect x="96.1" y="947.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="99.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.07%)</title><rect x="96.1" y="931.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.07%)</title><rect x="96.1" y="915.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.1" y="926.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.02%)</title><rect x="96.1" y="899.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="99.1" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.05%)</title><rect x="96.4" y="899.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="99.4" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="96.4" y="883.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="99.4" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="96.4" y="867.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="99.4" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.05%)</title><rect x="96.4" y="851.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="99.4" y="862.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="96.6" y="835.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="99.6" y="846.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.04%)</title><rect x="96.6" y="819.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="99.6" y="830.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.04%)</title><rect x="96.6" y="803.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="99.6" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.04%)</title><rect x="96.6" y="787.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="99.6" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.04%)</title><rect x="96.6" y="771.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="99.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (2 samples, 0.02%)</title><rect x="97.1" y="1075.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.1" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager$$Lambda$626/500869858.get (4 samples, 0.05%)</title><rect x="97.6" y="1139.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="100.6" y="1150.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.02%)</title><rect x="98.1" y="1139.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="101.1" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager$$Lambda$626/500869858.get (4,243 samples, 51.03%)</title><rect x="98.4" y="1155.0" width="602.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.4" y="1166.0">ru/mail/polis/service/alexander/marashov/DaoManager$$Lambda$626/500869858.get</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager.lambda$rowGet$2 (4,243 samples, 51.03%)</title><rect x="98.4" y="1139.0" width="602.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="101.4" y="1150.0">ru/mail/polis/service/alexander/marashov/DaoManager.lambda$rowGet$2</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.rowGet (4,243 samples, 51.03%)</title><rect x="98.4" y="1123.0" width="602.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.4" y="1134.0">ru/mail/polis/dao/DAO.rowGet</text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (2 samples, 0.02%)</title><rect x="98.4" y="1107.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="101.4" y="1118.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.02%)</title><rect x="98.4" y="1091.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.4" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (145 samples, 1.74%)</title><rect x="98.8" y="1107.0" width="20.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.8" y="1118.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (144 samples, 1.73%)</title><rect x="99.0" y="1091.0" width="20.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.0" y="1102.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (143 samples, 1.72%)</title><rect x="99.1" y="1075.0" width="20.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.1" y="1086.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (143 samples, 1.72%)</title><rect x="99.1" y="1059.0" width="20.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="102.1" y="1070.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (143 samples, 1.72%)</title><rect x="99.1" y="1043.0" width="20.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.1" y="1054.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (143 samples, 1.72%)</title><rect x="99.1" y="1027.0" width="20.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.1" y="1038.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (142 samples, 1.71%)</title><rect x="99.3" y="1011.0" width="20.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="102.3" y="1022.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (142 samples, 1.71%)</title><rect x="99.3" y="995.0" width="20.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="102.3" y="1006.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (141 samples, 1.70%)</title><rect x="99.3" y="979.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.3" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (141 samples, 1.70%)</title><rect x="99.3" y="963.0" width="20.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="102.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (141 samples, 1.70%)</title><rect x="99.3" y="947.0" width="20.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.3" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (49 samples, 0.59%)</title><rect x="99.4" y="931.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="102.4" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (13 samples, 0.16%)</title><rect x="99.4" y="915.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="102.4" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (13 samples, 0.16%)</title><rect x="99.4" y="899.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="102.4" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (13 samples, 0.16%)</title><rect x="99.4" y="883.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="102.4" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.12%)</title><rect x="99.4" y="867.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.4" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="99.4" y="851.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="102.4" y="862.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.02%)</title><rect x="99.4" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.4" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.02%)</title><rect x="99.4" y="819.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="102.4" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (8 samples, 0.10%)</title><rect x="99.7" y="851.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="102.7" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (8 samples, 0.10%)</title><rect x="99.7" y="835.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="102.7" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.08%)</title><rect x="99.8" y="819.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="102.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.08%)</title><rect x="99.8" y="803.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="102.8" y="814.0"></text>
</g>
<g>
<title>pread64 (7 samples, 0.08%)</title><rect x="99.8" y="787.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="102.8" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.08%)</title><rect x="99.8" y="771.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="102.8" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.08%)</title><rect x="99.8" y="755.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="102.8" y="766.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (6 samples, 0.07%)</title><rect x="100.0" y="739.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="103.0" y="750.0"></text>
</g>
<g>
<title>ksys_pread64 (6 samples, 0.07%)</title><rect x="100.0" y="723.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="103.0" y="734.0"></text>
</g>
<g>
<title>vfs_read (6 samples, 0.07%)</title><rect x="100.0" y="707.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="103.0" y="718.0"></text>
</g>
<g>
<title>__vfs_read (6 samples, 0.07%)</title><rect x="100.0" y="691.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="103.0" y="702.0"></text>
</g>
<g>
<title>new_sync_read (6 samples, 0.07%)</title><rect x="100.0" y="675.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="103.0" y="686.0"></text>
</g>
<g>
<title>ext4_file_read_iter (6 samples, 0.07%)</title><rect x="100.0" y="659.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="103.0" y="670.0"></text>
</g>
<g>
<title>generic_file_read_iter (6 samples, 0.07%)</title><rect x="100.0" y="643.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="103.0" y="654.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.04%)</title><rect x="100.1" y="627.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="103.1" y="638.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.04%)</title><rect x="100.1" y="611.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="103.1" y="622.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.02%)</title><rect x="100.5" y="627.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="103.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.02%)</title><rect x="101.0" y="867.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="104.0" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (13 samples, 0.16%)</title><rect x="101.2" y="915.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.2" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (12 samples, 0.14%)</title><rect x="101.4" y="899.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="104.4" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (12 samples, 0.14%)</title><rect x="101.4" y="883.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="104.4" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.11%)</title><rect x="101.5" y="867.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.5" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="101.5" y="851.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="104.5" y="862.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.02%)</title><rect x="101.5" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="104.5" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.02%)</title><rect x="101.5" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="104.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.08%)</title><rect x="101.8" y="851.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="104.8" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.08%)</title><rect x="101.8" y="835.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.8" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.08%)</title><rect x="101.8" y="819.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="104.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.08%)</title><rect x="101.8" y="803.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="104.8" y="814.0"></text>
</g>
<g>
<title>pread64 (7 samples, 0.08%)</title><rect x="101.8" y="787.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="104.8" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.07%)</title><rect x="102.0" y="771.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="105.0" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.07%)</title><rect x="102.0" y="755.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="105.0" y="766.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (6 samples, 0.07%)</title><rect x="102.0" y="739.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="105.0" y="750.0"></text>
</g>
<g>
<title>ksys_pread64 (6 samples, 0.07%)</title><rect x="102.0" y="723.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="105.0" y="734.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.04%)</title><rect x="102.0" y="707.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="105.0" y="718.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="102.0" y="691.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="105.0" y="702.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="102.0" y="675.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="105.0" y="686.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.04%)</title><rect x="102.4" y="707.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="105.4" y="718.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="102.5" y="691.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="105.5" y="702.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="102.5" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="105.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (23 samples, 0.28%)</title><rect x="103.1" y="915.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="106.1" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (22 samples, 0.26%)</title><rect x="103.2" y="899.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="106.2" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (22 samples, 0.26%)</title><rect x="103.2" y="883.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="106.2" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (14 samples, 0.17%)</title><rect x="103.4" y="867.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="106.4" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (13 samples, 0.16%)</title><rect x="103.5" y="851.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="106.5" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (12 samples, 0.14%)</title><rect x="103.5" y="835.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.5" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (11 samples, 0.13%)</title><rect x="103.7" y="819.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.13%)</title><rect x="103.7" y="803.0" width="1.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="106.7" y="814.0"></text>
</g>
<g>
<title>pread64 (11 samples, 0.13%)</title><rect x="103.7" y="787.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="106.7" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.12%)</title><rect x="103.8" y="771.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="106.8" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.12%)</title><rect x="103.8" y="755.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="106.8" y="766.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (9 samples, 0.11%)</title><rect x="103.9" y="739.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="106.9" y="750.0"></text>
</g>
<g>
<title>ksys_pread64 (9 samples, 0.11%)</title><rect x="103.9" y="723.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="106.9" y="734.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.04%)</title><rect x="103.9" y="707.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="106.9" y="718.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="103.9" y="691.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="106.9" y="702.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="103.9" y="675.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="106.9" y="686.0"></text>
</g>
<g>
<title>vfs_read (6 samples, 0.07%)</title><rect x="104.4" y="707.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="107.4" y="718.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.06%)</title><rect x="104.4" y="691.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="107.4" y="702.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.06%)</title><rect x="104.4" y="675.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="107.4" y="686.0"></text>
</g>
<g>
<title>ext4_file_read_iter (5 samples, 0.06%)</title><rect x="104.4" y="659.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="107.4" y="670.0"></text>
</g>
<g>
<title>generic_file_read_iter (5 samples, 0.06%)</title><rect x="104.4" y="643.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="107.4" y="654.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.04%)</title><rect x="104.7" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="107.7" y="638.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.04%)</title><rect x="104.7" y="611.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="107.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.06%)</title><rect x="105.4" y="867.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="108.4" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.02%)</title><rect x="106.1" y="867.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.value (91 samples, 1.09%)</title><rect x="106.4" y="931.0" width="12.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.4" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (15 samples, 0.18%)</title><rect x="106.4" y="915.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="109.4" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (15 samples, 0.18%)</title><rect x="106.4" y="899.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="109.4" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (15 samples, 0.18%)</title><rect x="106.4" y="883.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="109.4" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (11 samples, 0.13%)</title><rect x="106.4" y="867.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="109.4" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (11 samples, 0.13%)</title><rect x="106.4" y="851.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.4" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (11 samples, 0.13%)</title><rect x="106.4" y="835.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="109.4" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.11%)</title><rect x="106.6" y="819.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="109.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.11%)</title><rect x="106.6" y="803.0" width="1.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="109.6" y="814.0"></text>
</g>
<g>
<title>pread64 (9 samples, 0.11%)</title><rect x="106.6" y="787.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="109.6" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.08%)</title><rect x="106.9" y="771.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="109.9" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.08%)</title><rect x="106.9" y="755.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="109.9" y="766.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (6 samples, 0.07%)</title><rect x="107.1" y="739.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="110.1" y="750.0"></text>
</g>
<g>
<title>ksys_pread64 (6 samples, 0.07%)</title><rect x="107.1" y="723.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="110.1" y="734.0"></text>
</g>
<g>
<title>vfs_read (6 samples, 0.07%)</title><rect x="107.1" y="707.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="110.1" y="718.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.05%)</title><rect x="107.2" y="691.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="110.2" y="702.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.05%)</title><rect x="107.2" y="675.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="110.2" y="686.0"></text>
</g>
<g>
<title>ext4_file_read_iter (4 samples, 0.05%)</title><rect x="107.2" y="659.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="110.2" y="670.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.02%)</title><rect x="107.5" y="643.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="110.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.04%)</title><rect x="107.9" y="867.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.9" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (40 samples, 0.48%)</title><rect x="108.5" y="915.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="111.5" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (39 samples, 0.47%)</title><rect x="108.6" y="899.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="111.6" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (39 samples, 0.47%)</title><rect x="108.6" y="883.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.6" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (30 samples, 0.36%)</title><rect x="108.9" y="867.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="111.9" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (29 samples, 0.35%)</title><rect x="109.1" y="851.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="112.1" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (29 samples, 0.35%)</title><rect x="109.1" y="835.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (27 samples, 0.32%)</title><rect x="109.3" y="819.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.30%)</title><rect x="109.6" y="803.0" width="3.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="112.6" y="814.0"></text>
</g>
<g>
<title>pread64 (25 samples, 0.30%)</title><rect x="109.6" y="787.0" width="3.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="112.6" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.24%)</title><rect x="110.3" y="771.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="113.3" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.24%)</title><rect x="110.3" y="755.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="113.3" y="766.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (17 samples, 0.20%)</title><rect x="110.8" y="739.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="113.8" y="750.0"></text>
</g>
<g>
<title>ksys_pread64 (17 samples, 0.20%)</title><rect x="110.8" y="723.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="113.8" y="734.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="110.8" y="707.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="113.8" y="718.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="110.8" y="691.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="113.8" y="702.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="110.8" y="675.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="113.8" y="686.0"></text>
</g>
<g>
<title>vfs_read (14 samples, 0.17%)</title><rect x="111.2" y="707.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="114.2" y="718.0"></text>
</g>
<g>
<title>__vfs_read (11 samples, 0.13%)</title><rect x="111.2" y="691.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="114.2" y="702.0"></text>
</g>
<g>
<title>new_sync_read (11 samples, 0.13%)</title><rect x="111.2" y="675.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="114.2" y="686.0"></text>
</g>
<g>
<title>ext4_file_read_iter (11 samples, 0.13%)</title><rect x="111.2" y="659.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="114.2" y="670.0"></text>
</g>
<g>
<title>generic_file_read_iter (10 samples, 0.12%)</title><rect x="111.3" y="643.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="114.3" y="654.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.05%)</title><rect x="111.6" y="627.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="114.6" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="111.9" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="114.9" y="622.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.04%)</title><rect x="112.2" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="115.2" y="638.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.04%)</title><rect x="112.2" y="611.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="115.2" y="622.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.04%)</title><rect x="112.7" y="691.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="115.7" y="702.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="112.9" y="675.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="115.9" y="686.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="112.9" y="659.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="115.9" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (7 samples, 0.08%)</title><rect x="113.2" y="867.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="116.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getLongFrom (16 samples, 0.19%)</title><rect x="114.2" y="915.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="117.2" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (16 samples, 0.19%)</title><rect x="114.2" y="899.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="117.2" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (16 samples, 0.19%)</title><rect x="114.2" y="883.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.2" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (14 samples, 0.17%)</title><rect x="114.2" y="867.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.2" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="114.2" y="851.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.2" y="862.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.02%)</title><rect x="114.2" y="835.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.2" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.02%)</title><rect x="114.2" y="819.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (12 samples, 0.14%)</title><rect x="114.4" y="851.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.4" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (12 samples, 0.14%)</title><rect x="114.4" y="835.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.4" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (11 samples, 0.13%)</title><rect x="114.6" y="819.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.11%)</title><rect x="114.9" y="803.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="117.9" y="814.0"></text>
</g>
<g>
<title>pread64 (9 samples, 0.11%)</title><rect x="114.9" y="787.0" width="1.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="117.9" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.10%)</title><rect x="115.0" y="771.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="118.0" y="782.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.02%)</title><rect x="115.0" y="755.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="118.0" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.07%)</title><rect x="115.3" y="755.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="118.3" y="766.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.06%)</title><rect x="115.4" y="739.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="118.4" y="750.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.06%)</title><rect x="115.4" y="723.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="118.4" y="734.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.04%)</title><rect x="115.7" y="707.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="118.7" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.02%)</title><rect x="116.2" y="867.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="119.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (20 samples, 0.24%)</title><rect x="116.4" y="915.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="119.4" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (20 samples, 0.24%)</title><rect x="116.4" y="899.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="119.4" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (20 samples, 0.24%)</title><rect x="116.4" y="883.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="119.4" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (16 samples, 0.19%)</title><rect x="116.4" y="867.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.4" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (15 samples, 0.18%)</title><rect x="116.6" y="851.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="119.6" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (15 samples, 0.18%)</title><rect x="116.6" y="835.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="119.6" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (13 samples, 0.16%)</title><rect x="116.9" y="819.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="119.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.13%)</title><rect x="117.1" y="803.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="120.1" y="814.0"></text>
</g>
<g>
<title>pread64 (11 samples, 0.13%)</title><rect x="117.1" y="787.0" width="1.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="120.1" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.13%)</title><rect x="117.1" y="771.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="120.1" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.13%)</title><rect x="117.1" y="755.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="120.1" y="766.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (11 samples, 0.13%)</title><rect x="117.1" y="739.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="120.1" y="750.0"></text>
</g>
<g>
<title>ksys_pread64 (11 samples, 0.13%)</title><rect x="117.1" y="723.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="120.1" y="734.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="117.1" y="707.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="120.1" y="718.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="117.1" y="691.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="120.1" y="702.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="117.1" y="675.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="120.1" y="686.0"></text>
</g>
<g>
<title>vfs_read (8 samples, 0.10%)</title><rect x="117.6" y="707.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="120.6" y="718.0"></text>
</g>
<g>
<title>__vfs_read (6 samples, 0.07%)</title><rect x="117.6" y="691.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="120.6" y="702.0"></text>
</g>
<g>
<title>new_sync_read (6 samples, 0.07%)</title><rect x="117.6" y="675.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="120.6" y="686.0"></text>
</g>
<g>
<title>ext4_file_read_iter (5 samples, 0.06%)</title><rect x="117.7" y="659.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="120.7" y="670.0"></text>
</g>
<g>
<title>generic_file_read_iter (5 samples, 0.06%)</title><rect x="117.7" y="643.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="120.7" y="654.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.05%)</title><rect x="117.7" y="627.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="120.7" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.05%)</title><rect x="117.7" y="611.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="120.7" y="622.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="118.4" y="691.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="121.4" y="702.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="118.4" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="121.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.05%)</title><rect x="118.7" y="867.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.7" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.rowIterator (4,095 samples, 49.25%)</title><rect x="119.4" y="1107.0" width="581.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="122.4" y="1118.0">ru/mail/polis/dao/alexander/marashov/DAOImpl.rowIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (433 samples, 5.21%)</title><rect x="121.3" y="1091.0" width="61.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="124.3" y="1102.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (433 samples, 5.21%)</title><rect x="121.3" y="1075.0" width="61.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.3" y="1086.0">com/go..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (419 samples, 5.04%)</title><rect x="121.7" y="1059.0" width="59.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.7" y="1070.0">java/u..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (419 samples, 5.04%)</title><rect x="121.7" y="1043.0" width="59.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="124.7" y="1054.0">java/u..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (3 samples, 0.04%)</title><rect x="121.7" y="1027.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="124.7" y="1038.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.04%)</title><rect x="121.7" y="1011.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.7" y="1022.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (416 samples, 5.00%)</title><rect x="122.1" y="1027.0" width="59.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.1" y="1038.0">java/u..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (415 samples, 4.99%)</title><rect x="122.3" y="1011.0" width="58.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="125.3" y="1022.0">java/u..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (415 samples, 4.99%)</title><rect x="122.3" y="995.0" width="58.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.3" y="1006.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (415 samples, 4.99%)</title><rect x="122.3" y="979.0" width="58.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.3" y="990.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (412 samples, 4.95%)</title><rect x="122.3" y="963.0" width="58.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="125.3" y="974.0">com/go..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (411 samples, 4.94%)</title><rect x="122.4" y="947.0" width="58.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.4" y="958.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (411 samples, 4.94%)</title><rect x="122.4" y="931.0" width="58.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.4" y="942.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (168 samples, 2.02%)</title><rect x="122.7" y="915.0" width="23.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.7" y="926.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (49 samples, 0.59%)</title><rect x="122.7" y="899.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.7" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.02%)</title><rect x="122.7" y="883.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.7" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="122.7" y="867.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="125.7" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="122.7" y="851.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="125.7" y="862.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="122.7" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.7" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.02%)</title><rect x="122.7" y="819.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="125.7" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.02%)</title><rect x="122.7" y="803.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="125.7" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (47 samples, 0.57%)</title><rect x="123.0" y="883.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="126.0" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (47 samples, 0.57%)</title><rect x="123.0" y="867.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="126.0" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (37 samples, 0.44%)</title><rect x="123.1" y="851.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="126.1" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.08%)</title><rect x="123.1" y="835.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="126.1" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (7 samples, 0.08%)</title><rect x="123.1" y="819.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.1" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (7 samples, 0.08%)</title><rect x="123.1" y="803.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="126.1" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (30 samples, 0.36%)</title><rect x="124.1" y="835.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (29 samples, 0.35%)</title><rect x="124.1" y="819.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="127.1" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (28 samples, 0.34%)</title><rect x="124.2" y="803.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.30%)</title><rect x="124.7" y="787.0" width="3.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="127.7" y="798.0"></text>
</g>
<g>
<title>pread64 (24 samples, 0.29%)</title><rect x="124.8" y="771.0" width="3.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="127.8" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.28%)</title><rect x="124.9" y="755.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="127.9" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.28%)</title><rect x="124.9" y="739.0" width="3.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="127.9" y="750.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (19 samples, 0.23%)</title><rect x="125.5" y="723.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="128.5" y="734.0"></text>
</g>
<g>
<title>ksys_pread64 (18 samples, 0.22%)</title><rect x="125.7" y="707.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="128.7" y="718.0"></text>
</g>
<g>
<title>vfs_read (18 samples, 0.22%)</title><rect x="125.7" y="691.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="128.7" y="702.0"></text>
</g>
<g>
<title>__vfs_read (16 samples, 0.19%)</title><rect x="125.8" y="675.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="128.8" y="686.0"></text>
</g>
<g>
<title>new_sync_read (15 samples, 0.18%)</title><rect x="125.9" y="659.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="128.9" y="670.0"></text>
</g>
<g>
<title>ext4_file_read_iter (14 samples, 0.17%)</title><rect x="126.1" y="643.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="129.1" y="654.0"></text>
</g>
<g>
<title>generic_file_read_iter (13 samples, 0.16%)</title><rect x="126.2" y="627.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="129.2" y="638.0"></text>
</g>
<g>
<title>copy_page_to_iter (6 samples, 0.07%)</title><rect x="126.5" y="611.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="129.5" y="622.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.04%)</title><rect x="126.8" y="595.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="129.8" y="606.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.04%)</title><rect x="127.4" y="611.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="130.4" y="622.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.04%)</title><rect x="127.4" y="595.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="130.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (8 samples, 0.10%)</title><rect x="128.4" y="851.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="131.4" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.02%)</title><rect x="129.2" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="132.2" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (45 samples, 0.54%)</title><rect x="129.6" y="899.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="132.6" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.06%)</title><rect x="129.6" y="883.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.6" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="129.6" y="867.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.6" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="129.6" y="851.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.6" y="862.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="129.6" y="835.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="132.6" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.02%)</title><rect x="129.6" y="819.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="132.6" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.02%)</title><rect x="129.6" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.6" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.04%)</title><rect x="129.9" y="819.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.9" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.04%)</title><rect x="129.9" y="803.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.9" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (40 samples, 0.48%)</title><rect x="130.3" y="883.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.3" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (40 samples, 0.48%)</title><rect x="130.3" y="867.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.3" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (32 samples, 0.38%)</title><rect x="130.6" y="851.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="133.6" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="130.6" y="835.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.6" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.02%)</title><rect x="130.6" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="133.6" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.02%)</title><rect x="130.6" y="803.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.6" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (30 samples, 0.36%)</title><rect x="130.9" y="835.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.9" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (30 samples, 0.36%)</title><rect x="130.9" y="819.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="133.9" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (28 samples, 0.34%)</title><rect x="131.2" y="803.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="134.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.31%)</title><rect x="131.5" y="787.0" width="3.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="134.5" y="798.0"></text>
</g>
<g>
<title>pread64 (26 samples, 0.31%)</title><rect x="131.5" y="771.0" width="3.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="134.5" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.26%)</title><rect x="132.0" y="755.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="135.0" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.26%)</title><rect x="132.0" y="739.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="135.0" y="750.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (20 samples, 0.24%)</title><rect x="132.3" y="723.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="135.3" y="734.0"></text>
</g>
<g>
<title>ksys_pread64 (20 samples, 0.24%)</title><rect x="132.3" y="707.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="135.3" y="718.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.06%)</title><rect x="132.3" y="691.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="135.3" y="702.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.06%)</title><rect x="132.3" y="675.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="135.3" y="686.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.05%)</title><rect x="132.5" y="659.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="135.5" y="670.0"></text>
</g>
<g>
<title>vfs_read (15 samples, 0.18%)</title><rect x="133.0" y="691.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="136.0" y="702.0"></text>
</g>
<g>
<title>__vfs_read (10 samples, 0.12%)</title><rect x="133.0" y="675.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="136.0" y="686.0"></text>
</g>
<g>
<title>new_sync_read (10 samples, 0.12%)</title><rect x="133.0" y="659.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="136.0" y="670.0"></text>
</g>
<g>
<title>ext4_file_read_iter (10 samples, 0.12%)</title><rect x="133.0" y="643.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="136.0" y="654.0"></text>
</g>
<g>
<title>generic_file_read_iter (9 samples, 0.11%)</title><rect x="133.2" y="627.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="136.2" y="638.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="133.2" y="611.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="136.2" y="622.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.06%)</title><rect x="133.5" y="611.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="136.5" y="622.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.06%)</title><rect x="133.5" y="595.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="136.5" y="606.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.02%)</title><rect x="133.9" y="579.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="136.9" y="590.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.02%)</title><rect x="134.2" y="611.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="137.2" y="622.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.06%)</title><rect x="134.5" y="675.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="137.5" y="686.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="134.5" y="659.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="137.5" y="670.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.04%)</title><rect x="134.7" y="659.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="137.7" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.06%)</title><rect x="135.2" y="851.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.2" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (74 samples, 0.89%)</title><rect x="136.0" y="899.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.0" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.05%)</title><rect x="136.0" y="883.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="139.0" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="136.0" y="867.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="139.0" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="136.0" y="851.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="139.0" y="862.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="136.0" y="835.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="139.0" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.04%)</title><rect x="136.2" y="819.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="139.2" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.04%)</title><rect x="136.2" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="139.2" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.02%)</title><rect x="136.3" y="787.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.3" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (70 samples, 0.84%)</title><rect x="136.6" y="883.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.6" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (70 samples, 0.84%)</title><rect x="136.6" y="867.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="139.6" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.02%)</title><rect x="136.7" y="851.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="139.7" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.02%)</title><rect x="136.7" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="139.7" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.02%)</title><rect x="136.7" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="139.7" y="830.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.02%)</title><rect x="136.7" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.7" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.02%)</title><rect x="136.7" y="787.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (54 samples, 0.65%)</title><rect x="137.0" y="851.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="140.0" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (5 samples, 0.06%)</title><rect x="137.0" y="835.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.0" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.06%)</title><rect x="137.0" y="819.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.0" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (5 samples, 0.06%)</title><rect x="137.0" y="803.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.0" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (49 samples, 0.59%)</title><rect x="137.7" y="835.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.7" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (49 samples, 0.59%)</title><rect x="137.7" y="819.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (43 samples, 0.52%)</title><rect x="138.6" y="803.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="141.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.51%)</title><rect x="138.7" y="787.0" width="6.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="141.7" y="798.0"></text>
</g>
<g>
<title>pread64 (41 samples, 0.49%)</title><rect x="138.9" y="771.0" width="5.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="141.9" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.42%)</title><rect x="139.7" y="755.0" width="5.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="142.7" y="766.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.04%)</title><rect x="139.7" y="739.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="142.7" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 0.38%)</title><rect x="140.1" y="739.0" width="4.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="143.1" y="750.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (26 samples, 0.31%)</title><rect x="141.0" y="723.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="144.0" y="734.0"></text>
</g>
<g>
<title>ksys_pread64 (26 samples, 0.31%)</title><rect x="141.0" y="707.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="144.0" y="718.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.06%)</title><rect x="141.0" y="691.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="144.0" y="702.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.06%)</title><rect x="141.0" y="675.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="144.0" y="686.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.06%)</title><rect x="141.0" y="659.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="144.0" y="670.0"></text>
</g>
<g>
<title>fput (2 samples, 0.02%)</title><rect x="141.7" y="691.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="144.7" y="702.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.02%)</title><rect x="141.7" y="675.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="144.7" y="686.0"></text>
</g>
<g>
<title>vfs_read (19 samples, 0.23%)</title><rect x="142.0" y="691.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="145.0" y="702.0"></text>
</g>
<g>
<title>__vfs_read (15 samples, 0.18%)</title><rect x="142.3" y="675.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="145.3" y="686.0"></text>
</g>
<g>
<title>new_sync_read (15 samples, 0.18%)</title><rect x="142.3" y="659.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="145.3" y="670.0"></text>
</g>
<g>
<title>ext4_file_read_iter (12 samples, 0.14%)</title><rect x="142.7" y="643.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="145.7" y="654.0"></text>
</g>
<g>
<title>generic_file_read_iter (12 samples, 0.14%)</title><rect x="142.7" y="627.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="145.7" y="638.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.05%)</title><rect x="142.8" y="611.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="145.8" y="622.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.04%)</title><rect x="143.0" y="595.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="146.0" y="606.0"></text>
</g>
<g>
<title>pagecache_get_page (6 samples, 0.07%)</title><rect x="143.4" y="611.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="146.4" y="622.0"></text>
</g>
<g>
<title>find_get_entry (6 samples, 0.07%)</title><rect x="143.4" y="595.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="146.4" y="606.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="144.4" y="675.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="147.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (13 samples, 0.16%)</title><rect x="144.7" y="851.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.7" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.value (241 samples, 2.90%)</title><rect x="146.5" y="915.0" width="34.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="149.5" y="926.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (50 samples, 0.60%)</title><rect x="146.5" y="899.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.5" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (48 samples, 0.58%)</title><rect x="146.8" y="883.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.8" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (48 samples, 0.58%)</title><rect x="146.8" y="867.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.8" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (40 samples, 0.48%)</title><rect x="146.8" y="851.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="149.8" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="146.8" y="835.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.8" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.02%)</title><rect x="146.8" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="149.8" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.02%)</title><rect x="146.8" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.8" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (38 samples, 0.46%)</title><rect x="147.1" y="835.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (38 samples, 0.46%)</title><rect x="147.1" y="819.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.1" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (38 samples, 0.46%)</title><rect x="147.1" y="803.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="150.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.44%)</title><rect x="147.2" y="787.0" width="5.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="150.2" y="798.0"></text>
</g>
<g>
<title>pread64 (36 samples, 0.43%)</title><rect x="147.4" y="771.0" width="5.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="150.4" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.35%)</title><rect x="148.4" y="755.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="151.4" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.35%)</title><rect x="148.4" y="739.0" width="4.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="151.4" y="750.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (23 samples, 0.28%)</title><rect x="149.2" y="723.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="152.2" y="734.0"></text>
</g>
<g>
<title>ksys_pread64 (23 samples, 0.28%)</title><rect x="149.2" y="707.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="152.2" y="718.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="149.4" y="691.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="152.4" y="702.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="149.4" y="675.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="152.4" y="686.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="149.4" y="659.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="152.4" y="670.0"></text>
</g>
<g>
<title>fput (2 samples, 0.02%)</title><rect x="149.6" y="691.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="152.6" y="702.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.02%)</title><rect x="149.6" y="675.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="152.6" y="686.0"></text>
</g>
<g>
<title>vfs_read (18 samples, 0.22%)</title><rect x="149.9" y="691.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="152.9" y="702.0"></text>
</g>
<g>
<title>__vfs_read (10 samples, 0.12%)</title><rect x="150.1" y="675.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="153.1" y="686.0"></text>
</g>
<g>
<title>new_sync_read (9 samples, 0.11%)</title><rect x="150.2" y="659.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="153.2" y="670.0"></text>
</g>
<g>
<title>ext4_file_read_iter (9 samples, 0.11%)</title><rect x="150.2" y="643.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="153.2" y="654.0"></text>
</g>
<g>
<title>generic_file_read_iter (8 samples, 0.10%)</title><rect x="150.4" y="627.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="153.4" y="638.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.04%)</title><rect x="150.6" y="611.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="153.6" y="622.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="150.8" y="595.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="153.8" y="606.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.04%)</title><rect x="151.1" y="611.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="154.1" y="622.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.04%)</title><rect x="151.5" y="675.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="154.5" y="686.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.05%)</title><rect x="151.9" y="675.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="154.9" y="686.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.04%)</title><rect x="152.1" y="659.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="155.1" y="670.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="152.2" y="643.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="155.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.07%)</title><rect x="152.5" y="851.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.5" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.02%)</title><rect x="153.3" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.3" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (91 samples, 1.09%)</title><rect x="153.6" y="899.0" width="12.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.6" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.06%)</title><rect x="153.6" y="883.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.6" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="153.6" y="867.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.6" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="153.6" y="851.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.6" y="862.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="153.6" y="835.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="156.6" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.05%)</title><rect x="153.6" y="819.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="156.6" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.05%)</title><rect x="153.6" y="803.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.6" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (86 samples, 1.03%)</title><rect x="154.3" y="883.0" width="12.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.3" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (86 samples, 1.03%)</title><rect x="154.3" y="867.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.3" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.05%)</title><rect x="154.3" y="851.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.3" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.05%)</title><rect x="154.3" y="835.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.3" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.04%)</title><rect x="154.5" y="819.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.5" y="830.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.04%)</title><rect x="154.5" y="803.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.5" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.04%)</title><rect x="154.5" y="787.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (3 samples, 0.04%)</title><rect x="154.9" y="851.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.9" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (3 samples, 0.04%)</title><rect x="154.9" y="835.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.9" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.04%)</title><rect x="154.9" y="819.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.9" y="830.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.04%)</title><rect x="154.9" y="803.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.9" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.04%)</title><rect x="154.9" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (65 samples, 0.78%)</title><rect x="155.3" y="851.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.3" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (5 samples, 0.06%)</title><rect x="155.3" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.3" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.06%)</title><rect x="155.3" y="819.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.3" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (5 samples, 0.06%)</title><rect x="155.3" y="803.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.3" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (60 samples, 0.72%)</title><rect x="156.0" y="835.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.0" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (60 samples, 0.72%)</title><rect x="156.0" y="819.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="159.0" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (57 samples, 0.69%)</title><rect x="156.5" y="803.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="159.5" y="814.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.02%)</title><rect x="156.7" y="787.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="159.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.63%)</title><rect x="157.0" y="787.0" width="7.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="160.0" y="798.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.02%)</title><rect x="157.0" y="771.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="160.0" y="782.0"></text>
</g>
<g>
<title>pread64 (50 samples, 0.60%)</title><rect x="157.3" y="771.0" width="7.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="160.3" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 0.58%)</title><rect x="157.6" y="755.0" width="6.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="160.6" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (47 samples, 0.57%)</title><rect x="157.7" y="739.0" width="6.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="160.7" y="750.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (37 samples, 0.44%)</title><rect x="159.1" y="723.0" width="5.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="162.1" y="734.0"></text>
</g>
<g>
<title>ksys_pread64 (37 samples, 0.44%)</title><rect x="159.1" y="707.0" width="5.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="162.1" y="718.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.04%)</title><rect x="159.1" y="691.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="162.1" y="702.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="159.1" y="675.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="162.1" y="686.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="159.1" y="659.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="162.1" y="670.0"></text>
</g>
<g>
<title>vfs_read (34 samples, 0.41%)</title><rect x="159.6" y="691.0" width="4.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="162.6" y="702.0"></text>
</g>
<g>
<title>__vfs_read (25 samples, 0.30%)</title><rect x="159.6" y="675.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="162.6" y="686.0"></text>
</g>
<g>
<title>new_sync_read (24 samples, 0.29%)</title><rect x="159.7" y="659.0" width="3.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="162.7" y="670.0"></text>
</g>
<g>
<title>ext4_file_read_iter (20 samples, 0.24%)</title><rect x="160.3" y="643.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="163.3" y="654.0"></text>
</g>
<g>
<title>generic_file_read_iter (19 samples, 0.23%)</title><rect x="160.3" y="627.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="163.3" y="638.0"></text>
</g>
<g>
<title>copy_page_to_iter (9 samples, 0.11%)</title><rect x="160.9" y="611.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="163.9" y="622.0"></text>
</g>
<g>
<title>copy_user_generic_string (6 samples, 0.07%)</title><rect x="161.3" y="595.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="164.3" y="606.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="162.3" y="611.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="165.3" y="622.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.02%)</title><rect x="162.3" y="595.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="165.3" y="606.0"></text>
</g>
<g>
<title>touch_atime (3 samples, 0.04%)</title><rect x="162.6" y="611.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="165.6" y="622.0"></text>
</g>
<g>
<title>rw_verify_area (8 samples, 0.10%)</title><rect x="163.3" y="675.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="166.3" y="686.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.07%)</title><rect x="163.5" y="659.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="166.5" y="670.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="163.8" y="643.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="166.8" y="654.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="164.1" y="643.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="167.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (10 samples, 0.12%)</title><rect x="164.5" y="851.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="167.5" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (4 samples, 0.05%)</title><rect x="166.0" y="851.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="169.0" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getLongFrom (52 samples, 0.63%)</title><rect x="166.5" y="899.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="169.5" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.02%)</title><rect x="166.5" y="883.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="169.5" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="166.5" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="169.5" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="166.5" y="851.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="169.5" y="862.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="166.5" y="835.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="169.5" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.02%)</title><rect x="166.5" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="169.5" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.02%)</title><rect x="166.5" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="169.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (50 samples, 0.60%)</title><rect x="166.8" y="883.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="169.8" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (50 samples, 0.60%)</title><rect x="166.8" y="867.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="169.8" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (37 samples, 0.44%)</title><rect x="167.0" y="851.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="170.0" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (8 samples, 0.10%)</title><rect x="167.0" y="835.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="170.0" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (8 samples, 0.10%)</title><rect x="167.0" y="819.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.0" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (8 samples, 0.10%)</title><rect x="167.0" y="803.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="170.0" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (29 samples, 0.35%)</title><rect x="168.1" y="835.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (29 samples, 0.35%)</title><rect x="168.1" y="819.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="171.1" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (27 samples, 0.32%)</title><rect x="168.4" y="803.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="171.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.30%)</title><rect x="168.7" y="787.0" width="3.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="171.7" y="798.0"></text>
</g>
<g>
<title>pread64 (25 samples, 0.30%)</title><rect x="168.7" y="771.0" width="3.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="171.7" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.30%)</title><rect x="168.7" y="755.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="171.7" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.30%)</title><rect x="168.7" y="739.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="171.7" y="750.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (22 samples, 0.26%)</title><rect x="169.1" y="723.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="172.1" y="734.0"></text>
</g>
<g>
<title>ksys_pread64 (22 samples, 0.26%)</title><rect x="169.1" y="707.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="172.1" y="718.0"></text>
</g>
<g>
<title>vfs_read (22 samples, 0.26%)</title><rect x="169.1" y="691.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="172.1" y="702.0"></text>
</g>
<g>
<title>__vfs_read (12 samples, 0.14%)</title><rect x="169.1" y="675.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="172.1" y="686.0"></text>
</g>
<g>
<title>new_sync_read (11 samples, 0.13%)</title><rect x="169.2" y="659.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="172.2" y="670.0"></text>
</g>
<g>
<title>ext4_file_read_iter (9 samples, 0.11%)</title><rect x="169.5" y="643.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="172.5" y="654.0"></text>
</g>
<g>
<title>generic_file_read_iter (9 samples, 0.11%)</title><rect x="169.5" y="627.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="172.5" y="638.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.05%)</title><rect x="169.8" y="611.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="172.8" y="622.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.04%)</title><rect x="169.9" y="595.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="172.9" y="606.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="170.4" y="611.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="173.4" y="622.0"></text>
</g>
<g>
<title>rw_verify_area (10 samples, 0.12%)</title><rect x="170.8" y="675.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="173.8" y="686.0"></text>
</g>
<g>
<title>security_file_permission (7 samples, 0.08%)</title><rect x="171.2" y="659.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="174.2" y="670.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="171.5" y="643.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="174.5" y="654.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="171.5" y="627.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="174.5" y="638.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="171.9" y="643.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="174.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (9 samples, 0.11%)</title><rect x="172.2" y="851.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="175.2" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.04%)</title><rect x="173.5" y="851.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="176.5" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (48 samples, 0.58%)</title><rect x="173.9" y="899.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.9" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.02%)</title><rect x="174.1" y="883.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="177.1" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="174.1" y="867.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="177.1" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="174.1" y="851.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="177.1" y="862.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="174.1" y="835.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="177.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (45 samples, 0.54%)</title><rect x="174.3" y="883.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.3" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (45 samples, 0.54%)</title><rect x="174.3" y="867.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="177.3" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (38 samples, 0.46%)</title><rect x="174.5" y="851.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="177.5" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="174.5" y="835.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="177.5" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.02%)</title><rect x="174.5" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="177.5" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.02%)</title><rect x="174.5" y="803.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="177.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (36 samples, 0.43%)</title><rect x="174.8" y="835.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="177.8" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (36 samples, 0.43%)</title><rect x="174.8" y="819.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="177.8" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (33 samples, 0.40%)</title><rect x="175.2" y="803.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.35%)</title><rect x="175.6" y="787.0" width="4.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="178.6" y="798.0"></text>
</g>
<g>
<title>pread64 (29 samples, 0.35%)</title><rect x="175.6" y="771.0" width="4.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="178.6" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.32%)</title><rect x="175.9" y="755.0" width="3.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="178.9" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.32%)</title><rect x="175.9" y="739.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="178.9" y="750.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (24 samples, 0.29%)</title><rect x="176.3" y="723.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="179.3" y="734.0"></text>
</g>
<g>
<title>ksys_pread64 (24 samples, 0.29%)</title><rect x="176.3" y="707.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="179.3" y="718.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.04%)</title><rect x="176.3" y="691.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="179.3" y="702.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="176.3" y="675.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="179.3" y="686.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="176.3" y="659.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="179.3" y="670.0"></text>
</g>
<g>
<title>vfs_read (20 samples, 0.24%)</title><rect x="176.9" y="691.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="179.9" y="702.0"></text>
</g>
<g>
<title>__vfs_read (15 samples, 0.18%)</title><rect x="176.9" y="675.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="179.9" y="686.0"></text>
</g>
<g>
<title>new_sync_read (15 samples, 0.18%)</title><rect x="176.9" y="659.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="179.9" y="670.0"></text>
</g>
<g>
<title>ext4_file_read_iter (15 samples, 0.18%)</title><rect x="176.9" y="643.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="179.9" y="654.0"></text>
</g>
<g>
<title>generic_file_read_iter (13 samples, 0.16%)</title><rect x="177.0" y="627.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="180.0" y="638.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.04%)</title><rect x="177.5" y="611.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="180.5" y="622.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.04%)</title><rect x="177.5" y="595.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="180.5" y="606.0"></text>
</g>
<g>
<title>pagecache_get_page (6 samples, 0.07%)</title><rect x="177.9" y="611.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="180.9" y="622.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.06%)</title><rect x="178.0" y="595.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="181.0" y="606.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.04%)</title><rect x="178.2" y="579.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="181.2" y="590.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.06%)</title><rect x="179.0" y="675.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="182.0" y="686.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.06%)</title><rect x="179.0" y="659.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="182.0" y="670.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.05%)</title><rect x="179.2" y="643.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="182.2" y="654.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.04%)</title><rect x="179.3" y="627.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="182.3" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.05%)</title><rect x="179.9" y="851.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="182.9" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.02%)</title><rect x="180.4" y="851.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="183.4" y="862.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$622/570340124.compare (3 samples, 0.04%)</title><rect x="180.7" y="963.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="183.7" y="974.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3 samples, 0.04%)</title><rect x="180.7" y="947.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="183.7" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.04%)</title><rect x="180.7" y="931.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="183.7" y="942.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (11 samples, 0.13%)</title><rect x="181.1" y="1059.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="184.1" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (11 samples, 0.13%)</title><rect x="181.1" y="1043.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="184.1" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (11 samples, 0.13%)</title><rect x="181.1" y="1027.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="184.1" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.clear (4 samples, 0.05%)</title><rect x="181.4" y="1011.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="184.4" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (3 samples, 0.04%)</title><rect x="182.0" y="1011.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="185.0" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$619/1670596738.getAsBoolean (2 samples, 0.02%)</title><rect x="182.1" y="995.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="185.1" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.02%)</title><rect x="182.1" y="979.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2 samples, 0.02%)</title><rect x="182.1" y="963.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="185.1" y="974.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.02%)</title><rect x="182.1" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.1" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$610/1629801061.apply (2 samples, 0.02%)</title><rect x="182.1" y="931.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="185.1" y="942.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (2 samples, 0.02%)</title><rect x="182.4" y="1011.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="185.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (17 samples, 0.20%)</title><rect x="182.7" y="1091.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (17 samples, 0.20%)</title><rect x="182.7" y="1075.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="185.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (17 samples, 0.20%)</title><rect x="182.7" y="1059.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (5 samples, 0.06%)</title><rect x="182.7" y="1043.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.06%)</title><rect x="182.7" y="1027.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (3 samples, 0.04%)</title><rect x="183.0" y="1011.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (12 samples, 0.14%)</title><rect x="183.4" y="1043.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="186.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.04%)</title><rect x="183.4" y="1027.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="186.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (9 samples, 0.11%)</title><rect x="183.8" y="1027.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.07%)</title><rect x="184.3" y="1011.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="187.3" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.05%)</title><rect x="184.6" y="995.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="187.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.04%)</title><rect x="185.1" y="1091.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="188.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (3 samples, 0.04%)</title><rect x="185.1" y="1075.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="188.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (2 samples, 0.02%)</title><rect x="185.3" y="1059.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="188.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (5 samples, 0.06%)</title><rect x="185.5" y="1091.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="188.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (5 samples, 0.06%)</title><rect x="185.5" y="1075.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="188.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (5 samples, 0.06%)</title><rect x="185.5" y="1059.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="188.5" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (170 samples, 2.04%)</title><rect x="186.4" y="1091.0" width="24.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="189.4" y="1102.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (170 samples, 2.04%)</title><rect x="186.4" y="1075.0" width="24.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.4" y="1086.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (169 samples, 2.03%)</title><rect x="186.5" y="1059.0" width="24.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="189.5" y="1070.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.02%)</title><rect x="186.7" y="1043.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="189.7" y="1054.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.04%)</title><rect x="187.0" y="1043.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="190.0" y="1054.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.04%)</title><rect x="187.0" y="1027.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="190.0" y="1038.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.04%)</title><rect x="187.0" y="1011.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="190.0" y="1022.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.04%)</title><rect x="187.0" y="995.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="190.0" y="1006.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.04%)</title><rect x="187.0" y="979.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.0" y="990.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$622/570340124.compare (2 samples, 0.02%)</title><rect x="187.1" y="963.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="190.1" y="974.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2 samples, 0.02%)</title><rect x="187.1" y="947.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="190.1" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="187.1" y="931.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="190.1" y="942.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (161 samples, 1.94%)</title><rect x="187.4" y="1043.0" width="22.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="190.4" y="1054.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (161 samples, 1.94%)</title><rect x="187.4" y="1027.0" width="22.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="190.4" y="1038.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (160 samples, 1.92%)</title><rect x="187.5" y="1011.0" width="22.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="190.5" y="1022.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (160 samples, 1.92%)</title><rect x="187.5" y="995.0" width="22.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="190.5" y="1006.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (159 samples, 1.91%)</title><rect x="187.7" y="979.0" width="22.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="190.7" y="990.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (159 samples, 1.91%)</title><rect x="187.7" y="963.0" width="22.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="190.7" y="974.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (155 samples, 1.86%)</title><rect x="187.8" y="947.0" width="22.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="190.8" y="958.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (155 samples, 1.86%)</title><rect x="187.8" y="931.0" width="22.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="190.8" y="942.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (155 samples, 1.86%)</title><rect x="187.8" y="915.0" width="22.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="190.8" y="926.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (56 samples, 0.67%)</title><rect x="188.0" y="899.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.0" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (15 samples, 0.18%)</title><rect x="188.0" y="883.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.0" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (15 samples, 0.18%)</title><rect x="188.0" y="867.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.0" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (15 samples, 0.18%)</title><rect x="188.0" y="851.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.0" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (13 samples, 0.16%)</title><rect x="188.1" y="835.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.1" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="188.1" y="819.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.1" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.02%)</title><rect x="188.1" y="803.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.1" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.02%)</title><rect x="188.1" y="787.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (11 samples, 0.13%)</title><rect x="188.4" y="819.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.4" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (11 samples, 0.13%)</title><rect x="188.4" y="803.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="191.4" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (11 samples, 0.13%)</title><rect x="188.4" y="787.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.12%)</title><rect x="188.4" y="771.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="191.4" y="782.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.02%)</title><rect x="188.4" y="755.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="191.4" y="766.0"></text>
</g>
<g>
<title>pread64 (8 samples, 0.10%)</title><rect x="188.7" y="755.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="191.7" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.10%)</title><rect x="188.7" y="739.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="191.7" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.10%)</title><rect x="188.7" y="723.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="191.7" y="734.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.05%)</title><rect x="189.2" y="707.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="192.2" y="718.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.05%)</title><rect x="189.2" y="691.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="192.2" y="702.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.05%)</title><rect x="189.2" y="675.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="192.2" y="686.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.05%)</title><rect x="189.2" y="659.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="192.2" y="670.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.05%)</title><rect x="189.2" y="643.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="192.2" y="654.0"></text>
</g>
<g>
<title>ext4_file_read_iter (4 samples, 0.05%)</title><rect x="189.2" y="627.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="192.2" y="638.0"></text>
</g>
<g>
<title>generic_file_read_iter (4 samples, 0.05%)</title><rect x="189.2" y="611.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="192.2" y="622.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="189.4" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="192.4" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="189.4" y="579.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="192.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (23 samples, 0.28%)</title><rect x="190.1" y="883.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="193.1" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (23 samples, 0.28%)</title><rect x="190.1" y="867.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.1" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (23 samples, 0.28%)</title><rect x="190.1" y="851.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.1" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (19 samples, 0.23%)</title><rect x="190.1" y="835.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="193.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (18 samples, 0.22%)</title><rect x="190.2" y="819.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="193.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (18 samples, 0.22%)</title><rect x="190.2" y="803.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="193.2" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (17 samples, 0.20%)</title><rect x="190.4" y="787.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="193.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.20%)</title><rect x="190.4" y="771.0" width="2.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="193.4" y="782.0"></text>
</g>
<g>
<title>pread64 (17 samples, 0.20%)</title><rect x="190.4" y="755.0" width="2.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="193.4" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.19%)</title><rect x="190.5" y="739.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="193.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.19%)</title><rect x="190.5" y="723.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="193.5" y="734.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (15 samples, 0.18%)</title><rect x="190.7" y="707.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="193.7" y="718.0"></text>
</g>
<g>
<title>ksys_pread64 (15 samples, 0.18%)</title><rect x="190.7" y="691.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="193.7" y="702.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="190.7" y="675.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="193.7" y="686.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="190.7" y="659.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="193.7" y="670.0"></text>
</g>
<g>
<title>vfs_read (13 samples, 0.16%)</title><rect x="190.9" y="675.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="193.9" y="686.0"></text>
</g>
<g>
<title>__vfs_read (8 samples, 0.10%)</title><rect x="190.9" y="659.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="193.9" y="670.0"></text>
</g>
<g>
<title>new_sync_read (7 samples, 0.08%)</title><rect x="191.1" y="643.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="194.1" y="654.0"></text>
</g>
<g>
<title>ext4_file_read_iter (6 samples, 0.07%)</title><rect x="191.2" y="627.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="194.2" y="638.0"></text>
</g>
<g>
<title>generic_file_read_iter (5 samples, 0.06%)</title><rect x="191.4" y="611.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="194.4" y="622.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.04%)</title><rect x="191.6" y="595.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="194.6" y="606.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.04%)</title><rect x="191.6" y="579.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="194.6" y="590.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.06%)</title><rect x="192.1" y="659.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="195.1" y="670.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.05%)</title><rect x="192.2" y="643.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="195.2" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="192.2" y="627.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="195.2" y="638.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="192.2" y="611.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="195.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.02%)</title><rect x="192.8" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.8" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.02%)</title><rect x="193.1" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="196.1" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (18 samples, 0.22%)</title><rect x="193.4" y="883.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="196.4" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (18 samples, 0.22%)</title><rect x="193.4" y="867.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="196.4" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (18 samples, 0.22%)</title><rect x="193.4" y="851.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.4" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (16 samples, 0.19%)</title><rect x="193.4" y="835.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.4" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (15 samples, 0.18%)</title><rect x="193.5" y="819.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="196.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (15 samples, 0.18%)</title><rect x="193.5" y="803.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (13 samples, 0.16%)</title><rect x="193.8" y="787.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.14%)</title><rect x="193.9" y="771.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="196.9" y="782.0"></text>
</g>
<g>
<title>pread64 (12 samples, 0.14%)</title><rect x="193.9" y="755.0" width="1.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="196.9" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.13%)</title><rect x="194.1" y="739.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="197.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.13%)</title><rect x="194.1" y="723.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="197.1" y="734.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (9 samples, 0.11%)</title><rect x="194.3" y="707.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="197.3" y="718.0"></text>
</g>
<g>
<title>ksys_pread64 (9 samples, 0.11%)</title><rect x="194.3" y="691.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="197.3" y="702.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.08%)</title><rect x="194.6" y="675.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="197.6" y="686.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.06%)</title><rect x="194.6" y="659.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="197.6" y="670.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.06%)</title><rect x="194.6" y="643.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="197.6" y="654.0"></text>
</g>
<g>
<title>ext4_file_read_iter (5 samples, 0.06%)</title><rect x="194.6" y="627.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="197.6" y="638.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.04%)</title><rect x="194.8" y="611.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="197.8" y="622.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="194.9" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="197.9" y="606.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.02%)</title><rect x="194.9" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="197.9" y="590.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="195.3" y="659.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="198.3" y="670.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="195.3" y="643.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="198.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.02%)</title><rect x="195.6" y="835.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="198.6" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.value (98 samples, 1.18%)</title><rect x="195.9" y="899.0" width="13.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.9" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (24 samples, 0.29%)</title><rect x="195.9" y="883.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="198.9" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (23 samples, 0.28%)</title><rect x="196.0" y="867.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="199.0" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (23 samples, 0.28%)</title><rect x="196.0" y="851.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="199.0" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (16 samples, 0.19%)</title><rect x="196.0" y="835.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.0" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (15 samples, 0.18%)</title><rect x="196.2" y="819.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="199.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (15 samples, 0.18%)</title><rect x="196.2" y="803.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="199.2" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (15 samples, 0.18%)</title><rect x="196.2" y="787.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="199.2" y="798.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.02%)</title><rect x="196.2" y="771.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="199.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.16%)</title><rect x="196.5" y="771.0" width="1.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="199.5" y="782.0"></text>
</g>
<g>
<title>pread64 (13 samples, 0.16%)</title><rect x="196.5" y="755.0" width="1.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="199.5" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.14%)</title><rect x="196.6" y="739.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="199.6" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.14%)</title><rect x="196.6" y="723.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="199.6" y="734.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (12 samples, 0.14%)</title><rect x="196.6" y="707.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="199.6" y="718.0"></text>
</g>
<g>
<title>ksys_pread64 (12 samples, 0.14%)</title><rect x="196.6" y="691.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="199.6" y="702.0"></text>
</g>
<g>
<title>vfs_read (9 samples, 0.11%)</title><rect x="197.0" y="675.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="200.0" y="686.0"></text>
</g>
<g>
<title>__vfs_read (8 samples, 0.10%)</title><rect x="197.0" y="659.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="200.0" y="670.0"></text>
</g>
<g>
<title>new_sync_read (8 samples, 0.10%)</title><rect x="197.0" y="643.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="200.0" y="654.0"></text>
</g>
<g>
<title>ext4_file_read_iter (8 samples, 0.10%)</title><rect x="197.0" y="627.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="200.0" y="638.0"></text>
</g>
<g>
<title>generic_file_read_iter (8 samples, 0.10%)</title><rect x="197.0" y="611.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="200.0" y="622.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.05%)</title><rect x="197.3" y="595.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="200.3" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.04%)</title><rect x="197.5" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="200.5" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.07%)</title><rect x="198.3" y="835.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="201.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (39 samples, 0.47%)</title><rect x="199.3" y="883.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="202.3" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (38 samples, 0.46%)</title><rect x="199.5" y="867.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.5" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (38 samples, 0.46%)</title><rect x="199.5" y="851.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="202.5" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (31 samples, 0.37%)</title><rect x="199.6" y="835.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="202.6" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (30 samples, 0.36%)</title><rect x="199.7" y="819.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (30 samples, 0.36%)</title><rect x="199.7" y="803.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="202.7" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (27 samples, 0.32%)</title><rect x="200.2" y="787.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="203.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.30%)</title><rect x="200.3" y="771.0" width="3.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="203.3" y="782.0"></text>
</g>
<g>
<title>pread64 (24 samples, 0.29%)</title><rect x="200.4" y="755.0" width="3.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="203.4" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.26%)</title><rect x="200.7" y="739.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="203.7" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.26%)</title><rect x="200.7" y="723.0" width="3.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="203.7" y="734.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (19 samples, 0.23%)</title><rect x="201.2" y="707.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="204.2" y="718.0"></text>
</g>
<g>
<title>ksys_pread64 (19 samples, 0.23%)</title><rect x="201.2" y="691.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="204.2" y="702.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="201.2" y="675.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="204.2" y="686.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="201.2" y="659.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="204.2" y="670.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="201.2" y="643.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="204.2" y="654.0"></text>
</g>
<g>
<title>vfs_read (14 samples, 0.17%)</title><rect x="201.9" y="675.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="204.9" y="686.0"></text>
</g>
<g>
<title>__vfs_read (11 samples, 0.13%)</title><rect x="202.1" y="659.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="205.1" y="670.0"></text>
</g>
<g>
<title>new_sync_read (11 samples, 0.13%)</title><rect x="202.1" y="643.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="205.1" y="654.0"></text>
</g>
<g>
<title>ext4_file_read_iter (11 samples, 0.13%)</title><rect x="202.1" y="627.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="205.1" y="638.0"></text>
</g>
<g>
<title>generic_file_read_iter (11 samples, 0.13%)</title><rect x="202.1" y="611.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="205.1" y="622.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="202.4" y="595.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="205.4" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="202.4" y="579.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="205.4" y="590.0"></text>
</g>
<g>
<title>pagecache_get_page (4 samples, 0.05%)</title><rect x="202.7" y="595.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="205.7" y="606.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.05%)</title><rect x="202.7" y="579.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="205.7" y="590.0"></text>
</g>
<g>
<title>touch_atime (3 samples, 0.04%)</title><rect x="203.3" y="595.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="206.3" y="606.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.02%)</title><rect x="203.4" y="579.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="206.4" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.05%)</title><rect x="204.0" y="835.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="207.0" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.02%)</title><rect x="204.6" y="835.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="207.6" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getLongFrom (22 samples, 0.26%)</title><rect x="204.8" y="883.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="207.8" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.02%)</title><rect x="204.8" y="867.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="207.8" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (20 samples, 0.24%)</title><rect x="205.1" y="867.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="208.1" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (20 samples, 0.24%)</title><rect x="205.1" y="851.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="208.1" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (18 samples, 0.22%)</title><rect x="205.1" y="835.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="208.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (17 samples, 0.20%)</title><rect x="205.3" y="819.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (17 samples, 0.20%)</title><rect x="205.3" y="803.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="208.3" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (15 samples, 0.18%)</title><rect x="205.6" y="787.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="208.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.16%)</title><rect x="205.7" y="771.0" width="1.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="208.7" y="782.0"></text>
</g>
<g>
<title>pread64 (13 samples, 0.16%)</title><rect x="205.7" y="755.0" width="1.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="208.7" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.16%)</title><rect x="205.7" y="739.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="208.7" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.14%)</title><rect x="205.8" y="723.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="208.8" y="734.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (10 samples, 0.12%)</title><rect x="206.1" y="707.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="209.1" y="718.0"></text>
</g>
<g>
<title>ksys_pread64 (10 samples, 0.12%)</title><rect x="206.1" y="691.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="209.1" y="702.0"></text>
</g>
<g>
<title>vfs_read (9 samples, 0.11%)</title><rect x="206.3" y="675.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="209.3" y="686.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.06%)</title><rect x="206.4" y="659.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="209.4" y="670.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.06%)</title><rect x="206.4" y="643.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="209.4" y="654.0"></text>
</g>
<g>
<title>ext4_file_read_iter (5 samples, 0.06%)</title><rect x="206.4" y="627.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="209.4" y="638.0"></text>
</g>
<g>
<title>generic_file_read_iter (5 samples, 0.06%)</title><rect x="206.4" y="611.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="209.4" y="622.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="206.8" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="209.8" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="206.8" y="579.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="209.8" y="590.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="207.1" y="659.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="210.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.02%)</title><rect x="207.7" y="835.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="210.7" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (13 samples, 0.16%)</title><rect x="208.0" y="883.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="211.0" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.02%)</title><rect x="208.0" y="867.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.0" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="208.0" y="851.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="211.0" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="208.0" y="835.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="211.0" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="208.0" y="819.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="211.0" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.02%)</title><rect x="208.0" y="803.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="211.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.02%)</title><rect x="208.0" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (11 samples, 0.13%)</title><rect x="208.3" y="867.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="211.3" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (11 samples, 0.13%)</title><rect x="208.3" y="851.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="211.3" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.12%)</title><rect x="208.4" y="835.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="211.4" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="208.4" y="819.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="211.4" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.02%)</title><rect x="208.4" y="803.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="211.4" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.02%)</title><rect x="208.4" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="211.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (8 samples, 0.10%)</title><rect x="208.7" y="819.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="211.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (8 samples, 0.10%)</title><rect x="208.7" y="803.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="211.7" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (8 samples, 0.10%)</title><rect x="208.7" y="787.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.08%)</title><rect x="208.8" y="771.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="211.8" y="782.0"></text>
</g>
<g>
<title>pread64 (7 samples, 0.08%)</title><rect x="208.8" y="755.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="211.8" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.08%)</title><rect x="208.8" y="739.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="211.8" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.08%)</title><rect x="208.8" y="723.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="211.8" y="734.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (6 samples, 0.07%)</title><rect x="209.0" y="707.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="212.0" y="718.0"></text>
</g>
<g>
<title>ksys_pread64 (6 samples, 0.07%)</title><rect x="209.0" y="691.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="212.0" y="702.0"></text>
</g>
<g>
<title>vfs_read (6 samples, 0.07%)</title><rect x="209.0" y="675.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="212.0" y="686.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.06%)</title><rect x="209.0" y="659.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="212.0" y="670.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.05%)</title><rect x="209.1" y="643.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="212.1" y="654.0"></text>
</g>
<g>
<title>ext4_file_read_iter (4 samples, 0.05%)</title><rect x="209.1" y="627.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="212.1" y="638.0"></text>
</g>
<g>
<title>generic_file_read_iter (4 samples, 0.05%)</title><rect x="209.1" y="611.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="212.1" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$622/570340124.compare (3 samples, 0.04%)</title><rect x="209.8" y="947.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="212.8" y="958.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3 samples, 0.04%)</title><rect x="209.8" y="931.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="212.8" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.04%)</title><rect x="209.8" y="915.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="212.8" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="210.0" y="899.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="213.0" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.02%)</title><rect x="210.0" y="883.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="213.0" y="894.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.02%)</title><rect x="210.0" y="867.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="213.0" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2 samples, 0.02%)</title><rect x="210.2" y="1043.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="213.2" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.iterator (53 samples, 0.64%)</title><rect x="210.5" y="1091.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="213.5" y="1102.0"></text>
</g>
<g>
<title>java/util/Collection.stream (50 samples, 0.60%)</title><rect x="210.5" y="1075.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="213.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (48 samples, 0.58%)</title><rect x="210.5" y="1059.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="213.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (48 samples, 0.58%)</title><rect x="210.5" y="1043.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="213.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (42 samples, 0.51%)</title><rect x="211.4" y="1027.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="214.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (2 samples, 0.02%)</title><rect x="211.4" y="1011.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="214.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (2 samples, 0.02%)</title><rect x="211.4" y="995.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="214.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.02%)</title><rect x="211.4" y="979.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="214.4" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="211.4" y="963.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="214.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (40 samples, 0.48%)</title><rect x="211.7" y="1011.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (40 samples, 0.48%)</title><rect x="211.7" y="995.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="214.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (38 samples, 0.46%)</title><rect x="211.9" y="979.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (37 samples, 0.44%)</title><rect x="212.1" y="963.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="215.1" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.16%)</title><rect x="215.5" y="947.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="218.5" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.14%)</title><rect x="215.6" y="931.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="218.6" y="942.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.11%)</title><rect x="215.6" y="915.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="218.6" y="926.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.04%)</title><rect x="216.5" y="899.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="219.5" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.04%)</title><rect x="216.9" y="915.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="219.9" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.04%)</title><rect x="216.9" y="899.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="219.9" y="910.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.02%)</title><rect x="217.3" y="1059.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.3" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (2 samples, 0.02%)</title><rect x="217.3" y="1043.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="220.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.04%)</title><rect x="217.6" y="1075.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="220.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.04%)</title><rect x="217.6" y="1059.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="220.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.04%)</title><rect x="217.6" y="1043.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="220.6" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.binarySearch (2 samples, 0.02%)</title><rect x="218.0" y="1091.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="221.0" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.iterator (3,398 samples, 40.87%)</title><rect x="218.3" y="1091.0" width="482.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="221.3" y="1102.0">ru/mail/polis/dao/alexander/marashov/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.&lt;init&gt; (3,398 samples, 40.87%)</title><rect x="218.3" y="1075.0" width="482.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="221.3" y="1086.0">ru/mail/polis/dao/alexander/marashov/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.binarySearch (3,391 samples, 40.78%)</title><rect x="218.9" y="1059.0" width="481.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="221.9" y="1070.0">ru/mail/polis/dao/alexander/marashov/SSTable.binarySearch</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (35 samples, 0.42%)</title><rect x="220.2" y="1043.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="223.2" y="1054.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (15 samples, 0.18%)</title><rect x="220.6" y="1027.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="223.6" y="1038.0"></text>
</g>
<g>
<title>vectorizedMismatch (8 samples, 0.10%)</title><rect x="221.6" y="1011.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="224.6" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (17 samples, 0.20%)</title><rect x="222.7" y="1027.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="225.7" y="1038.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (17 samples, 0.20%)</title><rect x="222.7" y="1011.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.7" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (3,344 samples, 40.22%)</title><rect x="225.1" y="1043.0" width="474.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="228.1" y="1054.0">ru/mail/polis/dao/alexander/marashov/SSTable.key</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (1,067 samples, 12.83%)</title><rect x="225.1" y="1027.0" width="151.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="228.1" y="1038.0">ru/mail/polis/dao/a..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,064 samples, 12.80%)</title><rect x="225.6" y="1011.0" width="151.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="228.6" y="1022.0">sun/nio/ch/FileChan..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,064 samples, 12.80%)</title><rect x="225.6" y="995.0" width="151.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="228.6" y="1006.0">sun/nio/ch/FileChan..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (18 samples, 0.22%)</title><rect x="228.3" y="979.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.3" y="990.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (18 samples, 0.22%)</title><rect x="228.3" y="963.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="231.3" y="974.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (9 samples, 0.11%)</title><rect x="229.5" y="947.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="232.5" y="958.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (9 samples, 0.11%)</title><rect x="229.5" y="931.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="232.5" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (9 samples, 0.11%)</title><rect x="229.5" y="915.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="232.5" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (9 samples, 0.11%)</title><rect x="230.8" y="979.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="233.8" y="990.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (9 samples, 0.11%)</title><rect x="230.8" y="963.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="233.8" y="974.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (9 samples, 0.11%)</title><rect x="230.8" y="947.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="233.8" y="958.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (8 samples, 0.10%)</title><rect x="231.0" y="931.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="234.0" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (8 samples, 0.10%)</title><rect x="231.0" y="915.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="234.0" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (795 samples, 9.56%)</title><rect x="232.1" y="979.0" width="112.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="235.1" y="990.0">sun/nio/ch/IOU..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (68 samples, 0.82%)</title><rect x="232.1" y="963.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="235.1" y="974.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (68 samples, 0.82%)</title><rect x="232.1" y="947.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="235.1" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (68 samples, 0.82%)</title><rect x="232.1" y="931.0" width="9.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.1" y="942.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.05%)</title><rect x="241.0" y="915.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="244.0" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (727 samples, 8.74%)</title><rect x="241.7" y="963.0" width="103.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="244.7" y="974.0">sun/nio/ch/I..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (722 samples, 8.68%)</title><rect x="241.7" y="947.0" width="102.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="244.7" y="958.0">sun/nio/ch/F..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (661 samples, 7.95%)</title><rect x="250.4" y="931.0" width="93.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="253.4" y="942.0">sun/nio/ch/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (6 samples, 0.07%)</title><rect x="255.5" y="915.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="258.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (613 samples, 7.37%)</title><rect x="256.4" y="915.0" width="87.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="259.4" y="926.0">[unknown]</text>
</g>
<g>
<title>__libc_disable_asynccancel (8 samples, 0.10%)</title><rect x="256.4" y="899.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="259.4" y="910.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.04%)</title><rect x="257.5" y="899.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="260.5" y="910.0"></text>
</g>
<g>
<title>pread64 (602 samples, 7.24%)</title><rect x="257.9" y="899.0" width="85.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="260.9" y="910.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (548 samples, 6.59%)</title><rect x="265.6" y="883.0" width="77.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="268.6" y="894.0">entry_SYS..</text>
</g>
<g>
<title>__x64_sys_pread64 (7 samples, 0.08%)</title><rect x="265.6" y="867.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="268.6" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (540 samples, 6.49%)</title><rect x="266.7" y="867.0" width="76.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="269.7" y="878.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_pread64 (490 samples, 5.89%)</title><rect x="273.8" y="851.0" width="69.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="276.8" y="862.0">__x64_s..</text>
</g>
<g>
<title>ksys_pread64 (488 samples, 5.87%)</title><rect x="274.1" y="835.0" width="69.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="277.1" y="846.0">ksys_pr..</text>
</g>
<g>
<title>__fdget (44 samples, 0.53%)</title><rect x="274.4" y="819.0" width="6.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="277.4" y="830.0"></text>
</g>
<g>
<title>__fget_light (44 samples, 0.53%)</title><rect x="274.4" y="803.0" width="6.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="277.4" y="814.0"></text>
</g>
<g>
<title>__fget (39 samples, 0.47%)</title><rect x="275.1" y="787.0" width="5.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="278.1" y="798.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="280.6" y="819.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="283.6" y="830.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.02%)</title><rect x="281.1" y="819.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="284.1" y="830.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.06%)</title><rect x="281.3" y="819.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="284.3" y="830.0"></text>
</g>
<g>
<title>fput (15 samples, 0.18%)</title><rect x="282.0" y="819.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="285.0" y="830.0"></text>
</g>
<g>
<title>fput_many (15 samples, 0.18%)</title><rect x="282.0" y="803.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="285.0" y="814.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.04%)</title><rect x="284.2" y="819.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="287.2" y="830.0"></text>
</g>
<g>
<title>vfs_read (414 samples, 4.98%)</title><rect x="284.6" y="819.0" width="58.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="287.6" y="830.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.06%)</title><rect x="287.9" y="803.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="290.9" y="814.0"></text>
</g>
<g>
<title>__vfs_read (301 samples, 3.62%)</title><rect x="288.6" y="803.0" width="42.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="291.6" y="814.0">__vf..</text>
</g>
<g>
<title>ext4_file_read_iter (16 samples, 0.19%)</title><rect x="289.0" y="787.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="292.0" y="798.0"></text>
</g>
<g>
<title>new_sync_read (282 samples, 3.39%)</title><rect x="291.3" y="787.0" width="40.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="294.3" y="798.0">new..</text>
</g>
<g>
<title>ext4_file_read_iter (268 samples, 3.22%)</title><rect x="293.3" y="771.0" width="38.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="296.3" y="782.0">ext..</text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="295.7" y="755.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="298.7" y="766.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="296.0" y="755.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="299.0" y="766.0"></text>
</g>
<g>
<title>generic_file_read_iter (247 samples, 2.97%)</title><rect x="296.2" y="755.0" width="35.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="299.2" y="766.0">gen..</text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.02%)</title><rect x="304.2" y="739.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="307.2" y="750.0"></text>
</g>
<g>
<title>copy_page_to_iter (97 samples, 1.17%)</title><rect x="304.5" y="739.0" width="13.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="307.5" y="750.0"></text>
</g>
<g>
<title>_cond_resched (6 samples, 0.07%)</title><rect x="307.7" y="723.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="310.7" y="734.0"></text>
</g>
<g>
<title>rcu_all_qs (5 samples, 0.06%)</title><rect x="307.9" y="707.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="310.9" y="718.0"></text>
</g>
<g>
<title>copy_user_generic_string (65 samples, 0.78%)</title><rect x="308.6" y="723.0" width="9.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="311.6" y="734.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.02%)</title><rect x="317.8" y="723.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="320.8" y="734.0"></text>
</g>
<g>
<title>copyout (3 samples, 0.04%)</title><rect x="318.2" y="739.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="321.2" y="750.0"></text>
</g>
<g>
<title>pagecache_get_page (54 samples, 0.65%)</title><rect x="318.8" y="739.0" width="7.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="321.8" y="750.0"></text>
</g>
<g>
<title>PageHuge (3 samples, 0.04%)</title><rect x="320.1" y="723.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="323.1" y="734.0"></text>
</g>
<g>
<title>find_get_entry (42 samples, 0.51%)</title><rect x="320.5" y="723.0" width="6.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="323.5" y="734.0"></text>
</g>
<g>
<title>xas_load (19 samples, 0.23%)</title><rect x="323.6" y="707.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="326.6" y="718.0"></text>
</g>
<g>
<title>xas_start (10 samples, 0.12%)</title><rect x="324.9" y="691.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="327.9" y="702.0"></text>
</g>
<g>
<title>touch_atime (33 samples, 0.40%)</title><rect x="326.6" y="739.0" width="4.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="329.6" y="750.0"></text>
</g>
<g>
<title>atime_needs_update (18 samples, 0.22%)</title><rect x="328.6" y="723.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="331.6" y="734.0"></text>
</g>
<g>
<title>current_time (8 samples, 0.10%)</title><rect x="329.3" y="707.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="332.3" y="718.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (5 samples, 0.06%)</title><rect x="329.3" y="691.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="332.3" y="702.0"></text>
</g>
<g>
<title>timestamp_truncate (3 samples, 0.04%)</title><rect x="330.0" y="691.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="333.0" y="702.0"></text>
</g>
<g>
<title>timestamp_truncate (4 samples, 0.05%)</title><rect x="330.6" y="707.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="333.6" y="718.0"></text>
</g>
<g>
<title>fsnotify (20 samples, 0.24%)</title><rect x="331.3" y="803.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="334.3" y="814.0"></text>
</g>
<g>
<title>rw_verify_area (64 samples, 0.77%)</title><rect x="334.3" y="803.0" width="9.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="337.3" y="814.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.04%)</title><rect x="334.6" y="787.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="337.6" y="798.0"></text>
</g>
<g>
<title>apparmor_file_permission (11 samples, 0.13%)</title><rect x="335.0" y="787.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="338.0" y="798.0"></text>
</g>
<g>
<title>security_file_permission (48 samples, 0.58%)</title><rect x="336.5" y="787.0" width="6.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="339.5" y="798.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.04%)</title><rect x="338.0" y="771.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="341.0" y="782.0"></text>
</g>
<g>
<title>apparmor_file_permission (16 samples, 0.19%)</title><rect x="338.4" y="771.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="341.4" y="782.0"></text>
</g>
<g>
<title>common_file_perm (16 samples, 0.19%)</title><rect x="338.4" y="755.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="341.4" y="766.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.05%)</title><rect x="340.7" y="771.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="343.7" y="782.0"></text>
</g>
<g>
<title>fsnotify (15 samples, 0.18%)</title><rect x="341.2" y="771.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="344.2" y="782.0"></text>
</g>
<g>
<title>fdval (6 samples, 0.07%)</title><rect x="343.4" y="915.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="346.4" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (5 samples, 0.06%)</title><rect x="344.2" y="947.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="347.2" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.06%)</title><rect x="344.2" y="931.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.2" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (155 samples, 1.86%)</title><rect x="344.9" y="979.0" width="22.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="347.9" y="990.0">s..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (27 samples, 0.32%)</title><rect x="360.9" y="963.0" width="3.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="363.9" y="974.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (26 samples, 0.31%)</title><rect x="361.1" y="947.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="364.1" y="958.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (3 samples, 0.04%)</title><rect x="361.4" y="931.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="364.4" y="942.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (2 samples, 0.02%)</title><rect x="361.8" y="931.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="364.8" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (19 samples, 0.23%)</title><rect x="362.1" y="931.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="365.1" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (16 samples, 0.19%)</title><rect x="362.4" y="915.0" width="2.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="365.4" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (14 samples, 0.17%)</title><rect x="364.8" y="963.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.8" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (68 samples, 0.82%)</title><rect x="366.9" y="979.0" width="9.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="369.9" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (18 samples, 0.22%)</title><rect x="373.9" y="963.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="376.9" y="974.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (17 samples, 0.20%)</title><rect x="374.0" y="947.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="377.0" y="958.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (2 samples, 0.02%)</title><rect x="374.3" y="931.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="377.3" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (12 samples, 0.14%)</title><rect x="374.7" y="931.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="377.7" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (7 samples, 0.08%)</title><rect x="375.4" y="915.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="378.4" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (1,066 samples, 12.82%)</title><rect x="376.6" y="1027.0" width="151.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="379.6" y="1038.0">ru/mail/polis/dao/a..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.05%)</title><rect x="377.7" y="1011.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="380.7" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="377.7" y="995.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="380.7" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.02%)</title><rect x="377.7" y="979.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="380.7" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.02%)</title><rect x="377.7" y="963.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="380.7" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="377.7" y="947.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="380.7" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="378.0" y="995.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="381.0" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.02%)</title><rect x="378.0" y="979.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="381.0" y="990.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.02%)</title><rect x="378.0" y="963.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="381.0" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="378.0" y="947.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="381.0" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="378.0" y="931.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="381.0" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,053 samples, 12.66%)</title><rect x="378.3" y="1011.0" width="149.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="381.3" y="1022.0">sun/nio/ch/FileChan..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,052 samples, 12.65%)</title><rect x="378.4" y="995.0" width="149.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="381.4" y="1006.0">sun/nio/ch/FileChan..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (16 samples, 0.19%)</title><rect x="381.1" y="979.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.1" y="990.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (16 samples, 0.19%)</title><rect x="381.1" y="963.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="384.1" y="974.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (6 samples, 0.07%)</title><rect x="382.5" y="947.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="385.5" y="958.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (6 samples, 0.07%)</title><rect x="382.5" y="931.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="385.5" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (6 samples, 0.07%)</title><rect x="382.5" y="915.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="385.5" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (27 samples, 0.32%)</title><rect x="383.4" y="979.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="386.4" y="990.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (27 samples, 0.32%)</title><rect x="383.4" y="963.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.4" y="974.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (27 samples, 0.32%)</title><rect x="383.4" y="947.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="386.4" y="958.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (21 samples, 0.25%)</title><rect x="384.2" y="931.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="387.2" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (21 samples, 0.25%)</title><rect x="384.2" y="915.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="387.2" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (777 samples, 9.34%)</title><rect x="387.2" y="979.0" width="110.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.2" y="990.0">sun/nio/ch/IO..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (62 samples, 0.75%)</title><rect x="387.2" y="963.0" width="8.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="390.2" y="974.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (62 samples, 0.75%)</title><rect x="387.2" y="947.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="390.2" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (62 samples, 0.75%)</title><rect x="387.2" y="931.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="390.2" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (712 samples, 8.56%)</title><rect x="396.0" y="963.0" width="101.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.0" y="974.0">sun/nio/ch/I..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (710 samples, 8.54%)</title><rect x="396.0" y="947.0" width="100.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="399.0" y="958.0">sun/nio/ch/F..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (660 samples, 7.94%)</title><rect x="403.1" y="931.0" width="93.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="406.1" y="942.0">sun/nio/ch/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.02%)</title><rect x="407.2" y="915.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="410.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (623 samples, 7.49%)</title><rect x="407.5" y="915.0" width="88.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="410.5" y="926.0">[unknown]</text>
</g>
<g>
<title>__libc_disable_asynccancel (8 samples, 0.10%)</title><rect x="407.5" y="899.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="410.5" y="910.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.04%)</title><rect x="408.6" y="899.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="411.6" y="910.0"></text>
</g>
<g>
<title>pread64 (612 samples, 7.36%)</title><rect x="409.1" y="899.0" width="86.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="412.1" y="910.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (563 samples, 6.77%)</title><rect x="416.0" y="883.0" width="79.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="419.0" y="894.0">entry_SYS..</text>
</g>
<g>
<title>__x64_sys_pread64 (10 samples, 0.12%)</title><rect x="416.0" y="867.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="419.0" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (553 samples, 6.65%)</title><rect x="417.4" y="867.0" width="78.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="420.4" y="878.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_pread64 (489 samples, 5.88%)</title><rect x="425.8" y="851.0" width="69.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="428.8" y="862.0">__x64_s..</text>
</g>
<g>
<title>fput (3 samples, 0.04%)</title><rect x="426.1" y="835.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="429.1" y="846.0"></text>
</g>
<g>
<title>ksys_pread64 (484 samples, 5.82%)</title><rect x="426.5" y="835.0" width="68.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="429.5" y="846.0">ksys_pr..</text>
</g>
<g>
<title>__fdget (51 samples, 0.61%)</title><rect x="427.1" y="819.0" width="7.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="430.1" y="830.0"></text>
</g>
<g>
<title>__fget_light (51 samples, 0.61%)</title><rect x="427.1" y="803.0" width="7.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="430.1" y="814.0"></text>
</g>
<g>
<title>__fget (45 samples, 0.54%)</title><rect x="427.9" y="787.0" width="6.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="430.9" y="798.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="434.3" y="819.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="437.3" y="830.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.04%)</title><rect x="434.7" y="819.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="437.7" y="830.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="435.2" y="819.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="438.2" y="830.0"></text>
</g>
<g>
<title>fput (15 samples, 0.18%)</title><rect x="435.5" y="819.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="438.5" y="830.0"></text>
</g>
<g>
<title>fput_many (15 samples, 0.18%)</title><rect x="435.5" y="803.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="438.5" y="814.0"></text>
</g>
<g>
<title>vfs_read (406 samples, 4.88%)</title><rect x="437.6" y="819.0" width="57.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="440.6" y="830.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.06%)</title><rect x="439.7" y="803.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="442.7" y="814.0"></text>
</g>
<g>
<title>__vfs_read (300 samples, 3.61%)</title><rect x="440.4" y="803.0" width="42.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="443.4" y="814.0">__vf..</text>
</g>
<g>
<title>ext4_file_read_iter (12 samples, 0.14%)</title><rect x="440.4" y="787.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="443.4" y="798.0"></text>
</g>
<g>
<title>new_sync_read (287 samples, 3.45%)</title><rect x="442.3" y="787.0" width="40.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="445.3" y="798.0">new..</text>
</g>
<g>
<title>ext4_file_read_iter (263 samples, 3.16%)</title><rect x="445.0" y="771.0" width="37.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="448.0" y="782.0">ext..</text>
</g>
<g>
<title>copy_page_to_iter (6 samples, 0.07%)</title><rect x="448.4" y="755.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="451.4" y="766.0"></text>
</g>
<g>
<title>generic_file_read_iter (233 samples, 2.80%)</title><rect x="449.2" y="755.0" width="33.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="452.2" y="766.0">ge..</text>
</g>
<g>
<title>atime_needs_update (4 samples, 0.05%)</title><rect x="455.5" y="739.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="458.5" y="750.0"></text>
</g>
<g>
<title>copy_page_to_iter (70 samples, 0.84%)</title><rect x="456.0" y="739.0" width="10.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="459.0" y="750.0"></text>
</g>
<g>
<title>copy_user_generic_string (55 samples, 0.66%)</title><rect x="458.0" y="723.0" width="7.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="461.0" y="734.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.02%)</title><rect x="466.0" y="739.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="469.0" y="750.0"></text>
</g>
<g>
<title>mark_page_accessed (3 samples, 0.04%)</title><rect x="466.2" y="739.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="469.2" y="750.0"></text>
</g>
<g>
<title>pagecache_get_page (77 samples, 0.93%)</title><rect x="466.7" y="739.0" width="10.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="469.7" y="750.0"></text>
</g>
<g>
<title>find_get_entry (73 samples, 0.88%)</title><rect x="467.2" y="723.0" width="10.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="470.2" y="734.0"></text>
</g>
<g>
<title>xas_load (22 samples, 0.26%)</title><rect x="474.2" y="707.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="477.2" y="718.0"></text>
</g>
<g>
<title>xas_start (5 samples, 0.06%)</title><rect x="476.6" y="691.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="479.6" y="702.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.02%)</title><rect x="477.3" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="480.3" y="718.0"></text>
</g>
<g>
<title>touch_atime (32 samples, 0.38%)</title><rect x="477.7" y="739.0" width="4.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="480.7" y="750.0"></text>
</g>
<g>
<title>atime_needs_update (14 samples, 0.17%)</title><rect x="480.2" y="723.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="483.2" y="734.0"></text>
</g>
<g>
<title>current_time (10 samples, 0.12%)</title><rect x="480.6" y="707.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="483.6" y="718.0"></text>
</g>
<g>
<title>timestamp_truncate (4 samples, 0.05%)</title><rect x="481.4" y="691.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="484.4" y="702.0"></text>
</g>
<g>
<title>iov_iter_init (4 samples, 0.05%)</title><rect x="482.4" y="771.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="485.4" y="782.0"></text>
</g>
<g>
<title>fsnotify (18 samples, 0.22%)</title><rect x="483.0" y="803.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="486.0" y="814.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="485.5" y="803.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="488.5" y="814.0"></text>
</g>
<g>
<title>rw_verify_area (66 samples, 0.79%)</title><rect x="485.8" y="803.0" width="9.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="488.8" y="814.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.04%)</title><rect x="486.1" y="787.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="489.1" y="798.0"></text>
</g>
<g>
<title>apparmor_file_permission (14 samples, 0.17%)</title><rect x="486.5" y="787.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="489.5" y="798.0"></text>
</g>
<g>
<title>security_file_permission (47 samples, 0.57%)</title><rect x="488.5" y="787.0" width="6.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="491.5" y="798.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.04%)</title><rect x="489.4" y="771.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="492.4" y="782.0"></text>
</g>
<g>
<title>apparmor_file_permission (14 samples, 0.17%)</title><rect x="489.8" y="771.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="492.8" y="782.0"></text>
</g>
<g>
<title>common_file_perm (14 samples, 0.17%)</title><rect x="489.8" y="755.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="492.8" y="766.0"></text>
</g>
<g>
<title>aa_file_perm (4 samples, 0.05%)</title><rect x="491.2" y="739.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="494.2" y="750.0"></text>
</g>
<g>
<title>common_file_perm (7 samples, 0.08%)</title><rect x="491.8" y="771.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="494.8" y="782.0"></text>
</g>
<g>
<title>fsnotify (17 samples, 0.20%)</title><rect x="492.8" y="771.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="495.8" y="782.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.06%)</title><rect x="495.2" y="851.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="498.2" y="862.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.04%)</title><rect x="496.0" y="915.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="499.0" y="926.0"></text>
</g>
<g>
<title>pread64 (2 samples, 0.02%)</title><rect x="496.5" y="915.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="499.5" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (2 samples, 0.02%)</title><rect x="496.8" y="947.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="499.8" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.02%)</title><rect x="496.8" y="931.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.8" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.04%)</title><rect x="497.0" y="963.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="500.0" y="974.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.04%)</title><rect x="497.0" y="947.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="500.0" y="958.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.04%)</title><rect x="497.0" y="931.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="500.0" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.04%)</title><rect x="497.0" y="915.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="500.0" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (157 samples, 1.89%)</title><rect x="497.5" y="979.0" width="22.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="500.5" y="990.0">s..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (15 samples, 0.18%)</title><rect x="514.5" y="963.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="517.5" y="974.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (14 samples, 0.17%)</title><rect x="514.6" y="947.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="517.6" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (12 samples, 0.14%)</title><rect x="514.9" y="931.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="517.9" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (6 samples, 0.07%)</title><rect x="515.5" y="915.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="518.5" y="926.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.02%)</title><rect x="516.3" y="915.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="519.3" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (21 samples, 0.25%)</title><rect x="516.6" y="963.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="519.6" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (56 samples, 0.67%)</title><rect x="519.7" y="979.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="522.7" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.12%)</title><rect x="526.3" y="963.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="529.3" y="974.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (10 samples, 0.12%)</title><rect x="526.3" y="947.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="529.3" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (10 samples, 0.12%)</title><rect x="526.3" y="931.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="529.3" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (5 samples, 0.06%)</title><rect x="526.6" y="915.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="529.6" y="926.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.04%)</title><rect x="527.3" y="915.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="530.3" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (1,211 samples, 14.56%)</title><rect x="527.8" y="1027.0" width="171.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.8" y="1038.0">ru/mail/polis/dao/alex..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (15 samples, 0.18%)</title><rect x="530.1" y="1011.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="533.1" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="531.4" y="995.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="534.4" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.02%)</title><rect x="531.4" y="979.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="534.4" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.02%)</title><rect x="531.4" y="963.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="534.4" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="531.4" y="947.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="534.4" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.04%)</title><rect x="531.8" y="995.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="534.8" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,180 samples, 14.19%)</title><rect x="532.2" y="1011.0" width="167.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="535.2" y="1022.0">sun/nio/ch/FileChanne..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,180 samples, 14.19%)</title><rect x="532.2" y="995.0" width="167.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="535.2" y="1006.0">sun/nio/ch/FileChanne..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (11 samples, 0.13%)</title><rect x="536.4" y="979.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="539.4" y="990.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (11 samples, 0.13%)</title><rect x="536.4" y="963.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="539.4" y="974.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (7 samples, 0.08%)</title><rect x="536.9" y="947.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="539.9" y="958.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (7 samples, 0.08%)</title><rect x="536.9" y="931.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="539.9" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (7 samples, 0.08%)</title><rect x="536.9" y="915.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="539.9" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (17 samples, 0.20%)</title><rect x="537.9" y="979.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="540.9" y="990.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (17 samples, 0.20%)</title><rect x="537.9" y="963.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="540.9" y="974.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (17 samples, 0.20%)</title><rect x="537.9" y="947.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="540.9" y="958.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (15 samples, 0.18%)</title><rect x="538.2" y="931.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="541.2" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (15 samples, 0.18%)</title><rect x="538.2" y="915.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="541.2" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (924 samples, 11.11%)</title><rect x="540.3" y="979.0" width="131.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.3" y="990.0">sun/nio/ch/IOUti..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (62 samples, 0.75%)</title><rect x="540.3" y="963.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.3" y="974.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (62 samples, 0.75%)</title><rect x="540.3" y="947.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.3" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (62 samples, 0.75%)</title><rect x="540.3" y="931.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="543.3" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (855 samples, 10.28%)</title><rect x="549.1" y="963.0" width="121.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="552.1" y="974.0">sun/nio/ch/IOUt..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (852 samples, 10.25%)</title><rect x="549.1" y="947.0" width="120.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.1" y="958.0">sun/nio/ch/File..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (789 samples, 9.49%)</title><rect x="558.1" y="931.0" width="111.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="561.1" y="942.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (10 samples, 0.12%)</title><rect x="563.6" y="915.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="566.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (736 samples, 8.85%)</title><rect x="565.0" y="915.0" width="104.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="568.0" y="926.0">[unknown]</text>
</g>
<g>
<title>__libc_disable_asynccancel (10 samples, 0.12%)</title><rect x="565.0" y="899.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="568.0" y="910.0"></text>
</g>
<g>
<title>pread64 (726 samples, 8.73%)</title><rect x="566.4" y="899.0" width="103.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="569.4" y="910.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (674 samples, 8.11%)</title><rect x="573.8" y="883.0" width="95.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="576.8" y="894.0">entry_SYSCA..</text>
</g>
<g>
<title>__x64_sys_pread64 (16 samples, 0.19%)</title><rect x="573.8" y="867.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="576.8" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (658 samples, 7.91%)</title><rect x="576.1" y="867.0" width="93.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="579.1" y="878.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (591 samples, 7.11%)</title><rect x="585.3" y="851.0" width="83.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="588.3" y="862.0">__x64_sys..</text>
</g>
<g>
<title>ksys_pread64 (590 samples, 7.10%)</title><rect x="585.5" y="835.0" width="83.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="588.5" y="846.0">ksys_prea..</text>
</g>
<g>
<title>__fdget (69 samples, 0.83%)</title><rect x="586.0" y="819.0" width="9.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="589.0" y="830.0"></text>
</g>
<g>
<title>__fget_light (68 samples, 0.82%)</title><rect x="586.2" y="803.0" width="9.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="589.2" y="814.0"></text>
</g>
<g>
<title>__fget (60 samples, 0.72%)</title><rect x="587.3" y="787.0" width="8.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="590.3" y="798.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.08%)</title><rect x="595.8" y="819.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="598.8" y="830.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.02%)</title><rect x="596.8" y="819.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="599.8" y="830.0"></text>
</g>
<g>
<title>fput (21 samples, 0.25%)</title><rect x="597.1" y="819.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="600.1" y="830.0"></text>
</g>
<g>
<title>fput_many (21 samples, 0.25%)</title><rect x="597.1" y="803.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="600.1" y="814.0"></text>
</g>
<g>
<title>vfs_read (486 samples, 5.84%)</title><rect x="600.2" y="819.0" width="69.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="603.2" y="830.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (7 samples, 0.08%)</title><rect x="603.3" y="803.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="606.3" y="814.0"></text>
</g>
<g>
<title>__vfs_read (336 samples, 4.04%)</title><rect x="604.3" y="803.0" width="47.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="607.3" y="814.0">__vf..</text>
</g>
<g>
<title>ext4_file_read_iter (14 samples, 0.17%)</title><rect x="604.6" y="787.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="607.6" y="798.0"></text>
</g>
<g>
<title>new_sync_read (319 samples, 3.84%)</title><rect x="606.7" y="787.0" width="45.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="609.7" y="798.0">new_..</text>
</g>
<g>
<title>ext4_file_read_iter (306 samples, 3.68%)</title><rect x="608.2" y="771.0" width="43.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="611.2" y="782.0">ext4..</text>
</g>
<g>
<title>_cond_resched (3 samples, 0.04%)</title><rect x="610.7" y="755.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="613.7" y="766.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="611.1" y="755.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="614.1" y="766.0"></text>
</g>
<g>
<title>generic_file_read_iter (280 samples, 3.37%)</title><rect x="611.4" y="755.0" width="39.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="614.4" y="766.0">gen..</text>
</g>
<g>
<title>atime_needs_update (10 samples, 0.12%)</title><rect x="619.1" y="739.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="622.1" y="750.0"></text>
</g>
<g>
<title>copy_page_to_iter (85 samples, 1.02%)</title><rect x="620.5" y="739.0" width="12.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="623.5" y="750.0"></text>
</g>
<g>
<title>_cond_resched (4 samples, 0.05%)</title><rect x="623.5" y="723.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="626.5" y="734.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.04%)</title><rect x="623.6" y="707.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="626.6" y="718.0"></text>
</g>
<g>
<title>copy_user_generic_string (59 samples, 0.71%)</title><rect x="624.1" y="723.0" width="8.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="627.1" y="734.0"></text>
</g>
<g>
<title>mark_page_accessed (5 samples, 0.06%)</title><rect x="632.7" y="739.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="635.7" y="750.0"></text>
</g>
<g>
<title>pagecache_get_page (85 samples, 1.02%)</title><rect x="633.4" y="739.0" width="12.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="636.4" y="750.0"></text>
</g>
<g>
<title>find_get_entry (76 samples, 0.91%)</title><rect x="634.3" y="723.0" width="10.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="637.3" y="734.0"></text>
</g>
<g>
<title>xas_load (28 samples, 0.34%)</title><rect x="640.1" y="707.0" width="4.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="643.1" y="718.0"></text>
</g>
<g>
<title>xas_start (8 samples, 0.10%)</title><rect x="642.9" y="691.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="645.9" y="702.0"></text>
</g>
<g>
<title>xas_start (7 samples, 0.08%)</title><rect x="644.1" y="707.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="647.1" y="718.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.04%)</title><rect x="645.1" y="723.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="648.1" y="734.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.04%)</title><rect x="645.5" y="739.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="648.5" y="750.0"></text>
</g>
<g>
<title>touch_atime (37 samples, 0.44%)</title><rect x="645.9" y="739.0" width="5.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="648.9" y="750.0"></text>
</g>
<g>
<title>atime_needs_update (16 samples, 0.19%)</title><rect x="648.7" y="723.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="651.7" y="734.0"></text>
</g>
<g>
<title>current_time (7 samples, 0.08%)</title><rect x="649.5" y="707.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="652.5" y="718.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.02%)</title><rect x="649.7" y="691.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="652.7" y="702.0"></text>
</g>
<g>
<title>timestamp_truncate (3 samples, 0.04%)</title><rect x="650.0" y="691.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="653.0" y="702.0"></text>
</g>
<g>
<title>timestamp_truncate (3 samples, 0.04%)</title><rect x="650.6" y="707.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="653.6" y="718.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.02%)</title><rect x="651.2" y="755.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="654.2" y="766.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.02%)</title><rect x="651.7" y="771.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="654.7" y="782.0"></text>
</g>
<g>
<title>fsnotify (17 samples, 0.20%)</title><rect x="652.0" y="803.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="655.0" y="814.0"></text>
</g>
<g>
<title>rw_verify_area (103 samples, 1.24%)</title><rect x="654.6" y="803.0" width="14.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="657.6" y="814.0"></text>
</g>
<g>
<title>apparmor_file_permission (15 samples, 0.18%)</title><rect x="655.3" y="787.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="658.3" y="798.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.04%)</title><rect x="657.4" y="787.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="660.4" y="798.0"></text>
</g>
<g>
<title>security_file_permission (80 samples, 0.96%)</title><rect x="657.8" y="787.0" width="11.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="660.8" y="798.0"></text>
</g>
<g>
<title>__fsnotify_parent (8 samples, 0.10%)</title><rect x="660.4" y="771.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="663.4" y="782.0"></text>
</g>
<g>
<title>apparmor_file_permission (25 samples, 0.30%)</title><rect x="661.5" y="771.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="664.5" y="782.0"></text>
</g>
<g>
<title>common_file_perm (25 samples, 0.30%)</title><rect x="661.5" y="755.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="664.5" y="766.0"></text>
</g>
<g>
<title>aa_file_perm (6 samples, 0.07%)</title><rect x="664.2" y="739.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="667.2" y="750.0"></text>
</g>
<g>
<title>common_file_perm (7 samples, 0.08%)</title><rect x="665.1" y="771.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="668.1" y="782.0"></text>
</g>
<g>
<title>fsnotify (22 samples, 0.26%)</title><rect x="666.1" y="771.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="669.1" y="782.0"></text>
</g>
<g>
<title>ksys_pread64 (2 samples, 0.02%)</title><rect x="669.2" y="851.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="672.2" y="862.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.02%)</title><rect x="669.6" y="915.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="672.6" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (3 samples, 0.04%)</title><rect x="670.0" y="947.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.0" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.04%)</title><rect x="670.0" y="931.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="673.0" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.08%)</title><rect x="670.5" y="963.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="673.5" y="974.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.08%)</title><rect x="670.5" y="947.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="673.5" y="958.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (7 samples, 0.08%)</title><rect x="670.5" y="931.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="673.5" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (7 samples, 0.08%)</title><rect x="670.5" y="915.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="673.5" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (160 samples, 1.92%)</title><rect x="671.6" y="979.0" width="22.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="674.6" y="990.0">s..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (18 samples, 0.22%)</title><rect x="688.6" y="963.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="691.6" y="974.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (17 samples, 0.20%)</title><rect x="688.8" y="947.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="691.8" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (15 samples, 0.18%)</title><rect x="689.0" y="931.0" width="2.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="692.0" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (11 samples, 0.13%)</title><rect x="689.6" y="915.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="692.6" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (21 samples, 0.25%)</title><rect x="691.2" y="963.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="694.2" y="974.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (2 samples, 0.02%)</title><rect x="693.9" y="947.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="696.9" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (38 samples, 0.46%)</title><rect x="694.3" y="979.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="697.3" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (13 samples, 0.16%)</title><rect x="697.8" y="963.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="700.8" y="974.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (11 samples, 0.13%)</title><rect x="698.1" y="947.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="701.1" y="958.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (2 samples, 0.02%)</title><rect x="698.1" y="931.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="701.1" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (8 samples, 0.10%)</title><rect x="698.6" y="931.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="701.6" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (4 samples, 0.05%)</title><rect x="698.8" y="915.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="701.8" y="926.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.02%)</title><rect x="699.4" y="915.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="702.4" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.04%)</title><rect x="699.7" y="1043.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.7" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.04%)</title><rect x="700.1" y="1059.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="703.1" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.04%)</title><rect x="700.1" y="1043.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="703.1" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.04%)</title><rect x="700.1" y="1027.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="703.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (493 samples, 5.93%)</title><rect x="700.5" y="1171.0" width="70.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="703.5" y="1182.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (493 samples, 5.93%)</title><rect x="700.5" y="1155.0" width="70.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="703.5" y="1166.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (462 samples, 5.56%)</title><rect x="701.3" y="1139.0" width="65.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.3" y="1150.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (460 samples, 5.53%)</title><rect x="701.5" y="1123.0" width="65.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.5" y="1134.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (450 samples, 5.41%)</title><rect x="702.5" y="1107.0" width="63.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="705.5" y="1118.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.02%)</title><rect x="703.0" y="1091.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="706.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.02%)</title><rect x="703.0" y="1075.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="706.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (445 samples, 5.35%)</title><rect x="703.2" y="1091.0" width="63.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="706.2" y="1102.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.02%)</title><rect x="703.2" y="1075.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="706.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.02%)</title><rect x="703.2" y="1059.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="706.2" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$195/1649027778.accept (433 samples, 5.21%)</title><rect x="703.5" y="1075.0" width="61.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="706.5" y="1086.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$respond$2 (432 samples, 5.20%)</title><rect x="703.7" y="1059.0" width="61.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="706.7" y="1070.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.trySendAnswer (432 samples, 5.20%)</title><rect x="703.7" y="1043.0" width="61.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="706.7" y="1054.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (432 samples, 5.20%)</title><rect x="703.7" y="1027.0" width="61.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="706.7" y="1038.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.05%)</title><rect x="703.7" y="1011.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="706.7" y="1022.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.02%)</title><rect x="704.0" y="995.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="707.0" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (411 samples, 4.94%)</title><rect x="704.2" y="1011.0" width="58.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="707.2" y="1022.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (19 samples, 0.23%)</title><rect x="704.2" y="995.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="707.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="705.2" y="979.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.2" y="990.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.04%)</title><rect x="705.2" y="963.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="708.2" y="974.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.02%)</title><rect x="705.4" y="947.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="708.4" y="958.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="705.4" y="931.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="708.4" y="942.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="705.4" y="915.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="708.4" y="926.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (9 samples, 0.11%)</title><rect x="705.7" y="979.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="708.7" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (9 samples, 0.11%)</title><rect x="705.7" y="963.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.7" y="974.0"></text>
</g>
<g>
<title>java/lang/String.charAt (9 samples, 0.11%)</title><rect x="705.7" y="947.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="708.7" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (392 samples, 4.71%)</title><rect x="706.9" y="995.0" width="55.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.9" y="1006.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (392 samples, 4.71%)</title><rect x="706.9" y="979.0" width="55.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="709.9" y="990.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (385 samples, 4.63%)</title><rect x="707.9" y="963.0" width="54.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.9" y="974.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (385 samples, 4.63%)</title><rect x="707.9" y="947.0" width="54.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="710.9" y="958.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (18 samples, 0.22%)</title><rect x="708.2" y="931.0" width="2.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="711.2" y="942.0"></text>
</g>
<g>
<title>__memmove_ssse3 (3 samples, 0.04%)</title><rect x="709.3" y="915.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="712.3" y="926.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.08%)</title><rect x="709.8" y="915.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="712.8" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.02%)</title><rect x="710.2" y="899.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="713.2" y="910.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.02%)</title><rect x="710.5" y="899.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="713.5" y="910.0"></text>
</g>
<g>
<title>__libc_send (363 samples, 4.37%)</title><rect x="710.8" y="931.0" width="51.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="713.8" y="942.0">__lib..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (354 samples, 4.26%)</title><rect x="712.0" y="915.0" width="50.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="715.0" y="926.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (353 samples, 4.25%)</title><rect x="712.2" y="899.0" width="50.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="715.2" y="910.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_sendto (351 samples, 4.22%)</title><rect x="712.5" y="883.0" width="49.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="715.5" y="894.0">__x64..</text>
</g>
<g>
<title>__sys_sendto (349 samples, 4.20%)</title><rect x="712.6" y="867.0" width="49.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="715.6" y="878.0">__sys..</text>
</g>
<g>
<title>sock_sendmsg (340 samples, 4.09%)</title><rect x="713.5" y="851.0" width="48.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="716.5" y="862.0">sock..</text>
</g>
<g>
<title>inet6_sendmsg (328 samples, 3.94%)</title><rect x="713.7" y="835.0" width="46.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="716.7" y="846.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (327 samples, 3.93%)</title><rect x="713.9" y="819.0" width="46.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="716.9" y="830.0">tcp_..</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.02%)</title><rect x="713.9" y="803.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="716.9" y="814.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.02%)</title><rect x="714.5" y="803.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="717.5" y="814.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (320 samples, 3.85%)</title><rect x="714.7" y="803.0" width="45.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="717.7" y="814.0">tcp_..</text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.04%)</title><rect x="715.9" y="787.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="718.9" y="798.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.04%)</title><rect x="716.3" y="787.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="719.3" y="798.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.04%)</title><rect x="716.3" y="771.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="719.3" y="782.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.02%)</title><rect x="716.7" y="787.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="719.7" y="798.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (23 samples, 0.28%)</title><rect x="717.1" y="787.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="720.1" y="798.0"></text>
</g>
<g>
<title>__alloc_skb (23 samples, 0.28%)</title><rect x="717.1" y="771.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="720.1" y="782.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.02%)</title><rect x="717.6" y="755.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="720.6" y="766.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (8 samples, 0.10%)</title><rect x="717.9" y="755.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="720.9" y="766.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.04%)</title><rect x="717.9" y="739.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="720.9" y="750.0"></text>
</g>
<g>
<title>memset (5 samples, 0.06%)</title><rect x="718.3" y="739.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="721.3" y="750.0"></text>
</g>
<g>
<title>__ksize (5 samples, 0.06%)</title><rect x="719.0" y="755.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="722.0" y="766.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.02%)</title><rect x="719.7" y="755.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="722.7" y="766.0"></text>
</g>
<g>
<title>memset (3 samples, 0.04%)</title><rect x="720.0" y="755.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="723.0" y="766.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.02%)</title><rect x="720.4" y="787.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="723.4" y="798.0"></text>
</g>
<g>
<title>tcp_push (270 samples, 3.25%)</title><rect x="720.7" y="787.0" width="38.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="723.7" y="798.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (269 samples, 3.24%)</title><rect x="720.8" y="771.0" width="38.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="723.8" y="782.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (267 samples, 3.21%)</title><rect x="721.1" y="755.0" width="37.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="724.1" y="766.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (249 samples, 2.99%)</title><rect x="722.1" y="739.0" width="35.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="725.1" y="750.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (235 samples, 2.83%)</title><rect x="723.4" y="723.0" width="33.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="726.4" y="734.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (230 samples, 2.77%)</title><rect x="723.7" y="707.0" width="32.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="726.7" y="718.0">__..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.02%)</title><rect x="724.4" y="691.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="727.4" y="702.0"></text>
</g>
<g>
<title>ip_local_out (221 samples, 2.66%)</title><rect x="724.7" y="691.0" width="31.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="727.7" y="702.0">ip..</text>
</g>
<g>
<title>__ip_local_out (43 samples, 0.52%)</title><rect x="724.7" y="675.0" width="6.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="727.7" y="686.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.02%)</title><rect x="724.8" y="659.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="727.8" y="670.0"></text>
</g>
<g>
<title>nf_hook_slow (40 samples, 0.48%)</title><rect x="725.1" y="659.0" width="5.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="728.1" y="670.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.05%)</title><rect x="725.1" y="643.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="728.1" y="654.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (4 samples, 0.05%)</title><rect x="725.1" y="627.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="728.1" y="638.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (32 samples, 0.38%)</title><rect x="725.7" y="643.0" width="4.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="728.7" y="654.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (31 samples, 0.37%)</title><rect x="725.8" y="627.0" width="4.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="728.8" y="638.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (13 samples, 0.16%)</title><rect x="726.4" y="611.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="729.4" y="622.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (3 samples, 0.04%)</title><rect x="728.5" y="611.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="731.5" y="622.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (6 samples, 0.07%)</title><rect x="729.1" y="611.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="732.1" y="622.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (3 samples, 0.04%)</title><rect x="729.5" y="595.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="732.5" y="606.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (2 samples, 0.02%)</title><rect x="729.9" y="611.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="732.9" y="622.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (3 samples, 0.04%)</title><rect x="730.3" y="643.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="733.3" y="654.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (2 samples, 0.02%)</title><rect x="730.5" y="627.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="733.5" y="638.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (2 samples, 0.02%)</title><rect x="730.5" y="611.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="733.5" y="622.0"></text>
</g>
<g>
<title>ip_output (175 samples, 2.10%)</title><rect x="730.8" y="675.0" width="24.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="733.8" y="686.0">i..</text>
</g>
<g>
<title>ip_finish_output (171 samples, 2.06%)</title><rect x="731.1" y="659.0" width="24.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="734.1" y="670.0">i..</text>
</g>
<g>
<title>__ip_finish_output (170 samples, 2.04%)</title><rect x="731.1" y="643.0" width="24.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="734.1" y="654.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (167 samples, 2.01%)</title><rect x="731.3" y="627.0" width="23.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="734.3" y="638.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (142 samples, 1.71%)</title><rect x="731.9" y="611.0" width="20.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="734.9" y="622.0"></text>
</g>
<g>
<title>do_softirq.part.20 (142 samples, 1.71%)</title><rect x="731.9" y="595.0" width="20.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="734.9" y="606.0"></text>
</g>
<g>
<title>do_softirq_own_stack (142 samples, 1.71%)</title><rect x="731.9" y="579.0" width="20.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="734.9" y="590.0"></text>
</g>
<g>
<title>__softirqentry_text_start (141 samples, 1.70%)</title><rect x="731.9" y="563.0" width="20.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="734.9" y="574.0"></text>
</g>
<g>
<title>net_rx_action (138 samples, 1.66%)</title><rect x="732.2" y="547.0" width="19.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="735.2" y="558.0"></text>
</g>
<g>
<title>process_backlog (138 samples, 1.66%)</title><rect x="732.2" y="531.0" width="19.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="735.2" y="542.0"></text>
</g>
<g>
<title>__netif_receive_skb (137 samples, 1.65%)</title><rect x="732.3" y="515.0" width="19.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="735.3" y="526.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (137 samples, 1.65%)</title><rect x="732.3" y="499.0" width="19.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="735.3" y="510.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.02%)</title><rect x="732.6" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="735.6" y="494.0"></text>
</g>
<g>
<title>ip_rcv (130 samples, 1.56%)</title><rect x="732.9" y="483.0" width="18.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="735.9" y="494.0"></text>
</g>
<g>
<title>ip_rcv_finish (127 samples, 1.53%)</title><rect x="733.2" y="467.0" width="18.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="736.2" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver (125 samples, 1.50%)</title><rect x="733.3" y="451.0" width="17.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="736.3" y="462.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (123 samples, 1.48%)</title><rect x="733.5" y="435.0" width="17.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="736.5" y="446.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (122 samples, 1.47%)</title><rect x="733.5" y="419.0" width="17.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="736.5" y="430.0"></text>
</g>
<g>
<title>tcp_v4_rcv (114 samples, 1.37%)</title><rect x="734.6" y="403.0" width="16.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="737.6" y="414.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.05%)</title><rect x="735.3" y="387.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="738.3" y="398.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.04%)</title><rect x="736.2" y="387.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="739.2" y="398.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.05%)</title><rect x="736.6" y="387.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="739.6" y="398.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.02%)</title><rect x="736.7" y="371.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="739.7" y="382.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (96 samples, 1.15%)</title><rect x="737.2" y="387.0" width="13.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="740.2" y="398.0"></text>
</g>
<g>
<title>tcp_rcv_established (95 samples, 1.14%)</title><rect x="737.3" y="371.0" width="13.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="740.3" y="382.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (9 samples, 0.11%)</title><rect x="737.4" y="355.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="740.4" y="366.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (9 samples, 0.11%)</title><rect x="737.4" y="339.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="740.4" y="350.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.02%)</title><rect x="737.4" y="323.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="740.4" y="334.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.08%)</title><rect x="737.7" y="323.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="740.7" y="334.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.06%)</title><rect x="738.0" y="307.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="741.0" y="318.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.06%)</title><rect x="738.0" y="291.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="741.0" y="302.0"></text>
</g>
<g>
<title>tcp_ack (31 samples, 0.37%)</title><rect x="738.7" y="355.0" width="4.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="741.7" y="366.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (26 samples, 0.31%)</title><rect x="738.9" y="339.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="741.9" y="350.0"></text>
</g>
<g>
<title>__kfree_skb (16 samples, 0.19%)</title><rect x="739.7" y="323.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="742.7" y="334.0"></text>
</g>
<g>
<title>skb_release_all (16 samples, 0.19%)</title><rect x="739.7" y="307.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="742.7" y="318.0"></text>
</g>
<g>
<title>skb_release_data (16 samples, 0.19%)</title><rect x="739.7" y="291.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="742.7" y="302.0"></text>
</g>
<g>
<title>skb_free_head (9 samples, 0.11%)</title><rect x="740.7" y="275.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="743.7" y="286.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.02%)</title><rect x="740.7" y="259.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="743.7" y="270.0"></text>
</g>
<g>
<title>kfree (7 samples, 0.08%)</title><rect x="741.0" y="259.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="744.0" y="270.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (2 samples, 0.02%)</title><rect x="742.3" y="323.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="745.3" y="334.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.02%)</title><rect x="742.7" y="339.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="745.7" y="350.0"></text>
</g>
<g>
<title>tcp_data_ready (50 samples, 0.60%)</title><rect x="743.1" y="355.0" width="7.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="746.1" y="366.0"></text>
</g>
<g>
<title>sock_def_readable (50 samples, 0.60%)</title><rect x="743.1" y="339.0" width="7.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="746.1" y="350.0"></text>
</g>
<g>
<title>__wake_up_sync_key (49 samples, 0.59%)</title><rect x="743.3" y="323.0" width="6.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="746.3" y="334.0"></text>
</g>
<g>
<title>__wake_up_common_lock (49 samples, 0.59%)</title><rect x="743.3" y="307.0" width="6.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="746.3" y="318.0"></text>
</g>
<g>
<title>__lock_text_start (49 samples, 0.59%)</title><rect x="743.3" y="291.0" width="6.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="746.3" y="302.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.02%)</title><rect x="750.4" y="355.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="753.4" y="366.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.02%)</title><rect x="751.3" y="483.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="754.3" y="494.0"></text>
</g>
<g>
<title>dev_queue_xmit (21 samples, 0.25%)</title><rect x="752.1" y="611.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="755.1" y="622.0"></text>
</g>
<g>
<title>__dev_queue_xmit (20 samples, 0.24%)</title><rect x="752.1" y="595.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="755.1" y="606.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 0.12%)</title><rect x="753.1" y="579.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="756.1" y="590.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.07%)</title><rect x="753.3" y="563.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="756.3" y="574.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.02%)</title><rect x="753.6" y="547.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="756.6" y="558.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.02%)</title><rect x="753.6" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="756.6" y="542.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.02%)</title><rect x="754.2" y="563.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="757.2" y="574.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.04%)</title><rect x="754.5" y="579.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="757.5" y="590.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.02%)</title><rect x="754.6" y="563.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="757.6" y="574.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.02%)</title><rect x="755.3" y="659.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="758.3" y="670.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.02%)</title><rect x="755.7" y="675.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="758.7" y="686.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.02%)</title><rect x="756.3" y="707.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="759.3" y="718.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.06%)</title><rect x="756.7" y="723.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="759.7" y="734.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.06%)</title><rect x="756.7" y="707.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="759.7" y="718.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.02%)</title><rect x="757.2" y="691.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="760.2" y="702.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.02%)</title><rect x="757.7" y="739.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="760.7" y="750.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.05%)</title><rect x="758.2" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="761.2" y="750.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.04%)</title><rect x="758.3" y="723.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="761.3" y="734.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.04%)</title><rect x="758.3" y="707.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="761.3" y="718.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.02%)</title><rect x="758.4" y="691.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="761.4" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.02%)</title><rect x="758.4" y="675.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="761.4" y="686.0"></text>
</g>
<g>
<title>tcp_send_mss (7 samples, 0.08%)</title><rect x="759.0" y="787.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="762.0" y="798.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.07%)</title><rect x="759.2" y="771.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="762.2" y="782.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.04%)</title><rect x="759.4" y="755.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="762.4" y="766.0"></text>
</g>
<g>
<title>security_socket_sendmsg (10 samples, 0.12%)</title><rect x="760.3" y="835.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="763.3" y="846.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (10 samples, 0.12%)</title><rect x="760.3" y="819.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="763.3" y="830.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (10 samples, 0.12%)</title><rect x="760.3" y="803.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="763.3" y="814.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.08%)</title><rect x="760.7" y="787.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="763.7" y="798.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (4 samples, 0.05%)</title><rect x="761.1" y="771.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="764.1" y="782.0"></text>
</g>
<g>
<title>aa_profile_af_perm (3 samples, 0.04%)</title><rect x="761.3" y="755.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="764.3" y="766.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.04%)</title><rect x="761.7" y="851.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="764.7" y="862.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.02%)</title><rect x="762.3" y="931.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="765.3" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (17 samples, 0.20%)</title><rect x="762.6" y="1011.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="765.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.07%)</title><rect x="764.1" y="995.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="767.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.07%)</title><rect x="764.1" y="979.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="767.1" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/FutureAnalyzer$$Lambda$187/42186313.accept (10 samples, 0.12%)</title><rect x="765.0" y="1075.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="768.0" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/FutureAnalyzer.lambda$atLeastAsync$0 (9 samples, 0.11%)</title><rect x="765.1" y="1059.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="768.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 0.06%)</title><rect x="765.4" y="1043.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="768.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.06%)</title><rect x="765.4" y="1027.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="768.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (2 samples, 0.02%)</title><rect x="766.1" y="1043.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.1" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$627/320685865.apply (2 samples, 0.02%)</title><rect x="766.4" y="1107.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="769.4" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$627/320685865.apply (19 samples, 0.23%)</title><rect x="767.0" y="1139.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="770.0" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.lambda$get$0 (19 samples, 0.23%)</title><rect x="767.0" y="1123.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="770.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/112466394.linkToTargetMethod (5 samples, 0.06%)</title><rect x="768.4" y="1107.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1740267528.invoke (5 samples, 0.06%)</title><rect x="768.4" y="1091.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="771.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="768.4" y="1075.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="771.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.04%)</title><rect x="768.4" y="1059.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.4" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.04%)</title><rect x="768.4" y="1043.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="771.4" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.04%)</title><rect x="768.4" y="1027.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="771.4" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.04%)</title><rect x="768.4" y="1011.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="771.4" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="768.5" y="995.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="771.5" y="1006.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="769.1" y="1107.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="772.1" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$629/1730022905.apply (6 samples, 0.07%)</title><rect x="769.7" y="1139.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="772.7" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ValuesAnalyzer.analyze (6 samples, 0.07%)</title><rect x="769.7" y="1123.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="772.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (35 samples, 0.42%)</title><rect x="770.5" y="1171.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="773.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (35 samples, 0.42%)</title><rect x="770.5" y="1155.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="773.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (35 samples, 0.42%)</title><rect x="770.5" y="1139.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="773.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 0.29%)</title><rect x="772.1" y="1123.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="775.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (3 samples, 0.04%)</title><rect x="773.1" y="1107.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="776.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (5 samples, 0.06%)</title><rect x="773.5" y="1107.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="776.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$462/368169172.run (3 samples, 0.04%)</title><rect x="774.2" y="1107.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="777.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.07%)</title><rect x="774.6" y="1107.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="777.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (796 samples, 9.57%)</title><rect x="775.5" y="1171.0" width="112.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="778.5" y="1182.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (769 samples, 9.25%)</title><rect x="779.2" y="1155.0" width="109.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="782.2" y="1166.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (12 samples, 0.14%)</title><rect x="781.6" y="1139.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="784.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (12 samples, 0.14%)</title><rect x="781.6" y="1123.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="784.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (12 samples, 0.14%)</title><rect x="781.6" y="1107.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="784.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (12 samples, 0.14%)</title><rect x="781.6" y="1091.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="784.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.04%)</title><rect x="782.9" y="1075.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="785.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (472 samples, 5.68%)</title><rect x="783.3" y="1139.0" width="67.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="786.3" y="1150.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (21 samples, 0.25%)</title><rect x="784.1" y="1123.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="787.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (21 samples, 0.25%)</title><rect x="784.1" y="1107.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="787.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (21 samples, 0.25%)</title><rect x="784.1" y="1091.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="787.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.02%)</title><rect x="786.8" y="1075.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="789.8" y="1086.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.02%)</title><rect x="786.8" y="1059.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="789.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (233 samples, 2.80%)</title><rect x="787.1" y="1123.0" width="33.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="790.1" y="1134.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (233 samples, 2.80%)</title><rect x="787.1" y="1107.0" width="33.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.1" y="1118.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (222 samples, 2.67%)</title><rect x="788.2" y="1091.0" width="31.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="791.2" y="1102.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (222 samples, 2.67%)</title><rect x="788.2" y="1075.0" width="31.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="791.2" y="1086.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (216 samples, 2.60%)</title><rect x="789.1" y="1059.0" width="30.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="792.1" y="1070.0">jd..</text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.02%)</title><rect x="789.2" y="1043.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="792.2" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Unpark (32 samples, 0.38%)</title><rect x="789.8" y="1043.0" width="4.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="792.8" y="1054.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (8 samples, 0.10%)</title><rect x="790.9" y="1027.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="793.9" y="1038.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.02%)</title><rect x="792.1" y="1027.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="795.1" y="1038.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.04%)</title><rect x="792.5" y="1027.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="795.5" y="1038.0"></text>
</g>
<g>
<title>pthread_mutex_lock (10 samples, 0.12%)</title><rect x="792.9" y="1027.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="795.9" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (179 samples, 2.15%)</title><rect x="794.3" y="1043.0" width="25.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="797.3" y="1054.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (165 samples, 1.98%)</title><rect x="796.3" y="1027.0" width="23.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="799.3" y="1038.0">e..</text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="796.3" y="1011.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="799.3" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (163 samples, 1.96%)</title><rect x="796.6" y="1011.0" width="23.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="799.6" y="1022.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (159 samples, 1.91%)</title><rect x="797.0" y="995.0" width="22.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="800.0" y="1006.0">_..</text>
</g>
<g>
<title>do_futex (159 samples, 1.91%)</title><rect x="797.0" y="979.0" width="22.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="800.0" y="990.0">d..</text>
</g>
<g>
<title>futex_wake (155 samples, 1.86%)</title><rect x="797.3" y="963.0" width="22.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="800.3" y="974.0">f..</text>
</g>
<g>
<title>get_futex_key (3 samples, 0.04%)</title><rect x="799.7" y="947.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="802.7" y="958.0"></text>
</g>
<g>
<title>mark_wake_futex (8 samples, 0.10%)</title><rect x="800.2" y="947.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="803.2" y="958.0"></text>
</g>
<g>
<title>wake_up_q (127 samples, 1.53%)</title><rect x="801.3" y="947.0" width="18.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="804.3" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (127 samples, 1.53%)</title><rect x="801.3" y="931.0" width="18.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="804.3" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (125 samples, 1.50%)</title><rect x="801.4" y="915.0" width="17.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="804.4" y="926.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.02%)</title><rect x="819.3" y="963.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="822.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (3 samples, 0.04%)</title><rect x="819.8" y="1091.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="822.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (13 samples, 0.16%)</title><rect x="820.2" y="1123.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (13 samples, 0.16%)</title><rect x="820.2" y="1107.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="823.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (198 samples, 2.38%)</title><rect x="822.0" y="1123.0" width="28.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="825.0" y="1134.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (193 samples, 2.32%)</title><rect x="822.7" y="1107.0" width="27.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="825.7" y="1118.0">j..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.02%)</title><rect x="823.4" y="1091.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="826.4" y="1102.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.02%)</title><rect x="823.7" y="1091.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="826.7" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Park (81 samples, 0.97%)</title><rect x="824.2" y="1091.0" width="11.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="827.2" y="1102.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (3 samples, 0.04%)</title><rect x="826.1" y="1075.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="829.1" y="1086.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (7 samples, 0.08%)</title><rect x="826.6" y="1075.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="829.6" y="1086.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (23 samples, 0.28%)</title><rect x="827.6" y="1075.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="830.6" y="1086.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (8 samples, 0.10%)</title><rect x="829.1" y="1059.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="832.1" y="1070.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (3 samples, 0.04%)</title><rect x="830.4" y="1059.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="833.4" y="1070.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.05%)</title><rect x="831.0" y="1075.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="834.0" y="1086.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.04%)</title><rect x="831.5" y="1075.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="834.5" y="1086.0"></text>
</g>
<g>
<title>__lll_unlock_wake (9 samples, 0.11%)</title><rect x="832.1" y="1075.0" width="1.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="835.1" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.10%)</title><rect x="832.2" y="1059.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="835.2" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.10%)</title><rect x="832.2" y="1043.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="835.2" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.07%)</title><rect x="832.5" y="1027.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="835.5" y="1038.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.07%)</title><rect x="832.5" y="1011.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="835.5" y="1022.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.07%)</title><rect x="832.5" y="995.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="835.5" y="1006.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.05%)</title><rect x="832.8" y="979.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="835.8" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.04%)</title><rect x="833.4" y="1075.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="836.4" y="1086.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.05%)</title><rect x="834.1" y="1075.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="837.1" y="1086.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.02%)</title><rect x="834.7" y="1075.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="837.7" y="1086.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (5 samples, 0.06%)</title><rect x="834.9" y="1075.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="837.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (100 samples, 1.20%)</title><rect x="835.6" y="1091.0" width="14.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="838.6" y="1102.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.04%)</title><rect x="835.8" y="1075.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="838.8" y="1086.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.04%)</title><rect x="836.2" y="1075.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="839.2" y="1086.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (93 samples, 1.12%)</title><rect x="836.6" y="1075.0" width="13.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="839.6" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (84 samples, 1.01%)</title><rect x="837.9" y="1059.0" width="11.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="840.9" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="837.9" y="1043.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="840.9" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (82 samples, 0.99%)</title><rect x="838.2" y="1043.0" width="11.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="841.2" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_futex (62 samples, 0.75%)</title><rect x="840.8" y="1027.0" width="8.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="843.8" y="1038.0"></text>
</g>
<g>
<title>do_futex (58 samples, 0.70%)</title><rect x="841.2" y="1011.0" width="8.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="844.2" y="1022.0"></text>
</g>
<g>
<title>futex_wait (57 samples, 0.69%)</title><rect x="841.3" y="995.0" width="8.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="844.3" y="1006.0"></text>
</g>
<g>
<title>futex_wait_queue_me (22 samples, 0.26%)</title><rect x="842.9" y="979.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="845.9" y="990.0"></text>
</g>
<g>
<title>plist_add (3 samples, 0.04%)</title><rect x="843.3" y="963.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="846.3" y="974.0"></text>
</g>
<g>
<title>schedule (16 samples, 0.19%)</title><rect x="843.7" y="963.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="846.7" y="974.0"></text>
</g>
<g>
<title>__schedule (11 samples, 0.13%)</title><rect x="844.4" y="947.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="847.4" y="958.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.05%)</title><rect x="845.4" y="931.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="848.4" y="942.0"></text>
</g>
<g>
<title>futex_wait_setup (17 samples, 0.20%)</title><rect x="846.0" y="979.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="849.0" y="990.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="847.1" y="963.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="850.1" y="974.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.05%)</title><rect x="847.4" y="963.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="850.4" y="974.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (2 samples, 0.02%)</title><rect x="847.7" y="947.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="850.7" y="958.0"></text>
</g>
<g>
<title>get_futex_value_locked (3 samples, 0.04%)</title><rect x="848.0" y="963.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="851.0" y="974.0"></text>
</g>
<g>
<title>hash_futex (6 samples, 0.07%)</title><rect x="848.6" y="979.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="851.6" y="990.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.02%)</title><rect x="849.6" y="1027.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="852.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (10 samples, 0.12%)</title><rect x="850.3" y="1139.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="853.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (10 samples, 0.12%)</title><rect x="850.3" y="1123.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (10 samples, 0.12%)</title><rect x="850.3" y="1107.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="853.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (8 samples, 0.10%)</title><rect x="850.3" y="1091.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="853.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.10%)</title><rect x="850.3" y="1075.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="853.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.07%)</title><rect x="850.4" y="1059.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="850.7" y="1043.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="853.7" y="1054.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (3 samples, 0.04%)</title><rect x="850.8" y="1027.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="853.8" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="851.0" y="1011.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="854.0" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="851.0" y="995.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="854.0" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="851.0" y="979.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="854.0" y="990.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.02%)</title><rect x="851.0" y="963.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="854.0" y="974.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.02%)</title><rect x="851.0" y="947.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="854.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (2 samples, 0.02%)</title><rect x="851.4" y="1091.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="854.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (258 samples, 3.10%)</title><rect x="851.7" y="1139.0" width="36.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="854.7" y="1150.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (258 samples, 3.10%)</title><rect x="851.7" y="1123.0" width="36.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="854.7" y="1134.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (258 samples, 3.10%)</title><rect x="851.7" y="1107.0" width="36.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="854.7" y="1118.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (258 samples, 3.10%)</title><rect x="851.7" y="1091.0" width="36.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="854.7" y="1102.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (252 samples, 3.03%)</title><rect x="852.5" y="1075.0" width="35.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="855.5" y="1086.0">jdk..</text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (5 samples, 0.06%)</title><rect x="852.8" y="1059.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="855.8" y="1070.0"></text>
</g>
<g>
<title>Unsafe_Unpark (44 samples, 0.53%)</title><rect x="853.5" y="1059.0" width="6.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="856.5" y="1070.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.02%)</title><rect x="854.5" y="1043.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="857.5" y="1054.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (11 samples, 0.13%)</title><rect x="854.8" y="1043.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="857.8" y="1054.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.02%)</title><rect x="856.4" y="1043.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="859.4" y="1054.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (4 samples, 0.05%)</title><rect x="856.6" y="1043.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="859.6" y="1054.0"></text>
</g>
<g>
<title>pthread_mutex_lock (17 samples, 0.20%)</title><rect x="857.2" y="1043.0" width="2.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="860.2" y="1054.0"></text>
</g>
<g>
<title>__pthread_cond_signal (199 samples, 2.39%)</title><rect x="859.8" y="1059.0" width="28.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="862.8" y="1070.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (187 samples, 2.25%)</title><rect x="861.5" y="1043.0" width="26.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="864.5" y="1054.0">e..</text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.04%)</title><rect x="861.5" y="1027.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="864.5" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (184 samples, 2.21%)</title><rect x="861.9" y="1027.0" width="26.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="864.9" y="1038.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (178 samples, 2.14%)</title><rect x="862.8" y="1011.0" width="25.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="865.8" y="1022.0">_..</text>
</g>
<g>
<title>do_futex (177 samples, 2.13%)</title><rect x="862.9" y="995.0" width="25.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="865.9" y="1006.0">d..</text>
</g>
<g>
<title>futex_wake (175 samples, 2.10%)</title><rect x="862.9" y="979.0" width="24.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="865.9" y="990.0">f..</text>
</g>
<g>
<title>get_futex_key (2 samples, 0.02%)</title><rect x="864.3" y="963.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="867.3" y="974.0"></text>
</g>
<g>
<title>mark_wake_futex (7 samples, 0.08%)</title><rect x="864.6" y="963.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="867.6" y="974.0"></text>
</g>
<g>
<title>wake_up_q (155 samples, 1.86%)</title><rect x="865.7" y="963.0" width="22.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="868.7" y="974.0">w..</text>
</g>
<g>
<title>try_to_wake_up (155 samples, 1.86%)</title><rect x="865.7" y="947.0" width="22.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="868.7" y="958.0">t..</text>
</g>
<g>
<title>__lock_text_start (155 samples, 1.86%)</title><rect x="865.7" y="931.0" width="22.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="868.7" y="942.0">_..</text>
</g>
<g>
<title>hash_futex (2 samples, 0.02%)</title><rect x="887.7" y="979.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="890.7" y="990.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (2 samples, 0.02%)</title><rect x="888.0" y="1059.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="891.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$462/368169172.run (357 samples, 4.29%)</title><rect x="888.4" y="1171.0" width="50.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="891.4" y="1182.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (357 samples, 4.29%)</title><rect x="888.4" y="1155.0" width="50.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="891.4" y="1166.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (356 samples, 4.28%)</title><rect x="888.6" y="1139.0" width="50.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="891.6" y="1150.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (355 samples, 4.27%)</title><rect x="888.7" y="1123.0" width="50.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="891.7" y="1134.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (355 samples, 4.27%)</title><rect x="888.7" y="1107.0" width="50.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="891.7" y="1118.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (355 samples, 4.27%)</title><rect x="888.7" y="1091.0" width="50.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="891.7" y="1102.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (354 samples, 4.26%)</title><rect x="888.7" y="1075.0" width="50.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="891.7" y="1086.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (354 samples, 4.26%)</title><rect x="888.7" y="1059.0" width="50.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="891.7" y="1070.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (351 samples, 4.22%)</title><rect x="889.0" y="1043.0" width="49.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="892.0" y="1054.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (350 samples, 4.21%)</title><rect x="889.1" y="1027.0" width="49.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="892.1" y="1038.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (350 samples, 4.21%)</title><rect x="889.1" y="1011.0" width="49.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="892.1" y="1022.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (48 samples, 0.58%)</title><rect x="889.3" y="995.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="892.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (39 samples, 0.47%)</title><rect x="889.9" y="979.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="892.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (37 samples, 0.44%)</title><rect x="890.1" y="963.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="893.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (37 samples, 0.44%)</title><rect x="890.1" y="947.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="893.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (34 samples, 0.41%)</title><rect x="890.6" y="931.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="893.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (15 samples, 0.18%)</title><rect x="891.0" y="915.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="894.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (8 samples, 0.10%)</title><rect x="891.1" y="899.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="894.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8 samples, 0.10%)</title><rect x="891.1" y="883.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="894.1" y="894.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="891.3" y="867.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="894.3" y="878.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$32/1635985705.apply (3 samples, 0.04%)</title><rect x="891.6" y="867.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="894.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$489/1154830608.apply (2 samples, 0.02%)</title><rect x="892.0" y="867.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="895.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$489/1154830608.apply (6 samples, 0.07%)</title><rect x="892.3" y="899.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="895.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (6 samples, 0.07%)</title><rect x="892.3" y="883.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="895.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (6 samples, 0.07%)</title><rect x="892.3" y="867.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="895.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (5 samples, 0.06%)</title><rect x="892.4" y="851.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="895.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (5 samples, 0.06%)</title><rect x="892.4" y="835.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="895.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (5 samples, 0.06%)</title><rect x="892.4" y="819.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="895.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (8 samples, 0.10%)</title><rect x="893.1" y="915.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="896.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (8 samples, 0.10%)</title><rect x="893.1" y="899.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="896.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.04%)</title><rect x="893.1" y="883.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="896.1" y="894.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="893.1" y="867.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="896.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$431/995154411.apply (5 samples, 0.06%)</title><rect x="893.5" y="883.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="896.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (5 samples, 0.06%)</title><rect x="893.5" y="867.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="896.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (5 samples, 0.06%)</title><rect x="893.5" y="851.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="896.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$166/336834840.apply (5 samples, 0.06%)</title><rect x="893.5" y="835.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="896.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (5 samples, 0.06%)</title><rect x="893.5" y="819.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="896.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.02%)</title><rect x="893.5" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="896.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.02%)</title><rect x="893.5" y="787.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="896.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="893.5" y="771.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="896.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="893.5" y="755.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="896.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (3 samples, 0.04%)</title><rect x="893.8" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="896.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.02%)</title><rect x="893.8" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="896.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.02%)</title><rect x="893.8" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="896.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.02%)</title><rect x="893.8" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="896.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.02%)</title><rect x="893.8" y="739.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="896.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.02%)</title><rect x="894.3" y="915.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="897.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$470/1224839093.get (3 samples, 0.04%)</title><rect x="894.7" y="915.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="897.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$496/468503346.get (2 samples, 0.02%)</title><rect x="895.1" y="915.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="898.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (5 samples, 0.06%)</title><rect x="895.4" y="979.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="898.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (3 samples, 0.04%)</title><rect x="895.7" y="963.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="898.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (3 samples, 0.04%)</title><rect x="896.1" y="995.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="899.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (3 samples, 0.04%)</title><rect x="896.1" y="979.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="899.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.04%)</title><rect x="896.1" y="963.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (298 samples, 3.58%)</title><rect x="896.5" y="995.0" width="42.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="899.5" y="1006.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (298 samples, 3.58%)</title><rect x="896.5" y="979.0" width="42.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="899.5" y="990.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (298 samples, 3.58%)</title><rect x="896.5" y="963.0" width="42.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="899.5" y="974.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (296 samples, 3.56%)</title><rect x="896.8" y="947.0" width="42.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="899.8" y="958.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$472/412478012.run (2 samples, 0.02%)</title><rect x="896.8" y="931.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (2 samples, 0.02%)</title><rect x="896.8" y="915.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="899.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2 samples, 0.02%)</title><rect x="896.8" y="899.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="899.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (294 samples, 3.54%)</title><rect x="897.1" y="931.0" width="41.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="900.1" y="942.0">jdk..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (287 samples, 3.45%)</title><rect x="897.1" y="915.0" width="40.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="900.1" y="926.0">jav..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (287 samples, 3.45%)</title><rect x="897.1" y="899.0" width="40.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="900.1" y="910.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (287 samples, 3.45%)</title><rect x="897.1" y="883.0" width="40.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="900.1" y="894.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (283 samples, 3.40%)</title><rect x="897.7" y="867.0" width="40.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="900.7" y="878.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (2 samples, 0.02%)</title><rect x="897.7" y="851.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="900.7" y="862.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.02%)</title><rect x="897.7" y="835.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="900.7" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.02%)</title><rect x="897.7" y="819.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="900.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (281 samples, 3.38%)</title><rect x="897.9" y="851.0" width="39.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="900.9" y="862.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (268 samples, 3.22%)</title><rect x="899.8" y="835.0" width="38.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="902.8" y="846.0">sun..</text>
</g>
<g>
<title>[unknown] (261 samples, 3.14%)</title><rect x="900.1" y="819.0" width="37.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="903.1" y="830.0">[un..</text>
</g>
<g>
<title>[unknown] (261 samples, 3.14%)</title><rect x="900.1" y="803.0" width="37.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="903.1" y="814.0">[un..</text>
</g>
<g>
<title>__GI___writev (261 samples, 3.14%)</title><rect x="900.1" y="787.0" width="37.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="903.1" y="798.0">__G..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (259 samples, 3.11%)</title><rect x="900.4" y="771.0" width="36.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="903.4" y="782.0">ent..</text>
</g>
<g>
<title>__x64_sys_writev (2 samples, 0.02%)</title><rect x="900.4" y="755.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="903.4" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (257 samples, 3.09%)</title><rect x="900.6" y="755.0" width="36.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="903.6" y="766.0">do_..</text>
</g>
<g>
<title>__x64_sys_writev (255 samples, 3.07%)</title><rect x="900.9" y="739.0" width="36.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="903.9" y="750.0">__x..</text>
</g>
<g>
<title>do_writev (255 samples, 3.07%)</title><rect x="900.9" y="723.0" width="36.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="903.9" y="734.0">do_..</text>
</g>
<g>
<title>__fdget_pos (4 samples, 0.05%)</title><rect x="901.1" y="707.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="904.1" y="718.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="901.1" y="691.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="904.1" y="702.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.05%)</title><rect x="901.1" y="675.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="904.1" y="686.0"></text>
</g>
<g>
<title>vfs_writev (249 samples, 2.99%)</title><rect x="901.8" y="707.0" width="35.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="904.8" y="718.0">vfs..</text>
</g>
<g>
<title>do_iter_write (243 samples, 2.92%)</title><rect x="902.1" y="691.0" width="34.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="905.1" y="702.0">do..</text>
</g>
<g>
<title>do_iter_readv_writev (239 samples, 2.87%)</title><rect x="902.3" y="675.0" width="34.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="905.3" y="686.0">do..</text>
</g>
<g>
<title>sock_write_iter (237 samples, 2.85%)</title><rect x="902.6" y="659.0" width="33.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="905.6" y="670.0">so..</text>
</g>
<g>
<title>sock_sendmsg (237 samples, 2.85%)</title><rect x="902.6" y="643.0" width="33.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="905.6" y="654.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (229 samples, 2.75%)</title><rect x="902.6" y="627.0" width="32.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="905.6" y="638.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (226 samples, 2.72%)</title><rect x="902.9" y="611.0" width="32.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="905.9" y="622.0">tc..</text>
</g>
<g>
<title>tcp_push (2 samples, 0.02%)</title><rect x="902.9" y="595.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="905.9" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (223 samples, 2.68%)</title><rect x="903.3" y="595.0" width="31.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="906.3" y="606.0">tc..</text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.04%)</title><rect x="904.3" y="579.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="907.3" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="904.3" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="907.3" y="574.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.02%)</title><rect x="904.8" y="579.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="907.8" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.04%)</title><rect x="905.0" y="579.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="908.0" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (3 samples, 0.04%)</title><rect x="905.0" y="563.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="908.0" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (16 samples, 0.19%)</title><rect x="905.5" y="579.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="908.5" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (15 samples, 0.18%)</title><rect x="905.6" y="563.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="908.6" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (8 samples, 0.10%)</title><rect x="905.7" y="547.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="908.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.04%)</title><rect x="905.7" y="531.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="908.7" y="542.0"></text>
</g>
<g>
<title>memset (5 samples, 0.06%)</title><rect x="906.2" y="531.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="909.2" y="542.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.02%)</title><rect x="906.9" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="909.9" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.04%)</title><rect x="907.2" y="547.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="910.2" y="558.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.02%)</title><rect x="907.7" y="579.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="910.7" y="590.0"></text>
</g>
<g>
<title>tcp_push (184 samples, 2.21%)</title><rect x="908.2" y="579.0" width="26.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="911.2" y="590.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (184 samples, 2.21%)</title><rect x="908.2" y="563.0" width="26.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="911.2" y="574.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (184 samples, 2.21%)</title><rect x="908.2" y="547.0" width="26.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="911.2" y="558.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (172 samples, 2.07%)</title><rect x="908.6" y="531.0" width="24.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="911.6" y="542.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (166 samples, 2.00%)</title><rect x="908.9" y="515.0" width="23.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="911.9" y="526.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (165 samples, 1.98%)</title><rect x="908.9" y="499.0" width="23.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="911.9" y="510.0">_..</text>
</g>
<g>
<title>ip_local_out (163 samples, 1.96%)</title><rect x="909.0" y="483.0" width="23.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="912.0" y="494.0">i..</text>
</g>
<g>
<title>__ip_local_out (21 samples, 0.25%)</title><rect x="909.2" y="467.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="912.2" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (18 samples, 0.22%)</title><rect x="909.6" y="451.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="912.6" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (11 samples, 0.13%)</title><rect x="909.9" y="435.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="912.9" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (11 samples, 0.13%)</title><rect x="909.9" y="419.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="912.9" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.02%)</title><rect x="910.0" y="403.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="913.0" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (7 samples, 0.08%)</title><rect x="910.4" y="403.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="913.4" y="414.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (6 samples, 0.07%)</title><rect x="910.6" y="387.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="913.6" y="398.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (4 samples, 0.05%)</title><rect x="910.9" y="371.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="913.9" y="382.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.02%)</title><rect x="911.4" y="435.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="914.4" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (3 samples, 0.04%)</title><rect x="911.7" y="435.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="914.7" y="446.0"></text>
</g>
<g>
<title>ip_output (140 samples, 1.68%)</title><rect x="912.3" y="467.0" width="19.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="915.3" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (136 samples, 1.64%)</title><rect x="912.4" y="451.0" width="19.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="915.4" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (136 samples, 1.64%)</title><rect x="912.4" y="435.0" width="19.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="915.4" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (135 samples, 1.62%)</title><rect x="912.4" y="419.0" width="19.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="915.4" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (122 samples, 1.47%)</title><rect x="912.6" y="403.0" width="17.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="915.6" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.20 (122 samples, 1.47%)</title><rect x="912.6" y="387.0" width="17.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="915.6" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (119 samples, 1.43%)</title><rect x="913.0" y="371.0" width="16.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="916.0" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (118 samples, 1.42%)</title><rect x="913.0" y="355.0" width="16.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="916.0" y="366.0"></text>
</g>
<g>
<title>net_rx_action (114 samples, 1.37%)</title><rect x="913.6" y="339.0" width="16.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="916.6" y="350.0"></text>
</g>
<g>
<title>process_backlog (113 samples, 1.36%)</title><rect x="913.7" y="323.0" width="16.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="916.7" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (112 samples, 1.35%)</title><rect x="913.8" y="307.0" width="15.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="916.8" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (112 samples, 1.35%)</title><rect x="913.8" y="291.0" width="15.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="916.8" y="302.0"></text>
</g>
<g>
<title>ip_rcv (109 samples, 1.31%)</title><rect x="914.1" y="275.0" width="15.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="917.1" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (106 samples, 1.27%)</title><rect x="914.1" y="259.0" width="15.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="917.1" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (104 samples, 1.25%)</title><rect x="914.3" y="243.0" width="14.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="917.3" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (98 samples, 1.18%)</title><rect x="914.4" y="227.0" width="13.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="917.4" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (98 samples, 1.18%)</title><rect x="914.4" y="211.0" width="13.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="917.4" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (95 samples, 1.14%)</title><rect x="914.8" y="195.0" width="13.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="917.8" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.04%)</title><rect x="915.8" y="179.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="918.8" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.02%)</title><rect x="916.4" y="179.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="919.4" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.02%)</title><rect x="916.4" y="163.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="919.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (81 samples, 0.97%)</title><rect x="916.7" y="179.0" width="11.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="919.7" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (78 samples, 0.94%)</title><rect x="917.1" y="163.0" width="11.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="920.1" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.06%)</title><rect x="917.5" y="147.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="920.5" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.06%)</title><rect x="917.5" y="131.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="920.5" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.06%)</title><rect x="917.5" y="115.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="920.5" y="126.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.06%)</title><rect x="917.5" y="99.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="920.5" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.06%)</title><rect x="917.5" y="83.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="920.5" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.02%)</title><rect x="918.2" y="147.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="921.2" y="158.0"></text>
</g>
<g>
<title>tcp_ack (23 samples, 0.28%)</title><rect x="918.5" y="147.0" width="3.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="921.5" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (21 samples, 0.25%)</title><rect x="918.7" y="131.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="921.7" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (17 samples, 0.20%)</title><rect x="918.9" y="115.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="921.9" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.02%)</title><rect x="918.9" y="99.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="921.9" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.02%)</title><rect x="918.9" y="83.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="921.9" y="94.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.02%)</title><rect x="918.9" y="67.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="921.9" y="78.0"></text>
</g>
<g>
<title>skb_release_all (15 samples, 0.18%)</title><rect x="919.2" y="99.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="922.2" y="110.0"></text>
</g>
<g>
<title>skb_release_data (15 samples, 0.18%)</title><rect x="919.2" y="83.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="922.2" y="94.0"></text>
</g>
<g>
<title>__put_page (2 samples, 0.02%)</title><rect x="920.1" y="67.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="923.1" y="78.0"></text>
</g>
<g>
<title>skb_free_head (7 samples, 0.08%)</title><rect x="920.4" y="67.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="923.4" y="78.0"></text>
</g>
<g>
<title>kfree (7 samples, 0.08%)</title><rect x="920.4" y="51.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="923.4" y="62.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.06%)</title><rect x="920.7" y="35.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="923.7" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (2 samples, 0.02%)</title><rect x="921.4" y="115.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="924.4" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (40 samples, 0.48%)</title><rect x="921.8" y="147.0" width="5.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="924.8" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (39 samples, 0.47%)</title><rect x="921.9" y="131.0" width="5.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="924.9" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (39 samples, 0.47%)</title><rect x="921.9" y="115.0" width="5.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="924.9" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (39 samples, 0.47%)</title><rect x="921.9" y="99.0" width="5.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="924.9" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (39 samples, 0.47%)</title><rect x="921.9" y="83.0" width="5.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="924.9" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.02%)</title><rect x="927.5" y="147.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="930.5" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.04%)</title><rect x="928.6" y="227.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="931.6" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.02%)</title><rect x="928.6" y="211.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="931.6" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.02%)</title><rect x="928.6" y="195.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="931.6" y="206.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (2 samples, 0.02%)</title><rect x="929.2" y="259.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="932.2" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (12 samples, 0.14%)</title><rect x="929.9" y="403.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="932.9" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (12 samples, 0.14%)</title><rect x="929.9" y="387.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="932.9" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.10%)</title><rect x="930.2" y="371.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="933.2" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.08%)</title><rect x="930.3" y="355.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="933.3" y="366.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.02%)</title><rect x="930.6" y="339.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="933.6" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.02%)</title><rect x="930.6" y="323.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="933.6" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.02%)</title><rect x="930.6" y="307.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="933.6" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.04%)</title><rect x="930.9" y="339.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="933.9" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.04%)</title><rect x="931.7" y="451.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="934.7" y="462.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (3 samples, 0.04%)</title><rect x="931.7" y="435.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="934.7" y="446.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.02%)</title><rect x="931.9" y="419.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="934.9" y="430.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.02%)</title><rect x="932.4" y="515.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="935.4" y="526.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (2 samples, 0.02%)</title><rect x="932.7" y="515.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="935.7" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.07%)</title><rect x="933.3" y="531.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="936.3" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.05%)</title><rect x="933.6" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="936.6" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.05%)</title><rect x="933.6" y="499.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="936.6" y="510.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.05%)</title><rect x="933.6" y="483.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="936.6" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.04%)</title><rect x="933.7" y="467.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="936.7" y="478.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.05%)</title><rect x="934.3" y="579.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="937.3" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.05%)</title><rect x="934.3" y="563.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="937.3" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.04%)</title><rect x="934.4" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="937.4" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (8 samples, 0.10%)</title><rect x="935.1" y="627.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="938.1" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (7 samples, 0.08%)</title><rect x="935.3" y="611.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="938.3" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.08%)</title><rect x="935.3" y="595.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="938.3" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.06%)</title><rect x="935.6" y="579.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="938.6" y="590.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (5 samples, 0.06%)</title><rect x="935.6" y="563.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="938.6" y="574.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.02%)</title><rect x="936.0" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="939.0" y="558.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="936.3" y="675.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="939.3" y="686.0"></text>
</g>
<g>
<title>import_iovec (4 samples, 0.05%)</title><rect x="936.5" y="691.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="939.5" y="702.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (4 samples, 0.05%)</title><rect x="936.5" y="675.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="939.5" y="686.0"></text>
</g>
<g>
<title>__GI___writev (4 samples, 0.05%)</title><rect x="937.1" y="819.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="940.1" y="830.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (7 samples, 0.08%)</title><rect x="937.8" y="915.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="940.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (554 samples, 6.66%)</title><rect x="939.1" y="1171.0" width="78.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="942.1" y="1182.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (552 samples, 6.64%)</title><rect x="939.4" y="1155.0" width="78.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="942.4" y="1166.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (321 samples, 3.86%)</title><rect x="939.7" y="1139.0" width="45.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="942.7" y="1150.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$312/807283364.run (319 samples, 3.84%)</title><rect x="940.0" y="1123.0" width="45.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="943.0" y="1134.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (319 samples, 3.84%)</title><rect x="940.0" y="1107.0" width="45.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="943.0" y="1118.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (50 samples, 0.60%)</title><rect x="940.0" y="1091.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="943.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (50 samples, 0.60%)</title><rect x="940.0" y="1075.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="943.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (50 samples, 0.60%)</title><rect x="940.0" y="1059.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="943.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (50 samples, 0.60%)</title><rect x="940.0" y="1043.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="943.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (45 samples, 0.54%)</title><rect x="940.7" y="1027.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="943.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (44 samples, 0.53%)</title><rect x="940.8" y="1011.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="943.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (43 samples, 0.52%)</title><rect x="940.9" y="995.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="943.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (43 samples, 0.52%)</title><rect x="940.9" y="979.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="943.9" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="940.9" y="963.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="943.9" y="974.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.02%)</title><rect x="940.9" y="947.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="943.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (41 samples, 0.49%)</title><rect x="941.2" y="963.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="944.2" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.04%)</title><rect x="941.2" y="947.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="944.2" y="958.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.04%)</title><rect x="941.2" y="931.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="944.2" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.02%)</title><rect x="941.4" y="915.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="944.4" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (38 samples, 0.46%)</title><rect x="941.7" y="947.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="944.7" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (34 samples, 0.41%)</title><rect x="942.2" y="931.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="945.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.36%)</title><rect x="942.8" y="915.0" width="4.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="945.8" y="926.0"></text>
</g>
<g>
<title>__GI_write (30 samples, 0.36%)</title><rect x="942.8" y="899.0" width="4.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="945.8" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.35%)</title><rect x="942.9" y="883.0" width="4.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="945.9" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.35%)</title><rect x="942.9" y="867.0" width="4.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="945.9" y="878.0"></text>
</g>
<g>
<title>__x64_sys_write (27 samples, 0.32%)</title><rect x="943.2" y="851.0" width="3.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="946.2" y="862.0"></text>
</g>
<g>
<title>ksys_write (27 samples, 0.32%)</title><rect x="943.2" y="835.0" width="3.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="946.2" y="846.0"></text>
</g>
<g>
<title>vfs_write (24 samples, 0.29%)</title><rect x="943.6" y="819.0" width="3.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="946.6" y="830.0"></text>
</g>
<g>
<title>__vfs_write (22 samples, 0.26%)</title><rect x="943.6" y="803.0" width="3.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="946.6" y="814.0"></text>
</g>
<g>
<title>new_sync_write (22 samples, 0.26%)</title><rect x="943.6" y="787.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="946.6" y="798.0"></text>
</g>
<g>
<title>pipe_write (21 samples, 0.25%)</title><rect x="943.8" y="771.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="946.8" y="782.0"></text>
</g>
<g>
<title>__wake_up_sync_key (17 samples, 0.20%)</title><rect x="943.9" y="755.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="946.9" y="766.0"></text>
</g>
<g>
<title>__wake_up_common_lock (17 samples, 0.20%)</title><rect x="943.9" y="739.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="946.9" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (16 samples, 0.19%)</title><rect x="944.1" y="723.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="947.1" y="734.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.02%)</title><rect x="946.5" y="755.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="949.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.02%)</title><rect x="947.0" y="1091.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="950.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (267 samples, 3.21%)</title><rect x="947.3" y="1091.0" width="37.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="950.3" y="1102.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (264 samples, 3.17%)</title><rect x="947.8" y="1075.0" width="37.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="950.8" y="1086.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (264 samples, 3.17%)</title><rect x="947.8" y="1059.0" width="37.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="950.8" y="1070.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (264 samples, 3.17%)</title><rect x="947.8" y="1043.0" width="37.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="950.8" y="1054.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (137 samples, 1.65%)</title><rect x="948.2" y="1027.0" width="19.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="951.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (137 samples, 1.65%)</title><rect x="948.2" y="1011.0" width="19.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="951.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (136 samples, 1.64%)</title><rect x="948.2" y="995.0" width="19.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="951.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (135 samples, 1.62%)</title><rect x="948.3" y="979.0" width="19.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="951.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (134 samples, 1.61%)</title><rect x="948.5" y="963.0" width="19.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="951.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (132 samples, 1.59%)</title><rect x="948.6" y="947.0" width="18.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (131 samples, 1.58%)</title><rect x="948.7" y="931.0" width="18.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="951.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (128 samples, 1.54%)</title><rect x="948.7" y="915.0" width="18.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="951.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (125 samples, 1.50%)</title><rect x="949.2" y="899.0" width="17.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="952.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (105 samples, 1.26%)</title><rect x="949.5" y="883.0" width="14.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="952.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (8 samples, 0.10%)</title><rect x="949.6" y="867.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="952.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8 samples, 0.10%)</title><rect x="949.6" y="851.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="952.6" y="862.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.05%)</title><rect x="949.9" y="835.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="952.9" y="846.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$32/1635985705.apply (2 samples, 0.02%)</title><rect x="950.5" y="835.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="953.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$148/1113343332.apply (79 samples, 0.95%)</title><rect x="950.7" y="867.0" width="11.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="953.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (78 samples, 0.94%)</title><rect x="950.9" y="851.0" width="11.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="953.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.02%)</title><rect x="951.3" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.02%)</title><rect x="951.3" y="819.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="954.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (73 samples, 0.88%)</title><rect x="951.6" y="835.0" width="10.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="954.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (72 samples, 0.87%)</title><rect x="951.7" y="819.0" width="10.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="954.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (55 samples, 0.66%)</title><rect x="951.7" y="803.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="954.7" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (11 samples, 0.13%)</title><rect x="951.7" y="787.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="954.7" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.04%)</title><rect x="951.7" y="771.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="954.7" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.04%)</title><rect x="951.7" y="755.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="954.7" y="766.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (8 samples, 0.10%)</title><rect x="952.2" y="771.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="955.2" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.06%)</title><rect x="952.6" y="755.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="955.6" y="766.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (5 samples, 0.06%)</title><rect x="952.6" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="955.6" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.05%)</title><rect x="952.6" y="723.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="955.6" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.04%)</title><rect x="952.6" y="707.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="955.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (3 samples, 0.04%)</title><rect x="952.6" y="691.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="955.6" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (3 samples, 0.04%)</title><rect x="952.6" y="675.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="955.6" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (2 samples, 0.02%)</title><rect x="952.7" y="659.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="955.7" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (2 samples, 0.02%)</title><rect x="952.7" y="643.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="955.7" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$506/842918523.applyAsLong (2 samples, 0.02%)</title><rect x="952.7" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="955.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.02%)</title><rect x="952.7" y="611.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="955.7" y="622.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.02%)</title><rect x="952.7" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="955.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.05%)</title><rect x="953.3" y="787.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="956.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.04%)</title><rect x="953.4" y="771.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="956.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.02%)</title><rect x="953.6" y="755.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="956.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.fixupContentLen (2 samples, 0.02%)</title><rect x="953.9" y="787.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="956.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.02%)</title><rect x="953.9" y="771.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="956.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/bodyhandlers/BodyHandlerGet.apply (2 samples, 0.02%)</title><rect x="953.9" y="755.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="956.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (37 samples, 0.44%)</title><rect x="954.1" y="787.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="957.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.06%)</title><rect x="954.1" y="771.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="957.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$517/993983476.run (32 samples, 0.38%)</title><rect x="954.9" y="771.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="957.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (32 samples, 0.38%)</title><rect x="954.9" y="755.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="957.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (3 samples, 0.04%)</title><rect x="955.3" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="958.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.02%)</title><rect x="955.3" y="723.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="958.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.02%)</title><rect x="955.3" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="958.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (3 samples, 0.04%)</title><rect x="955.8" y="739.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="958.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (3 samples, 0.04%)</title><rect x="955.8" y="723.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="958.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (15 samples, 0.18%)</title><rect x="956.3" y="739.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="959.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (15 samples, 0.18%)</title><rect x="956.3" y="723.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="959.3" y="734.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (13 samples, 0.16%)</title><rect x="956.3" y="707.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="959.3" y="718.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (2 samples, 0.02%)</title><rect x="956.4" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="959.4" y="702.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (10 samples, 0.12%)</title><rect x="956.7" y="691.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="959.7" y="702.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (9 samples, 0.11%)</title><rect x="956.8" y="675.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="959.8" y="686.0"></text>
</g>
<g>
<title>JVM_IHashCode (5 samples, 0.06%)</title><rect x="957.3" y="659.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="960.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.02%)</title><rect x="958.1" y="707.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="961.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.02%)</title><rect x="958.1" y="691.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="961.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (6 samples, 0.07%)</title><rect x="958.5" y="739.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="961.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/bodyhandlers/BodyHandlerGet.apply (16 samples, 0.19%)</title><rect x="959.7" y="803.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="962.7" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (13 samples, 0.16%)</title><rect x="959.7" y="787.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="962.7" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.04%)</title><rect x="959.7" y="771.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="962.7" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.04%)</title><rect x="959.7" y="755.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="962.7" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.02%)</title><rect x="959.8" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="962.8" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.02%)</title><rect x="959.8" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="962.8" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.02%)</title><rect x="959.8" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="962.8" y="718.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.02%)</title><rect x="960.1" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="963.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.02%)</title><rect x="960.1" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="963.1" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (2 samples, 0.02%)</title><rect x="960.1" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="963.1" y="750.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (8 samples, 0.10%)</title><rect x="960.4" y="771.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="963.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.07%)</title><rect x="960.7" y="755.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="963.7" y="766.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (6 samples, 0.07%)</title><rect x="960.7" y="739.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="963.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (6 samples, 0.07%)</title><rect x="960.7" y="723.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="963.7" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.06%)</title><rect x="960.7" y="707.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="963.7" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (4 samples, 0.05%)</title><rect x="960.8" y="691.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="963.8" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (3 samples, 0.04%)</title><rect x="960.8" y="675.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="963.8" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (3 samples, 0.04%)</title><rect x="960.8" y="659.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="963.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (3 samples, 0.04%)</title><rect x="960.8" y="643.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="963.8" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$506/842918523.applyAsLong (2 samples, 0.02%)</title><rect x="960.8" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="963.8" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.mapping (3 samples, 0.04%)</title><rect x="961.5" y="787.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="964.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.&lt;init&gt; (3 samples, 0.04%)</title><rect x="961.5" y="771.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="964.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$435/748589287.apply (17 samples, 0.20%)</title><rect x="961.9" y="867.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="964.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (17 samples, 0.20%)</title><rect x="961.9" y="851.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="964.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (14 samples, 0.17%)</title><rect x="962.1" y="835.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="965.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (12 samples, 0.14%)</title><rect x="962.4" y="819.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="965.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (12 samples, 0.14%)</title><rect x="962.4" y="803.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="965.4" y="814.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (7 samples, 0.08%)</title><rect x="963.1" y="787.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="966.1" y="798.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (2 samples, 0.02%)</title><rect x="963.4" y="771.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="966.4" y="782.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (3 samples, 0.04%)</title><rect x="963.7" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="966.7" y="782.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (3 samples, 0.04%)</title><rect x="963.7" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="966.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.02%)</title><rect x="964.1" y="835.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="967.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.02%)</title><rect x="964.1" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.02%)</title><rect x="964.1" y="803.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="967.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (2 samples, 0.02%)</title><rect x="964.1" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (11 samples, 0.13%)</title><rect x="964.4" y="883.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (10 samples, 0.12%)</title><rect x="964.5" y="867.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="967.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.02%)</title><rect x="964.5" y="851.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="967.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$442/1098648480.apply (2 samples, 0.02%)</title><rect x="964.5" y="835.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="967.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$442/1098648480.apply (8 samples, 0.10%)</title><rect x="964.8" y="851.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (8 samples, 0.10%)</title><rect x="964.8" y="835.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="967.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (8 samples, 0.10%)</title><rect x="964.8" y="819.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="967.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (8 samples, 0.10%)</title><rect x="964.8" y="803.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="967.8" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="964.8" y="787.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="967.8" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.02%)</title><rect x="964.8" y="771.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="967.8" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.02%)</title><rect x="964.8" y="755.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="967.8" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.02%)</title><rect x="964.8" y="739.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="967.8" y="750.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (6 samples, 0.07%)</title><rect x="965.1" y="787.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="968.1" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (5 samples, 0.06%)</title><rect x="965.2" y="771.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="968.2" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (5 samples, 0.06%)</title><rect x="965.2" y="755.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="968.2" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (2 samples, 0.02%)</title><rect x="965.4" y="739.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="968.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (2 samples, 0.02%)</title><rect x="965.6" y="739.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="968.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (5 samples, 0.06%)</title><rect x="965.9" y="883.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="968.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (5 samples, 0.06%)</title><rect x="965.9" y="867.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="968.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.06%)</title><rect x="965.9" y="851.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="968.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$498/1789183129.apply (3 samples, 0.04%)</title><rect x="966.9" y="915.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="969.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (3 samples, 0.04%)</title><rect x="966.9" y="899.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="969.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (3 samples, 0.04%)</title><rect x="966.9" y="883.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="969.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.02%)</title><rect x="966.9" y="867.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="969.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (121 samples, 1.46%)</title><rect x="967.6" y="1027.0" width="17.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="970.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (8 samples, 0.10%)</title><rect x="969.3" y="1011.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="972.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (22 samples, 0.26%)</title><rect x="970.5" y="1011.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="973.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (19 samples, 0.23%)</title><rect x="970.9" y="995.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="973.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (19 samples, 0.23%)</title><rect x="970.9" y="979.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="973.9" y="990.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.02%)</title><rect x="973.3" y="963.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="976.3" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.02%)</title><rect x="973.3" y="947.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="976.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (7 samples, 0.08%)</title><rect x="973.6" y="1011.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="976.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.08%)</title><rect x="973.6" y="995.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="976.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.08%)</title><rect x="973.6" y="979.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="976.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (32 samples, 0.38%)</title><rect x="974.6" y="1011.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="977.6" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (32 samples, 0.38%)</title><rect x="974.6" y="995.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="977.6" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (32 samples, 0.38%)</title><rect x="974.6" y="979.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="977.6" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (29 samples, 0.35%)</title><rect x="975.0" y="963.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="978.0" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1651491428.accept (28 samples, 0.34%)</title><rect x="975.1" y="947.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="978.1" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (26 samples, 0.31%)</title><rect x="975.4" y="931.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="978.4" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (4 samples, 0.05%)</title><rect x="975.7" y="915.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="978.7" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.04%)</title><rect x="975.9" y="899.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="978.9" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (10 samples, 0.12%)</title><rect x="976.3" y="915.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="979.3" y="926.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="976.3" y="899.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="979.3" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$129/677985599.accept (6 samples, 0.07%)</title><rect x="976.6" y="899.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="979.6" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (6 samples, 0.07%)</title><rect x="976.6" y="883.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="979.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/680576081.test (2 samples, 0.02%)</title><rect x="977.4" y="899.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="980.4" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (9 samples, 0.11%)</title><rect x="977.7" y="915.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="980.7" y="926.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="978.0" y="899.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="981.0" y="910.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="978.0" y="883.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.0" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.04%)</title><rect x="978.0" y="867.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="981.0" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (4 samples, 0.05%)</title><rect x="978.4" y="899.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="981.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (39 samples, 0.47%)</title><rect x="979.1" y="1011.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="982.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (31 samples, 0.37%)</title><rect x="980.0" y="995.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="983.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="980.1" y="979.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="983.1" y="990.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="980.1" y="963.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="983.1" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.02%)</title><rect x="980.1" y="947.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="983.1" y="958.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (19 samples, 0.23%)</title><rect x="980.5" y="979.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="983.5" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (11 samples, 0.13%)</title><rect x="981.4" y="963.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="984.4" y="974.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="983.0" y="963.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="986.0" y="974.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.02%)</title><rect x="983.2" y="979.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="986.2" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.02%)</title><rect x="983.2" y="963.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="986.2" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (5 samples, 0.06%)</title><rect x="983.7" y="979.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="986.7" y="990.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="984.4" y="995.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="987.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$354/1193477146.accept (2 samples, 0.02%)</title><rect x="984.9" y="1027.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="987.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (2 samples, 0.02%)</title><rect x="984.9" y="1011.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="987.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (229 samples, 2.75%)</title><rect x="985.2" y="1139.0" width="32.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="988.2" y="1150.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (227 samples, 2.73%)</title><rect x="985.5" y="1123.0" width="32.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="988.5" y="1134.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (226 samples, 2.72%)</title><rect x="985.6" y="1107.0" width="32.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="988.6" y="1118.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$312/807283364.run (226 samples, 2.72%)</title><rect x="985.6" y="1091.0" width="32.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="988.6" y="1102.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (226 samples, 2.72%)</title><rect x="985.6" y="1075.0" width="32.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="988.6" y="1086.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5 samples, 0.06%)</title><rect x="985.8" y="1059.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="988.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (3 samples, 0.04%)</title><rect x="986.1" y="1043.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="989.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (3 samples, 0.04%)</title><rect x="986.1" y="1027.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="989.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.04%)</title><rect x="986.1" y="1011.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="989.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.04%)</title><rect x="986.1" y="995.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="989.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (217 samples, 2.61%)</title><rect x="986.5" y="1059.0" width="30.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="989.5" y="1070.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (217 samples, 2.61%)</title><rect x="986.5" y="1043.0" width="30.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="989.5" y="1054.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (217 samples, 2.61%)</title><rect x="986.5" y="1027.0" width="30.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="989.5" y="1038.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (216 samples, 2.60%)</title><rect x="986.6" y="1011.0" width="30.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="989.6" y="1022.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (216 samples, 2.60%)</title><rect x="986.6" y="995.0" width="30.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="989.6" y="1006.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (214 samples, 2.57%)</title><rect x="986.8" y="979.0" width="30.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="989.8" y="990.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$529/1767851527.run (120 samples, 1.44%)</title><rect x="986.8" y="963.0" width="17.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="989.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (120 samples, 1.44%)</title><rect x="986.8" y="947.0" width="17.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="989.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (120 samples, 1.44%)</title><rect x="986.8" y="931.0" width="17.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="989.8" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (3 samples, 0.04%)</title><rect x="986.8" y="915.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="989.8" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.02%)</title><rect x="986.9" y="899.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="989.9" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.02%)</title><rect x="986.9" y="883.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="989.9" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (2 samples, 0.02%)</title><rect x="986.9" y="867.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="989.9" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (2 samples, 0.02%)</title><rect x="986.9" y="851.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="989.9" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.02%)</title><rect x="986.9" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="989.9" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.02%)</title><rect x="986.9" y="819.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="989.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (115 samples, 1.38%)</title><rect x="987.3" y="915.0" width="16.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="990.3" y="926.0"></text>
</g>
<g>
<title>java/time/Instant.now (4 samples, 0.05%)</title><rect x="987.3" y="899.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="990.3" y="910.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (4 samples, 0.05%)</title><rect x="987.3" y="883.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="990.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.02%)</title><rect x="987.6" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="990.6" y="878.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.02%)</title><rect x="987.6" y="851.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="990.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (111 samples, 1.33%)</title><rect x="987.9" y="899.0" width="15.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="990.9" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.06%)</title><rect x="988.1" y="883.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="991.1" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.06%)</title><rect x="988.1" y="867.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="991.1" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.06%)</title><rect x="988.1" y="851.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="991.1" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (5 samples, 0.06%)</title><rect x="988.1" y="835.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="991.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (45 samples, 0.54%)</title><rect x="988.8" y="883.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="991.8" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (3 samples, 0.04%)</title><rect x="994.4" y="867.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="997.4" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (3 samples, 0.04%)</title><rect x="994.4" y="851.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="997.4" y="862.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (3 samples, 0.04%)</title><rect x="994.4" y="835.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="997.4" y="846.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (3 samples, 0.04%)</title><rect x="994.4" y="819.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="997.4" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (2 samples, 0.02%)</title><rect x="994.9" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="997.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (5 samples, 0.06%)</title><rect x="995.2" y="883.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="998.2" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.06%)</title><rect x="995.2" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="998.2" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.02%)</title><rect x="995.2" y="851.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="998.2" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.04%)</title><rect x="995.4" y="851.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="998.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (3 samples, 0.04%)</title><rect x="995.4" y="835.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="998.4" y="846.0"></text>
</g>
<g>
<title>java/util/Objects.hash (3 samples, 0.04%)</title><rect x="995.4" y="819.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="998.4" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (3 samples, 0.04%)</title><rect x="995.4" y="803.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (55 samples, 0.66%)</title><rect x="995.9" y="883.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="998.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (55 samples, 0.66%)</title><rect x="995.9" y="867.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="998.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (12 samples, 0.14%)</title><rect x="995.9" y="851.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="998.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (12 samples, 0.14%)</title><rect x="995.9" y="835.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="998.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (10 samples, 0.12%)</title><rect x="996.1" y="819.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="999.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (7 samples, 0.08%)</title><rect x="996.4" y="803.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="999.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (7 samples, 0.08%)</title><rect x="996.4" y="787.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="999.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.06%)</title><rect x="996.7" y="771.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="999.7" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.04%)</title><rect x="996.9" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="999.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="996.9" y="739.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="999.9" y="750.0"></text>
</g>
<g>
<title>__GI_write (3 samples, 0.04%)</title><rect x="996.9" y="723.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="999.9" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="996.9" y="707.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="999.9" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="996.9" y="691.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="999.9" y="702.0"></text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.02%)</title><rect x="997.0" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1000.0" y="686.0"></text>
</g>
<g>
<title>ksys_write (2 samples, 0.02%)</title><rect x="997.0" y="659.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1000.0" y="670.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.02%)</title><rect x="997.0" y="643.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1000.0" y="654.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="997.0" y="627.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1000.0" y="638.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="997.0" y="611.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1000.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (43 samples, 0.52%)</title><rect x="997.6" y="851.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1000.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (42 samples, 0.51%)</title><rect x="997.7" y="835.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1000.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (38 samples, 0.46%)</title><rect x="997.9" y="819.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1000.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (38 samples, 0.46%)</title><rect x="997.9" y="803.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1000.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (38 samples, 0.46%)</title><rect x="997.9" y="787.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1000.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (37 samples, 0.44%)</title><rect x="998.0" y="771.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1001.0" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (35 samples, 0.42%)</title><rect x="998.3" y="755.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1001.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.40%)</title><rect x="998.3" y="739.0" width="4.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1001.3" y="750.0"></text>
</g>
<g>
<title>__GI_write (32 samples, 0.38%)</title><rect x="998.3" y="723.0" width="4.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1001.3" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.37%)</title><rect x="998.4" y="707.0" width="4.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1001.4" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 0.36%)</title><rect x="998.6" y="691.0" width="4.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1001.6" y="702.0"></text>
</g>
<g>
<title>__x64_sys_write (30 samples, 0.36%)</title><rect x="998.6" y="675.0" width="4.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1001.6" y="686.0"></text>
</g>
<g>
<title>ksys_write (30 samples, 0.36%)</title><rect x="998.6" y="659.0" width="4.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1001.6" y="670.0"></text>
</g>
<g>
<title>vfs_write (29 samples, 0.35%)</title><rect x="998.7" y="643.0" width="4.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1001.7" y="654.0"></text>
</g>
<g>
<title>__vfs_write (23 samples, 0.28%)</title><rect x="998.8" y="627.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1001.8" y="638.0"></text>
</g>
<g>
<title>new_sync_write (22 samples, 0.26%)</title><rect x="999.0" y="611.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1002.0" y="622.0"></text>
</g>
<g>
<title>pipe_write (20 samples, 0.24%)</title><rect x="999.3" y="595.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1002.3" y="606.0"></text>
</g>
<g>
<title>__wake_up_sync_key (14 samples, 0.17%)</title><rect x="999.7" y="579.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1002.7" y="590.0"></text>
</g>
<g>
<title>__wake_up_common_lock (14 samples, 0.17%)</title><rect x="999.7" y="563.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1002.7" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (14 samples, 0.17%)</title><rect x="999.7" y="547.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1002.7" y="558.0"></text>
</g>
<g>
<title>copy_page_from_iter (2 samples, 0.02%)</title><rect x="1001.7" y="579.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1004.7" y="590.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="1002.1" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1005.1" y="638.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.04%)</title><rect x="1002.4" y="627.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1005.4" y="638.0"></text>
</g>
<g>
<title>__GI_write (2 samples, 0.02%)</title><rect x="1003.0" y="739.0" width="0.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1006.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1003.2" y="819.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1006.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$542/648363382.accept (10 samples, 0.12%)</title><rect x="1003.8" y="963.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1006.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (10 samples, 0.12%)</title><rect x="1003.8" y="947.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1006.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (10 samples, 0.12%)</title><rect x="1003.8" y="931.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1006.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 0.07%)</title><rect x="1003.8" y="915.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1006.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.07%)</title><rect x="1003.8" y="899.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1006.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 0.06%)</title><rect x="1004.0" y="883.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1007.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.02%)</title><rect x="1004.1" y="867.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1007.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.02%)</title><rect x="1004.1" y="851.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1007.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.02%)</title><rect x="1004.4" y="867.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1007.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$564/1351074174.accept (2 samples, 0.02%)</title><rect x="1004.4" y="851.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1007.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (2 samples, 0.02%)</title><rect x="1004.4" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1007.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (2 samples, 0.02%)</title><rect x="1004.4" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1007.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$360/1378801765.accept (4 samples, 0.05%)</title><rect x="1004.7" y="915.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1007.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (4 samples, 0.05%)</title><rect x="1004.7" y="899.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1007.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (3 samples, 0.04%)</title><rect x="1004.8" y="883.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1007.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (80 samples, 0.96%)</title><rect x="1005.2" y="963.0" width="11.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1008.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (80 samples, 0.96%)</title><rect x="1005.2" y="947.0" width="11.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1008.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onComplete (77 samples, 0.93%)</title><rect x="1005.2" y="931.0" width="11.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1008.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (76 samples, 0.91%)</title><rect x="1005.4" y="915.0" width="10.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1008.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (74 samples, 0.89%)</title><rect x="1005.5" y="899.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1008.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (74 samples, 0.89%)</title><rect x="1005.5" y="883.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1008.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (71 samples, 0.85%)</title><rect x="1005.9" y="867.0" width="10.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1008.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.05%)</title><rect x="1005.9" y="851.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1008.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.04%)</title><rect x="1006.1" y="835.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1009.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$570/671483565.accept (3 samples, 0.04%)</title><rect x="1006.1" y="819.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1009.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (67 samples, 0.81%)</title><rect x="1006.5" y="851.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1009.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$570/671483565.accept (66 samples, 0.79%)</title><rect x="1006.6" y="835.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1009.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (65 samples, 0.78%)</title><rect x="1006.8" y="819.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1009.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (65 samples, 0.78%)</title><rect x="1006.8" y="803.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1009.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (65 samples, 0.78%)</title><rect x="1006.8" y="787.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1009.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (8 samples, 0.10%)</title><rect x="1006.8" y="771.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1009.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.02%)</title><rect x="1006.9" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1009.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.02%)</title><rect x="1006.9" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1009.9" y="750.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="1006.9" y="723.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1009.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$591/871888476.apply (5 samples, 0.06%)</title><rect x="1007.2" y="755.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1010.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (5 samples, 0.06%)</title><rect x="1007.2" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1010.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.02%)</title><rect x="1007.9" y="771.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1010.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.02%)</title><rect x="1007.9" y="755.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1010.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.02%)</title><rect x="1007.9" y="739.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1010.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (54 samples, 0.65%)</title><rect x="1008.2" y="771.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1011.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.05%)</title><rect x="1008.4" y="755.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1011.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.05%)</title><rect x="1008.4" y="739.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1011.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (49 samples, 0.59%)</title><rect x="1008.9" y="755.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1011.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (48 samples, 0.58%)</title><rect x="1008.9" y="739.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1011.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (44 samples, 0.53%)</title><rect x="1008.9" y="723.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1011.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (44 samples, 0.53%)</title><rect x="1008.9" y="707.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1011.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (44 samples, 0.53%)</title><rect x="1008.9" y="691.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1011.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (44 samples, 0.53%)</title><rect x="1008.9" y="675.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1011.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (44 samples, 0.53%)</title><rect x="1008.9" y="659.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1011.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (38 samples, 0.46%)</title><rect x="1009.8" y="643.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1012.8" y="654.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.06%)</title><rect x="1010.3" y="627.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1013.3" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.04%)</title><rect x="1010.3" y="611.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1013.3" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.02%)</title><rect x="1010.8" y="611.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1013.8" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (29 samples, 0.35%)</title><rect x="1011.0" y="627.0" width="4.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1014.0" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.35%)</title><rect x="1011.0" y="611.0" width="4.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1014.0" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.35%)</title><rect x="1011.0" y="595.0" width="4.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1014.0" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (28 samples, 0.34%)</title><rect x="1011.2" y="579.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1014.2" y="590.0"></text>
</g>
<g>
<title>do_futex (27 samples, 0.32%)</title><rect x="1011.3" y="563.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1014.3" y="574.0"></text>
</g>
<g>
<title>futex_wake (27 samples, 0.32%)</title><rect x="1011.3" y="547.0" width="3.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1014.3" y="558.0"></text>
</g>
<g>
<title>wake_up_q (21 samples, 0.25%)</title><rect x="1012.2" y="531.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1015.2" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (21 samples, 0.25%)</title><rect x="1012.2" y="515.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1015.2" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (21 samples, 0.25%)</title><rect x="1012.2" y="499.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1015.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.05%)</title><rect x="1015.2" y="723.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1018.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (3 samples, 0.04%)</title><rect x="1016.2" y="931.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1019.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.04%)</title><rect x="1016.2" y="915.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1019.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.04%)</title><rect x="1016.2" y="899.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1019.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (2 samples, 0.02%)</title><rect x="1016.3" y="883.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1019.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (4 samples, 0.05%)</title><rect x="1016.6" y="963.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1019.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (4 samples, 0.05%)</title><rect x="1016.6" y="947.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1019.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (4 samples, 0.05%)</title><rect x="1016.6" y="931.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1019.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (4 samples, 0.05%)</title><rect x="1016.6" y="915.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1019.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (4 samples, 0.05%)</title><rect x="1016.6" y="899.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1019.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (4 samples, 0.05%)</title><rect x="1016.6" y="883.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1019.6" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (4 samples, 0.05%)</title><rect x="1016.6" y="867.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1019.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (3 samples, 0.04%)</title><rect x="1017.3" y="1059.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1020.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.02%)</title><rect x="1017.4" y="1043.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1020.4" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$623/2089019041.run (285 samples, 3.43%)</title><rect x="1017.7" y="1171.0" width="40.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1020.7" y="1182.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityGet$3 (285 samples, 3.43%)</title><rect x="1017.7" y="1155.0" width="40.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1020.7" y="1166.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.get (271 samples, 3.26%)</title><rect x="1018.1" y="1139.0" width="38.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1021.1" y="1150.0">ru/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (131 samples, 1.58%)</title><rect x="1018.6" y="1123.0" width="18.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1021.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (131 samples, 1.58%)</title><rect x="1018.6" y="1107.0" width="18.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1021.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (131 samples, 1.58%)</title><rect x="1018.6" y="1091.0" width="18.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1021.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (131 samples, 1.58%)</title><rect x="1018.6" y="1075.0" width="18.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1021.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.04%)</title><rect x="1018.6" y="1059.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1021.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.02%)</title><rect x="1018.7" y="1043.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1021.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2 samples, 0.02%)</title><rect x="1019.0" y="1059.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1022.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.02%)</title><rect x="1019.0" y="1043.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1022.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (76 samples, 0.91%)</title><rect x="1019.3" y="1059.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1022.3" y="1070.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (3 samples, 0.04%)</title><rect x="1019.3" y="1043.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1022.3" y="1054.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.02%)</title><rect x="1019.3" y="1027.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1022.3" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (15 samples, 0.18%)</title><rect x="1019.7" y="1043.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1022.7" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (15 samples, 0.18%)</title><rect x="1019.7" y="1027.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1022.7" y="1038.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (12 samples, 0.14%)</title><rect x="1020.1" y="1011.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1023.1" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (11 samples, 0.13%)</title><rect x="1020.3" y="995.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1023.3" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1651491428.accept (10 samples, 0.12%)</title><rect x="1020.3" y="979.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1023.3" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (10 samples, 0.12%)</title><rect x="1020.3" y="963.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1023.3" y="974.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (9 samples, 0.11%)</title><rect x="1020.4" y="947.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1023.4" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$129/677985599.accept (7 samples, 0.08%)</title><rect x="1020.6" y="931.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1023.6" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (5 samples, 0.06%)</title><rect x="1020.8" y="915.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1023.8" y="926.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.04%)</title><rect x="1020.8" y="899.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1023.8" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3 samples, 0.04%)</title><rect x="1020.8" y="883.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1023.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$79/453523494.test (2 samples, 0.02%)</title><rect x="1021.3" y="899.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1024.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (2 samples, 0.02%)</title><rect x="1021.3" y="883.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1024.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.02%)</title><rect x="1021.8" y="1043.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1024.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.02%)</title><rect x="1021.8" y="1027.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1024.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (55 samples, 0.66%)</title><rect x="1022.1" y="1043.0" width="7.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1025.1" y="1054.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (55 samples, 0.66%)</title><rect x="1022.1" y="1027.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1025.1" y="1038.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (53 samples, 0.64%)</title><rect x="1022.4" y="1011.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1025.4" y="1022.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (34 samples, 0.41%)</title><rect x="1022.5" y="995.0" width="4.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1025.5" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.04%)</title><rect x="1023.0" y="979.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1026.0" y="990.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (9 samples, 0.11%)</title><rect x="1023.5" y="979.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1026.5" y="990.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.02%)</title><rect x="1024.0" y="963.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1027.0" y="974.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (2 samples, 0.02%)</title><rect x="1024.4" y="963.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1027.4" y="974.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (11 samples, 0.13%)</title><rect x="1025.2" y="979.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1028.2" y="990.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.04%)</title><rect x="1025.4" y="963.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1028.4" y="974.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (6 samples, 0.07%)</title><rect x="1025.9" y="963.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1028.9" y="974.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (6 samples, 0.07%)</title><rect x="1025.9" y="947.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1028.9" y="958.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (4 samples, 0.05%)</title><rect x="1026.8" y="979.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1029.8" y="990.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.02%)</title><rect x="1027.1" y="963.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1030.1" y="974.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (13 samples, 0.16%)</title><rect x="1027.9" y="995.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1030.9" y="1006.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (9 samples, 0.11%)</title><rect x="1028.5" y="979.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1031.5" y="990.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.02%)</title><rect x="1028.8" y="963.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1031.8" y="974.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.02%)</title><rect x="1028.8" y="947.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1031.8" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.02%)</title><rect x="1028.8" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1031.8" y="942.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (4 samples, 0.05%)</title><rect x="1029.2" y="963.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1032.2" y="974.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.05%)</title><rect x="1029.2" y="947.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1032.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.05%)</title><rect x="1029.2" y="931.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1032.2" y="942.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.04%)</title><rect x="1029.4" y="915.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1032.4" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.04%)</title><rect x="1029.4" y="899.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1032.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (17 samples, 0.20%)</title><rect x="1030.1" y="1059.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1033.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1030.1" y="1043.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1033.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.02%)</title><rect x="1030.1" y="1027.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1033.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.02%)</title><rect x="1030.1" y="1011.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1033.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (2 samples, 0.02%)</title><rect x="1030.1" y="995.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1033.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (2 samples, 0.02%)</title><rect x="1030.1" y="979.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1033.1" y="990.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (2 samples, 0.02%)</title><rect x="1030.1" y="963.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1033.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (15 samples, 0.18%)</title><rect x="1030.3" y="1043.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1033.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (15 samples, 0.18%)</title><rect x="1030.3" y="1027.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1033.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (4 samples, 0.05%)</title><rect x="1030.6" y="1011.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1033.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (3 samples, 0.04%)</title><rect x="1030.8" y="995.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1033.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (3 samples, 0.04%)</title><rect x="1030.8" y="979.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1033.8" y="990.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (3 samples, 0.04%)</title><rect x="1030.8" y="963.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1033.8" y="974.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.02%)</title><rect x="1031.2" y="1011.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1034.2" y="1022.0"></text>
</g>
<g>
<title>java/util/LinkedList.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1031.5" y="1011.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1034.5" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1031.5" y="995.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1034.5" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1031.5" y="979.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1034.5" y="990.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1031.5" y="963.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1034.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (2 samples, 0.02%)</title><rect x="1032.2" y="1011.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1035.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (33 samples, 0.40%)</title><rect x="1032.5" y="1059.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1035.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (27 samples, 0.32%)</title><rect x="1032.5" y="1043.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1035.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (27 samples, 0.32%)</title><rect x="1032.5" y="1027.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1035.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (26 samples, 0.31%)</title><rect x="1032.6" y="1011.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1035.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (3 samples, 0.04%)</title><rect x="1032.9" y="995.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1035.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.04%)</title><rect x="1032.9" y="979.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1035.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.04%)</title><rect x="1032.9" y="963.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1035.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.04%)</title><rect x="1032.9" y="947.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1035.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.04%)</title><rect x="1032.9" y="931.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1035.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.02%)</title><rect x="1033.3" y="995.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1036.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.02%)</title><rect x="1033.3" y="979.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1036.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.02%)</title><rect x="1033.3" y="963.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1036.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.02%)</title><rect x="1033.3" y="947.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1036.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.02%)</title><rect x="1033.3" y="931.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1036.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.02%)</title><rect x="1033.3" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1036.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (19 samples, 0.23%)</title><rect x="1033.6" y="995.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1036.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (19 samples, 0.23%)</title><rect x="1033.6" y="979.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1036.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 0.23%)</title><rect x="1033.6" y="963.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1036.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.23%)</title><rect x="1033.6" y="947.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1036.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.22%)</title><rect x="1033.8" y="931.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1036.8" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (17 samples, 0.20%)</title><rect x="1033.9" y="915.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1036.9" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.19%)</title><rect x="1034.0" y="899.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1037.0" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.19%)</title><rect x="1034.0" y="883.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1037.0" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.18%)</title><rect x="1034.2" y="867.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1037.2" y="878.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.18%)</title><rect x="1034.2" y="851.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1037.2" y="862.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.18%)</title><rect x="1034.2" y="835.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1037.2" y="846.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.16%)</title><rect x="1034.5" y="819.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1037.5" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.16%)</title><rect x="1034.5" y="803.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1037.5" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.16%)</title><rect x="1034.5" y="787.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1037.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (6 samples, 0.07%)</title><rect x="1036.3" y="1043.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1039.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.05%)</title><rect x="1036.6" y="1027.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1039.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.05%)</title><rect x="1036.6" y="1011.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1039.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="1036.6" y="995.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1039.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="1036.6" y="979.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1039.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (15 samples, 0.18%)</title><rect x="1037.2" y="1123.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1040.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (15 samples, 0.18%)</title><rect x="1037.2" y="1107.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1040.2" y="1118.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (15 samples, 0.18%)</title><rect x="1037.2" y="1091.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1040.2" y="1102.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (15 samples, 0.18%)</title><rect x="1037.2" y="1075.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1040.2" y="1086.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="1037.3" y="1059.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1040.3" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (11 samples, 0.13%)</title><rect x="1037.6" y="1059.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1040.6" y="1070.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1651491428.accept (10 samples, 0.12%)</title><rect x="1037.7" y="1043.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1040.7" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (9 samples, 0.11%)</title><rect x="1037.9" y="1027.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1040.9" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (8 samples, 0.10%)</title><rect x="1038.0" y="1011.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1041.0" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$129/677985599.accept (6 samples, 0.07%)</title><rect x="1038.3" y="995.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1041.3" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (6 samples, 0.07%)</title><rect x="1038.3" y="979.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1041.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (12 samples, 0.14%)</title><rect x="1039.3" y="1123.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1042.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (12 samples, 0.14%)</title><rect x="1039.3" y="1107.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1042.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (9 samples, 0.11%)</title><rect x="1039.3" y="1091.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1042.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/1088872417.test (6 samples, 0.07%)</title><rect x="1039.3" y="1075.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1042.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (6 samples, 0.07%)</title><rect x="1039.3" y="1059.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1042.3" y="1070.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (6 samples, 0.07%)</title><rect x="1039.3" y="1043.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1042.3" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (6 samples, 0.07%)</title><rect x="1039.3" y="1027.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1042.3" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (6 samples, 0.07%)</title><rect x="1039.3" y="1011.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1042.3" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 0.07%)</title><rect x="1039.3" y="995.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1042.3" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (6 samples, 0.07%)</title><rect x="1039.3" y="979.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1042.3" y="990.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.06%)</title><rect x="1039.4" y="963.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1042.4" y="974.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.06%)</title><rect x="1039.4" y="947.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1042.4" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (5 samples, 0.06%)</title><rect x="1039.4" y="931.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1042.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (3 samples, 0.04%)</title><rect x="1040.1" y="1075.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1043.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (3 samples, 0.04%)</title><rect x="1040.6" y="1091.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1043.6" y="1102.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (3 samples, 0.04%)</title><rect x="1040.6" y="1075.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1043.6" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.02%)</title><rect x="1040.6" y="1059.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1043.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.02%)</title><rect x="1040.6" y="1043.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1043.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.02%)</title><rect x="1040.6" y="1027.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1043.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.02%)</title><rect x="1040.6" y="1011.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1043.6" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.14%)</title><rect x="1041.0" y="1123.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1044.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.11%)</title><rect x="1041.3" y="1107.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1044.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.11%)</title><rect x="1041.3" y="1091.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1044.3" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager.rowGet (54 samples, 0.65%)</title><rect x="1042.7" y="1123.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1045.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (54 samples, 0.65%)</title><rect x="1042.7" y="1107.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1045.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (46 samples, 0.55%)</title><rect x="1043.5" y="1091.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1046.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 0.06%)</title><rect x="1043.5" y="1075.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1046.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 0.06%)</title><rect x="1043.5" y="1059.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1046.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (5 samples, 0.06%)</title><rect x="1043.5" y="1043.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1046.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.06%)</title><rect x="1043.5" y="1027.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1046.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.06%)</title><rect x="1043.5" y="1011.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1046.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (41 samples, 0.49%)</title><rect x="1044.3" y="1075.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1047.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (41 samples, 0.49%)</title><rect x="1044.3" y="1059.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1047.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (3 samples, 0.04%)</title><rect x="1044.4" y="1043.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1047.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.04%)</title><rect x="1044.4" y="1027.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1047.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.04%)</title><rect x="1044.4" y="1011.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1047.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.04%)</title><rect x="1044.4" y="995.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1047.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.04%)</title><rect x="1044.4" y="979.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1047.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (36 samples, 0.43%)</title><rect x="1045.0" y="1043.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1048.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (36 samples, 0.43%)</title><rect x="1045.0" y="1027.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1048.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (36 samples, 0.43%)</title><rect x="1045.0" y="1011.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1048.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (36 samples, 0.43%)</title><rect x="1045.0" y="995.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1048.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (36 samples, 0.43%)</title><rect x="1045.0" y="979.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1048.0" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.06%)</title><rect x="1045.0" y="963.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1048.0" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.02%)</title><rect x="1045.1" y="947.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1048.1" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (31 samples, 0.37%)</title><rect x="1045.7" y="963.0" width="4.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1048.7" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.36%)</title><rect x="1045.8" y="947.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1048.8" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="1045.8" y="931.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1048.8" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.34%)</title><rect x="1046.1" y="931.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1049.1" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (27 samples, 0.32%)</title><rect x="1046.2" y="915.0" width="3.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1049.2" y="926.0"></text>
</g>
<g>
<title>do_futex (26 samples, 0.31%)</title><rect x="1046.4" y="899.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1049.4" y="910.0"></text>
</g>
<g>
<title>futex_wake (26 samples, 0.31%)</title><rect x="1046.4" y="883.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1049.4" y="894.0"></text>
</g>
<g>
<title>wake_up_q (24 samples, 0.29%)</title><rect x="1046.7" y="867.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1049.7" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (24 samples, 0.29%)</title><rect x="1046.7" y="851.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1049.7" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (24 samples, 0.29%)</title><rect x="1046.7" y="835.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1049.7" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.requestForReplicaBuilder (38 samples, 0.46%)</title><rect x="1050.4" y="1123.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1053.4" y="1134.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (34 samples, 0.41%)</title><rect x="1050.4" y="1107.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1053.4" y="1118.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (29 samples, 0.35%)</title><rect x="1051.1" y="1091.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1054.1" y="1102.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (2 samples, 0.02%)</title><rect x="1051.8" y="1075.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1054.8" y="1086.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.02%)</title><rect x="1051.8" y="1059.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1054.8" y="1070.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (22 samples, 0.26%)</title><rect x="1052.1" y="1075.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1055.1" y="1086.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (6 samples, 0.07%)</title><rect x="1052.1" y="1059.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1055.1" y="1070.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (6 samples, 0.07%)</title><rect x="1052.1" y="1043.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1055.1" y="1054.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (16 samples, 0.19%)</title><rect x="1052.9" y="1059.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1055.9" y="1070.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (6 samples, 0.07%)</title><rect x="1053.3" y="1043.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1056.3" y="1054.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (4 samples, 0.05%)</title><rect x="1053.3" y="1027.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1056.3" y="1038.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.05%)</title><rect x="1053.3" y="1011.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1056.3" y="1022.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (2 samples, 0.02%)</title><rect x="1053.9" y="1027.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1056.9" y="1038.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (7 samples, 0.08%)</title><rect x="1054.2" y="1043.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1057.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (4 samples, 0.05%)</title><rect x="1055.2" y="1107.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1058.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (4 samples, 0.05%)</title><rect x="1055.2" y="1091.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1058.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (4 samples, 0.05%)</title><rect x="1055.2" y="1075.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1058.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.05%)</title><rect x="1055.2" y="1059.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1058.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.02%)</title><rect x="1055.5" y="1043.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1058.5" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primariesFor (6 samples, 0.07%)</title><rect x="1055.8" y="1123.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1058.8" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primariesFor (5 samples, 0.06%)</title><rect x="1055.9" y="1107.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1058.9" y="1118.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2 samples, 0.02%)</title><rect x="1056.2" y="1091.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1059.2" y="1102.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2 samples, 0.02%)</title><rect x="1056.2" y="1075.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1059.2" y="1086.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2 samples, 0.02%)</title><rect x="1056.2" y="1059.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1059.2" y="1070.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2 samples, 0.02%)</title><rect x="1056.2" y="1043.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1059.2" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.respond (5 samples, 0.06%)</title><rect x="1056.6" y="1139.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1059.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.06%)</title><rect x="1056.6" y="1123.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1059.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.05%)</title><rect x="1056.7" y="1107.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1059.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1056.7" y="1091.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1059.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1056.7" y="1075.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1059.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValidatedParameters.validateParameters (6 samples, 0.07%)</title><rect x="1057.3" y="1139.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1060.3" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.05%)</title><rect x="1057.3" y="1123.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1060.3" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.05%)</title><rect x="1057.3" y="1107.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1060.3" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValidatedParameters.unpackReplicasParameter (2 samples, 0.02%)</title><rect x="1057.9" y="1123.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1060.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (2 samples, 0.02%)</title><rect x="1057.9" y="1107.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1060.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (2 samples, 0.02%)</title><rect x="1057.9" y="1091.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1060.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.lastIndexOf (2 samples, 0.02%)</title><rect x="1057.9" y="1075.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1060.9" y="1086.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (15 samples, 0.18%)</title><rect x="1058.2" y="1171.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1061.2" y="1182.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (15 samples, 0.18%)</title><rect x="1058.2" y="1155.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1061.2" y="1166.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$675/1870761692.run (15 samples, 0.18%)</title><rect x="1058.2" y="1139.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1061.2" y="1150.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (15 samples, 0.18%)</title><rect x="1058.2" y="1123.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1061.2" y="1134.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (15 samples, 0.18%)</title><rect x="1058.2" y="1107.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1061.2" y="1118.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (15 samples, 0.18%)</title><rect x="1058.2" y="1091.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1061.2" y="1102.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (15 samples, 0.18%)</title><rect x="1058.2" y="1075.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1061.2" y="1086.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (14 samples, 0.17%)</title><rect x="1058.2" y="1059.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1061.2" y="1070.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (14 samples, 0.17%)</title><rect x="1058.2" y="1043.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1061.2" y="1054.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (14 samples, 0.17%)</title><rect x="1058.2" y="1027.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1061.2" y="1038.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (14 samples, 0.17%)</title><rect x="1058.2" y="1011.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1061.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.08%)</title><rect x="1058.2" y="995.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1061.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.08%)</title><rect x="1058.2" y="979.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1061.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (6 samples, 0.07%)</title><rect x="1058.2" y="963.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1061.2" y="974.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (6 samples, 0.07%)</title><rect x="1058.2" y="947.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1061.2" y="958.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (5 samples, 0.06%)</title><rect x="1058.2" y="931.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1061.2" y="942.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (5 samples, 0.06%)</title><rect x="1058.2" y="915.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1061.2" y="926.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (5 samples, 0.06%)</title><rect x="1058.2" y="899.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1061.2" y="910.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (5 samples, 0.06%)</title><rect x="1058.2" y="883.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1061.2" y="894.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (5 samples, 0.06%)</title><rect x="1058.2" y="867.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1061.2" y="878.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (5 samples, 0.06%)</title><rect x="1058.2" y="851.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1061.2" y="862.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (5 samples, 0.06%)</title><rect x="1058.2" y="835.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1061.2" y="846.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (5 samples, 0.06%)</title><rect x="1058.2" y="819.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1061.2" y="830.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (5 samples, 0.06%)</title><rect x="1058.2" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1061.2" y="814.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (5 samples, 0.06%)</title><rect x="1058.2" y="787.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1061.2" y="798.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (5 samples, 0.06%)</title><rect x="1058.2" y="771.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1061.2" y="782.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (5 samples, 0.06%)</title><rect x="1058.2" y="755.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1061.2" y="766.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (5 samples, 0.06%)</title><rect x="1058.2" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1061.2" y="750.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (3 samples, 0.04%)</title><rect x="1058.2" y="723.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1061.2" y="734.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (3 samples, 0.04%)</title><rect x="1058.2" y="707.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1061.2" y="718.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (3 samples, 0.04%)</title><rect x="1058.2" y="691.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1061.2" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (3 samples, 0.04%)</title><rect x="1058.2" y="675.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1061.2" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (2 samples, 0.02%)</title><rect x="1058.2" y="659.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1061.2" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (2 samples, 0.02%)</title><rect x="1058.2" y="643.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1061.2" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (2 samples, 0.02%)</title><rect x="1058.2" y="627.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1061.2" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (2 samples, 0.02%)</title><rect x="1058.2" y="611.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1061.2" y="622.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1058.2" y="595.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1061.2" y="606.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (2 samples, 0.02%)</title><rect x="1058.2" y="579.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1061.2" y="590.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.02%)</title><rect x="1058.6" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1061.6" y="734.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.02%)</title><rect x="1058.6" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1061.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.02%)</title><rect x="1058.6" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1061.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (2 samples, 0.02%)</title><rect x="1058.6" y="675.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1061.6" y="686.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (2 samples, 0.02%)</title><rect x="1058.6" y="659.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1061.6" y="670.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.02%)</title><rect x="1058.6" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1061.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.02%)</title><rect x="1058.6" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1061.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (2 samples, 0.02%)</title><rect x="1058.6" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1061.6" y="622.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (2 samples, 0.02%)</title><rect x="1058.6" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1061.6" y="606.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (2 samples, 0.02%)</title><rect x="1058.6" y="579.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1061.6" y="590.0"></text>
</g>
<g>
<title>jmm_GetThreadInfo (2 samples, 0.02%)</title><rect x="1058.6" y="563.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1061.6" y="574.0"></text>
</g>
<g>
<title>Management::create_thread_info_instance(ThreadSnapshot*, Thread*) (2 samples, 0.02%)</title><rect x="1058.6" y="547.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1061.6" y="558.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (5 samples, 0.06%)</title><rect x="1059.2" y="995.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1062.2" y="1006.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (5 samples, 0.06%)</title><rect x="1059.2" y="979.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1062.2" y="990.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (5 samples, 0.06%)</title><rect x="1059.2" y="963.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1062.2" y="974.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (5 samples, 0.06%)</title><rect x="1059.2" y="947.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1062.2" y="958.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.05%)</title><rect x="1059.3" y="931.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1062.3" y="942.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (4 samples, 0.05%)</title><rect x="1059.3" y="915.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1062.3" y="926.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (4 samples, 0.05%)</title><rect x="1059.3" y="899.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1062.3" y="910.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (4 samples, 0.05%)</title><rect x="1059.3" y="883.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1062.3" y="894.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.05%)</title><rect x="1059.3" y="867.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1062.3" y="878.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (4 samples, 0.05%)</title><rect x="1059.3" y="851.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1062.3" y="862.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (4 samples, 0.05%)</title><rect x="1059.3" y="835.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1062.3" y="846.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (4 samples, 0.05%)</title><rect x="1059.3" y="819.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1062.3" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.05%)</title><rect x="1059.3" y="803.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1062.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.05%)</title><rect x="1059.3" y="787.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1062.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor32.invoke (4 samples, 0.05%)</title><rect x="1059.3" y="771.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1062.3" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (4 samples, 0.05%)</title><rect x="1059.3" y="755.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1062.3" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (4 samples, 0.05%)</title><rect x="1059.3" y="739.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1062.3" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.05%)</title><rect x="1059.3" y="723.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1062.3" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.lookup (2 samples, 0.02%)</title><rect x="1059.3" y="707.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1062.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (100 samples, 1.20%)</title><rect x="1060.4" y="1219.0" width="14.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1063.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (100 samples, 1.20%)</title><rect x="1060.4" y="1203.0" width="14.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1063.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (73 samples, 0.88%)</title><rect x="1060.9" y="1187.0" width="10.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1063.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (73 samples, 0.88%)</title><rect x="1060.9" y="1171.0" width="10.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1063.9" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (55 samples, 0.66%)</title><rect x="1063.4" y="1155.0" width="7.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1066.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (51 samples, 0.61%)</title><rect x="1063.7" y="1139.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1066.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5 samples, 0.06%)</title><rect x="1064.0" y="1123.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1067.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.02%)</title><rect x="1064.3" y="1107.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1067.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (44 samples, 0.53%)</title><rect x="1064.7" y="1123.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1067.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (32 samples, 0.38%)</title><rect x="1064.7" y="1107.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1067.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (32 samples, 0.38%)</title><rect x="1064.7" y="1091.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1067.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (32 samples, 0.38%)</title><rect x="1064.7" y="1075.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1067.7" y="1086.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="1064.8" y="1059.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1067.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (29 samples, 0.35%)</title><rect x="1065.1" y="1059.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1068.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.02%)</title><rect x="1065.1" y="1043.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1068.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (27 samples, 0.32%)</title><rect x="1065.4" y="1043.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1068.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (26 samples, 0.31%)</title><rect x="1065.5" y="1027.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1068.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (7 samples, 0.08%)</title><rect x="1065.7" y="1011.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1068.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (7 samples, 0.08%)</title><rect x="1065.7" y="995.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1068.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (7 samples, 0.08%)</title><rect x="1065.7" y="979.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1068.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (7 samples, 0.08%)</title><rect x="1065.7" y="963.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1068.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.08%)</title><rect x="1065.7" y="947.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1068.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.02%)</title><rect x="1066.7" y="1011.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1069.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.02%)</title><rect x="1066.7" y="995.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1069.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (16 samples, 0.19%)</title><rect x="1067.0" y="1011.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1070.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (16 samples, 0.19%)</title><rect x="1067.0" y="995.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1070.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (16 samples, 0.19%)</title><rect x="1067.0" y="979.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1070.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.19%)</title><rect x="1067.0" y="963.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1070.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.18%)</title><rect x="1067.1" y="947.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1070.1" y="958.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.05%)</title><rect x="1067.1" y="931.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1070.1" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.02%)</title><rect x="1067.4" y="915.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1070.4" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.13%)</title><rect x="1067.7" y="931.0" width="1.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1070.7" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.13%)</title><rect x="1067.7" y="915.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1070.7" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.13%)</title><rect x="1067.7" y="899.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1070.7" y="910.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.13%)</title><rect x="1067.7" y="883.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1070.7" y="894.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.13%)</title><rect x="1067.7" y="867.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1070.7" y="878.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.13%)</title><rect x="1067.7" y="851.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1070.7" y="862.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.11%)</title><rect x="1068.0" y="835.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1071.0" y="846.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.11%)</title><rect x="1068.0" y="819.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1071.0" y="830.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.11%)</title><rect x="1068.0" y="803.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1071.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (12 samples, 0.14%)</title><rect x="1069.2" y="1107.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1072.2" y="1118.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.02%)</title><rect x="1070.9" y="1139.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1073.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.05%)</title><rect x="1071.2" y="1187.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1074.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (20 samples, 0.24%)</title><rect x="1071.8" y="1187.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1074.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (16 samples, 0.19%)</title><rect x="1071.9" y="1171.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1074.9" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.08%)</title><rect x="1072.1" y="1155.0" width="1.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1075.1" y="1166.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.06%)</title><rect x="1072.1" y="1139.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1075.1" y="1150.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (3 samples, 0.04%)</title><rect x="1072.4" y="1123.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1075.4" y="1134.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="1072.4" y="1107.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1075.4" y="1118.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="1072.4" y="1091.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1075.4" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (7 samples, 0.08%)</title><rect x="1073.2" y="1155.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1076.2" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.08%)</title><rect x="1073.2" y="1139.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1076.2" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.08%)</title><rect x="1073.2" y="1123.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1076.2" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.05%)</title><rect x="1073.6" y="1107.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1076.6" y="1118.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="1073.6" y="1091.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1076.6" y="1102.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.04%)</title><rect x="1073.6" y="1075.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1076.6" y="1086.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.02%)</title><rect x="1073.8" y="1059.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1076.8" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="1074.2" y="1171.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1077.2" y="1182.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.02%)</title><rect x="1074.3" y="1155.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1077.3" y="1166.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="1074.3" y="1139.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1077.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (424 samples, 5.10%)</title><rect x="1074.6" y="1219.0" width="60.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1077.6" y="1230.0">jdk/in..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.07%)</title><rect x="1078.2" y="1203.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1081.2" y="1214.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.07%)</title><rect x="1078.2" y="1187.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1081.2" y="1198.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.04%)</title><rect x="1078.5" y="1171.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1081.5" y="1182.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.02%)</title><rect x="1078.6" y="1155.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1081.6" y="1166.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (8 samples, 0.10%)</title><rect x="1079.2" y="1203.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1082.2" y="1214.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (8 samples, 0.10%)</title><rect x="1079.2" y="1187.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1082.2" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (4 samples, 0.05%)</title><rect x="1080.3" y="1203.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1083.3" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (96 samples, 1.15%)</title><rect x="1080.9" y="1203.0" width="13.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1083.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$449/429036175.accept (93 samples, 1.12%)</title><rect x="1081.0" y="1187.0" width="13.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1084.0" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (93 samples, 1.12%)</title><rect x="1081.0" y="1171.0" width="13.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1084.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (93 samples, 1.12%)</title><rect x="1081.0" y="1155.0" width="13.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1084.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (93 samples, 1.12%)</title><rect x="1081.0" y="1139.0" width="13.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1084.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (93 samples, 1.12%)</title><rect x="1081.0" y="1123.0" width="13.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1084.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (92 samples, 1.11%)</title><rect x="1081.2" y="1107.0" width="13.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1084.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (92 samples, 1.11%)</title><rect x="1081.2" y="1091.0" width="13.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1084.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (92 samples, 1.11%)</title><rect x="1081.2" y="1075.0" width="13.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1084.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (92 samples, 1.11%)</title><rect x="1081.2" y="1059.0" width="13.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1084.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (92 samples, 1.11%)</title><rect x="1081.2" y="1043.0" width="13.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1084.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$250/1750372623.run (92 samples, 1.11%)</title><rect x="1081.2" y="1027.0" width="13.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1084.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (92 samples, 1.11%)</title><rect x="1081.2" y="1011.0" width="13.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1084.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (29 samples, 0.35%)</title><rect x="1081.4" y="995.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1084.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (29 samples, 0.35%)</title><rect x="1081.4" y="979.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1084.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (29 samples, 0.35%)</title><rect x="1081.4" y="963.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1084.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (29 samples, 0.35%)</title><rect x="1081.4" y="947.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1084.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (29 samples, 0.35%)</title><rect x="1081.4" y="931.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1084.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (24 samples, 0.29%)</title><rect x="1082.0" y="915.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1085.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (24 samples, 0.29%)</title><rect x="1082.0" y="899.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1085.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (24 samples, 0.29%)</title><rect x="1082.0" y="883.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1085.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.02%)</title><rect x="1082.1" y="867.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1085.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.02%)</title><rect x="1082.1" y="851.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1085.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.02%)</title><rect x="1082.1" y="835.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1085.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.02%)</title><rect x="1082.1" y="819.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1085.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.02%)</title><rect x="1082.1" y="803.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1085.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (21 samples, 0.25%)</title><rect x="1082.4" y="867.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1085.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (21 samples, 0.25%)</title><rect x="1082.4" y="851.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1085.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (21 samples, 0.25%)</title><rect x="1082.4" y="835.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1085.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (21 samples, 0.25%)</title><rect x="1082.4" y="819.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1085.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (21 samples, 0.25%)</title><rect x="1082.4" y="803.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1085.4" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.02%)</title><rect x="1082.6" y="787.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1085.6" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (18 samples, 0.22%)</title><rect x="1082.9" y="787.0" width="2.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1085.9" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.20%)</title><rect x="1083.0" y="771.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1086.0" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.20%)</title><rect x="1083.0" y="755.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1086.0" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.19%)</title><rect x="1083.1" y="739.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1086.1" y="750.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.19%)</title><rect x="1083.1" y="723.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1086.1" y="734.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.19%)</title><rect x="1083.1" y="707.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1086.1" y="718.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.02%)</title><rect x="1083.4" y="691.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1086.4" y="702.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.14%)</title><rect x="1083.7" y="691.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1086.7" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.14%)</title><rect x="1083.7" y="675.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1086.7" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.14%)</title><rect x="1083.7" y="659.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1086.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (2 samples, 0.02%)</title><rect x="1085.6" y="995.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1088.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (4 samples, 0.05%)</title><rect x="1085.8" y="995.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1088.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (3 samples, 0.04%)</title><rect x="1086.0" y="979.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1089.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.04%)</title><rect x="1086.0" y="963.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1089.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (55 samples, 0.66%)</title><rect x="1086.4" y="995.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1089.4" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (52 samples, 0.63%)</title><rect x="1086.8" y="979.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1089.8" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (48 samples, 0.58%)</title><rect x="1087.4" y="963.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1090.4" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (48 samples, 0.58%)</title><rect x="1087.4" y="947.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1090.4" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (48 samples, 0.58%)</title><rect x="1087.4" y="931.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1090.4" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (48 samples, 0.58%)</title><rect x="1087.4" y="915.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1090.4" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (43 samples, 0.52%)</title><rect x="1088.1" y="899.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1091.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.49%)</title><rect x="1088.2" y="883.0" width="5.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1091.2" y="894.0"></text>
</g>
<g>
<title>__GI___libc_read (40 samples, 0.48%)</title><rect x="1088.2" y="867.0" width="5.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1091.2" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.46%)</title><rect x="1088.5" y="851.0" width="5.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1091.5" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.46%)</title><rect x="1088.5" y="835.0" width="5.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1091.5" y="846.0"></text>
</g>
<g>
<title>__x64_sys_read (38 samples, 0.46%)</title><rect x="1088.5" y="819.0" width="5.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1091.5" y="830.0"></text>
</g>
<g>
<title>ksys_read (38 samples, 0.46%)</title><rect x="1088.5" y="803.0" width="5.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1091.5" y="814.0"></text>
</g>
<g>
<title>vfs_read (37 samples, 0.44%)</title><rect x="1088.7" y="787.0" width="5.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1091.7" y="798.0"></text>
</g>
<g>
<title>__vfs_read (30 samples, 0.36%)</title><rect x="1089.0" y="771.0" width="4.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1092.0" y="782.0"></text>
</g>
<g>
<title>new_sync_read (28 samples, 0.34%)</title><rect x="1089.1" y="755.0" width="4.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1092.1" y="766.0"></text>
</g>
<g>
<title>sock_read_iter (28 samples, 0.34%)</title><rect x="1089.1" y="739.0" width="4.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1092.1" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (25 samples, 0.30%)</title><rect x="1089.5" y="723.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1092.5" y="734.0"></text>
</g>
<g>
<title>inet6_recvmsg (17 samples, 0.20%)</title><rect x="1089.5" y="707.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1092.5" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (16 samples, 0.19%)</title><rect x="1089.7" y="691.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1092.7" y="702.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.02%)</title><rect x="1090.5" y="675.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1093.5" y="686.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.02%)</title><rect x="1090.5" y="659.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1093.5" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.04%)</title><rect x="1091.1" y="675.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1094.1" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.04%)</title><rect x="1091.1" y="659.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1094.1" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.02%)</title><rect x="1091.5" y="675.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1094.5" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (8 samples, 0.10%)</title><rect x="1091.9" y="707.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1094.9" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.08%)</title><rect x="1092.1" y="691.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1095.1" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.08%)</title><rect x="1092.1" y="675.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1095.1" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.07%)</title><rect x="1092.2" y="659.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1095.2" y="670.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (5 samples, 0.06%)</title><rect x="1092.4" y="643.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1095.4" y="654.0"></text>
</g>
<g>
<title>aa_profile_af_perm (3 samples, 0.04%)</title><rect x="1092.6" y="627.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1095.6" y="638.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.06%)</title><rect x="1093.2" y="771.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1096.2" y="782.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.05%)</title><rect x="1093.4" y="755.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1096.4" y="766.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="1093.4" y="739.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1096.4" y="750.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="1093.4" y="723.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1096.4" y="734.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="1093.6" y="739.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1096.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$459/961199458.accept (2 samples, 0.02%)</title><rect x="1094.2" y="1187.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1097.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (2 samples, 0.02%)</title><rect x="1094.2" y="1171.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1097.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$448/1811817054.run (2 samples, 0.02%)</title><rect x="1094.2" y="1155.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1097.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (2 samples, 0.02%)</title><rect x="1094.2" y="1139.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1097.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (2 samples, 0.02%)</title><rect x="1094.2" y="1123.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.2" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (10 samples, 0.12%)</title><rect x="1094.6" y="1203.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1097.6" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.11%)</title><rect x="1094.8" y="1187.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1097.8" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (9 samples, 0.11%)</title><rect x="1094.8" y="1171.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1097.8" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (9 samples, 0.11%)</title><rect x="1094.8" y="1155.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1097.8" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (8 samples, 0.10%)</title><rect x="1094.9" y="1139.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1097.9" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6 samples, 0.07%)</title><rect x="1094.9" y="1123.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1097.9" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (4 samples, 0.05%)</title><rect x="1094.9" y="1107.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1097.9" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (4 samples, 0.05%)</title><rect x="1094.9" y="1091.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1097.9" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (2 samples, 0.02%)</title><rect x="1095.1" y="1075.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1098.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$447/973791182.accept (2 samples, 0.02%)</title><rect x="1095.1" y="1059.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1098.1" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.02%)</title><rect x="1095.1" y="1043.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1098.1" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.02%)</title><rect x="1095.1" y="1027.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1098.1" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.02%)</title><rect x="1095.1" y="1011.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1098.1" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.02%)</title><rect x="1095.1" y="995.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1098.1" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (2 samples, 0.02%)</title><rect x="1095.1" y="979.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1098.1" y="990.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (2 samples, 0.02%)</title><rect x="1095.5" y="1107.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1098.5" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$HashMapSpliterator.estimateSize (2 samples, 0.02%)</title><rect x="1095.5" y="1091.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1098.5" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.02%)</title><rect x="1095.8" y="1123.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (74 samples, 0.89%)</title><rect x="1096.1" y="1203.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1099.1" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$267/1319721399.run (44 samples, 0.53%)</title><rect x="1096.1" y="1187.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1099.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (44 samples, 0.53%)</title><rect x="1096.1" y="1171.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1099.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (44 samples, 0.53%)</title><rect x="1096.1" y="1155.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1099.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (44 samples, 0.53%)</title><rect x="1096.1" y="1139.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1099.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (41 samples, 0.49%)</title><rect x="1096.5" y="1123.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1099.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (39 samples, 0.47%)</title><rect x="1096.8" y="1107.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1099.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$250/1750372623.run (37 samples, 0.44%)</title><rect x="1097.0" y="1091.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1100.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (37 samples, 0.44%)</title><rect x="1097.0" y="1075.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1100.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (36 samples, 0.43%)</title><rect x="1097.2" y="1059.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1100.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (33 samples, 0.40%)</title><rect x="1097.6" y="1043.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1100.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (7 samples, 0.08%)</title><rect x="1097.6" y="1027.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1100.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (6 samples, 0.07%)</title><rect x="1097.6" y="1011.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1100.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (6 samples, 0.07%)</title><rect x="1097.6" y="995.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1100.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (5 samples, 0.06%)</title><rect x="1097.8" y="979.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1100.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (3 samples, 0.04%)</title><rect x="1098.0" y="963.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1101.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.02%)</title><rect x="1098.2" y="947.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1101.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (26 samples, 0.31%)</title><rect x="1098.6" y="1027.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1101.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (16 samples, 0.19%)</title><rect x="1100.0" y="1011.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1103.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.13%)</title><rect x="1100.7" y="995.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1103.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.13%)</title><rect x="1100.7" y="979.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1103.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.13%)</title><rect x="1100.7" y="963.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1103.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (10 samples, 0.12%)</title><rect x="1100.9" y="947.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1103.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.08%)</title><rect x="1101.3" y="931.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1104.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.08%)</title><rect x="1101.3" y="915.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1104.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.08%)</title><rect x="1101.3" y="899.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1104.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.08%)</title><rect x="1101.3" y="883.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1104.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.06%)</title><rect x="1101.6" y="867.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1104.6" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.05%)</title><rect x="1101.7" y="851.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1104.7" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="1101.7" y="835.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1104.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="1101.7" y="819.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1104.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.05%)</title><rect x="1101.7" y="803.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1104.7" y="814.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.05%)</title><rect x="1101.7" y="787.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1104.7" y="798.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.05%)</title><rect x="1101.7" y="771.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1104.7" y="782.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.05%)</title><rect x="1101.7" y="755.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1104.7" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.05%)</title><rect x="1101.7" y="739.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1104.7" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.05%)</title><rect x="1101.7" y="723.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1104.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$286/1600672828.run (30 samples, 0.36%)</title><rect x="1102.3" y="1187.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1105.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (30 samples, 0.36%)</title><rect x="1102.3" y="1171.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1105.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (28 samples, 0.34%)</title><rect x="1102.6" y="1155.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1105.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (28 samples, 0.34%)</title><rect x="1102.6" y="1139.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1105.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (27 samples, 0.32%)</title><rect x="1102.7" y="1123.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1105.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (4 samples, 0.05%)</title><rect x="1103.0" y="1107.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1106.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.05%)</title><rect x="1103.0" y="1091.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1106.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.05%)</title><rect x="1103.0" y="1075.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1106.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.05%)</title><rect x="1103.0" y="1059.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1106.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.05%)</title><rect x="1103.0" y="1043.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1106.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (20 samples, 0.24%)</title><rect x="1103.7" y="1107.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1106.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (20 samples, 0.24%)</title><rect x="1103.7" y="1091.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1106.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (20 samples, 0.24%)</title><rect x="1103.7" y="1075.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1106.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 0.24%)</title><rect x="1103.7" y="1059.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1106.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 0.23%)</title><rect x="1103.9" y="1043.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1106.9" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.06%)</title><rect x="1103.9" y="1027.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1106.9" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 0.17%)</title><rect x="1104.6" y="1027.0" width="2.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1107.6" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.17%)</title><rect x="1104.6" y="1011.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1107.6" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.17%)</title><rect x="1104.6" y="995.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1107.6" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.16%)</title><rect x="1104.7" y="979.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1107.7" y="990.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.16%)</title><rect x="1104.7" y="963.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1107.7" y="974.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.16%)</title><rect x="1104.7" y="947.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1107.7" y="958.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.05%)</title><rect x="1104.9" y="931.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1107.9" y="942.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.10%)</title><rect x="1105.4" y="931.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1108.4" y="942.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.10%)</title><rect x="1105.4" y="915.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1108.4" y="926.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.10%)</title><rect x="1105.4" y="899.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1108.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (21 samples, 0.25%)</title><rect x="1106.6" y="1203.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1109.6" y="1214.0"></text>
</g>
<g>
<title>java/time/Instant.now (9 samples, 0.11%)</title><rect x="1106.6" y="1187.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1109.6" y="1198.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (9 samples, 0.11%)</title><rect x="1106.6" y="1171.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1109.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (4 samples, 0.05%)</title><rect x="1107.3" y="1155.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1110.3" y="1166.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.04%)</title><rect x="1107.4" y="1139.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1110.4" y="1150.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (3 samples, 0.04%)</title><rect x="1107.4" y="1123.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1110.4" y="1134.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.02%)</title><rect x="1107.5" y="1107.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1110.5" y="1118.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="1107.5" y="1091.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1110.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (12 samples, 0.14%)</title><rect x="1107.8" y="1187.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1110.8" y="1198.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.04%)</title><rect x="1108.3" y="1171.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1111.3" y="1182.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.04%)</title><rect x="1108.3" y="1155.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1111.3" y="1166.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.04%)</title><rect x="1108.3" y="1139.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1111.3" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.02%)</title><rect x="1108.4" y="1123.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1111.4" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.06%)</title><rect x="1108.7" y="1171.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1111.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.04%)</title><rect x="1109.5" y="1203.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1112.5" y="1214.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.02%)</title><rect x="1109.7" y="1187.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1112.7" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.02%)</title><rect x="1109.7" y="1171.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1112.7" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.02%)</title><rect x="1109.7" y="1155.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1112.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (27 samples, 0.32%)</title><rect x="1110.0" y="1203.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1113.0" y="1214.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.04%)</title><rect x="1110.0" y="1187.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1113.0" y="1198.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.04%)</title><rect x="1110.0" y="1171.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1113.0" y="1182.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.02%)</title><rect x="1110.0" y="1155.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1113.0" y="1166.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.02%)</title><rect x="1110.0" y="1139.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1113.0" y="1150.0"></text>
</g>
<g>
<title>java/time/Instant.now (10 samples, 0.12%)</title><rect x="1110.4" y="1187.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1113.4" y="1198.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (10 samples, 0.12%)</title><rect x="1110.4" y="1171.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1113.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (6 samples, 0.07%)</title><rect x="1111.0" y="1155.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1114.0" y="1166.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (6 samples, 0.07%)</title><rect x="1111.0" y="1139.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1114.0" y="1150.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.02%)</title><rect x="1111.5" y="1123.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1114.5" y="1134.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.02%)</title><rect x="1111.5" y="1107.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1114.5" y="1118.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="1111.5" y="1091.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1114.5" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (9 samples, 0.11%)</title><rect x="1111.8" y="1187.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1114.8" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (9 samples, 0.11%)</title><rect x="1111.8" y="1171.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1114.8" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (9 samples, 0.11%)</title><rect x="1111.8" y="1155.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1114.8" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (5 samples, 0.06%)</title><rect x="1113.1" y="1187.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1116.1" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (5 samples, 0.06%)</title><rect x="1113.1" y="1171.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1116.1" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (5 samples, 0.06%)</title><rect x="1113.1" y="1155.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1116.1" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (5 samples, 0.06%)</title><rect x="1113.1" y="1139.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1116.1" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (130 samples, 1.56%)</title><rect x="1113.9" y="1203.0" width="18.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1116.9" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (130 samples, 1.56%)</title><rect x="1113.9" y="1187.0" width="18.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1116.9" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (125 samples, 1.50%)</title><rect x="1114.6" y="1171.0" width="17.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1117.6" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (46 samples, 0.55%)</title><rect x="1114.9" y="1155.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1117.9" y="1166.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.54%)</title><rect x="1114.9" y="1139.0" width="6.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1117.9" y="1150.0"></text>
</g>
<g>
<title>epoll_wait (45 samples, 0.54%)</title><rect x="1114.9" y="1123.0" width="6.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1117.9" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.52%)</title><rect x="1115.2" y="1107.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1118.2" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (43 samples, 0.52%)</title><rect x="1115.2" y="1091.0" width="6.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1118.2" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (38 samples, 0.46%)</title><rect x="1115.9" y="1075.0" width="5.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1118.9" y="1086.0"></text>
</g>
<g>
<title>do_epoll_wait (38 samples, 0.46%)</title><rect x="1115.9" y="1059.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1118.9" y="1070.0"></text>
</g>
<g>
<title>ep_poll (34 samples, 0.41%)</title><rect x="1116.2" y="1043.0" width="4.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1119.2" y="1054.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (18 samples, 0.22%)</title><rect x="1116.3" y="1027.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1119.3" y="1038.0"></text>
</g>
<g>
<title>ep_send_events_proc (14 samples, 0.17%)</title><rect x="1116.8" y="1011.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1119.8" y="1022.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (11 samples, 0.13%)</title><rect x="1117.1" y="995.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1120.1" y="1006.0"></text>
</g>
<g>
<title>pipe_poll (5 samples, 0.06%)</title><rect x="1117.3" y="979.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1120.3" y="990.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.04%)</title><rect x="1118.1" y="979.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1121.1" y="990.0"></text>
</g>
<g>
<title>ktime_get_ts64 (3 samples, 0.04%)</title><rect x="1118.9" y="1027.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1121.9" y="1038.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="1119.0" y="1011.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1122.0" y="1022.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (11 samples, 0.13%)</title><rect x="1119.3" y="1027.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1122.3" y="1038.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (11 samples, 0.13%)</title><rect x="1119.3" y="1011.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1122.3" y="1022.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (4 samples, 0.05%)</title><rect x="1119.3" y="995.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1122.3" y="1006.0"></text>
</g>
<g>
<title>__hrtimer_init (4 samples, 0.05%)</title><rect x="1119.3" y="979.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1122.3" y="990.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (5 samples, 0.06%)</title><rect x="1119.9" y="995.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1122.9" y="1006.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.06%)</title><rect x="1119.9" y="979.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1122.9" y="990.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="1120.6" y="995.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1123.6" y="1006.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.02%)</title><rect x="1120.6" y="979.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1123.6" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (62 samples, 0.75%)</title><rect x="1121.5" y="1155.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1124.5" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.get (15 samples, 0.18%)</title><rect x="1121.5" y="1139.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1124.5" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (15 samples, 0.18%)</title><rect x="1121.5" y="1123.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1124.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/Integer.equals (2 samples, 0.02%)</title><rect x="1123.3" y="1107.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1126.3" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (43 samples, 0.52%)</title><rect x="1123.6" y="1139.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1126.6" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (41 samples, 0.49%)</title><rect x="1123.9" y="1123.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1126.9" y="1134.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.41%)</title><rect x="1124.7" y="1107.0" width="4.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1127.7" y="1118.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (19 samples, 0.23%)</title><rect x="1124.7" y="1091.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1127.7" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_read (18 samples, 0.22%)</title><rect x="1124.7" y="1075.0" width="2.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1127.7" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.22%)</title><rect x="1124.7" y="1059.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1127.7" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.22%)</title><rect x="1124.7" y="1043.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1127.7" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_read (18 samples, 0.22%)</title><rect x="1124.7" y="1027.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1127.7" y="1038.0"></text>
</g>
<g>
<title>ksys_read (18 samples, 0.22%)</title><rect x="1124.7" y="1011.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1127.7" y="1022.0"></text>
</g>
<g>
<title>fput (2 samples, 0.02%)</title><rect x="1124.9" y="995.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1127.9" y="1006.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.02%)</title><rect x="1124.9" y="979.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1127.9" y="990.0"></text>
</g>
<g>
<title>vfs_read (15 samples, 0.18%)</title><rect x="1125.1" y="995.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1128.1" y="1006.0"></text>
</g>
<g>
<title>__vfs_read (11 samples, 0.13%)</title><rect x="1125.1" y="979.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1128.1" y="990.0"></text>
</g>
<g>
<title>new_sync_read (11 samples, 0.13%)</title><rect x="1125.1" y="963.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1128.1" y="974.0"></text>
</g>
<g>
<title>pipe_read (11 samples, 0.13%)</title><rect x="1125.1" y="947.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1128.1" y="958.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.04%)</title><rect x="1125.3" y="931.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1128.3" y="942.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.04%)</title><rect x="1125.3" y="915.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1128.3" y="926.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.04%)</title><rect x="1125.3" y="899.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1128.3" y="910.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.04%)</title><rect x="1125.9" y="931.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1128.9" y="942.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="1125.9" y="915.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1128.9" y="926.0"></text>
</g>
<g>
<title>touch_atime (3 samples, 0.04%)</title><rect x="1126.3" y="931.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1129.3" y="942.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.02%)</title><rect x="1126.3" y="915.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1129.3" y="926.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.04%)</title><rect x="1126.7" y="979.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1129.7" y="990.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (6 samples, 0.07%)</title><rect x="1127.4" y="1091.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1130.4" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_read (6 samples, 0.07%)</title><rect x="1127.4" y="1075.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1130.4" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.07%)</title><rect x="1127.4" y="1059.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1130.4" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.07%)</title><rect x="1127.4" y="1043.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1130.4" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_read (6 samples, 0.07%)</title><rect x="1127.4" y="1027.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1130.4" y="1038.0"></text>
</g>
<g>
<title>ksys_read (6 samples, 0.07%)</title><rect x="1127.4" y="1011.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1130.4" y="1022.0"></text>
</g>
<g>
<title>vfs_read (6 samples, 0.07%)</title><rect x="1127.4" y="995.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1130.4" y="1006.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.06%)</title><rect x="1127.4" y="979.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1130.4" y="990.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.06%)</title><rect x="1127.4" y="963.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1130.4" y="974.0"></text>
</g>
<g>
<title>pipe_read (4 samples, 0.05%)</title><rect x="1127.6" y="947.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1130.6" y="958.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.02%)</title><rect x="1127.7" y="931.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1130.7" y="942.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.02%)</title><rect x="1127.7" y="915.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1130.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="1128.3" y="1091.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1131.3" y="1102.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (3 samples, 0.04%)</title><rect x="1128.3" y="1075.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1131.3" y="1086.0"></text>
</g>
<g>
<title>__GI___libc_read (3 samples, 0.04%)</title><rect x="1128.3" y="1059.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1131.3" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="1128.3" y="1043.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1131.3" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="1128.3" y="1027.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1131.3" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_read (3 samples, 0.04%)</title><rect x="1128.3" y="1011.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1131.3" y="1022.0"></text>
</g>
<g>
<title>ksys_read (3 samples, 0.04%)</title><rect x="1128.3" y="995.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1131.3" y="1006.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.04%)</title><rect x="1128.3" y="979.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1131.3" y="990.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="1128.3" y="963.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1131.3" y="974.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="1128.3" y="947.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1131.3" y="958.0"></text>
</g>
<g>
<title>pipe_read (2 samples, 0.02%)</title><rect x="1128.3" y="931.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1131.3" y="942.0"></text>
</g>
<g>
<title>__GI___libc_read (2 samples, 0.02%)</title><rect x="1128.8" y="1075.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1131.8" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="1128.8" y="1059.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1131.8" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="1128.8" y="1043.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1131.8" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_read (2 samples, 0.02%)</title><rect x="1128.8" y="1027.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1131.8" y="1038.0"></text>
</g>
<g>
<title>ksys_read (2 samples, 0.02%)</title><rect x="1128.8" y="1011.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1131.8" y="1022.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.02%)</title><rect x="1128.8" y="995.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1131.8" y="1006.0"></text>
</g>
<g>
<title>__GI___libc_read (3 samples, 0.04%)</title><rect x="1129.1" y="1091.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1132.1" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="1129.3" y="1075.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1132.3" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="1129.3" y="1059.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1132.3" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_read (2 samples, 0.02%)</title><rect x="1129.3" y="1043.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1132.3" y="1054.0"></text>
</g>
<g>
<title>ksys_read (2 samples, 0.02%)</title><rect x="1129.3" y="1027.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1132.3" y="1038.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.02%)</title><rect x="1129.3" y="1011.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1132.3" y="1022.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="1129.3" y="995.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1132.3" y="1006.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="1129.3" y="979.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1132.3" y="990.0"></text>
</g>
<g>
<title>pipe_read (2 samples, 0.02%)</title><rect x="1129.3" y="963.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1132.3" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (4 samples, 0.05%)</title><rect x="1129.7" y="1139.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1132.7" y="1150.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.05%)</title><rect x="1129.7" y="1123.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1132.7" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.05%)</title><rect x="1129.7" y="1107.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1132.7" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.05%)</title><rect x="1129.7" y="1091.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1132.7" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (3 samples, 0.04%)</title><rect x="1130.3" y="1155.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1133.3" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (10 samples, 0.12%)</title><rect x="1131.0" y="1155.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.0" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (13 samples, 0.16%)</title><rect x="1132.4" y="1203.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1135.4" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (13 samples, 0.16%)</title><rect x="1132.4" y="1187.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1135.4" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (11 samples, 0.13%)</title><rect x="1132.4" y="1171.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1135.4" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (5 samples, 0.06%)</title><rect x="1132.4" y="1155.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1135.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="1132.4" y="1139.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1135.4" y="1150.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.06%)</title><rect x="1132.4" y="1123.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1135.4" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.06%)</title><rect x="1132.4" y="1107.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1135.4" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.06%)</title><rect x="1132.4" y="1091.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1135.4" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.02%)</title><rect x="1132.8" y="1075.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1135.8" y="1086.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.02%)</title><rect x="1132.8" y="1059.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1135.8" y="1070.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.02%)</title><rect x="1132.8" y="1043.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1135.8" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (4 samples, 0.05%)</title><rect x="1133.1" y="1155.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1136.1" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (2 samples, 0.02%)</title><rect x="1133.2" y="1139.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1136.2" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (4 samples, 0.05%)</title><rect x="1134.2" y="1203.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1137.2" y="1214.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (4 samples, 0.05%)</title><rect x="1134.2" y="1187.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1137.2" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (4 samples, 0.05%)</title><rect x="1134.2" y="1171.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (328 samples, 3.94%)</title><rect x="1134.8" y="1219.0" width="46.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1137.8" y="1230.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.04%)</title><rect x="1135.2" y="1203.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1138.2" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.04%)</title><rect x="1135.2" y="1187.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1138.2" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.04%)</title><rect x="1135.2" y="1171.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1138.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (61 samples, 0.73%)</title><rect x="1135.6" y="1203.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1138.6" y="1214.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="1136.2" y="1187.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1139.2" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.02%)</title><rect x="1136.2" y="1171.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1139.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1136.5" y="1187.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1139.5" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (53 samples, 0.64%)</title><rect x="1136.8" y="1187.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1139.8" y="1198.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.04%)</title><rect x="1137.9" y="1171.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1140.9" y="1182.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.48%)</title><rect x="1138.3" y="1171.0" width="5.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1141.3" y="1182.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="1138.3" y="1155.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1141.3" y="1166.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.06%)</title><rect x="1138.3" y="1139.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1141.3" y="1150.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.02%)</title><rect x="1138.8" y="1123.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1141.8" y="1134.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="1138.8" y="1107.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1141.8" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (35 samples, 0.42%)</title><rect x="1139.1" y="1155.0" width="4.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1142.1" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.23%)</title><rect x="1141.3" y="1139.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1144.3" y="1150.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.02%)</title><rect x="1141.3" y="1123.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1144.3" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.20%)</title><rect x="1141.6" y="1123.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1144.6" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (15 samples, 0.18%)</title><rect x="1141.9" y="1107.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1144.9" y="1118.0"></text>
</g>
<g>
<title>do_epoll_wait (14 samples, 0.17%)</title><rect x="1142.0" y="1091.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1145.0" y="1102.0"></text>
</g>
<g>
<title>ep_poll (8 samples, 0.10%)</title><rect x="1142.2" y="1075.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1145.2" y="1086.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (6 samples, 0.07%)</title><rect x="1142.2" y="1059.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1145.2" y="1070.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.05%)</title><rect x="1142.5" y="1043.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1145.5" y="1054.0"></text>
</g>
<g>
<title>fput (5 samples, 0.06%)</title><rect x="1143.3" y="1075.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1146.3" y="1086.0"></text>
</g>
<g>
<title>fput_many (5 samples, 0.06%)</title><rect x="1143.3" y="1059.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1146.3" y="1070.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.02%)</title><rect x="1144.0" y="1171.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1147.0" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (260 samples, 3.13%)</title><rect x="1144.3" y="1203.0" width="36.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1147.3" y="1214.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (257 samples, 3.09%)</title><rect x="1144.7" y="1187.0" width="36.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1147.7" y="1198.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (156 samples, 1.88%)</title><rect x="1144.7" y="1171.0" width="22.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1147.7" y="1182.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (99 samples, 1.19%)</title><rect x="1146.0" y="1155.0" width="14.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1149.0" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (98 samples, 1.18%)</title><rect x="1146.1" y="1139.0" width="14.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1149.1" y="1150.0"></text>
</g>
<g>
<title>RequestHandler1_handleEntityGet.handleRequest (85 samples, 1.02%)</title><rect x="1146.1" y="1123.0" width="12.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1149.1" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.02%)</title><rect x="1146.1" y="1107.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1149.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (7 samples, 0.08%)</title><rect x="1146.4" y="1107.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1149.4" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.08%)</title><rect x="1146.4" y="1091.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1149.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.04%)</title><rect x="1146.9" y="1075.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1149.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="1146.9" y="1059.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1149.9" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityGet (76 samples, 0.91%)</title><rect x="1147.4" y="1107.0" width="10.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1150.4" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.executeOrSendError (76 samples, 0.91%)</title><rect x="1147.4" y="1091.0" width="10.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1150.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (76 samples, 0.91%)</title><rect x="1147.4" y="1075.0" width="10.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1150.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (73 samples, 0.88%)</title><rect x="1147.9" y="1059.0" width="10.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1150.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (9 samples, 0.11%)</title><rect x="1148.0" y="1043.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1151.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (9 samples, 0.11%)</title><rect x="1148.0" y="1027.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1151.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (9 samples, 0.11%)</title><rect x="1148.0" y="1011.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1151.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (9 samples, 0.11%)</title><rect x="1148.0" y="995.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1151.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.11%)</title><rect x="1148.0" y="979.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1151.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.04%)</title><rect x="1149.3" y="1043.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1152.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.04%)</title><rect x="1149.3" y="1027.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1152.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.02%)</title><rect x="1149.3" y="1011.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1152.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.02%)</title><rect x="1149.3" y="995.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1152.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.02%)</title><rect x="1149.3" y="979.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1152.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (60 samples, 0.72%)</title><rect x="1149.7" y="1043.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1152.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (60 samples, 0.72%)</title><rect x="1149.7" y="1027.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1152.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (60 samples, 0.72%)</title><rect x="1149.7" y="1011.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1152.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (60 samples, 0.72%)</title><rect x="1149.7" y="995.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1152.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (60 samples, 0.72%)</title><rect x="1149.7" y="979.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1152.7" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (12 samples, 0.14%)</title><rect x="1150.0" y="963.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1153.0" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.05%)</title><rect x="1150.4" y="947.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1153.4" y="958.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.04%)</title><rect x="1151.1" y="947.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1154.1" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (45 samples, 0.54%)</title><rect x="1151.7" y="963.0" width="6.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1154.7" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.52%)</title><rect x="1152.0" y="947.0" width="6.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1155.0" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (43 samples, 0.52%)</title><rect x="1152.0" y="931.0" width="6.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1155.0" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (41 samples, 0.49%)</title><rect x="1152.3" y="915.0" width="5.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1155.3" y="926.0"></text>
</g>
<g>
<title>do_futex (41 samples, 0.49%)</title><rect x="1152.3" y="899.0" width="5.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1155.3" y="910.0"></text>
</g>
<g>
<title>futex_wake (41 samples, 0.49%)</title><rect x="1152.3" y="883.0" width="5.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1155.3" y="894.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.02%)</title><rect x="1152.7" y="867.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1155.7" y="878.0"></text>
</g>
<g>
<title>wake_up_q (36 samples, 0.43%)</title><rect x="1153.0" y="867.0" width="5.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1156.0" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (35 samples, 0.42%)</title><rect x="1153.1" y="851.0" width="5.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1156.1" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (35 samples, 0.42%)</title><rect x="1153.1" y="835.0" width="5.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1156.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (9 samples, 0.11%)</title><rect x="1158.2" y="1123.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1161.2" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.11%)</title><rect x="1158.2" y="1107.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1161.2" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.04%)</title><rect x="1158.2" y="1091.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1161.2" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (6 samples, 0.07%)</title><rect x="1158.6" y="1091.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1161.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (6 samples, 0.07%)</title><rect x="1158.6" y="1075.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1161.6" y="1086.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="1158.6" y="1059.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1161.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.04%)</title><rect x="1159.1" y="1059.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1162.1" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.05%)</title><rect x="1159.5" y="1123.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1162.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="1159.5" y="1107.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1162.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="1159.5" y="1091.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1162.5" y="1102.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.04%)</title><rect x="1159.5" y="1075.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1162.5" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.04%)</title><rect x="1159.5" y="1059.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.5" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.04%)</title><rect x="1159.5" y="1043.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1162.5" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="1159.5" y="1027.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1162.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (23 samples, 0.28%)</title><rect x="1160.1" y="1155.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1163.1" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1160.5" y="1139.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1163.5" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.02%)</title><rect x="1160.6" y="1123.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1163.6" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.02%)</title><rect x="1160.6" y="1107.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1163.6" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="1160.6" y="1091.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1163.6" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="1160.6" y="1075.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.6" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="1160.6" y="1059.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="1160.9" y="1123.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1163.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="1160.9" y="1107.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1163.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.02%)</title><rect x="1160.9" y="1091.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1163.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.18%)</title><rect x="1161.2" y="1139.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1164.2" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.18%)</title><rect x="1161.2" y="1123.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1164.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1163.0" y="1107.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1166.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1163.0" y="1091.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1166.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.02%)</title><rect x="1163.0" y="1075.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1166.0" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.02%)</title><rect x="1163.5" y="1155.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1166.5" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.26%)</title><rect x="1163.7" y="1155.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1166.7" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.16%)</title><rect x="1165.0" y="1139.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1168.0" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.06%)</title><rect x="1165.4" y="1123.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1168.4" y="1134.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.06%)</title><rect x="1165.4" y="1107.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.4" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.06%)</title><rect x="1165.4" y="1091.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1168.4" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.05%)</title><rect x="1165.6" y="1075.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1168.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1166.3" y="1123.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1169.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1166.3" y="1107.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1169.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.05%)</title><rect x="1166.3" y="1091.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1169.3" y="1102.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.05%)</title><rect x="1166.3" y="1075.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1169.3" y="1086.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.05%)</title><rect x="1166.3" y="1059.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1169.3" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.05%)</title><rect x="1166.3" y="1043.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.3" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.05%)</title><rect x="1166.3" y="1027.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.3" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.04%)</title><rect x="1166.3" y="1011.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.3" y="1022.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.02%)</title><rect x="1166.4" y="995.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1169.4" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.02%)</title><rect x="1166.9" y="1171.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1169.9" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (99 samples, 1.19%)</title><rect x="1167.2" y="1171.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1170.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (95 samples, 1.14%)</title><rect x="1167.7" y="1155.0" width="13.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1170.7" y="1166.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 0.12%)</title><rect x="1167.9" y="1139.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1170.9" y="1150.0"></text>
</g>
<g>
<title>__memmove_ssse3 (3 samples, 0.04%)</title><rect x="1168.0" y="1123.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1171.0" y="1134.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.06%)</title><rect x="1168.4" y="1123.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1171.4" y="1134.0"></text>
</g>
<g>
<title>__GI___recv (84 samples, 1.01%)</title><rect x="1169.3" y="1139.0" width="11.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1172.3" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (82 samples, 0.99%)</title><rect x="1169.6" y="1123.0" width="11.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1172.6" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.02%)</title><rect x="1169.6" y="1107.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1172.6" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (80 samples, 0.96%)</title><rect x="1169.8" y="1107.0" width="11.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1172.8" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (70 samples, 0.84%)</title><rect x="1171.3" y="1091.0" width="9.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1174.3" y="1102.0"></text>
</g>
<g>
<title>__sys_recvfrom (66 samples, 0.79%)</title><rect x="1171.3" y="1075.0" width="9.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1174.3" y="1086.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.05%)</title><rect x="1171.7" y="1059.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1174.7" y="1070.0"></text>
</g>
<g>
<title>sock_recvmsg (54 samples, 0.65%)</title><rect x="1172.3" y="1059.0" width="7.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1175.3" y="1070.0"></text>
</g>
<g>
<title>inet6_recvmsg (39 samples, 0.47%)</title><rect x="1172.5" y="1043.0" width="5.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1175.5" y="1054.0"></text>
</g>
<g>
<title>tcp_recvmsg (38 samples, 0.46%)</title><rect x="1172.7" y="1027.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1175.7" y="1038.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.07%)</title><rect x="1174.5" y="1011.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1177.5" y="1022.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.02%)</title><rect x="1174.7" y="995.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1177.7" y="1006.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.02%)</title><rect x="1174.7" y="979.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1177.7" y="990.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.02%)</title><rect x="1174.7" y="963.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1177.7" y="974.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.02%)</title><rect x="1175.0" y="995.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1178.0" y="1006.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (10 samples, 0.12%)</title><rect x="1175.7" y="1011.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1178.7" y="1022.0"></text>
</g>
<g>
<title>__skb_datagram_iter (10 samples, 0.12%)</title><rect x="1175.7" y="995.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1178.7" y="1006.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.08%)</title><rect x="1176.1" y="979.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1179.1" y="990.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.04%)</title><rect x="1176.5" y="963.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1179.5" y="974.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.04%)</title><rect x="1176.5" y="947.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1179.5" y="958.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.02%)</title><rect x="1177.1" y="1011.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1180.1" y="1022.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.05%)</title><rect x="1177.5" y="1011.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1180.5" y="1022.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.04%)</title><rect x="1177.7" y="995.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1180.7" y="1006.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.04%)</title><rect x="1177.7" y="979.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1180.7" y="990.0"></text>
</g>
<g>
<title>security_socket_recvmsg (13 samples, 0.16%)</title><rect x="1178.1" y="1043.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1181.1" y="1054.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (9 samples, 0.11%)</title><rect x="1178.6" y="1027.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1181.6" y="1038.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (9 samples, 0.11%)</title><rect x="1178.6" y="1011.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1181.6" y="1022.0"></text>
</g>
<g>
<title>aa_sk_perm (9 samples, 0.11%)</title><rect x="1178.6" y="995.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1181.6" y="1006.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (3 samples, 0.04%)</title><rect x="1179.5" y="979.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1182.5" y="990.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.06%)</title><rect x="1179.9" y="1059.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1182.9" y="1070.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.05%)</title><rect x="1179.9" y="1043.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1182.9" y="1054.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="1179.9" y="1027.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1182.9" y="1038.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="1180.1" y="1011.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1183.1" y="1022.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.02%)</title><rect x="1180.6" y="1075.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1183.6" y="1086.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.02%)</title><rect x="1180.9" y="1075.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1183.9" y="1086.0"></text>
</g>
<g>
<title>start_thread (60 samples, 0.72%)</title><rect x="1181.5" y="1219.0" width="8.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1184.5" y="1230.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (60 samples, 0.72%)</title><rect x="1181.5" y="1203.0" width="8.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1184.5" y="1214.0"></text>
</g>
<g>
<title>Thread::call_run() (60 samples, 0.72%)</title><rect x="1181.5" y="1187.0" width="8.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.5" y="1198.0"></text>
</g>
<g>
<title>GangWorker::loop() (31 samples, 0.37%)</title><rect x="1181.5" y="1171.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.5" y="1182.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (27 samples, 0.32%)</title><rect x="1181.5" y="1155.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.5" y="1166.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (9 samples, 0.11%)</title><rect x="1181.5" y="1139.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.5" y="1150.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (5 samples, 0.06%)</title><rect x="1181.5" y="1123.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.5" y="1134.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.02%)</title><rect x="1181.5" y="1107.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.5" y="1118.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (3 samples, 0.04%)</title><rect x="1181.8" y="1107.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1184.8" y="1118.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.04%)</title><rect x="1182.3" y="1123.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1185.3" y="1134.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (10 samples, 0.12%)</title><rect x="1182.8" y="1139.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.8" y="1150.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (10 samples, 0.12%)</title><rect x="1182.8" y="1123.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.8" y="1134.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (10 samples, 0.12%)</title><rect x="1182.8" y="1107.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.8" y="1118.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (10 samples, 0.12%)</title><rect x="1182.8" y="1091.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.8" y="1102.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (10 samples, 0.12%)</title><rect x="1182.8" y="1075.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.8" y="1086.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (10 samples, 0.12%)</title><rect x="1182.8" y="1059.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.8" y="1070.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (8 samples, 0.10%)</title><rect x="1182.8" y="1043.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.8" y="1054.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (3 samples, 0.04%)</title><rect x="1183.3" y="1027.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.3" y="1038.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (7 samples, 0.08%)</title><rect x="1184.3" y="1139.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.3" y="1150.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (6 samples, 0.07%)</title><rect x="1184.5" y="1123.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.5" y="1134.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (6 samples, 0.07%)</title><rect x="1184.5" y="1107.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.5" y="1118.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (6 samples, 0.07%)</title><rect x="1184.5" y="1091.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.5" y="1102.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (3 samples, 0.04%)</title><rect x="1184.5" y="1075.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.5" y="1086.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (2 samples, 0.02%)</title><rect x="1184.6" y="1059.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.6" y="1070.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (2 samples, 0.02%)</title><rect x="1184.9" y="1075.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.9" y="1086.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (2 samples, 0.02%)</title><rect x="1184.9" y="1059.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.9" y="1070.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (4 samples, 0.05%)</title><rect x="1185.3" y="1155.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.3" y="1166.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (4 samples, 0.05%)</title><rect x="1185.3" y="1139.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.3" y="1150.0"></text>
</g>
<g>
<title>JavaThread::run() (25 samples, 0.30%)</title><rect x="1185.9" y="1171.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.9" y="1182.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (23 samples, 0.28%)</title><rect x="1185.9" y="1155.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.9" y="1166.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (23 samples, 0.28%)</title><rect x="1185.9" y="1139.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.9" y="1150.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (23 samples, 0.28%)</title><rect x="1185.9" y="1123.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.9" y="1134.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (23 samples, 0.28%)</title><rect x="1185.9" y="1107.0" width="3.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.9" y="1118.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (16 samples, 0.19%)</title><rect x="1185.9" y="1091.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.9" y="1102.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (3 samples, 0.04%)</title><rect x="1186.0" y="1075.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.0" y="1086.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (3 samples, 0.04%)</title><rect x="1186.0" y="1059.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.0" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (12 samples, 0.14%)</title><rect x="1186.5" y="1075.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.5" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (6 samples, 0.07%)</title><rect x="1186.5" y="1059.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.5" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (4 samples, 0.05%)</title><rect x="1186.7" y="1043.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.7" y="1054.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.02%)</title><rect x="1187.0" y="1027.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.0" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.02%)</title><rect x="1187.3" y="1059.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.3" y="1070.0"></text>
</g>
<g>
<title>Compile::Optimize() (5 samples, 0.06%)</title><rect x="1188.2" y="1091.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.2" y="1102.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (3 samples, 0.04%)</title><rect x="1188.2" y="1075.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.2" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.04%)</title><rect x="1188.2" y="1059.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.2" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1188.9" y="1091.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.9" y="1102.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1188.9" y="1075.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.9" y="1086.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1188.9" y="1059.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.9" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1188.9" y="1043.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.9" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1188.9" y="1027.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.9" y="1038.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (2 samples, 0.02%)</title><rect x="1189.1" y="1155.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.1" y="1166.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (2 samples, 0.02%)</title><rect x="1189.1" y="1139.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.1" y="1150.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (2 samples, 0.02%)</title><rect x="1189.1" y="1123.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.1" y="1134.0"></text>
</g>
<g>
<title>NMethodSweeper::process_compiled_method(CompiledMethod*) (2 samples, 0.02%)</title><rect x="1189.1" y="1107.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.1" y="1118.0"></text>
</g>
<g>
<title>VMThread::run() (4 samples, 0.05%)</title><rect x="1189.4" y="1171.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.4" y="1182.0"></text>
</g>
<g>
<title>VMThread::loop() (4 samples, 0.05%)</title><rect x="1189.4" y="1155.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.4" y="1166.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (3 samples, 0.04%)</title><rect x="1189.4" y="1139.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.4" y="1150.0"></text>
</g>
</g>
</svg>
