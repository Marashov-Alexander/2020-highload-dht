<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (128,665 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (65,210 samples, 50.68%)</title><rect x="10.0" y="803.0" width="598.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (65,187 samples, 50.66%)</title><rect x="10.2" y="787.0" width="597.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.2" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (65,187 samples, 50.66%)</title><rect x="10.2" y="771.0" width="597.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.2" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (7,804 samples, 6.07%)</title><rect x="10.2" y="755.0" width="71.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.2" y="766.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7,804 samples, 6.07%)</title><rect x="10.2" y="739.0" width="71.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.2" y="750.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (7,804 samples, 6.07%)</title><rect x="10.2" y="723.0" width="71.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.2" y="734.0">java/uti..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (58 samples, 0.05%)</title><rect x="10.2" y="707.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="13.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/2069674845.apply (7,746 samples, 6.02%)</title><rect x="10.8" y="707.0" width="71.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.8" y="718.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (7,746 samples, 6.02%)</title><rect x="10.8" y="691.0" width="71.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.8" y="702.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (7,746 samples, 6.02%)</title><rect x="10.8" y="675.0" width="71.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.8" y="686.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.04%)</title><rect x="10.8" y="659.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.04%)</title><rect x="10.8" y="643.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$468/1430929057.get$Lambda (31 samples, 0.02%)</title><rect x="10.8" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.8" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$468 (31 samples, 0.02%)</title><rect x="10.8" y="611.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="13.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (100 samples, 0.08%)</title><rect x="11.3" y="659.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (100 samples, 0.08%)</title><rect x="11.3" y="643.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.3" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (55 samples, 0.04%)</title><rect x="11.3" y="627.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="14.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (45 samples, 0.03%)</title><rect x="11.8" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (45 samples, 0.03%)</title><rect x="11.8" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="14.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (45 samples, 0.03%)</title><rect x="11.8" y="595.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="14.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (217 samples, 0.17%)</title><rect x="12.2" y="659.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="15.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (217 samples, 0.17%)</title><rect x="12.2" y="643.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="15.2" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (121 samples, 0.09%)</title><rect x="12.2" y="627.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="15.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (96 samples, 0.07%)</title><rect x="13.3" y="627.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (96 samples, 0.07%)</title><rect x="13.3" y="611.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (96 samples, 0.07%)</title><rect x="13.3" y="595.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="16.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (7,108 samples, 5.52%)</title><rect x="14.2" y="659.0" width="65.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.2" y="670.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (7,108 samples, 5.52%)</title><rect x="14.2" y="643.0" width="65.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.2" y="654.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (7,108 samples, 5.52%)</title><rect x="14.2" y="627.0" width="65.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="17.2" y="638.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (92 samples, 0.07%)</title><rect x="14.2" y="611.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="17.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (92 samples, 0.07%)</title><rect x="14.2" y="595.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$183/1392495226.get$Lambda (29 samples, 0.02%)</title><rect x="14.2" y="579.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$183 (29 samples, 0.02%)</title><rect x="14.2" y="563.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="17.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$189/1547189845.get$Lambda (28 samples, 0.02%)</title><rect x="14.4" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$189 (28 samples, 0.02%)</title><rect x="14.4" y="563.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="17.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$374/1643021581.get$Lambda (35 samples, 0.03%)</title><rect x="14.7" y="579.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.7" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$374 (35 samples, 0.03%)</title><rect x="14.7" y="563.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="17.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (4,964 samples, 3.86%)</title><rect x="15.0" y="611.0" width="45.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.0" y="622.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (4,964 samples, 3.86%)</title><rect x="15.0" y="595.0" width="45.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.0" y="606.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4,904 samples, 3.81%)</title><rect x="15.0" y="579.0" width="45.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.0" y="590.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$374/1643021581.apply (4,904 samples, 3.81%)</title><rect x="15.0" y="563.0" width="45.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.0" y="574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (4,904 samples, 3.81%)</title><rect x="15.0" y="547.0" width="45.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="18.0" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (4,904 samples, 3.81%)</title><rect x="15.0" y="531.0" width="45.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.0" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$189/1547189845.apply (4,904 samples, 3.81%)</title><rect x="15.0" y="515.0" width="45.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.0" y="526.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (4,904 samples, 3.81%)</title><rect x="15.0" y="499.0" width="45.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.0" y="510.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.03%)</title><rect x="15.0" y="483.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.03%)</title><rect x="15.0" y="467.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$463/1047907756.get$Lambda (35 samples, 0.03%)</title><rect x="15.0" y="451.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$463 (35 samples, 0.03%)</title><rect x="15.0" y="435.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="18.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (163 samples, 0.13%)</title><rect x="15.3" y="483.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (163 samples, 0.13%)</title><rect x="15.3" y="467.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.3" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (61 samples, 0.05%)</title><rect x="15.3" y="451.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="18.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (45 samples, 0.03%)</title><rect x="15.9" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$463/1047907756.apply (45 samples, 0.03%)</title><rect x="15.9" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (45 samples, 0.03%)</title><rect x="15.9" y="419.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (45 samples, 0.03%)</title><rect x="15.9" y="403.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$183/1392495226.apply (45 samples, 0.03%)</title><rect x="15.9" y="387.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (45 samples, 0.03%)</title><rect x="15.9" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (38 samples, 0.03%)</title><rect x="16.0" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.04%)</title><rect x="16.3" y="451.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.04%)</title><rect x="16.3" y="435.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="19.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (57 samples, 0.04%)</title><rect x="16.3" y="419.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="19.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (116 samples, 0.09%)</title><rect x="16.8" y="483.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (116 samples, 0.09%)</title><rect x="16.8" y="467.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (66 samples, 0.05%)</title><rect x="16.8" y="451.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="19.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (48 samples, 0.04%)</title><rect x="17.5" y="451.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (48 samples, 0.04%)</title><rect x="17.5" y="435.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (48 samples, 0.04%)</title><rect x="17.5" y="419.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="20.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (4,590 samples, 3.57%)</title><rect x="17.9" y="483.0" width="42.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.9" y="494.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (61 samples, 0.05%)</title><rect x="17.9" y="467.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (61 samples, 0.05%)</title><rect x="17.9" y="451.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$459/1102163486.get$Lambda (40 samples, 0.03%)</title><rect x="18.1" y="435.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$459 (40 samples, 0.03%)</title><rect x="18.1" y="419.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="21.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3,731 samples, 2.90%)</title><rect x="18.5" y="467.0" width="34.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.5" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3,731 samples, 2.90%)</title><rect x="18.5" y="451.0" width="34.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.5" y="462.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (47 samples, 0.04%)</title><rect x="18.5" y="435.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="21.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$453/499904817.apply (3,580 samples, 2.78%)</title><rect x="18.9" y="435.0" width="32.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="21.9" y="446.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (3,580 samples, 2.78%)</title><rect x="18.9" y="419.0" width="32.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.9" y="430.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (121 samples, 0.09%)</title><rect x="19.1" y="403.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (121 samples, 0.09%)</title><rect x="19.1" y="387.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="22.1" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (65 samples, 0.05%)</title><rect x="19.1" y="371.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="22.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.04%)</title><rect x="19.7" y="371.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.04%)</title><rect x="19.7" y="355.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="22.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (56 samples, 0.04%)</title><rect x="19.7" y="339.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="22.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (42 samples, 0.03%)</title><rect x="20.2" y="403.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="23.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (94 samples, 0.07%)</title><rect x="20.6" y="403.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="23.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (39 samples, 0.03%)</title><rect x="20.6" y="387.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="23.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (55 samples, 0.04%)</title><rect x="20.9" y="387.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (46 samples, 0.04%)</title><rect x="20.9" y="371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (46 samples, 0.04%)</title><rect x="20.9" y="355.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (46 samples, 0.04%)</title><rect x="20.9" y="339.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (46 samples, 0.04%)</title><rect x="20.9" y="323.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (46 samples, 0.04%)</title><rect x="20.9" y="307.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="23.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (94 samples, 0.07%)</title><rect x="21.4" y="403.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="24.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (94 samples, 0.07%)</title><rect x="21.4" y="387.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (30 samples, 0.02%)</title><rect x="21.4" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (30 samples, 0.02%)</title><rect x="21.4" y="355.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (30 samples, 0.02%)</title><rect x="21.4" y="339.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (30 samples, 0.02%)</title><rect x="21.4" y="323.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="24.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (64 samples, 0.05%)</title><rect x="21.7" y="371.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (64 samples, 0.05%)</title><rect x="21.7" y="355.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (36 samples, 0.03%)</title><rect x="21.7" y="339.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="24.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (28 samples, 0.02%)</title><rect x="22.1" y="339.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (28 samples, 0.02%)</title><rect x="22.1" y="323.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="25.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (3,207 samples, 2.49%)</title><rect x="22.3" y="403.0" width="29.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="25.3" y="414.0">jd..</text>
</g>
<g>
<title>java.lang.StringBuilder (39 samples, 0.03%)</title><rect x="22.3" y="387.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="25.3" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (74 samples, 0.06%)</title><rect x="22.7" y="387.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="25.7" y="398.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.02%)</title><rect x="22.7" y="371.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="25.7" y="382.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.03%)</title><rect x="22.9" y="371.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="25.9" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (248 samples, 0.19%)</title><rect x="23.3" y="387.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="26.3" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (248 samples, 0.19%)</title><rect x="23.3" y="371.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.3" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (248 samples, 0.19%)</title><rect x="23.3" y="355.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="26.3" y="366.0"></text>
</g>
<g>
<title>byte[] (233 samples, 0.18%)</title><rect x="23.3" y="339.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="26.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (98 samples, 0.08%)</title><rect x="25.6" y="387.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="28.6" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (98 samples, 0.08%)</title><rect x="25.6" y="371.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="28.6" y="382.0"></text>
</g>
<g>
<title>byte[] (98 samples, 0.08%)</title><rect x="25.6" y="355.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="28.6" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (287 samples, 0.22%)</title><rect x="26.5" y="387.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="29.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (287 samples, 0.22%)</title><rect x="26.5" y="371.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="29.5" y="382.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.03%)</title><rect x="26.5" y="355.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="29.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (243 samples, 0.19%)</title><rect x="26.9" y="355.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="29.9" y="366.0"></text>
</g>
<g>
<title>byte[] (235 samples, 0.18%)</title><rect x="26.9" y="339.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="29.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (83 samples, 0.06%)</title><rect x="29.1" y="387.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.1" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (83 samples, 0.06%)</title><rect x="29.1" y="371.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.1" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (83 samples, 0.06%)</title><rect x="29.1" y="355.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="32.1" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (44 samples, 0.03%)</title><rect x="29.9" y="387.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="32.9" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (44 samples, 0.03%)</title><rect x="29.9" y="371.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="32.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (1,859 samples, 1.44%)</title><rect x="30.3" y="387.0" width="17.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="33.3" y="398.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (34 samples, 0.03%)</title><rect x="30.3" y="371.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.03%)</title><rect x="30.3" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="33.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.03%)</title><rect x="30.3" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="33.3" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$493/1492730482.get$Lambda (34 samples, 0.03%)</title><rect x="30.3" y="323.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="33.3" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$493 (34 samples, 0.03%)</title><rect x="30.3" y="307.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="33.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1,032 samples, 0.80%)</title><rect x="30.6" y="371.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="33.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (639 samples, 0.50%)</title><rect x="30.6" y="355.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="33.6" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (639 samples, 0.50%)</title><rect x="30.6" y="339.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.6" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (639 samples, 0.50%)</title><rect x="30.6" y="323.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="33.6" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (639 samples, 0.50%)</title><rect x="30.6" y="307.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="33.6" y="318.0"></text>
</g>
<g>
<title>byte[] (624 samples, 0.48%)</title><rect x="30.6" y="291.0" width="5.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="33.6" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (95 samples, 0.07%)</title><rect x="36.5" y="355.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.5" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (95 samples, 0.07%)</title><rect x="36.5" y="339.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="39.5" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (95 samples, 0.07%)</title><rect x="36.5" y="323.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.5" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (95 samples, 0.07%)</title><rect x="36.5" y="307.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="39.5" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (86 samples, 0.07%)</title><rect x="37.4" y="355.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="40.4" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (51 samples, 0.04%)</title><rect x="37.4" y="339.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="40.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (35 samples, 0.03%)</title><rect x="37.8" y="339.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="40.8" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (35 samples, 0.03%)</title><rect x="37.8" y="323.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="40.8" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$493/1492730482.test (212 samples, 0.16%)</title><rect x="38.1" y="355.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="41.1" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (212 samples, 0.16%)</title><rect x="38.1" y="339.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$92/1439337960.test (212 samples, 0.16%)</title><rect x="38.1" y="323.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="41.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (212 samples, 0.16%)</title><rect x="38.1" y="307.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.1" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$81/306123060.test (212 samples, 0.16%)</title><rect x="38.1" y="291.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="41.1" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (212 samples, 0.16%)</title><rect x="38.1" y="275.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="41.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/1052967153.test (212 samples, 0.16%)</title><rect x="38.1" y="259.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (212 samples, 0.16%)</title><rect x="38.1" y="243.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.1" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (212 samples, 0.16%)</title><rect x="38.1" y="227.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="41.1" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (212 samples, 0.16%)</title><rect x="38.1" y="211.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="41.1" y="222.0"></text>
</g>
<g>
<title>java.lang.String (101 samples, 0.08%)</title><rect x="38.1" y="195.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="41.1" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (111 samples, 0.09%)</title><rect x="39.1" y="195.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.1" y="206.0"></text>
</g>
<g>
<title>byte[] (111 samples, 0.09%)</title><rect x="39.1" y="179.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="42.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (793 samples, 0.62%)</title><rect x="40.1" y="371.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="43.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (793 samples, 0.62%)</title><rect x="40.1" y="355.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.1" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (793 samples, 0.62%)</title><rect x="40.1" y="339.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="43.1" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (34 samples, 0.03%)</title><rect x="40.3" y="323.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="43.3" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (66 samples, 0.05%)</title><rect x="40.6" y="323.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="43.6" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (29 samples, 0.02%)</title><rect x="41.2" y="323.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="44.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (58 samples, 0.05%)</title><rect x="41.5" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="44.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.05%)</title><rect x="41.5" y="307.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="44.5" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/491938346.get$Lambda (58 samples, 0.05%)</title><rect x="41.5" y="291.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="44.5" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (58 samples, 0.05%)</title><rect x="41.5" y="275.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="44.5" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (45 samples, 0.03%)</title><rect x="42.0" y="323.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.0" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (45 samples, 0.03%)</title><rect x="42.0" y="307.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="45.0" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (465 samples, 0.36%)</title><rect x="42.4" y="323.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.4" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/491938346.accept (465 samples, 0.36%)</title><rect x="42.4" y="307.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="45.4" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (465 samples, 0.36%)</title><rect x="42.4" y="291.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.4" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (92 samples, 0.07%)</title><rect x="42.4" y="275.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.4" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/829051045.accept (92 samples, 0.07%)</title><rect x="42.4" y="259.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="45.4" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (92 samples, 0.07%)</title><rect x="42.4" y="243.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="45.4" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (92 samples, 0.07%)</title><rect x="42.4" y="227.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.4" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (92 samples, 0.07%)</title><rect x="42.4" y="211.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="45.4" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (92 samples, 0.07%)</title><rect x="42.4" y="195.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.4" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (92 samples, 0.07%)</title><rect x="42.4" y="179.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.4" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (92 samples, 0.07%)</title><rect x="42.4" y="163.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="45.4" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (92 samples, 0.07%)</title><rect x="42.4" y="147.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="45.4" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (200 samples, 0.16%)</title><rect x="43.3" y="275.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.3" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (200 samples, 0.16%)</title><rect x="43.3" y="259.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.3" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (112 samples, 0.09%)</title><rect x="43.3" y="243.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.3" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (112 samples, 0.09%)</title><rect x="43.3" y="227.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.3" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (112 samples, 0.09%)</title><rect x="43.3" y="211.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="46.3" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (88 samples, 0.07%)</title><rect x="44.3" y="243.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.3" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (88 samples, 0.07%)</title><rect x="44.3" y="227.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="47.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (173 samples, 0.13%)</title><rect x="45.1" y="275.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.1" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (173 samples, 0.13%)</title><rect x="45.1" y="259.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="48.1" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (74 samples, 0.06%)</title><rect x="46.7" y="323.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="49.7" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (74 samples, 0.06%)</title><rect x="46.7" y="307.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="49.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (137 samples, 0.11%)</title><rect x="47.4" y="387.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="50.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (46 samples, 0.04%)</title><rect x="47.4" y="371.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="50.4" y="382.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.04%)</title><rect x="47.4" y="355.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="50.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (91 samples, 0.07%)</title><rect x="47.8" y="371.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="50.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (91 samples, 0.07%)</title><rect x="47.8" y="355.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="50.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/92150540.invoke (91 samples, 0.07%)</title><rect x="47.8" y="339.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="50.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (91 samples, 0.07%)</title><rect x="47.8" y="323.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="50.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (30 samples, 0.02%)</title><rect x="47.8" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="50.8" y="318.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.02%)</title><rect x="47.8" y="291.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="50.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (61 samples, 0.05%)</title><rect x="48.1" y="307.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="51.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (61 samples, 0.05%)</title><rect x="48.1" y="291.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="51.1" y="302.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.05%)</title><rect x="48.1" y="275.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="51.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (88 samples, 0.07%)</title><rect x="48.6" y="387.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="51.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (88 samples, 0.07%)</title><rect x="48.6" y="371.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (88 samples, 0.07%)</title><rect x="48.6" y="355.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (88 samples, 0.07%)</title><rect x="48.6" y="339.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="51.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/92150540.invoke (88 samples, 0.07%)</title><rect x="48.6" y="323.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (88 samples, 0.07%)</title><rect x="48.6" y="307.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (36 samples, 0.03%)</title><rect x="48.6" y="291.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="51.6" y="302.0"></text>
</g>
<g>
<title>java.lang.String (36 samples, 0.03%)</title><rect x="48.6" y="275.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="51.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (52 samples, 0.04%)</title><rect x="48.9" y="291.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="51.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (52 samples, 0.04%)</title><rect x="48.9" y="275.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.9" y="286.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.04%)</title><rect x="48.9" y="259.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="51.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (250 samples, 0.19%)</title><rect x="49.4" y="387.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.4" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (66 samples, 0.05%)</title><rect x="49.4" y="371.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="52.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (85 samples, 0.07%)</title><rect x="50.0" y="371.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (85 samples, 0.07%)</title><rect x="50.0" y="355.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="53.0" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (99 samples, 0.08%)</title><rect x="50.8" y="371.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="53.8" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (99 samples, 0.08%)</title><rect x="50.8" y="355.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="53.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (104 samples, 0.08%)</title><rect x="51.7" y="435.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (104 samples, 0.08%)</title><rect x="51.7" y="419.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (104 samples, 0.08%)</title><rect x="51.7" y="403.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="54.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (150 samples, 0.12%)</title><rect x="52.7" y="467.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="55.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.04%)</title><rect x="54.0" y="467.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="57.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (601 samples, 0.47%)</title><rect x="54.5" y="467.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (54 samples, 0.04%)</title><rect x="54.5" y="451.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.04%)</title><rect x="54.5" y="435.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$390/1167335099.get$Lambda (28 samples, 0.02%)</title><rect x="54.5" y="419.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$390 (28 samples, 0.02%)</title><rect x="54.5" y="403.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="57.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (57 samples, 0.04%)</title><rect x="55.0" y="451.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="58.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (54 samples, 0.04%)</title><rect x="55.5" y="451.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="58.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (69 samples, 0.05%)</title><rect x="56.0" y="451.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="59.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (179 samples, 0.14%)</title><rect x="56.6" y="451.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="59.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (179 samples, 0.14%)</title><rect x="56.6" y="435.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="59.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (179 samples, 0.14%)</title><rect x="56.6" y="419.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="59.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (179 samples, 0.14%)</title><rect x="56.6" y="403.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="59.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (179 samples, 0.14%)</title><rect x="56.6" y="387.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="59.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (179 samples, 0.14%)</title><rect x="56.6" y="371.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="59.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$346/2096808812.run (179 samples, 0.14%)</title><rect x="56.6" y="355.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="59.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (179 samples, 0.14%)</title><rect x="56.6" y="339.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="59.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (179 samples, 0.14%)</title><rect x="56.6" y="323.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="59.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (59 samples, 0.05%)</title><rect x="56.6" y="307.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.05%)</title><rect x="56.6" y="291.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="59.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$413/1593888667.get$Lambda (38 samples, 0.03%)</title><rect x="56.8" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="59.8" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$413 (38 samples, 0.03%)</title><rect x="56.8" y="259.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="59.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (54 samples, 0.04%)</title><rect x="57.2" y="307.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="60.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (66 samples, 0.05%)</title><rect x="57.7" y="307.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (66 samples, 0.05%)</title><rect x="57.7" y="291.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="60.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (40 samples, 0.03%)</title><rect x="57.9" y="275.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="60.9" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (40 samples, 0.03%)</title><rect x="57.9" y="259.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="60.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (139 samples, 0.11%)</title><rect x="58.3" y="451.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="61.3" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (37 samples, 0.03%)</title><rect x="58.3" y="435.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="61.3" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (51 samples, 0.04%)</title><rect x="58.6" y="435.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="61.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (51 samples, 0.04%)</title><rect x="59.1" y="435.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.1" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (51 samples, 0.04%)</title><rect x="59.1" y="419.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.1" y="430.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.04%)</title><rect x="59.1" y="403.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="62.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (49 samples, 0.04%)</title><rect x="59.5" y="451.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (49 samples, 0.04%)</title><rect x="59.5" y="435.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="62.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (60 samples, 0.05%)</title><rect x="60.0" y="579.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="63.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (60 samples, 0.05%)</title><rect x="60.0" y="563.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (60 samples, 0.05%)</title><rect x="60.0" y="547.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="63.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (108 samples, 0.08%)</title><rect x="60.5" y="611.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (108 samples, 0.08%)</title><rect x="60.5" y="595.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (50 samples, 0.04%)</title><rect x="60.5" y="579.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="63.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (58 samples, 0.05%)</title><rect x="61.0" y="579.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="64.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (58 samples, 0.05%)</title><rect x="61.0" y="563.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (58 samples, 0.05%)</title><rect x="61.0" y="547.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="64.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,944 samples, 1.51%)</title><rect x="61.5" y="611.0" width="17.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (71 samples, 0.06%)</title><rect x="61.5" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="64.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (71 samples, 0.06%)</title><rect x="61.5" y="579.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$356/245826213.get$Lambda (39 samples, 0.03%)</title><rect x="61.5" y="563.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$356 (39 samples, 0.03%)</title><rect x="61.5" y="547.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="64.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$367/619467198.get$Lambda (32 samples, 0.02%)</title><rect x="61.9" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.9" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$367 (32 samples, 0.02%)</title><rect x="61.9" y="547.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="64.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (95 samples, 0.07%)</title><rect x="62.2" y="595.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (95 samples, 0.07%)</title><rect x="62.2" y="579.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="65.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$367/619467198.apply (55 samples, 0.04%)</title><rect x="62.2" y="563.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (55 samples, 0.04%)</title><rect x="62.2" y="547.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (55 samples, 0.04%)</title><rect x="62.2" y="531.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="65.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (55 samples, 0.04%)</title><rect x="62.2" y="515.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="65.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (40 samples, 0.03%)</title><rect x="62.7" y="563.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (40 samples, 0.03%)</title><rect x="62.7" y="547.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (40 samples, 0.03%)</title><rect x="62.7" y="531.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="65.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (46 samples, 0.04%)</title><rect x="63.1" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="66.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (46 samples, 0.04%)</title><rect x="63.1" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (46 samples, 0.04%)</title><rect x="63.1" y="563.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="66.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (46 samples, 0.04%)</title><rect x="63.1" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="66.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.04%)</title><rect x="63.1" y="531.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="66.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,732 samples, 1.35%)</title><rect x="63.5" y="595.0" width="15.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="66.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (1,732 samples, 1.35%)</title><rect x="63.5" y="579.0" width="15.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="66.5" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (142 samples, 0.11%)</title><rect x="63.5" y="563.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="66.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1,542 samples, 1.20%)</title><rect x="64.8" y="563.0" width="14.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="67.8" y="574.0"></text>
</g>
<g>
<title>java.util.LinkedList (41 samples, 0.03%)</title><rect x="65.0" y="547.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="68.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (30 samples, 0.02%)</title><rect x="65.4" y="547.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="68.4" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (50 samples, 0.04%)</title><rect x="65.8" y="547.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.8" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (50 samples, 0.04%)</title><rect x="65.8" y="531.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.8" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (50 samples, 0.04%)</title><rect x="65.8" y="515.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="68.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (49 samples, 0.04%)</title><rect x="66.3" y="547.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="69.3" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (49 samples, 0.04%)</title><rect x="66.3" y="531.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="69.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (105 samples, 0.08%)</title><rect x="66.7" y="547.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="69.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (74 samples, 0.06%)</title><rect x="67.7" y="547.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="70.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (97 samples, 0.08%)</title><rect x="68.4" y="547.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="71.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (98 samples, 0.08%)</title><rect x="69.3" y="547.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="72.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (431 samples, 0.33%)</title><rect x="70.2" y="547.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.2" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (33 samples, 0.03%)</title><rect x="70.2" y="531.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="73.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (32 samples, 0.02%)</title><rect x="70.7" y="531.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="73.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (30 samples, 0.02%)</title><rect x="71.3" y="531.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (30 samples, 0.02%)</title><rect x="71.3" y="515.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="74.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (41 samples, 0.03%)</title><rect x="71.6" y="531.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="74.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (52 samples, 0.04%)</title><rect x="72.0" y="531.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="75.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (181 samples, 0.14%)</title><rect x="72.5" y="531.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (32 samples, 0.02%)</title><rect x="72.5" y="515.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="75.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (49 samples, 0.04%)</title><rect x="72.7" y="515.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="75.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (77 samples, 0.06%)</title><rect x="73.4" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (31 samples, 0.02%)</title><rect x="73.8" y="499.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="76.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (281 samples, 0.22%)</title><rect x="74.1" y="547.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (43 samples, 0.03%)</title><rect x="74.7" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (43 samples, 0.03%)</title><rect x="74.7" y="515.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="77.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (173 samples, 0.13%)</title><rect x="75.1" y="531.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (33 samples, 0.03%)</title><rect x="75.1" y="515.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="78.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (52 samples, 0.04%)</title><rect x="75.4" y="515.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="78.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (63 samples, 0.05%)</title><rect x="76.1" y="515.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="79.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (28 samples, 0.02%)</title><rect x="76.4" y="499.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="79.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (40 samples, 0.03%)</title><rect x="76.7" y="547.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="79.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.03%)</title><rect x="76.7" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.03%)</title><rect x="76.7" y="515.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$328/130615378.get$Lambda (40 samples, 0.03%)</title><rect x="76.7" y="499.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="79.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$$Lambda$328 (40 samples, 0.03%)</title><rect x="76.7" y="483.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="79.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (70 samples, 0.05%)</title><rect x="77.1" y="547.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="80.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (70 samples, 0.05%)</title><rect x="77.1" y="531.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (31 samples, 0.02%)</title><rect x="77.1" y="515.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="80.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (39 samples, 0.03%)</title><rect x="77.3" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="80.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (39 samples, 0.03%)</title><rect x="77.3" y="499.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (39 samples, 0.03%)</title><rect x="77.3" y="483.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (39 samples, 0.03%)</title><rect x="77.3" y="467.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.3" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (39 samples, 0.03%)</title><rect x="77.3" y="451.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="80.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (133 samples, 0.10%)</title><rect x="77.7" y="547.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1390835631.linkToTargetMethod (36 samples, 0.03%)</title><rect x="77.7" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.03%)</title><rect x="77.7" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$239/1268826471.get$Lambda (36 samples, 0.03%)</title><rect x="77.7" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="80.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$239 (36 samples, 0.03%)</title><rect x="77.7" y="483.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="80.7" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (97 samples, 0.08%)</title><rect x="78.0" y="531.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="81.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$239/1268826471.run (97 samples, 0.08%)</title><rect x="78.0" y="515.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (97 samples, 0.08%)</title><rect x="78.0" y="499.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.0" y="510.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (77 samples, 0.06%)</title><rect x="78.2" y="483.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.2" y="494.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (45 samples, 0.03%)</title><rect x="78.2" y="467.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="81.2" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (32 samples, 0.02%)</title><rect x="78.6" y="467.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.6" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (32 samples, 0.02%)</title><rect x="78.6" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="81.6" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (32 samples, 0.02%)</title><rect x="78.6" y="435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="81.6" y="446.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (32 samples, 0.02%)</title><rect x="78.6" y="419.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="81.6" y="430.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (32 samples, 0.02%)</title><rect x="78.6" y="403.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="81.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (48 samples, 0.04%)</title><rect x="78.9" y="563.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="81.9" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (48 samples, 0.04%)</title><rect x="78.9" y="547.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="81.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (63 samples, 0.05%)</title><rect x="79.4" y="659.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="82.4" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (63 samples, 0.05%)</title><rect x="79.4" y="643.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.4" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (63 samples, 0.05%)</title><rect x="79.4" y="627.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.4" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (63 samples, 0.05%)</title><rect x="79.4" y="611.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="82.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (205 samples, 0.16%)</title><rect x="79.9" y="659.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.9" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (164 samples, 0.13%)</title><rect x="79.9" y="643.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="82.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (41 samples, 0.03%)</title><rect x="81.4" y="643.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="84.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (41 samples, 0.03%)</title><rect x="81.4" y="627.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.4" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plus (41 samples, 0.03%)</title><rect x="81.4" y="611.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.4" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (41 samples, 0.03%)</title><rect x="81.4" y="595.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.4" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (41 samples, 0.03%)</title><rect x="81.4" y="579.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="84.4" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (41 samples, 0.03%)</title><rect x="81.4" y="563.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="84.4" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (41 samples, 0.03%)</title><rect x="81.4" y="547.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="84.4" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (41 samples, 0.03%)</title><rect x="81.4" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.4" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (41 samples, 0.03%)</title><rect x="81.4" y="515.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="84.4" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (41 samples, 0.03%)</title><rect x="81.4" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.4" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (41 samples, 0.03%)</title><rect x="81.4" y="483.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="84.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (175 samples, 0.14%)</title><rect x="81.8" y="755.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="84.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (175 samples, 0.14%)</title><rect x="81.8" y="739.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (77 samples, 0.06%)</title><rect x="81.8" y="723.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (77 samples, 0.06%)</title><rect x="81.8" y="707.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (77 samples, 0.06%)</title><rect x="81.8" y="691.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (77 samples, 0.06%)</title><rect x="81.8" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$230/1143606200.accept (77 samples, 0.06%)</title><rect x="81.8" y="659.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="84.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$respond$2 (77 samples, 0.06%)</title><rect x="81.8" y="643.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="84.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.trySendAnswer (77 samples, 0.06%)</title><rect x="81.8" y="627.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (77 samples, 0.06%)</title><rect x="81.8" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="84.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (77 samples, 0.06%)</title><rect x="81.8" y="595.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="84.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (52 samples, 0.04%)</title><rect x="81.8" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.8" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (52 samples, 0.04%)</title><rect x="81.8" y="563.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.8" y="574.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.04%)</title><rect x="81.8" y="547.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="84.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$215/68762744.apply (98 samples, 0.08%)</title><rect x="82.5" y="723.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="85.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.lambda$put$2 (98 samples, 0.08%)</title><rect x="82.5" y="707.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (74 samples, 0.06%)</title><rect x="82.7" y="691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.7" y="702.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.03%)</title><rect x="82.7" y="675.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="85.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,249 samples, 2.53%)</title><rect x="83.4" y="755.0" width="29.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.4" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3,248 samples, 2.52%)</title><rect x="83.4" y="739.0" width="29.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.4" y="750.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3,172 samples, 2.47%)</title><rect x="83.4" y="723.0" width="29.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="86.4" y="734.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3,172 samples, 2.47%)</title><rect x="83.4" y="707.0" width="29.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="86.4" y="718.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3,172 samples, 2.47%)</title><rect x="83.4" y="691.0" width="29.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="86.4" y="702.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (76 samples, 0.06%)</title><rect x="112.5" y="723.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="115.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (76 samples, 0.06%)</title><rect x="112.5" y="707.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="115.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (76 samples, 0.06%)</title><rect x="112.5" y="691.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="115.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (76 samples, 0.06%)</title><rect x="112.5" y="675.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="115.5" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (76 samples, 0.06%)</title><rect x="112.5" y="659.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="115.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$498/1191634906.run (1,826 samples, 1.42%)</title><rect x="113.2" y="755.0" width="16.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="116.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1,826 samples, 1.42%)</title><rect x="113.2" y="739.0" width="16.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1,826 samples, 1.42%)</title><rect x="113.2" y="723.0" width="16.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1,826 samples, 1.42%)</title><rect x="113.2" y="707.0" width="16.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,826 samples, 1.42%)</title><rect x="113.2" y="691.0" width="16.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,826 samples, 1.42%)</title><rect x="113.2" y="675.0" width="16.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="116.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,826 samples, 1.42%)</title><rect x="113.2" y="659.0" width="16.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,826 samples, 1.42%)</title><rect x="113.2" y="643.0" width="16.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,826 samples, 1.42%)</title><rect x="113.2" y="627.0" width="16.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="116.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,826 samples, 1.42%)</title><rect x="113.2" y="611.0" width="16.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="116.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1,826 samples, 1.42%)</title><rect x="113.2" y="595.0" width="16.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="116.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (1,657 samples, 1.29%)</title><rect x="113.2" y="579.0" width="15.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="116.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (89 samples, 0.07%)</title><rect x="113.2" y="563.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="116.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (89 samples, 0.07%)</title><rect x="113.2" y="547.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="116.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$499/1091379255.get$Lambda (37 samples, 0.03%)</title><rect x="113.2" y="531.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="116.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$499 (37 samples, 0.03%)</title><rect x="113.2" y="515.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="116.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$531/1830331575.get$Lambda (35 samples, 0.03%)</title><rect x="113.6" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="116.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$531 (35 samples, 0.03%)</title><rect x="113.6" y="515.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="116.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1,568 samples, 1.22%)</title><rect x="114.0" y="563.0" width="14.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="117.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (63 samples, 0.05%)</title><rect x="114.0" y="547.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="117.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,505 samples, 1.17%)</title><rect x="114.6" y="547.0" width="13.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="117.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,505 samples, 1.17%)</title><rect x="114.6" y="531.0" width="13.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,505 samples, 1.17%)</title><rect x="114.6" y="515.0" width="13.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="117.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (272 samples, 0.21%)</title><rect x="114.6" y="499.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (109 samples, 0.08%)</title><rect x="114.6" y="483.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="117.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$518/1735583741.apply (162 samples, 0.13%)</title><rect x="115.6" y="483.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="118.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (162 samples, 0.13%)</title><rect x="115.6" y="467.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="118.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (162 samples, 0.13%)</title><rect x="115.6" y="451.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.6" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (32 samples, 0.02%)</title><rect x="115.6" y="435.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.6" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (32 samples, 0.02%)</title><rect x="115.6" y="419.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="118.6" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (32 samples, 0.02%)</title><rect x="115.6" y="403.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="118.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (130 samples, 0.10%)</title><rect x="115.9" y="435.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (108 samples, 0.08%)</title><rect x="116.1" y="419.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="119.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (108 samples, 0.08%)</title><rect x="116.1" y="403.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.1" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (58 samples, 0.05%)</title><rect x="116.1" y="387.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="119.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.04%)</title><rect x="116.6" y="387.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="119.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.04%)</title><rect x="116.6" y="371.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.04%)</title><rect x="116.6" y="355.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="119.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1,233 samples, 0.96%)</title><rect x="117.1" y="499.0" width="11.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,233 samples, 0.96%)</title><rect x="117.1" y="483.0" width="11.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$463/1047907756.apply (1,233 samples, 0.96%)</title><rect x="117.1" y="467.0" width="11.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="120.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1,233 samples, 0.96%)</title><rect x="117.1" y="451.0" width="11.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,233 samples, 0.96%)</title><rect x="117.1" y="435.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$183/1392495226.apply (1,233 samples, 0.96%)</title><rect x="117.1" y="419.0" width="11.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="120.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1,233 samples, 0.96%)</title><rect x="117.1" y="403.0" width="11.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="120.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.03%)</title><rect x="117.1" y="387.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.03%)</title><rect x="117.1" y="371.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="120.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$518/1735583741.get$Lambda (36 samples, 0.03%)</title><rect x="117.1" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="120.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$518 (36 samples, 0.03%)</title><rect x="117.1" y="339.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="120.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (103 samples, 0.08%)</title><rect x="117.4" y="387.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (103 samples, 0.08%)</title><rect x="117.4" y="371.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="120.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (61 samples, 0.05%)</title><rect x="117.4" y="355.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="120.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.03%)</title><rect x="118.0" y="355.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.03%)</title><rect x="118.0" y="339.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="121.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (42 samples, 0.03%)</title><rect x="118.0" y="323.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="121.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1,094 samples, 0.85%)</title><rect x="118.4" y="387.0" width="10.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 0.03%)</title><rect x="118.4" y="371.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 0.03%)</title><rect x="118.4" y="355.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (401 samples, 0.31%)</title><rect x="118.8" y="371.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (401 samples, 0.31%)</title><rect x="118.8" y="355.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (401 samples, 0.31%)</title><rect x="118.8" y="339.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$506/1176927727.accept (140 samples, 0.11%)</title><rect x="118.8" y="323.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (140 samples, 0.11%)</title><rect x="118.8" y="307.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (140 samples, 0.11%)</title><rect x="118.8" y="291.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.03%)</title><rect x="118.8" y="275.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="121.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.03%)</title><rect x="118.8" y="259.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="121.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$509/1022630905.get$Lambda (35 samples, 0.03%)</title><rect x="118.8" y="243.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.8" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$509 (35 samples, 0.03%)</title><rect x="118.8" y="227.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="121.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (105 samples, 0.08%)</title><rect x="119.1" y="275.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="122.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (105 samples, 0.08%)</title><rect x="119.1" y="259.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.1" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (61 samples, 0.05%)</title><rect x="119.1" y="243.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="122.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.03%)</title><rect x="119.6" y="243.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="122.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.03%)</title><rect x="119.6" y="227.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="122.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.03%)</title><rect x="119.6" y="211.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="122.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$513/856070982.accept (169 samples, 0.13%)</title><rect x="120.0" y="323.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="123.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (169 samples, 0.13%)</title><rect x="120.0" y="307.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="123.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (169 samples, 0.13%)</title><rect x="120.0" y="291.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="123.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (169 samples, 0.13%)</title><rect x="120.0" y="275.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (169 samples, 0.13%)</title><rect x="120.0" y="259.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (169 samples, 0.13%)</title><rect x="120.0" y="243.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (169 samples, 0.13%)</title><rect x="120.0" y="227.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="123.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (169 samples, 0.13%)</title><rect x="120.0" y="211.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="123.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (169 samples, 0.13%)</title><rect x="120.0" y="195.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="123.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (169 samples, 0.13%)</title><rect x="120.0" y="179.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="123.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (68 samples, 0.05%)</title><rect x="120.0" y="163.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (68 samples, 0.05%)</title><rect x="120.0" y="147.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="123.0" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (32 samples, 0.02%)</title><rect x="120.0" y="131.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="123.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (36 samples, 0.03%)</title><rect x="120.3" y="131.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="123.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (36 samples, 0.03%)</title><rect x="120.3" y="115.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (36 samples, 0.03%)</title><rect x="120.3" y="99.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="123.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (36 samples, 0.03%)</title><rect x="120.3" y="83.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (36 samples, 0.03%)</title><rect x="120.3" y="67.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="123.3" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (36 samples, 0.03%)</title><rect x="120.3" y="51.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="123.3" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (101 samples, 0.08%)</title><rect x="120.7" y="163.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (101 samples, 0.08%)</title><rect x="120.7" y="147.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.7" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (39 samples, 0.03%)</title><rect x="120.7" y="131.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.7" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (39 samples, 0.03%)</title><rect x="120.7" y="115.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="123.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (62 samples, 0.05%)</title><rect x="121.0" y="131.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="124.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (36 samples, 0.03%)</title><rect x="121.3" y="115.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="124.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (36 samples, 0.03%)</title><rect x="121.3" y="99.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (36 samples, 0.03%)</title><rect x="121.3" y="83.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="124.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (36 samples, 0.03%)</title><rect x="121.3" y="67.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.3" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (36 samples, 0.03%)</title><rect x="121.3" y="51.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="124.3" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (36 samples, 0.03%)</title><rect x="121.3" y="35.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="124.3" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (92 samples, 0.07%)</title><rect x="121.6" y="323.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="124.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (92 samples, 0.07%)</title><rect x="121.6" y="307.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="124.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (92 samples, 0.07%)</title><rect x="121.6" y="291.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="124.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (652 samples, 0.51%)</title><rect x="122.4" y="371.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="125.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (58 samples, 0.05%)</title><rect x="122.4" y="355.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="125.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (47 samples, 0.04%)</title><rect x="123.0" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="126.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (47 samples, 0.04%)</title><rect x="123.0" y="339.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="126.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.04%)</title><rect x="123.0" y="323.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="126.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (547 samples, 0.43%)</title><rect x="123.4" y="355.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (28 samples, 0.02%)</title><rect x="123.4" y="339.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="126.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (282 samples, 0.22%)</title><rect x="123.7" y="339.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="126.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (42 samples, 0.03%)</title><rect x="123.7" y="323.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.7" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (42 samples, 0.03%)</title><rect x="123.7" y="307.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="126.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (47 samples, 0.04%)</title><rect x="124.0" y="323.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="127.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (193 samples, 0.15%)</title><rect x="124.5" y="323.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="127.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (45 samples, 0.03%)</title><rect x="124.9" y="307.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="127.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (33 samples, 0.03%)</title><rect x="125.3" y="307.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="128.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (33 samples, 0.03%)</title><rect x="125.3" y="291.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="128.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (67 samples, 0.05%)</title><rect x="125.6" y="307.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="128.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (237 samples, 0.18%)</title><rect x="126.2" y="339.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="129.2" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (31 samples, 0.02%)</title><rect x="126.2" y="323.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="129.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (120 samples, 0.09%)</title><rect x="126.5" y="323.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="129.5" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (84 samples, 0.07%)</title><rect x="126.5" y="307.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="129.5" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (36 samples, 0.03%)</title><rect x="127.3" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="130.3" y="318.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.03%)</title><rect x="127.3" y="291.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="130.3" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (86 samples, 0.07%)</title><rect x="127.6" y="323.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.6" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (86 samples, 0.07%)</title><rect x="127.6" y="307.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.6" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (86 samples, 0.07%)</title><rect x="127.6" y="291.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="130.6" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (86 samples, 0.07%)</title><rect x="127.6" y="275.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="130.6" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (86 samples, 0.07%)</title><rect x="127.6" y="259.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="130.6" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (86 samples, 0.07%)</title><rect x="127.6" y="243.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="130.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (169 samples, 0.13%)</title><rect x="128.4" y="579.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="131.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (169 samples, 0.13%)</title><rect x="128.4" y="563.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="131.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (169 samples, 0.13%)</title><rect x="128.4" y="547.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (169 samples, 0.13%)</title><rect x="128.4" y="531.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (169 samples, 0.13%)</title><rect x="128.4" y="515.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.4" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (169 samples, 0.13%)</title><rect x="128.4" y="499.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="131.4" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (62 samples, 0.05%)</title><rect x="128.4" y="483.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="131.4" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (62 samples, 0.05%)</title><rect x="128.4" y="467.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="131.4" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (107 samples, 0.08%)</title><rect x="129.0" y="483.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="132.0" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (107 samples, 0.08%)</title><rect x="129.0" y="467.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="132.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5,922 samples, 4.60%)</title><rect x="130.0" y="755.0" width="54.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="133.0" y="766.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5,922 samples, 4.60%)</title><rect x="130.0" y="739.0" width="54.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.0" y="750.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5,026 samples, 3.91%)</title><rect x="130.0" y="723.0" width="46.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="133.0" y="734.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$346/2096808812.run (5,026 samples, 3.91%)</title><rect x="130.0" y="707.0" width="46.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.0" y="718.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5,026 samples, 3.91%)</title><rect x="130.0" y="691.0" width="46.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="133.0" y="702.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (98 samples, 0.08%)</title><rect x="130.0" y="675.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="133.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (98 samples, 0.08%)</title><rect x="130.0" y="659.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (98 samples, 0.08%)</title><rect x="130.0" y="643.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (98 samples, 0.08%)</title><rect x="130.0" y="627.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/992846223.linkToTargetMethod (59 samples, 0.05%)</title><rect x="130.0" y="611.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="133.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2032188048.invoke (59 samples, 0.05%)</title><rect x="130.0" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.05%)</title><rect x="130.0" y="579.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (59 samples, 0.05%)</title><rect x="130.0" y="563.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (59 samples, 0.05%)</title><rect x="130.0" y="547.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="133.0" y="558.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.05%)</title><rect x="130.0" y="531.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="133.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (39 samples, 0.03%)</title><rect x="130.5" y="611.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="133.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.03%)</title><rect x="130.5" y="595.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.03%)</title><rect x="130.5" y="579.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$490/1888525546.get$Lambda (39 samples, 0.03%)</title><rect x="130.5" y="563.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="133.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$490 (39 samples, 0.03%)</title><rect x="130.5" y="547.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="133.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (4,928 samples, 3.83%)</title><rect x="130.9" y="675.0" width="45.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.9" y="686.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (4,928 samples, 3.83%)</title><rect x="130.9" y="659.0" width="45.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.9" y="670.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4,928 samples, 3.83%)</title><rect x="130.9" y="643.0" width="45.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.9" y="654.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4,928 samples, 3.83%)</title><rect x="130.9" y="627.0" width="45.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="133.9" y="638.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2,301 samples, 1.79%)</title><rect x="130.9" y="611.0" width="21.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.9" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,301 samples, 1.79%)</title><rect x="130.9" y="595.0" width="21.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.9" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,301 samples, 1.79%)</title><rect x="130.9" y="579.0" width="21.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.9" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2,301 samples, 1.79%)</title><rect x="130.9" y="563.0" width="21.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="133.9" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,301 samples, 1.79%)</title><rect x="130.9" y="547.0" width="21.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.9" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2,301 samples, 1.79%)</title><rect x="130.9" y="531.0" width="21.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.9" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,301 samples, 1.79%)</title><rect x="130.9" y="515.0" width="21.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.9" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2,237 samples, 1.74%)</title><rect x="130.9" y="499.0" width="20.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,237 samples, 1.74%)</title><rect x="130.9" y="483.0" width="20.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,190 samples, 1.70%)</title><rect x="130.9" y="467.0" width="20.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (57 samples, 0.04%)</title><rect x="130.9" y="451.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="133.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$164/1050469577.apply (2,028 samples, 1.58%)</title><rect x="131.4" y="451.0" width="18.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="134.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2,028 samples, 1.58%)</title><rect x="131.4" y="435.0" width="18.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.03%)</title><rect x="131.4" y="419.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="134.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.03%)</title><rect x="131.4" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="134.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$630/288961646.get$Lambda (36 samples, 0.03%)</title><rect x="131.4" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="134.4" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$630 (36 samples, 0.03%)</title><rect x="131.4" y="371.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="134.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (96 samples, 0.07%)</title><rect x="131.7" y="419.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="134.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (96 samples, 0.07%)</title><rect x="131.7" y="403.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="134.7" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (47 samples, 0.04%)</title><rect x="131.7" y="387.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="134.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.04%)</title><rect x="132.1" y="387.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.04%)</title><rect x="132.1" y="371.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="135.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (49 samples, 0.04%)</title><rect x="132.1" y="355.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="135.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1,896 samples, 1.47%)</title><rect x="132.6" y="419.0" width="17.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (112 samples, 0.09%)</title><rect x="132.8" y="403.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="135.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (112 samples, 0.09%)</title><rect x="132.8" y="387.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="135.8" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (60 samples, 0.05%)</title><rect x="132.8" y="371.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="135.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.04%)</title><rect x="133.4" y="371.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.04%)</title><rect x="133.4" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (52 samples, 0.04%)</title><rect x="133.4" y="339.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="136.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1,761 samples, 1.37%)</title><rect x="133.8" y="403.0" width="16.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="136.8" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$139/971291176.apply (102 samples, 0.08%)</title><rect x="133.8" y="387.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="136.8" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$discarding$6 (102 samples, 0.08%)</title><rect x="133.8" y="371.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.8" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.discarding (102 samples, 0.08%)</title><rect x="133.8" y="355.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$NullSubscriber (37 samples, 0.03%)</title><rect x="133.8" y="339.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="136.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (65 samples, 0.05%)</title><rect x="134.2" y="339.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (39 samples, 0.03%)</title><rect x="134.4" y="323.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="137.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1,659 samples, 1.29%)</title><rect x="134.8" y="387.0" width="15.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="137.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (45 samples, 0.03%)</title><rect x="134.8" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="137.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (45 samples, 0.03%)</title><rect x="134.8" y="355.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="137.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$615/1161663572.get$Lambda (28 samples, 0.02%)</title><rect x="134.9" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="137.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$615 (28 samples, 0.02%)</title><rect x="134.9" y="323.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="137.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/492581649.linkToTargetMethod (53 samples, 0.04%)</title><rect x="135.2" y="371.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1285048021.invokeStatic (53 samples, 0.04%)</title><rect x="135.2" y="355.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$571/1082470423.get$Lambda (53 samples, 0.04%)</title><rect x="135.2" y="339.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$571 (53 samples, 0.04%)</title><rect x="135.2" y="323.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="138.2" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (329 samples, 0.26%)</title><rect x="135.7" y="371.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.7" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (115 samples, 0.09%)</title><rect x="135.7" y="355.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.7" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (39 samples, 0.03%)</title><rect x="135.7" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.7" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (39 samples, 0.03%)</title><rect x="135.7" y="323.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="138.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (76 samples, 0.06%)</title><rect x="136.0" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="139.0" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (76 samples, 0.06%)</title><rect x="136.0" y="323.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="139.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (120 samples, 0.09%)</title><rect x="136.7" y="355.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="139.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (120 samples, 0.09%)</title><rect x="136.7" y="339.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="139.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (120 samples, 0.09%)</title><rect x="136.7" y="323.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="139.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (43 samples, 0.03%)</title><rect x="136.7" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (43 samples, 0.03%)</title><rect x="136.7" y="291.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (43 samples, 0.03%)</title><rect x="136.7" y="275.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="139.7" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (43 samples, 0.03%)</title><rect x="136.7" y="259.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="139.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$567/1459778568.get (39 samples, 0.03%)</title><rect x="137.1" y="307.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.1" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (39 samples, 0.03%)</title><rect x="137.1" y="291.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="140.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (38 samples, 0.03%)</title><rect x="137.5" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="140.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (38 samples, 0.03%)</title><rect x="137.5" y="291.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="140.5" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (38 samples, 0.03%)</title><rect x="137.5" y="275.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="140.5" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (38 samples, 0.03%)</title><rect x="137.5" y="259.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="140.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (94 samples, 0.07%)</title><rect x="137.8" y="355.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="140.8" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (94 samples, 0.07%)</title><rect x="137.8" y="339.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="140.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (206 samples, 0.16%)</title><rect x="138.7" y="371.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (105 samples, 0.08%)</title><rect x="138.7" y="355.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="141.7" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (62 samples, 0.05%)</title><rect x="138.7" y="339.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="141.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.03%)</title><rect x="139.3" y="339.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="142.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.03%)</title><rect x="139.3" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (43 samples, 0.03%)</title><rect x="139.3" y="307.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="142.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (101 samples, 0.08%)</title><rect x="139.7" y="355.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (101 samples, 0.08%)</title><rect x="139.7" y="339.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="142.7" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (54 samples, 0.04%)</title><rect x="139.7" y="323.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="142.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.04%)</title><rect x="140.1" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="143.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.04%)</title><rect x="140.1" y="307.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="143.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.04%)</title><rect x="140.1" y="291.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="143.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (42 samples, 0.03%)</title><rect x="140.6" y="371.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="143.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (57 samples, 0.04%)</title><rect x="141.0" y="371.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="144.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (38 samples, 0.03%)</title><rect x="141.5" y="371.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="144.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (868 samples, 0.67%)</title><rect x="142.0" y="371.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="145.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$571/1082470423.run (868 samples, 0.67%)</title><rect x="142.0" y="355.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (868 samples, 0.67%)</title><rect x="142.0" y="339.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="145.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (96 samples, 0.07%)</title><rect x="142.0" y="323.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (96 samples, 0.07%)</title><rect x="142.0" y="307.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="145.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$595/959043100.get$Lambda (40 samples, 0.03%)</title><rect x="142.2" y="291.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$595 (40 samples, 0.03%)</title><rect x="142.2" y="275.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="145.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$602/1711820606.get$Lambda (38 samples, 0.03%)</title><rect x="142.6" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$602 (38 samples, 0.03%)</title><rect x="142.6" y="275.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="145.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (117 samples, 0.09%)</title><rect x="142.9" y="323.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (117 samples, 0.09%)</title><rect x="142.9" y="307.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (66 samples, 0.05%)</title><rect x="142.9" y="291.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="145.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.04%)</title><rect x="143.5" y="291.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.04%)</title><rect x="143.5" y="275.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.5" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (51 samples, 0.04%)</title><rect x="143.5" y="259.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="146.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (68 samples, 0.05%)</title><rect x="144.0" y="323.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="147.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (40 samples, 0.03%)</title><rect x="144.6" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="147.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (40 samples, 0.03%)</title><rect x="144.6" y="307.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="147.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (144 samples, 0.11%)</title><rect x="145.0" y="323.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="148.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (144 samples, 0.11%)</title><rect x="145.0" y="307.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.03%)</title><rect x="145.0" y="291.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="148.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.03%)</title><rect x="145.0" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="148.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$606/2026424179.get$Lambda (43 samples, 0.03%)</title><rect x="145.0" y="259.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="148.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$606 (43 samples, 0.03%)</title><rect x="145.0" y="243.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="148.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (101 samples, 0.08%)</title><rect x="145.4" y="291.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="148.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (101 samples, 0.08%)</title><rect x="145.4" y="275.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="148.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (101 samples, 0.08%)</title><rect x="145.4" y="259.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="148.4" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (60 samples, 0.05%)</title><rect x="145.4" y="243.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="148.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.03%)</title><rect x="145.9" y="243.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.03%)</title><rect x="145.9" y="227.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.03%)</title><rect x="145.9" y="211.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="148.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (129 samples, 0.10%)</title><rect x="146.3" y="323.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (129 samples, 0.10%)</title><rect x="146.3" y="307.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/809762318.invoke (129 samples, 0.10%)</title><rect x="146.3" y="291.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (129 samples, 0.10%)</title><rect x="146.3" y="275.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="149.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (34 samples, 0.03%)</title><rect x="146.3" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.3" y="270.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.03%)</title><rect x="146.3" y="243.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="149.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (95 samples, 0.07%)</title><rect x="146.6" y="259.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (95 samples, 0.07%)</title><rect x="146.6" y="243.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.6" y="254.0"></text>
</g>
<g>
<title>byte[] (95 samples, 0.07%)</title><rect x="146.6" y="227.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="149.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (274 samples, 0.21%)</title><rect x="147.5" y="323.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="150.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (88 samples, 0.07%)</title><rect x="147.5" y="307.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="150.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (186 samples, 0.14%)</title><rect x="148.3" y="307.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (186 samples, 0.14%)</title><rect x="148.3" y="291.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/809762318.invoke (186 samples, 0.14%)</title><rect x="148.3" y="275.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (186 samples, 0.14%)</title><rect x="148.3" y="259.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.3" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (38 samples, 0.03%)</title><rect x="148.3" y="243.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.3" y="254.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.03%)</title><rect x="148.3" y="227.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="151.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (148 samples, 0.12%)</title><rect x="148.6" y="243.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (148 samples, 0.12%)</title><rect x="148.6" y="227.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.6" y="238.0"></text>
</g>
<g>
<title>byte[] (148 samples, 0.12%)</title><rect x="148.6" y="211.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="151.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$468/1430929057.apply (105 samples, 0.08%)</title><rect x="150.0" y="451.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="153.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (105 samples, 0.08%)</title><rect x="150.0" y="435.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (56 samples, 0.04%)</title><rect x="150.0" y="419.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="153.0" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (56 samples, 0.04%)</title><rect x="150.0" y="403.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="153.0" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (56 samples, 0.04%)</title><rect x="150.0" y="387.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="153.0" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (56 samples, 0.04%)</title><rect x="150.0" y="371.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="153.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (49 samples, 0.04%)</title><rect x="150.5" y="419.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (49 samples, 0.04%)</title><rect x="150.5" y="403.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="153.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (47 samples, 0.04%)</title><rect x="151.0" y="467.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="154.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (47 samples, 0.04%)</title><rect x="151.0" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="154.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$473/1161986313.apply (47 samples, 0.04%)</title><rect x="151.0" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="154.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (47 samples, 0.04%)</title><rect x="151.0" y="419.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (47 samples, 0.04%)</title><rect x="151.0" y="403.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="154.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.04%)</title><rect x="151.0" y="387.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="154.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$543/1444925880.apply (64 samples, 0.05%)</title><rect x="151.4" y="499.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (64 samples, 0.05%)</title><rect x="151.4" y="483.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (64 samples, 0.05%)</title><rect x="151.4" y="467.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="154.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (2,627 samples, 2.04%)</title><rect x="152.0" y="611.0" width="24.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="155.0" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (156 samples, 0.12%)</title><rect x="152.0" y="595.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (156 samples, 0.12%)</title><rect x="152.0" y="579.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.0" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (156 samples, 0.12%)</title><rect x="152.0" y="563.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.0" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (156 samples, 0.12%)</title><rect x="152.0" y="547.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="155.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (156 samples, 0.12%)</title><rect x="152.0" y="531.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.0" y="542.0"></text>
</g>
<g>
<title>byte[] (156 samples, 0.12%)</title><rect x="152.0" y="515.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="155.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (110 samples, 0.09%)</title><rect x="153.4" y="595.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (110 samples, 0.09%)</title><rect x="153.4" y="579.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.4" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (110 samples, 0.09%)</title><rect x="153.4" y="563.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.4" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (110 samples, 0.09%)</title><rect x="153.4" y="547.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="156.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (110 samples, 0.09%)</title><rect x="153.4" y="531.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.4" y="542.0"></text>
</g>
<g>
<title>byte[] (110 samples, 0.09%)</title><rect x="153.4" y="515.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="156.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (213 samples, 0.17%)</title><rect x="154.4" y="595.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.4" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (42 samples, 0.03%)</title><rect x="154.4" y="579.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="157.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (40 samples, 0.03%)</title><rect x="154.8" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (40 samples, 0.03%)</title><rect x="154.8" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="157.8" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (40 samples, 0.03%)</title><rect x="154.8" y="547.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="157.8" y="558.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.03%)</title><rect x="154.8" y="531.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="157.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (40 samples, 0.03%)</title><rect x="155.2" y="579.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (40 samples, 0.03%)</title><rect x="155.2" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="158.2" y="574.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.03%)</title><rect x="155.2" y="547.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="158.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (91 samples, 0.07%)</title><rect x="155.5" y="579.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="158.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (91 samples, 0.07%)</title><rect x="155.5" y="563.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="158.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.03%)</title><rect x="155.5" y="547.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="158.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (57 samples, 0.04%)</title><rect x="155.8" y="547.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="158.8" y="558.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.04%)</title><rect x="155.8" y="531.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="158.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (665 samples, 0.52%)</title><rect x="156.4" y="595.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="159.4" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (665 samples, 0.52%)</title><rect x="156.4" y="579.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.4" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (665 samples, 0.52%)</title><rect x="156.4" y="563.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="159.4" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (43 samples, 0.03%)</title><rect x="156.6" y="547.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="159.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (75 samples, 0.06%)</title><rect x="156.9" y="547.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="159.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (28 samples, 0.02%)</title><rect x="157.6" y="547.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="160.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (50 samples, 0.04%)</title><rect x="157.9" y="547.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="160.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (50 samples, 0.04%)</title><rect x="157.9" y="531.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="160.9" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/491938346.get$Lambda (50 samples, 0.04%)</title><rect x="157.9" y="515.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="160.9" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (50 samples, 0.04%)</title><rect x="157.9" y="499.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="160.9" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (49 samples, 0.04%)</title><rect x="158.4" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="161.4" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (49 samples, 0.04%)</title><rect x="158.4" y="531.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="161.4" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (332 samples, 0.26%)</title><rect x="158.8" y="547.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="161.8" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/491938346.accept (332 samples, 0.26%)</title><rect x="158.8" y="531.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="161.8" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (332 samples, 0.26%)</title><rect x="158.8" y="515.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.8" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (74 samples, 0.06%)</title><rect x="158.8" y="499.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="161.8" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/829051045.accept (74 samples, 0.06%)</title><rect x="158.8" y="483.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="161.8" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (74 samples, 0.06%)</title><rect x="158.8" y="467.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="161.8" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (74 samples, 0.06%)</title><rect x="158.8" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (74 samples, 0.06%)</title><rect x="158.8" y="435.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="161.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (74 samples, 0.06%)</title><rect x="158.8" y="419.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="161.8" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (74 samples, 0.06%)</title><rect x="158.8" y="403.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="161.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (74 samples, 0.06%)</title><rect x="158.8" y="387.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="161.8" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (74 samples, 0.06%)</title><rect x="158.8" y="371.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="161.8" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (139 samples, 0.11%)</title><rect x="159.5" y="499.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="162.5" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (139 samples, 0.11%)</title><rect x="159.5" y="483.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.5" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (68 samples, 0.05%)</title><rect x="159.5" y="467.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="162.5" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (68 samples, 0.05%)</title><rect x="159.5" y="451.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="162.5" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (68 samples, 0.05%)</title><rect x="159.5" y="435.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="162.5" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (71 samples, 0.06%)</title><rect x="160.1" y="467.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="163.1" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (71 samples, 0.06%)</title><rect x="160.1" y="451.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="163.1" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (119 samples, 0.09%)</title><rect x="160.8" y="499.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="163.8" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (119 samples, 0.09%)</title><rect x="160.8" y="483.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="163.8" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (67 samples, 0.05%)</title><rect x="161.8" y="547.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (67 samples, 0.05%)</title><rect x="161.8" y="531.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="164.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (1,483 samples, 1.15%)</title><rect x="162.5" y="595.0" width="13.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="165.5" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (72 samples, 0.06%)</title><rect x="162.5" y="579.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="165.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (104 samples, 0.08%)</title><rect x="163.1" y="579.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="166.1" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (104 samples, 0.08%)</title><rect x="163.1" y="563.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.1" y="574.0"></text>
</g>
<g>
<title>byte[] (104 samples, 0.08%)</title><rect x="163.1" y="547.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="166.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (194 samples, 0.15%)</title><rect x="164.1" y="579.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="167.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (194 samples, 0.15%)</title><rect x="164.1" y="563.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="167.1" y="574.0"></text>
</g>
<g>
<title>java.lang.String (80 samples, 0.06%)</title><rect x="164.1" y="547.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="167.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (114 samples, 0.09%)</title><rect x="164.8" y="547.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.8" y="558.0"></text>
</g>
<g>
<title>byte[] (114 samples, 0.09%)</title><rect x="164.8" y="531.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="167.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (1,113 samples, 0.87%)</title><rect x="165.9" y="579.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (356 samples, 0.28%)</title><rect x="165.9" y="563.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (356 samples, 0.28%)</title><rect x="165.9" y="547.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="168.9" y="558.0"></text>
</g>
<g>
<title>java.lang.String (171 samples, 0.13%)</title><rect x="165.9" y="531.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="168.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (185 samples, 0.14%)</title><rect x="167.4" y="531.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="170.4" y="542.0"></text>
</g>
<g>
<title>byte[] (185 samples, 0.14%)</title><rect x="167.4" y="515.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="170.4" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (157 samples, 0.12%)</title><rect x="169.1" y="563.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="172.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (157 samples, 0.12%)</title><rect x="169.1" y="547.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="172.1" y="558.0"></text>
</g>
<g>
<title>byte[] (95 samples, 0.07%)</title><rect x="169.1" y="531.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="172.1" y="542.0"></text>
</g>
<g>
<title>java.lang.String (62 samples, 0.05%)</title><rect x="170.0" y="531.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="173.0" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (142 samples, 0.11%)</title><rect x="170.6" y="563.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="173.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (142 samples, 0.11%)</title><rect x="170.6" y="547.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (142 samples, 0.11%)</title><rect x="170.6" y="531.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (70 samples, 0.05%)</title><rect x="170.6" y="515.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="173.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (72 samples, 0.06%)</title><rect x="171.2" y="515.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.2" y="526.0"></text>
</g>
<g>
<title>byte[] (72 samples, 0.06%)</title><rect x="171.2" y="499.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="174.2" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (173 samples, 0.13%)</title><rect x="171.9" y="563.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="174.9" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (173 samples, 0.13%)</title><rect x="171.9" y="547.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.9" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (173 samples, 0.13%)</title><rect x="171.9" y="531.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.9" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (173 samples, 0.13%)</title><rect x="171.9" y="515.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="174.9" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (173 samples, 0.13%)</title><rect x="171.9" y="499.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.9" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (173 samples, 0.13%)</title><rect x="171.9" y="483.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="174.9" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (285 samples, 0.22%)</title><rect x="173.4" y="563.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="176.4" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (83 samples, 0.06%)</title><rect x="173.4" y="547.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="176.4" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (83 samples, 0.06%)</title><rect x="173.4" y="531.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="176.4" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (127 samples, 0.10%)</title><rect x="174.2" y="547.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="177.2" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (127 samples, 0.10%)</title><rect x="174.2" y="531.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="177.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$549/1178299669.apply (75 samples, 0.06%)</title><rect x="175.4" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (75 samples, 0.06%)</title><rect x="175.4" y="531.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.4" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (75 samples, 0.06%)</title><rect x="175.4" y="515.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="178.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (896 samples, 0.70%)</title><rect x="176.1" y="723.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="179.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (896 samples, 0.70%)</title><rect x="176.1" y="707.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="179.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (896 samples, 0.70%)</title><rect x="176.1" y="691.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="179.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$346/2096808812.run (896 samples, 0.70%)</title><rect x="176.1" y="675.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="179.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (896 samples, 0.70%)</title><rect x="176.1" y="659.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (894 samples, 0.69%)</title><rect x="176.1" y="643.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="179.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.04%)</title><rect x="176.1" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="179.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.04%)</title><rect x="176.1" y="611.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="179.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$413/1593888667.get$Lambda (33 samples, 0.03%)</title><rect x="176.2" y="595.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="179.2" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$413 (33 samples, 0.03%)</title><rect x="176.2" y="579.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="179.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (41 samples, 0.03%)</title><rect x="176.5" y="627.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="179.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (69 samples, 0.05%)</title><rect x="176.9" y="627.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="179.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (69 samples, 0.05%)</title><rect x="176.9" y="611.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="179.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (48 samples, 0.04%)</title><rect x="177.1" y="595.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="180.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (48 samples, 0.04%)</title><rect x="177.1" y="579.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="180.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (731 samples, 0.57%)</title><rect x="177.6" y="627.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="180.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (731 samples, 0.57%)</title><rect x="177.6" y="611.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="180.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$579/1110781505.run (634 samples, 0.49%)</title><rect x="177.6" y="595.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="180.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (634 samples, 0.49%)</title><rect x="177.6" y="579.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="180.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (634 samples, 0.49%)</title><rect x="177.6" y="563.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="180.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (201 samples, 0.16%)</title><rect x="177.6" y="547.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.6" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (148 samples, 0.12%)</title><rect x="177.6" y="531.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="180.6" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (51 samples, 0.04%)</title><rect x="177.6" y="515.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.6" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (51 samples, 0.04%)</title><rect x="177.6" y="499.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="180.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (97 samples, 0.08%)</title><rect x="178.0" y="515.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="181.0" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (97 samples, 0.08%)</title><rect x="178.0" y="499.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="181.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (53 samples, 0.04%)</title><rect x="178.9" y="531.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (53 samples, 0.04%)</title><rect x="178.9" y="515.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="181.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (53 samples, 0.04%)</title><rect x="178.9" y="499.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="181.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$59/1897115967.get (35 samples, 0.03%)</title><rect x="178.9" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="181.9" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (35 samples, 0.03%)</title><rect x="178.9" y="467.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="181.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (433 samples, 0.34%)</title><rect x="179.4" y="547.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="182.4" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (45 samples, 0.03%)</title><rect x="179.4" y="531.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="182.4" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (45 samples, 0.03%)</title><rect x="179.4" y="515.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="182.4" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (45 samples, 0.03%)</title><rect x="179.4" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="182.4" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (45 samples, 0.03%)</title><rect x="179.4" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="182.4" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (45 samples, 0.03%)</title><rect x="179.4" y="467.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="182.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (388 samples, 0.30%)</title><rect x="179.8" y="531.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="182.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (178 samples, 0.14%)</title><rect x="179.8" y="515.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="182.8" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (36 samples, 0.03%)</title><rect x="179.8" y="499.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.8" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (36 samples, 0.03%)</title><rect x="179.8" y="483.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="182.8" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (36 samples, 0.03%)</title><rect x="179.8" y="467.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="182.8" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (36 samples, 0.03%)</title><rect x="179.8" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="182.8" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (36 samples, 0.03%)</title><rect x="179.8" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.8" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (36 samples, 0.03%)</title><rect x="179.8" y="419.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="182.8" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (62 samples, 0.05%)</title><rect x="180.1" y="499.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="183.1" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (62 samples, 0.05%)</title><rect x="180.1" y="483.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.1" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (62 samples, 0.05%)</title><rect x="180.1" y="467.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="183.1" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (32 samples, 0.02%)</title><rect x="180.7" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="183.7" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (32 samples, 0.02%)</title><rect x="180.7" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="183.7" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (32 samples, 0.02%)</title><rect x="180.7" y="467.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="183.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (47 samples, 0.04%)</title><rect x="181.0" y="499.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="184.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (62 samples, 0.05%)</title><rect x="181.4" y="515.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="184.4" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (29 samples, 0.02%)</title><rect x="181.4" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="184.4" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (29 samples, 0.02%)</title><rect x="181.4" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="184.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (29 samples, 0.02%)</title><rect x="181.4" y="467.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="184.4" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (29 samples, 0.02%)</title><rect x="181.4" y="451.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="184.4" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (33 samples, 0.03%)</title><rect x="181.7" y="499.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="184.7" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (33 samples, 0.03%)</title><rect x="181.7" y="483.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="184.7" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (33 samples, 0.03%)</title><rect x="181.7" y="467.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="184.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (148 samples, 0.12%)</title><rect x="182.0" y="515.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="185.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (44 samples, 0.03%)</title><rect x="182.0" y="499.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="185.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (104 samples, 0.08%)</title><rect x="182.4" y="499.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="185.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (42 samples, 0.03%)</title><rect x="182.4" y="483.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="185.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (42 samples, 0.03%)</title><rect x="182.4" y="467.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="185.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (42 samples, 0.03%)</title><rect x="182.4" y="451.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="185.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (42 samples, 0.03%)</title><rect x="182.4" y="435.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="185.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (62 samples, 0.05%)</title><rect x="182.8" y="483.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="185.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (62 samples, 0.05%)</title><rect x="182.8" y="467.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (47 samples, 0.04%)</title><rect x="182.8" y="451.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="185.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (97 samples, 0.08%)</title><rect x="183.4" y="595.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="186.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (97 samples, 0.08%)</title><rect x="183.4" y="579.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="186.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (97 samples, 0.08%)</title><rect x="183.4" y="563.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="186.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (97 samples, 0.08%)</title><rect x="183.4" y="547.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (97 samples, 0.08%)</title><rect x="183.4" y="531.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (97 samples, 0.08%)</title><rect x="183.4" y="515.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="186.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (97 samples, 0.08%)</title><rect x="183.4" y="499.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="186.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$608/614048305.accept (97 samples, 0.08%)</title><rect x="183.4" y="483.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="186.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (97 samples, 0.08%)</title><rect x="183.4" y="467.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (97 samples, 0.08%)</title><rect x="183.4" y="451.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (97 samples, 0.08%)</title><rect x="183.4" y="435.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (97 samples, 0.08%)</title><rect x="183.4" y="419.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="186.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$630/288961646.apply (97 samples, 0.08%)</title><rect x="183.4" y="403.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="186.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (97 samples, 0.08%)</title><rect x="183.4" y="387.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="186.4" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (97 samples, 0.08%)</title><rect x="183.4" y="371.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="186.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$120/1156768502.run (44,864 samples, 34.87%)</title><rect x="184.3" y="755.0" width="411.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.3" y="766.0">ru/mail/polis/service/alexander/marashov/ServiceImpl$$La..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityPut$4 (44,864 samples, 34.87%)</title><rect x="184.3" y="739.0" width="411.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="187.3" y="750.0">ru/mail/polis/service/alexander/marashov/ServiceImpl.lam..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,542 samples, 2.75%)</title><rect x="184.3" y="723.0" width="32.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="187.3" y="734.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,542 samples, 2.75%)</title><rect x="184.3" y="707.0" width="32.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="187.3" y="718.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,542 samples, 2.75%)</title><rect x="184.3" y="691.0" width="32.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="187.3" y="702.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.put (23,961 samples, 18.62%)</title><rect x="216.8" y="723.0" width="219.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="219.8" y="734.0">ru/mail/polis/service/alexand..</text>
</g>
<g>
<title>java.util.ArrayList (50 samples, 0.04%)</title><rect x="216.8" y="707.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="219.8" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.03%)</title><rect x="217.2" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="220.2" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.03%)</title><rect x="217.2" y="691.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="220.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$215/68762744.get$Lambda (33 samples, 0.03%)</title><rect x="217.2" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="220.2" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ResponseManager$$Lambda$215 (33 samples, 0.03%)</title><rect x="217.2" y="659.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="220.2" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (112 samples, 0.09%)</title><rect x="217.5" y="707.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="220.5" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (112 samples, 0.09%)</title><rect x="217.5" y="691.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="220.5" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (61 samples, 0.05%)</title><rect x="218.6" y="707.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="221.6" y="718.0"></text>
</g>
<g>
<title>java.lang.Object[] (61 samples, 0.05%)</title><rect x="218.6" y="691.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="221.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (424 samples, 0.33%)</title><rect x="219.1" y="707.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="222.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (424 samples, 0.33%)</title><rect x="219.1" y="691.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="222.1" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (235 samples, 0.18%)</title><rect x="219.1" y="675.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="222.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (55 samples, 0.04%)</title><rect x="221.3" y="675.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="224.3" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (55 samples, 0.04%)</title><rect x="221.3" y="659.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="224.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (134 samples, 0.10%)</title><rect x="221.8" y="675.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="224.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (134 samples, 0.10%)</title><rect x="221.8" y="659.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="224.8" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (134 samples, 0.10%)</title><rect x="221.8" y="643.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="224.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (8,356 samples, 6.49%)</title><rect x="223.0" y="707.0" width="76.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="226.0" y="718.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (8,356 samples, 6.49%)</title><rect x="223.0" y="691.0" width="76.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="226.0" y="702.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (8,356 samples, 6.49%)</title><rect x="223.0" y="675.0" width="76.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="226.0" y="686.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (8,356 samples, 6.49%)</title><rect x="223.0" y="659.0" width="76.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="226.0" y="670.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (68 samples, 0.05%)</title><rect x="223.0" y="643.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="226.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (68 samples, 0.05%)</title><rect x="223.0" y="627.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="226.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$174/682362481.get$Lambda (68 samples, 0.05%)</title><rect x="223.0" y="611.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="226.0" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$174 (68 samples, 0.05%)</title><rect x="223.0" y="595.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="226.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (289 samples, 0.22%)</title><rect x="223.6" y="643.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="226.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (289 samples, 0.22%)</title><rect x="223.6" y="627.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="226.6" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (175 samples, 0.14%)</title><rect x="223.6" y="611.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="226.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (114 samples, 0.09%)</title><rect x="225.2" y="611.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="228.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (114 samples, 0.09%)</title><rect x="225.2" y="595.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="228.2" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (114 samples, 0.09%)</title><rect x="225.2" y="579.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="228.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (292 samples, 0.23%)</title><rect x="226.3" y="643.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="229.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (292 samples, 0.23%)</title><rect x="226.3" y="627.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="229.3" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (161 samples, 0.13%)</title><rect x="226.3" y="611.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="229.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (131 samples, 0.10%)</title><rect x="227.7" y="611.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="230.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (131 samples, 0.10%)</title><rect x="227.7" y="595.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="230.7" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (131 samples, 0.10%)</title><rect x="227.7" y="579.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="230.7" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (202 samples, 0.16%)</title><rect x="229.0" y="643.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="232.0" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (380 samples, 0.30%)</title><rect x="230.8" y="643.0" width="3.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="233.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (3,965 samples, 3.08%)</title><rect x="234.4" y="643.0" width="36.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.4" y="654.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (484 samples, 0.38%)</title><rect x="234.4" y="627.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="237.4" y="638.0"></text>
</g>
<g>
<title>java/util/Collection.stream (401 samples, 0.31%)</title><rect x="234.4" y="611.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="237.4" y="622.0"></text>
</g>
<g>
<title>java/util/List.spliterator (140 samples, 0.11%)</title><rect x="234.4" y="595.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="237.4" y="606.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (140 samples, 0.11%)</title><rect x="234.4" y="579.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="237.4" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (261 samples, 0.20%)</title><rect x="235.7" y="595.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="238.7" y="606.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (258 samples, 0.20%)</title><rect x="235.7" y="579.0" width="2.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="238.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (83 samples, 0.06%)</title><rect x="238.1" y="611.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="241.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (83 samples, 0.06%)</title><rect x="238.1" y="595.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="241.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (83 samples, 0.06%)</title><rect x="238.1" y="579.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="241.1" y="590.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$59/1897115967.get (83 samples, 0.06%)</title><rect x="238.1" y="563.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="241.1" y="574.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (83 samples, 0.06%)</title><rect x="238.1" y="547.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="241.1" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,480 samples, 1.15%)</title><rect x="238.9" y="627.0" width="13.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="241.9" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,480 samples, 1.15%)</title><rect x="238.9" y="611.0" width="13.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="241.9" y="622.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (66 samples, 0.05%)</title><rect x="238.9" y="595.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="241.9" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (87 samples, 0.07%)</title><rect x="239.5" y="595.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="242.5" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (216 samples, 0.17%)</title><rect x="240.3" y="595.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="243.3" y="606.0"></text>
</g>
<g>
<title>java.util.TreeSet (78 samples, 0.06%)</title><rect x="242.3" y="595.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="245.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (131 samples, 0.10%)</title><rect x="243.0" y="595.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="246.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (131 samples, 0.10%)</title><rect x="243.0" y="579.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.0" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/491938346.get$Lambda (131 samples, 0.10%)</title><rect x="243.0" y="563.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="246.0" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (131 samples, 0.10%)</title><rect x="243.0" y="547.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="246.0" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (604 samples, 0.47%)</title><rect x="244.2" y="595.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="247.2" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (604 samples, 0.47%)</title><rect x="244.2" y="579.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="247.2" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/491938346.accept (604 samples, 0.47%)</title><rect x="244.2" y="563.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="247.2" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (604 samples, 0.47%)</title><rect x="244.2" y="547.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="247.2" y="558.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (230 samples, 0.18%)</title><rect x="244.2" y="531.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="247.2" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/829051045.accept (230 samples, 0.18%)</title><rect x="244.2" y="515.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.2" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (230 samples, 0.18%)</title><rect x="244.2" y="499.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="247.2" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (230 samples, 0.18%)</title><rect x="244.2" y="483.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="247.2" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (230 samples, 0.18%)</title><rect x="244.2" y="467.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="247.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (230 samples, 0.18%)</title><rect x="244.2" y="451.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="247.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (230 samples, 0.18%)</title><rect x="244.2" y="435.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="247.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (230 samples, 0.18%)</title><rect x="244.2" y="419.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="247.2" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (230 samples, 0.18%)</title><rect x="244.2" y="403.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="247.2" y="414.0"></text>
</g>
<g>
<title>java/util/List.copyOf (200 samples, 0.16%)</title><rect x="246.3" y="531.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="249.3" y="542.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (200 samples, 0.16%)</title><rect x="246.3" y="515.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="249.3" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (111 samples, 0.09%)</title><rect x="246.3" y="499.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="249.3" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (111 samples, 0.09%)</title><rect x="246.3" y="483.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="249.3" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (111 samples, 0.09%)</title><rect x="246.3" y="467.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="249.3" y="478.0"></text>
</g>
<g>
<title>java/util/List.of (89 samples, 0.07%)</title><rect x="247.3" y="499.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="250.3" y="510.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (89 samples, 0.07%)</title><rect x="247.3" y="483.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="250.3" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (174 samples, 0.14%)</title><rect x="248.1" y="531.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.1" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (174 samples, 0.14%)</title><rect x="248.1" y="515.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="251.1" y="526.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (117 samples, 0.09%)</title><rect x="249.7" y="595.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.7" y="606.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (117 samples, 0.09%)</title><rect x="249.7" y="579.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="252.7" y="590.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (181 samples, 0.14%)</title><rect x="250.8" y="595.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="253.8" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (181 samples, 0.14%)</title><rect x="250.8" y="579.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="253.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (65 samples, 0.05%)</title><rect x="252.5" y="627.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="255.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (1,440 samples, 1.12%)</title><rect x="253.1" y="627.0" width="13.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="256.1" y="638.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (1,440 samples, 1.12%)</title><rect x="253.1" y="611.0" width="13.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="256.1" y="622.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,335 samples, 1.04%)</title><rect x="253.1" y="595.0" width="12.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="256.1" y="606.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,335 samples, 1.04%)</title><rect x="253.1" y="579.0" width="12.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="256.1" y="590.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,335 samples, 1.04%)</title><rect x="253.1" y="563.0" width="12.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="256.1" y="574.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (260 samples, 0.20%)</title><rect x="253.1" y="547.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="256.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (360 samples, 0.28%)</title><rect x="255.4" y="547.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="258.4" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (360 samples, 0.28%)</title><rect x="255.4" y="531.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.4" y="542.0"></text>
</g>
<g>
<title>byte[] (360 samples, 0.28%)</title><rect x="255.4" y="515.0" width="3.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="258.4" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (715 samples, 0.56%)</title><rect x="258.7" y="547.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="261.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (715 samples, 0.56%)</title><rect x="258.7" y="531.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="261.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (321 samples, 0.25%)</title><rect x="258.7" y="515.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="261.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (394 samples, 0.31%)</title><rect x="261.7" y="515.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="264.7" y="526.0"></text>
</g>
<g>
<title>byte[] (394 samples, 0.31%)</title><rect x="261.7" y="499.0" width="3.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="264.7" y="510.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (105 samples, 0.08%)</title><rect x="265.3" y="595.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="268.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (172 samples, 0.13%)</title><rect x="266.3" y="627.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="269.3" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap (172 samples, 0.13%)</title><rect x="266.3" y="611.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="269.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (324 samples, 0.25%)</title><rect x="267.8" y="627.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="270.8" y="638.0"></text>
</g>
<g>
<title>java.util.ArrayList (95 samples, 0.07%)</title><rect x="267.8" y="611.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="270.8" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (81 samples, 0.06%)</title><rect x="268.7" y="611.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="271.7" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (81 samples, 0.06%)</title><rect x="268.7" y="595.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="271.7" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (148 samples, 0.12%)</title><rect x="269.5" y="611.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="272.5" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (148 samples, 0.12%)</title><rect x="269.5" y="595.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="272.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (2,254 samples, 1.75%)</title><rect x="270.8" y="643.0" width="20.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="273.8" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (64 samples, 0.05%)</title><rect x="270.8" y="627.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="273.8" y="638.0"></text>
</g>
<g>
<title>java/util/Optional.map (184 samples, 0.14%)</title><rect x="271.4" y="627.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="274.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$145/724058311.apply (184 samples, 0.14%)</title><rect x="271.4" y="611.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="274.4" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (86 samples, 0.07%)</title><rect x="271.4" y="595.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="274.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (98 samples, 0.08%)</title><rect x="272.2" y="595.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="275.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (98 samples, 0.08%)</title><rect x="272.2" y="579.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="275.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (297 samples, 0.23%)</title><rect x="273.1" y="627.0" width="2.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="276.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (51 samples, 0.04%)</title><rect x="275.8" y="627.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="278.8" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (51 samples, 0.04%)</title><rect x="275.8" y="611.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="278.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (68 samples, 0.05%)</title><rect x="276.3" y="627.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="279.3" y="638.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (68 samples, 0.05%)</title><rect x="276.3" y="611.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="279.3" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.of (68 samples, 0.05%)</title><rect x="276.3" y="595.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="279.3" y="606.0"></text>
</g>
<g>
<title>java.util.Optional (68 samples, 0.05%)</title><rect x="276.3" y="579.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="279.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (1,587 samples, 1.23%)</title><rect x="276.9" y="627.0" width="14.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="279.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1,587 samples, 1.23%)</title><rect x="276.9" y="611.0" width="14.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="279.9" y="622.0"></text>
</g>
<g>
<title>java.lang.Class[] (178 samples, 0.14%)</title><rect x="276.9" y="595.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="279.9" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (125 samples, 0.10%)</title><rect x="278.6" y="595.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="281.6" y="606.0"></text>
</g>
<g>
<title>java.util.LinkedList (121 samples, 0.09%)</title><rect x="279.7" y="595.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="282.7" y="606.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (717 samples, 0.56%)</title><rect x="280.8" y="595.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="283.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (717 samples, 0.56%)</title><rect x="280.8" y="579.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="283.8" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (717 samples, 0.56%)</title><rect x="280.8" y="563.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="283.8" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (717 samples, 0.56%)</title><rect x="280.8" y="547.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="283.8" y="558.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (687 samples, 0.53%)</title><rect x="280.8" y="531.0" width="6.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="283.8" y="542.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (30 samples, 0.02%)</title><rect x="287.1" y="531.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="290.1" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (246 samples, 0.19%)</title><rect x="287.4" y="595.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="290.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (246 samples, 0.19%)</title><rect x="287.4" y="579.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (71 samples, 0.06%)</title><rect x="287.4" y="563.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="290.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (71 samples, 0.06%)</title><rect x="287.4" y="547.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="290.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (175 samples, 0.14%)</title><rect x="288.0" y="563.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (175 samples, 0.14%)</title><rect x="288.0" y="547.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="291.0" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (200 samples, 0.16%)</title><rect x="289.6" y="595.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="292.6" y="606.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (200 samples, 0.16%)</title><rect x="289.6" y="579.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="292.6" y="590.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (200 samples, 0.16%)</title><rect x="289.6" y="563.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="292.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (889 samples, 0.69%)</title><rect x="291.5" y="643.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="294.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (110 samples, 0.09%)</title><rect x="291.5" y="627.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="294.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (106 samples, 0.08%)</title><rect x="291.5" y="611.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="294.5" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (117 samples, 0.09%)</title><rect x="292.5" y="627.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="295.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (662 samples, 0.51%)</title><rect x="293.6" y="627.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="296.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (109 samples, 0.08%)</title><rect x="293.6" y="611.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (109 samples, 0.08%)</title><rect x="293.6" y="595.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="296.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/2069674845.get$Lambda (57 samples, 0.04%)</title><rect x="293.6" y="579.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="296.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$158 (57 samples, 0.04%)</title><rect x="293.6" y="563.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="296.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$164/1050469577.get$Lambda (52 samples, 0.04%)</title><rect x="294.1" y="579.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="297.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$164 (52 samples, 0.04%)</title><rect x="294.1" y="563.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="297.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (553 samples, 0.43%)</title><rect x="294.6" y="611.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="297.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (553 samples, 0.43%)</title><rect x="294.6" y="595.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="297.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (310 samples, 0.24%)</title><rect x="294.6" y="579.0" width="2.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="297.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (243 samples, 0.19%)</title><rect x="297.4" y="579.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="300.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (243 samples, 0.19%)</title><rect x="297.4" y="563.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="300.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (243 samples, 0.19%)</title><rect x="297.4" y="547.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="300.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (1,677 samples, 1.30%)</title><rect x="299.6" y="707.0" width="15.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="302.6" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (156 samples, 0.12%)</title><rect x="299.6" y="691.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="302.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (1,521 samples, 1.18%)</title><rect x="301.1" y="691.0" width="13.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="304.1" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,390 samples, 1.08%)</title><rect x="301.1" y="675.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="304.1" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,390 samples, 1.08%)</title><rect x="301.1" y="659.0" width="12.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="304.1" y="670.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (72 samples, 0.06%)</title><rect x="301.1" y="643.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="304.1" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (92 samples, 0.07%)</title><rect x="301.7" y="643.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="304.7" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap (158 samples, 0.12%)</title><rect x="302.6" y="643.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="305.6" y="654.0"></text>
</g>
<g>
<title>java.util.TreeSet (57 samples, 0.04%)</title><rect x="304.0" y="643.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="307.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (131 samples, 0.10%)</title><rect x="304.5" y="643.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="307.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (131 samples, 0.10%)</title><rect x="304.5" y="627.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="307.5" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/491938346.get$Lambda (131 samples, 0.10%)</title><rect x="304.5" y="611.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="307.5" y="622.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (131 samples, 0.10%)</title><rect x="304.5" y="595.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="307.5" y="606.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (113 samples, 0.09%)</title><rect x="305.7" y="643.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.7" y="654.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (113 samples, 0.09%)</title><rect x="305.7" y="627.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="308.7" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (573 samples, 0.45%)</title><rect x="306.8" y="643.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="309.8" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/491938346.accept (573 samples, 0.45%)</title><rect x="306.8" y="627.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="309.8" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (573 samples, 0.45%)</title><rect x="306.8" y="611.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="309.8" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (230 samples, 0.18%)</title><rect x="306.8" y="595.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="309.8" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/829051045.accept (230 samples, 0.18%)</title><rect x="306.8" y="579.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="309.8" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (230 samples, 0.18%)</title><rect x="306.8" y="563.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="309.8" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (230 samples, 0.18%)</title><rect x="306.8" y="547.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="309.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (230 samples, 0.18%)</title><rect x="306.8" y="531.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="309.8" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (230 samples, 0.18%)</title><rect x="306.8" y="515.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="309.8" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (230 samples, 0.18%)</title><rect x="306.8" y="499.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="309.8" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (230 samples, 0.18%)</title><rect x="306.8" y="483.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="309.8" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (230 samples, 0.18%)</title><rect x="306.8" y="467.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="309.8" y="478.0"></text>
</g>
<g>
<title>java/util/List.copyOf (196 samples, 0.15%)</title><rect x="308.9" y="595.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="311.9" y="606.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (196 samples, 0.15%)</title><rect x="308.9" y="579.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="311.9" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (93 samples, 0.07%)</title><rect x="308.9" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (93 samples, 0.07%)</title><rect x="308.9" y="547.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="311.9" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (93 samples, 0.07%)</title><rect x="308.9" y="531.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="311.9" y="542.0"></text>
</g>
<g>
<title>java/util/List.of (103 samples, 0.08%)</title><rect x="309.7" y="563.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="312.7" y="574.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (103 samples, 0.08%)</title><rect x="309.7" y="547.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="312.7" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (147 samples, 0.11%)</title><rect x="310.7" y="595.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="313.7" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (147 samples, 0.11%)</title><rect x="310.7" y="579.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="313.7" y="590.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (194 samples, 0.15%)</title><rect x="312.0" y="643.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="315.0" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap (194 samples, 0.15%)</title><rect x="312.0" y="627.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="315.0" y="638.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (131 samples, 0.10%)</title><rect x="313.8" y="675.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.8" y="686.0"></text>
</g>
<g>
<title>java/util/Optional.of (131 samples, 0.10%)</title><rect x="313.8" y="659.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="316.8" y="670.0"></text>
</g>
<g>
<title>java.util.Optional (131 samples, 0.10%)</title><rect x="313.8" y="643.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="316.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (348 samples, 0.27%)</title><rect x="315.0" y="707.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="318.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (348 samples, 0.27%)</title><rect x="315.0" y="691.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="318.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (348 samples, 0.27%)</title><rect x="315.0" y="675.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.0" y="686.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (348 samples, 0.27%)</title><rect x="315.0" y="659.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="318.0" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (148 samples, 0.12%)</title><rect x="315.0" y="643.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="318.0" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (148 samples, 0.12%)</title><rect x="315.0" y="627.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="318.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$124/340906753.apply (200 samples, 0.16%)</title><rect x="316.4" y="643.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="319.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (200 samples, 0.16%)</title><rect x="316.4" y="627.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="319.4" y="638.0"></text>
</g>
<g>
<title>java.util.ArrayList (107 samples, 0.08%)</title><rect x="316.4" y="611.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="319.4" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (93 samples, 0.07%)</title><rect x="317.4" y="611.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="320.4" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (93 samples, 0.07%)</title><rect x="317.4" y="595.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="320.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3,493 samples, 2.71%)</title><rect x="318.2" y="707.0" width="32.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="321.2" y="718.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (3,493 samples, 2.71%)</title><rect x="318.2" y="691.0" width="32.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="321.2" y="702.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,493 samples, 2.71%)</title><rect x="318.2" y="675.0" width="32.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="321.2" y="686.0">ja..</text>
</g>
<g>
<title>java.lang.String (1,823 samples, 1.42%)</title><rect x="318.2" y="659.0" width="16.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="321.2" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,670 samples, 1.30%)</title><rect x="334.9" y="659.0" width="15.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="337.9" y="670.0"></text>
</g>
<g>
<title>byte[] (1,670 samples, 1.30%)</title><rect x="334.9" y="643.0" width="15.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="337.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager.put (6,124 samples, 4.76%)</title><rect x="350.2" y="707.0" width="56.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="353.2" y="718.0">ru/mai..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,053 samples, 1.60%)</title><rect x="350.2" y="691.0" width="18.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="353.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,053 samples, 1.60%)</title><rect x="350.2" y="675.0" width="18.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="353.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager$$Lambda$122/181809431.get$Lambda (2,053 samples, 1.60%)</title><rect x="350.2" y="659.0" width="18.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="353.2" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.DaoManager$$Lambda$122 (2,053 samples, 1.60%)</title><rect x="350.2" y="643.0" width="18.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="353.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (4,071 samples, 3.16%)</title><rect x="369.1" y="691.0" width="37.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="372.1" y="702.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (4,071 samples, 3.16%)</title><rect x="369.1" y="675.0" width="37.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="372.1" y="686.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (2,110 samples, 1.64%)</title><rect x="369.1" y="659.0" width="19.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="372.1" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1,961 samples, 1.52%)</title><rect x="388.4" y="659.0" width="18.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="391.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.requestForReplicaBuilder (2,147 samples, 1.67%)</title><rect x="406.4" y="707.0" width="19.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="409.4" y="718.0"></text>
</g>
<g>
<title>java.net.URI (269 samples, 0.21%)</title><rect x="406.4" y="691.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="409.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (319 samples, 0.25%)</title><rect x="408.9" y="691.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="411.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (319 samples, 0.25%)</title><rect x="408.9" y="675.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="411.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/92150540.invoke (319 samples, 0.25%)</title><rect x="408.9" y="659.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="411.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (319 samples, 0.25%)</title><rect x="408.9" y="643.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="411.9" y="654.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (90 samples, 0.07%)</title><rect x="408.9" y="627.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="411.9" y="638.0"></text>
</g>
<g>
<title>java.lang.String (90 samples, 0.07%)</title><rect x="408.9" y="611.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="411.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (229 samples, 0.18%)</title><rect x="409.8" y="627.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="412.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (229 samples, 0.18%)</title><rect x="409.8" y="611.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.8" y="622.0"></text>
</g>
<g>
<title>byte[] (225 samples, 0.17%)</title><rect x="409.8" y="595.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="412.8" y="606.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1,312 samples, 1.02%)</title><rect x="411.9" y="691.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="414.9" y="702.0"></text>
</g>
<g>
<title>java.net.URI$Parser (118 samples, 0.09%)</title><rect x="411.9" y="675.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="414.9" y="686.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1,194 samples, 0.93%)</title><rect x="412.9" y="675.0" width="11.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="415.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (214 samples, 0.17%)</title><rect x="412.9" y="659.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="415.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (214 samples, 0.17%)</title><rect x="412.9" y="643.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="415.9" y="654.0"></text>
</g>
<g>
<title>java.lang.String (119 samples, 0.09%)</title><rect x="412.9" y="627.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="415.9" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (95 samples, 0.07%)</title><rect x="414.0" y="627.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="417.0" y="638.0"></text>
</g>
<g>
<title>byte[] (95 samples, 0.07%)</title><rect x="414.0" y="611.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="417.0" y="622.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (980 samples, 0.76%)</title><rect x="414.9" y="659.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="417.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (479 samples, 0.37%)</title><rect x="414.9" y="643.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="417.9" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (479 samples, 0.37%)</title><rect x="414.9" y="627.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="417.9" y="638.0"></text>
</g>
<g>
<title>java.lang.String (228 samples, 0.18%)</title><rect x="414.9" y="611.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="417.9" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (251 samples, 0.20%)</title><rect x="417.0" y="611.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="420.0" y="622.0"></text>
</g>
<g>
<title>byte[] (251 samples, 0.20%)</title><rect x="417.0" y="595.0" width="2.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="420.0" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (501 samples, 0.39%)</title><rect x="419.3" y="643.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (253 samples, 0.20%)</title><rect x="419.3" y="627.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="422.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (253 samples, 0.20%)</title><rect x="419.3" y="611.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="422.3" y="622.0"></text>
</g>
<g>
<title>java.lang.String (116 samples, 0.09%)</title><rect x="419.3" y="595.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="422.3" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (137 samples, 0.11%)</title><rect x="420.4" y="595.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="423.4" y="606.0"></text>
</g>
<g>
<title>byte[] (137 samples, 0.11%)</title><rect x="420.4" y="579.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="423.4" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (248 samples, 0.19%)</title><rect x="421.6" y="627.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="424.6" y="638.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (248 samples, 0.19%)</title><rect x="421.6" y="611.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (248 samples, 0.19%)</title><rect x="421.6" y="595.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (248 samples, 0.19%)</title><rect x="421.6" y="579.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.6" y="590.0"></text>
</g>
<g>
<title>java.lang.String (98 samples, 0.08%)</title><rect x="421.6" y="563.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="424.6" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (150 samples, 0.12%)</title><rect x="422.5" y="563.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="425.5" y="574.0"></text>
</g>
<g>
<title>byte[] (150 samples, 0.12%)</title><rect x="422.5" y="547.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="425.5" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (240 samples, 0.19%)</title><rect x="423.9" y="691.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="426.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (240 samples, 0.19%)</title><rect x="423.9" y="675.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.9" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (59 samples, 0.05%)</title><rect x="423.9" y="659.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="426.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (181 samples, 0.14%)</title><rect x="424.4" y="659.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="427.4" y="670.0"></text>
</g>
<g>
<title>java.util.TreeMap (181 samples, 0.14%)</title><rect x="424.4" y="643.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="427.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/FutureAnalyzer.atLeastAsync (846 samples, 0.66%)</title><rect x="426.1" y="707.0" width="7.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="429.1" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (39 samples, 0.03%)</title><rect x="426.1" y="691.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="429.1" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (67 samples, 0.05%)</title><rect x="426.5" y="691.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="429.5" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (75 samples, 0.06%)</title><rect x="427.1" y="691.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="430.1" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (591 samples, 0.46%)</title><rect x="427.8" y="691.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="430.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/FutureAnalyzer$$Lambda$203/1336948344.accept (591 samples, 0.46%)</title><rect x="427.8" y="675.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="430.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/FutureAnalyzer.lambda$atLeastAsync$1 (591 samples, 0.46%)</title><rect x="427.8" y="659.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="430.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/492304327.linkToTargetMethod (183 samples, 0.14%)</title><rect x="427.8" y="643.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/761960786.invokeStatic (183 samples, 0.14%)</title><rect x="427.8" y="627.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="430.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/FutureAnalyzer$$Lambda$212/2118877580.get$Lambda (183 samples, 0.14%)</title><rect x="427.8" y="611.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.8" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.analyzers.FutureAnalyzer$$Lambda$212 (183 samples, 0.14%)</title><rect x="427.8" y="595.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="430.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (408 samples, 0.32%)</title><rect x="429.4" y="643.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="432.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (408 samples, 0.32%)</title><rect x="429.4" y="627.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="432.4" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (179 samples, 0.14%)</title><rect x="429.4" y="611.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="432.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (48 samples, 0.04%)</title><rect x="431.1" y="611.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="434.1" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (48 samples, 0.04%)</title><rect x="431.1" y="595.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="434.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (50 samples, 0.04%)</title><rect x="431.5" y="611.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/FutureAnalyzer$$Lambda$212/2118877580.accept (50 samples, 0.04%)</title><rect x="431.5" y="595.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="434.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/FutureAnalyzer.lambda$atLeastAsync$0 (50 samples, 0.04%)</title><rect x="431.5" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="434.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (50 samples, 0.04%)</title><rect x="431.5" y="563.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="434.5" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (50 samples, 0.04%)</title><rect x="431.5" y="547.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="434.5" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (50 samples, 0.04%)</title><rect x="431.5" y="531.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="434.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (131 samples, 0.10%)</title><rect x="432.0" y="611.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="435.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (131 samples, 0.10%)</title><rect x="432.0" y="595.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="435.0" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (131 samples, 0.10%)</title><rect x="432.0" y="579.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="435.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (74 samples, 0.06%)</title><rect x="433.2" y="691.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="436.2" y="702.0"></text>
</g>
<g>
<title>java.lang.Object[] (35 samples, 0.03%)</title><rect x="433.2" y="675.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="436.2" y="686.0"></text>
</g>
<g>
<title>java.lang.Object (39 samples, 0.03%)</title><rect x="433.5" y="675.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="436.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primariesFor (290 samples, 0.23%)</title><rect x="433.9" y="707.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="436.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primariesFor (290 samples, 0.23%)</title><rect x="433.9" y="691.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="436.9" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (69 samples, 0.05%)</title><rect x="433.9" y="675.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="436.9" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (70 samples, 0.05%)</title><rect x="434.5" y="675.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="437.5" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (70 samples, 0.05%)</title><rect x="434.5" y="659.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="437.5" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (70 samples, 0.05%)</title><rect x="434.5" y="643.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="437.5" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.topologies.RendezvousTopology$NodeKeyPair (151 samples, 0.12%)</title><rect x="435.1" y="675.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="438.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.respond (8,715 samples, 6.77%)</title><rect x="436.5" y="723.0" width="79.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="439.5" y="734.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,245 samples, 1.74%)</title><rect x="436.5" y="707.0" width="20.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="439.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,245 samples, 1.74%)</title><rect x="436.5" y="691.0" width="20.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="439.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$230/1143606200.get$Lambda (2,245 samples, 1.74%)</title><rect x="436.5" y="675.0" width="20.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="439.5" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ServiceImpl$$Lambda$230 (2,245 samples, 1.74%)</title><rect x="436.5" y="659.0" width="20.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="439.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (6,470 samples, 5.03%)</title><rect x="457.1" y="707.0" width="59.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.1" y="718.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (6,470 samples, 5.03%)</title><rect x="457.1" y="691.0" width="59.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="460.1" y="702.0">java/u..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3,734 samples, 2.90%)</title><rect x="457.1" y="675.0" width="34.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="460.1" y="686.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (2,351 samples, 1.83%)</title><rect x="491.3" y="675.0" width="21.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="494.3" y="686.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (2,351 samples, 1.83%)</title><rect x="491.3" y="659.0" width="21.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="494.3" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (341 samples, 0.27%)</title><rect x="512.9" y="675.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="515.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$230/1143606200.accept (341 samples, 0.27%)</title><rect x="512.9" y="659.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="515.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$respond$2 (341 samples, 0.27%)</title><rect x="512.9" y="643.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.trySendAnswer (341 samples, 0.27%)</title><rect x="512.9" y="627.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="515.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (341 samples, 0.27%)</title><rect x="512.9" y="611.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="515.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (341 samples, 0.27%)</title><rect x="512.9" y="595.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (268 samples, 0.21%)</title><rect x="512.9" y="579.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.9" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (268 samples, 0.21%)</title><rect x="512.9" y="563.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="515.9" y="574.0"></text>
</g>
<g>
<title>byte[] (167 samples, 0.13%)</title><rect x="512.9" y="547.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="515.9" y="558.0"></text>
</g>
<g>
<title>byte[] (101 samples, 0.08%)</title><rect x="514.4" y="547.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="517.4" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (73 samples, 0.06%)</title><rect x="515.4" y="579.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.4" y="590.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (73 samples, 0.06%)</title><rect x="515.4" y="563.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="518.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (44 samples, 0.03%)</title><rect x="516.0" y="675.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (44 samples, 0.03%)</title><rect x="516.0" y="659.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="519.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (44 samples, 0.03%)</title><rect x="516.0" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="519.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$230/1143606200.accept (44 samples, 0.03%)</title><rect x="516.0" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$respond$2 (44 samples, 0.03%)</title><rect x="516.0" y="611.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="519.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.trySendAnswer (44 samples, 0.03%)</title><rect x="516.0" y="595.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (44 samples, 0.03%)</title><rect x="516.0" y="579.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="519.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (44 samples, 0.03%)</title><rect x="516.0" y="563.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="519.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (42 samples, 0.03%)</title><rect x="516.0" y="547.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="519.0" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (42 samples, 0.03%)</title><rect x="516.0" y="531.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.0" y="542.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.03%)</title><rect x="516.0" y="515.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="519.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValidatedParameters.validateParameters (8,646 samples, 6.72%)</title><rect x="516.4" y="723.0" width="79.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="519.4" y="734.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/String.getBytes (1,872 samples, 1.45%)</title><rect x="516.4" y="707.0" width="17.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="519.4" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,872 samples, 1.45%)</title><rect x="516.4" y="691.0" width="17.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.4" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,872 samples, 1.45%)</title><rect x="516.4" y="675.0" width="17.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.4" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,872 samples, 1.45%)</title><rect x="516.4" y="659.0" width="17.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.4" y="670.0"></text>
</g>
<g>
<title>byte[] (1,872 samples, 1.45%)</title><rect x="516.4" y="643.0" width="17.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="519.4" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,673 samples, 2.08%)</title><rect x="533.6" y="707.0" width="24.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="536.6" y="718.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,673 samples, 2.08%)</title><rect x="533.6" y="691.0" width="24.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="536.6" y="702.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,673 samples, 2.08%)</title><rect x="533.6" y="675.0" width="24.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="536.6" y="686.0">j..</text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ValidatedParameters (2,173 samples, 1.69%)</title><rect x="558.1" y="707.0" width="19.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="561.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValidatedParameters.unpackReplicasParameter (1,928 samples, 1.50%)</title><rect x="578.0" y="707.0" width="17.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="581.0" y="718.0"></text>
</g>
<g>
<title>int[] (1,534 samples, 1.19%)</title><rect x="578.0" y="691.0" width="14.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="581.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (394 samples, 0.31%)</title><rect x="592.1" y="691.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="595.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (394 samples, 0.31%)</title><rect x="592.1" y="675.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="595.1" y="686.0"></text>
</g>
<g>
<title>java.lang.String (305 samples, 0.24%)</title><rect x="592.1" y="659.0" width="2.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="595.1" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (89 samples, 0.07%)</title><rect x="594.9" y="659.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="597.9" y="670.0"></text>
</g>
<g>
<title>byte[] (89 samples, 0.07%)</title><rect x="594.9" y="643.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="597.9" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (1,347 samples, 1.05%)</title><rect x="595.7" y="755.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.7" y="766.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,347 samples, 1.05%)</title><rect x="595.7" y="739.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.7" y="750.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$678/661083857.run (1,347 samples, 1.05%)</title><rect x="595.7" y="723.0" width="12.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="598.7" y="734.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (1,347 samples, 1.05%)</title><rect x="595.7" y="707.0" width="12.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="598.7" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (1,347 samples, 1.05%)</title><rect x="595.7" y="691.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.7" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (1,347 samples, 1.05%)</title><rect x="595.7" y="675.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.7" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (1,324 samples, 1.03%)</title><rect x="595.9" y="659.0" width="12.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.9" y="670.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,294 samples, 1.01%)</title><rect x="595.9" y="643.0" width="11.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="598.9" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (1,294 samples, 1.01%)</title><rect x="595.9" y="627.0" width="11.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.9" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (1,294 samples, 1.01%)</title><rect x="595.9" y="611.0" width="11.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="598.9" y="622.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (1,294 samples, 1.01%)</title><rect x="595.9" y="595.0" width="11.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="598.9" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (795 samples, 0.62%)</title><rect x="596.0" y="579.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (795 samples, 0.62%)</title><rect x="596.0" y="563.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (790 samples, 0.61%)</title><rect x="596.0" y="547.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="599.0" y="558.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (790 samples, 0.61%)</title><rect x="596.0" y="531.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="599.0" y="542.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (773 samples, 0.60%)</title><rect x="596.0" y="515.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.0" y="526.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (772 samples, 0.60%)</title><rect x="596.0" y="499.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="599.0" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (772 samples, 0.60%)</title><rect x="596.0" y="483.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="599.0" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (772 samples, 0.60%)</title><rect x="596.0" y="467.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.0" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (772 samples, 0.60%)</title><rect x="596.0" y="451.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="599.0" y="462.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (772 samples, 0.60%)</title><rect x="596.0" y="435.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="599.0" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (772 samples, 0.60%)</title><rect x="596.0" y="419.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="599.0" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (772 samples, 0.60%)</title><rect x="596.0" y="403.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="599.0" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (772 samples, 0.60%)</title><rect x="596.0" y="387.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="599.0" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (772 samples, 0.60%)</title><rect x="596.0" y="371.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="599.0" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (772 samples, 0.60%)</title><rect x="596.0" y="355.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.0" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (772 samples, 0.60%)</title><rect x="596.0" y="339.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="599.0" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (772 samples, 0.60%)</title><rect x="596.0" y="323.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.0" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (694 samples, 0.54%)</title><rect x="596.0" y="307.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="599.0" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (694 samples, 0.54%)</title><rect x="596.0" y="291.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="599.0" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (693 samples, 0.54%)</title><rect x="596.0" y="275.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="599.0" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (693 samples, 0.54%)</title><rect x="596.0" y="259.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="599.0" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (288 samples, 0.22%)</title><rect x="596.0" y="243.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="599.0" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (219 samples, 0.17%)</title><rect x="596.0" y="227.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="599.0" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (199 samples, 0.15%)</title><rect x="596.0" y="211.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="599.0" y="222.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (199 samples, 0.15%)</title><rect x="596.0" y="195.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="599.0" y="206.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (116 samples, 0.09%)</title><rect x="596.2" y="179.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="599.2" y="190.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (91 samples, 0.07%)</title><rect x="596.4" y="163.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.4" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (80 samples, 0.06%)</title><rect x="596.5" y="147.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.5" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (80 samples, 0.06%)</title><rect x="596.5" y="131.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="599.5" y="142.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (65 samples, 0.05%)</title><rect x="597.2" y="179.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="600.2" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (65 samples, 0.05%)</title><rect x="597.2" y="163.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="600.2" y="174.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (69 samples, 0.05%)</title><rect x="598.0" y="227.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.0" y="238.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (39 samples, 0.03%)</title><rect x="598.1" y="211.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="601.1" y="222.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (234 samples, 0.18%)</title><rect x="598.9" y="243.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="601.9" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (208 samples, 0.16%)</title><rect x="599.1" y="227.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.1" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (192 samples, 0.15%)</title><rect x="599.3" y="211.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="602.3" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (192 samples, 0.15%)</title><rect x="599.3" y="195.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="602.3" y="206.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (143 samples, 0.11%)</title><rect x="601.0" y="243.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="604.0" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (127 samples, 0.10%)</title><rect x="601.0" y="227.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="604.0" y="238.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (78 samples, 0.06%)</title><rect x="602.4" y="307.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="605.4" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (78 samples, 0.06%)</title><rect x="602.4" y="291.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (78 samples, 0.06%)</title><rect x="602.4" y="275.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="605.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (78 samples, 0.06%)</title><rect x="602.4" y="259.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="605.4" y="270.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (78 samples, 0.06%)</title><rect x="602.4" y="243.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="605.4" y="254.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (78 samples, 0.06%)</title><rect x="602.4" y="227.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="605.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (78 samples, 0.06%)</title><rect x="602.4" y="211.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="605.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (78 samples, 0.06%)</title><rect x="602.4" y="195.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="605.4" y="206.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (78 samples, 0.06%)</title><rect x="602.4" y="179.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.4" y="190.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (76 samples, 0.06%)</title><rect x="602.4" y="163.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="605.4" y="174.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (31 samples, 0.02%)</title><rect x="602.6" y="147.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="605.6" y="158.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (403 samples, 0.31%)</title><rect x="603.3" y="579.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.3" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (403 samples, 0.31%)</title><rect x="603.3" y="563.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="606.3" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (403 samples, 0.31%)</title><rect x="603.3" y="547.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="606.3" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (401 samples, 0.31%)</title><rect x="603.3" y="531.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.3" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (401 samples, 0.31%)</title><rect x="603.3" y="515.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="606.3" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (386 samples, 0.30%)</title><rect x="603.3" y="499.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="606.3" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (373 samples, 0.29%)</title><rect x="603.4" y="483.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.4" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (373 samples, 0.29%)</title><rect x="603.4" y="467.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="606.4" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (366 samples, 0.28%)</title><rect x="603.4" y="451.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="606.4" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (358 samples, 0.28%)</title><rect x="603.4" y="435.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="606.4" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (350 samples, 0.27%)</title><rect x="603.5" y="419.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.5" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (328 samples, 0.25%)</title><rect x="603.7" y="403.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.7" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (321 samples, 0.25%)</title><rect x="603.8" y="387.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (321 samples, 0.25%)</title><rect x="603.8" y="371.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor32.invoke (321 samples, 0.25%)</title><rect x="603.8" y="355.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="606.8" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (321 samples, 0.25%)</title><rect x="603.8" y="339.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="606.8" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (307 samples, 0.24%)</title><rect x="603.8" y="323.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="606.8" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (307 samples, 0.24%)</title><rect x="603.8" y="307.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.8" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (127 samples, 0.10%)</title><rect x="603.8" y="291.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.8" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (100 samples, 0.08%)</title><rect x="604.1" y="275.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="607.1" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (87 samples, 0.07%)</title><rect x="604.1" y="259.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.1" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (28 samples, 0.02%)</title><rect x="604.1" y="243.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.1" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (59 samples, 0.05%)</title><rect x="604.4" y="243.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.4" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (59 samples, 0.05%)</title><rect x="604.4" y="227.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="607.4" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (53 samples, 0.04%)</title><rect x="604.4" y="211.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="607.4" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (42 samples, 0.03%)</title><rect x="604.4" y="195.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.4" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (37 samples, 0.03%)</title><rect x="604.5" y="179.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.5" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (90 samples, 0.07%)</title><rect x="605.0" y="291.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="608.0" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (32 samples, 0.02%)</title><rect x="605.0" y="275.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="608.0" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (28 samples, 0.02%)</title><rect x="605.0" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="608.0" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (58 samples, 0.05%)</title><rect x="605.3" y="275.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="608.3" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (58 samples, 0.05%)</title><rect x="605.3" y="259.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.3" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (58 samples, 0.05%)</title><rect x="605.3" y="243.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="608.3" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (50 samples, 0.04%)</title><rect x="605.3" y="227.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="608.3" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (42 samples, 0.03%)</title><rect x="605.4" y="211.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="608.4" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (40 samples, 0.03%)</title><rect x="605.4" y="195.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="608.4" y="206.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (35 samples, 0.03%)</title><rect x="605.4" y="179.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="608.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (35 samples, 0.03%)</title><rect x="605.4" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="608.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor32.invoke (35 samples, 0.03%)</title><rect x="605.4" y="147.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="608.4" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (35 samples, 0.03%)</title><rect x="605.4" y="131.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="608.4" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (28 samples, 0.02%)</title><rect x="605.5" y="115.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="608.5" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (28 samples, 0.02%)</title><rect x="605.5" y="99.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="608.5" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (29 samples, 0.02%)</title><rect x="605.8" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="608.8" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (29 samples, 0.02%)</title><rect x="605.8" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.8" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (61 samples, 0.05%)</title><rect x="606.1" y="291.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="609.1" y="302.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (61 samples, 0.05%)</title><rect x="606.1" y="275.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="609.1" y="286.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (32 samples, 0.02%)</title><rect x="606.9" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="609.9" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (32 samples, 0.02%)</title><rect x="606.9" y="563.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="609.9" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (32 samples, 0.02%)</title><rect x="606.9" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="609.9" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (32 samples, 0.02%)</title><rect x="606.9" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="609.9" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (30 samples, 0.02%)</title><rect x="607.0" y="515.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.0" y="526.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (61 samples, 0.05%)</title><rect x="607.2" y="579.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="610.2" y="590.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (61 samples, 0.05%)</title><rect x="607.2" y="563.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="610.2" y="574.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (61 samples, 0.05%)</title><rect x="607.2" y="547.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="610.2" y="558.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (61 samples, 0.05%)</title><rect x="607.2" y="531.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="610.2" y="542.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (61 samples, 0.05%)</title><rect x="607.2" y="515.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.2" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (61 samples, 0.05%)</title><rect x="607.2" y="499.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="610.2" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (38 samples, 0.03%)</title><rect x="607.3" y="483.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.3" y="494.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (30 samples, 0.02%)</title><rect x="607.8" y="643.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.8" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (30 samples, 0.02%)</title><rect x="607.8" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="610.8" y="638.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (30 samples, 0.02%)</title><rect x="607.8" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.8" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (30 samples, 0.02%)</title><rect x="607.8" y="595.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (13,899 samples, 10.80%)</title><rect x="608.1" y="803.0" width="127.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="611.1" y="814.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (13,899 samples, 10.80%)</title><rect x="608.1" y="787.0" width="127.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="611.1" y="798.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (13,899 samples, 10.80%)</title><rect x="608.1" y="771.0" width="127.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="611.1" y="782.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (13,899 samples, 10.80%)</title><rect x="608.1" y="755.0" width="127.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="611.1" y="766.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (13,899 samples, 10.80%)</title><rect x="608.1" y="739.0" width="127.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="611.1" y="750.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (10,890 samples, 8.46%)</title><rect x="608.1" y="723.0" width="99.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="611.1" y="734.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (10,890 samples, 8.46%)</title><rect x="608.1" y="707.0" width="99.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="611.1" y="718.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,389 samples, 1.86%)</title><rect x="608.1" y="691.0" width="21.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.1" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2,389 samples, 1.86%)</title><rect x="608.1" y="675.0" width="21.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="611.1" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2,389 samples, 1.86%)</title><rect x="608.1" y="659.0" width="21.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.1" y="670.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$230/1143606200.accept (2,372 samples, 1.84%)</title><rect x="608.1" y="643.0" width="21.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="611.1" y="654.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$respond$2 (2,372 samples, 1.84%)</title><rect x="608.1" y="627.0" width="21.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="611.1" y="638.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.trySendAnswer (2,372 samples, 1.84%)</title><rect x="608.1" y="611.0" width="21.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="611.1" y="622.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,372 samples, 1.84%)</title><rect x="608.1" y="595.0" width="21.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="611.1" y="606.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,372 samples, 1.84%)</title><rect x="608.1" y="579.0" width="21.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="611.1" y="590.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,631 samples, 1.27%)</title><rect x="608.1" y="563.0" width="14.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="611.1" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,631 samples, 1.27%)</title><rect x="608.1" y="547.0" width="14.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="611.1" y="558.0"></text>
</g>
<g>
<title>byte[] (1,610 samples, 1.25%)</title><rect x="608.1" y="531.0" width="14.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="611.1" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (741 samples, 0.58%)</title><rect x="623.0" y="563.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="626.0" y="574.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (741 samples, 0.58%)</title><rect x="623.0" y="547.0" width="6.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="626.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager$$Lambda$122/181809431.get (8,501 samples, 6.61%)</title><rect x="630.0" y="691.0" width="78.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="633.0" y="702.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager.lambda$put$0 (8,501 samples, 6.61%)</title><rect x="630.0" y="675.0" width="78.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="633.0" y="686.0">ru/mail/p..</text>
</g>
<g>
<title>one.nio.http.Response (738 samples, 0.57%)</title><rect x="630.0" y="659.0" width="6.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="633.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2,846 samples, 2.21%)</title><rect x="636.8" y="659.0" width="26.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.8" y="670.0">o..</text>
</g>
<g>
<title>byte[] (1,196 samples, 0.93%)</title><rect x="636.8" y="643.0" width="10.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="639.8" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (930 samples, 0.72%)</title><rect x="647.7" y="643.0" width="8.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="650.7" y="654.0"></text>
</g>
<g>
<title>java.lang.String (720 samples, 0.56%)</title><rect x="656.3" y="643.0" width="6.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="659.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (4,917 samples, 3.82%)</title><rect x="662.9" y="659.0" width="45.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="665.9" y="670.0">ru/m..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2,938 samples, 2.28%)</title><rect x="662.9" y="643.0" width="26.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.9" y="654.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,938 samples, 2.28%)</title><rect x="662.9" y="627.0" width="26.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="665.9" y="638.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (205 samples, 0.16%)</title><rect x="689.8" y="643.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="692.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (205 samples, 0.16%)</title><rect x="689.8" y="627.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="692.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (205 samples, 0.16%)</title><rect x="689.8" y="611.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="692.8" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (186 samples, 0.14%)</title><rect x="689.8" y="595.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="692.8" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (186 samples, 0.14%)</title><rect x="689.8" y="579.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="692.8" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (52 samples, 0.04%)</title><rect x="689.8" y="563.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="692.8" y="574.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (52 samples, 0.04%)</title><rect x="689.8" y="547.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="692.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (134 samples, 0.10%)</title><rect x="690.3" y="563.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (134 samples, 0.10%)</title><rect x="690.3" y="547.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.3" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (134 samples, 0.10%)</title><rect x="690.3" y="531.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="693.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.upsert (1,774 samples, 1.38%)</title><rect x="691.7" y="643.0" width="16.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="694.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (1,057 samples, 0.82%)</title><rect x="691.7" y="627.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="694.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1,057 samples, 0.82%)</title><rect x="691.7" y="611.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.7" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (365 samples, 0.28%)</title><rect x="691.7" y="595.0" width="3.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="694.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (692 samples, 0.54%)</title><rect x="695.0" y="595.0" width="6.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="698.0" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.alexander.marashov.Value (717 samples, 0.56%)</title><rect x="701.4" y="627.0" width="6.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="704.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (3,009 samples, 2.34%)</title><rect x="708.0" y="723.0" width="27.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="711.0" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3,009 samples, 2.34%)</title><rect x="708.0" y="707.0" width="27.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="711.0" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (599 samples, 0.47%)</title><rect x="708.0" y="691.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (599 samples, 0.47%)</title><rect x="708.0" y="675.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="711.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (599 samples, 0.47%)</title><rect x="708.0" y="659.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="711.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (599 samples, 0.47%)</title><rect x="708.0" y="643.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="711.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/FutureAnalyzer$$Lambda$212/2118877580.accept (599 samples, 0.47%)</title><rect x="708.0" y="627.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="711.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/FutureAnalyzer.lambda$atLeastAsync$0 (599 samples, 0.47%)</title><rect x="708.0" y="611.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (582 samples, 0.45%)</title><rect x="708.1" y="595.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="711.1" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (582 samples, 0.45%)</title><rect x="708.1" y="579.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.1" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (582 samples, 0.45%)</title><rect x="708.1" y="563.0" width="5.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="711.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$180/826687228.apply (2,410 samples, 1.87%)</title><rect x="713.5" y="691.0" width="22.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="716.5" y="702.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.lambda$put$1 (2,410 samples, 1.87%)</title><rect x="713.5" y="675.0" width="22.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="716.5" y="686.0">r..</text>
</g>
<g>
<title>one.nio.http.Response (540 samples, 0.42%)</title><rect x="713.5" y="659.0" width="4.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="716.5" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,870 samples, 1.45%)</title><rect x="718.4" y="659.0" width="17.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="721.4" y="670.0"></text>
</g>
<g>
<title>byte[] (766 samples, 0.60%)</title><rect x="718.4" y="643.0" width="7.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="721.4" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (646 samples, 0.50%)</title><rect x="725.4" y="643.0" width="6.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="728.4" y="654.0"></text>
</g>
<g>
<title>java.lang.String (458 samples, 0.36%)</title><rect x="731.4" y="643.0" width="4.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="734.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,429 samples, 1.11%)</title><rect x="735.6" y="803.0" width="13.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.6" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.03%)</title><rect x="735.6" y="787.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="738.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.03%)</title><rect x="735.6" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="738.6" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1390835631.linkToTargetMethod (34 samples, 0.03%)</title><rect x="736.0" y="787.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="739.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.03%)</title><rect x="736.0" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="739.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$478/385832277.get$Lambda (34 samples, 0.03%)</title><rect x="736.0" y="755.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="739.0" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$478 (34 samples, 0.03%)</title><rect x="736.0" y="739.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="739.0" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (328 samples, 0.25%)</title><rect x="736.3" y="787.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="739.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$479/1026613403.accept (272 samples, 0.21%)</title><rect x="736.3" y="771.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (272 samples, 0.21%)</title><rect x="736.3" y="755.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="739.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (272 samples, 0.21%)</title><rect x="736.3" y="739.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="739.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (272 samples, 0.21%)</title><rect x="736.3" y="723.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (272 samples, 0.21%)</title><rect x="736.3" y="707.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="739.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (272 samples, 0.21%)</title><rect x="736.3" y="691.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="739.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (272 samples, 0.21%)</title><rect x="736.3" y="675.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="739.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (272 samples, 0.21%)</title><rect x="736.3" y="659.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="739.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (272 samples, 0.21%)</title><rect x="736.3" y="643.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="739.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (272 samples, 0.21%)</title><rect x="736.3" y="627.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="739.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$288/1121301686.run (272 samples, 0.21%)</title><rect x="736.3" y="611.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="739.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (272 samples, 0.21%)</title><rect x="736.3" y="595.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="739.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (35 samples, 0.03%)</title><rect x="736.3" y="579.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="739.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (35 samples, 0.03%)</title><rect x="736.3" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="739.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (35 samples, 0.03%)</title><rect x="736.3" y="547.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="739.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (34 samples, 0.03%)</title><rect x="736.3" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="739.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (34 samples, 0.03%)</title><rect x="736.3" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (34 samples, 0.03%)</title><rect x="736.3" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="739.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (34 samples, 0.03%)</title><rect x="736.3" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="739.3" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (34 samples, 0.03%)</title><rect x="736.3" y="467.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="739.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (38 samples, 0.03%)</title><rect x="736.6" y="579.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="739.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (38 samples, 0.03%)</title><rect x="736.6" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="739.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.03%)</title><rect x="736.6" y="547.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="739.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$490/1888525546.get$Lambda (38 samples, 0.03%)</title><rect x="736.6" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="739.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$490 (38 samples, 0.03%)</title><rect x="736.6" y="515.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="739.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (199 samples, 0.15%)</title><rect x="736.9" y="579.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (110 samples, 0.09%)</title><rect x="736.9" y="563.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.9" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (76 samples, 0.06%)</title><rect x="736.9" y="547.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="739.9" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (76 samples, 0.06%)</title><rect x="736.9" y="531.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="739.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (34 samples, 0.03%)</title><rect x="737.6" y="547.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.6" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (34 samples, 0.03%)</title><rect x="737.6" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.6" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (34 samples, 0.03%)</title><rect x="737.6" y="515.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="740.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (89 samples, 0.07%)</title><rect x="737.9" y="563.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="740.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$267/2025390238.get (89 samples, 0.07%)</title><rect x="737.9" y="547.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="740.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (89 samples, 0.07%)</title><rect x="737.9" y="531.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="740.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (89 samples, 0.07%)</title><rect x="737.9" y="515.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="740.9" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (89 samples, 0.07%)</title><rect x="737.9" y="499.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="740.9" y="510.0"></text>
</g>
<g>
<title>byte[] (82 samples, 0.06%)</title><rect x="738.0" y="483.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="741.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$487/1175872901.accept (56 samples, 0.04%)</title><rect x="738.8" y="771.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="741.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (56 samples, 0.04%)</title><rect x="738.8" y="755.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="741.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$478/385832277.run (56 samples, 0.04%)</title><rect x="738.8" y="739.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="741.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (56 samples, 0.04%)</title><rect x="738.8" y="723.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="741.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (56 samples, 0.04%)</title><rect x="738.8" y="707.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="741.8" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (56 samples, 0.04%)</title><rect x="738.8" y="691.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="741.8" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (56 samples, 0.04%)</title><rect x="738.8" y="675.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="741.8" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (56 samples, 0.04%)</title><rect x="738.8" y="659.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="741.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (80 samples, 0.06%)</title><rect x="739.5" y="787.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.5" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (41 samples, 0.03%)</title><rect x="739.5" y="771.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="742.5" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (41 samples, 0.03%)</title><rect x="739.5" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="742.5" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (41 samples, 0.03%)</title><rect x="739.5" y="739.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.5" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (41 samples, 0.03%)</title><rect x="739.5" y="723.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="742.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (41 samples, 0.03%)</title><rect x="739.5" y="707.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="742.5" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (41 samples, 0.03%)</title><rect x="739.5" y="691.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="742.5" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (41 samples, 0.03%)</title><rect x="739.5" y="675.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="742.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (39 samples, 0.03%)</title><rect x="739.9" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="742.9" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (39 samples, 0.03%)</title><rect x="739.9" y="755.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="742.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (129 samples, 0.10%)</title><rect x="740.2" y="787.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="743.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$303/679754523.run (71 samples, 0.06%)</title><rect x="740.2" y="771.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="743.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (71 samples, 0.06%)</title><rect x="740.2" y="755.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (71 samples, 0.06%)</title><rect x="740.2" y="739.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="743.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (71 samples, 0.06%)</title><rect x="740.2" y="723.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="743.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (71 samples, 0.06%)</title><rect x="740.2" y="707.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="743.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (71 samples, 0.06%)</title><rect x="740.2" y="691.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$288/1121301686.run (71 samples, 0.06%)</title><rect x="740.2" y="675.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="743.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (71 samples, 0.06%)</title><rect x="740.2" y="659.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="743.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (71 samples, 0.06%)</title><rect x="740.2" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="743.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (71 samples, 0.06%)</title><rect x="740.2" y="627.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (68 samples, 0.05%)</title><rect x="740.2" y="611.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (68 samples, 0.05%)</title><rect x="740.2" y="595.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (68 samples, 0.05%)</title><rect x="740.2" y="579.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="743.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/992846223.linkToTargetMethod (53 samples, 0.04%)</title><rect x="740.2" y="563.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="743.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2032188048.invoke (53 samples, 0.04%)</title><rect x="740.2" y="547.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.04%)</title><rect x="740.2" y="531.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="743.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (53 samples, 0.04%)</title><rect x="740.2" y="515.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="743.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (53 samples, 0.04%)</title><rect x="740.2" y="499.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="743.2" y="510.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.04%)</title><rect x="740.2" y="483.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="743.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$320/1768743970.run (58 samples, 0.05%)</title><rect x="740.9" y="771.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="743.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (58 samples, 0.05%)</title><rect x="740.9" y="755.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.04%)</title><rect x="740.9" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="743.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.04%)</title><rect x="740.9" y="723.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="743.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$498/1191634906.get$Lambda (49 samples, 0.04%)</title><rect x="740.9" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="743.9" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$498 (49 samples, 0.04%)</title><rect x="740.9" y="691.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="743.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (376 samples, 0.29%)</title><rect x="741.4" y="787.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="744.4" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (100 samples, 0.08%)</title><rect x="741.4" y="771.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="744.4" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (100 samples, 0.08%)</title><rect x="741.4" y="755.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="744.4" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (100 samples, 0.08%)</title><rect x="741.4" y="739.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="744.4" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (100 samples, 0.08%)</title><rect x="741.4" y="723.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="744.4" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (100 samples, 0.08%)</title><rect x="741.4" y="707.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="744.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (276 samples, 0.21%)</title><rect x="742.3" y="771.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="745.3" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (61 samples, 0.05%)</title><rect x="742.3" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="745.3" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (61 samples, 0.05%)</title><rect x="742.3" y="739.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$645/1247150698.get$Lambda (61 samples, 0.05%)</title><rect x="742.3" y="723.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="745.3" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$645 (61 samples, 0.05%)</title><rect x="742.3" y="707.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="745.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (215 samples, 0.17%)</title><rect x="742.9" y="755.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.9" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (88 samples, 0.07%)</title><rect x="742.9" y="739.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="745.9" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (127 samples, 0.10%)</title><rect x="743.7" y="739.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="746.7" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (127 samples, 0.10%)</title><rect x="743.7" y="723.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="746.7" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (127 samples, 0.10%)</title><rect x="743.7" y="707.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="746.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (289 samples, 0.22%)</title><rect x="744.9" y="787.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="747.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.02%)</title><rect x="744.9" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.02%)</title><rect x="744.9" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="747.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$476/1568592722.get$Lambda (30 samples, 0.02%)</title><rect x="744.9" y="739.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="747.9" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$476 (30 samples, 0.02%)</title><rect x="744.9" y="723.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="747.9" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (168 samples, 0.13%)</title><rect x="745.2" y="771.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="748.2" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (65 samples, 0.05%)</title><rect x="745.2" y="755.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="748.2" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (65 samples, 0.05%)</title><rect x="745.2" y="739.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="748.2" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (103 samples, 0.08%)</title><rect x="745.8" y="755.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="748.8" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (103 samples, 0.08%)</title><rect x="745.8" y="739.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="748.8" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (91 samples, 0.07%)</title><rect x="746.7" y="771.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="749.7" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (91 samples, 0.07%)</title><rect x="746.7" y="755.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="749.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (60 samples, 0.05%)</title><rect x="747.5" y="787.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="750.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (60 samples, 0.05%)</title><rect x="747.5" y="771.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="750.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (60 samples, 0.05%)</title><rect x="747.5" y="755.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (60 samples, 0.05%)</title><rect x="747.5" y="739.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="750.5" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (41 samples, 0.03%)</title><rect x="747.7" y="723.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="750.7" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (41 samples, 0.03%)</title><rect x="747.7" y="707.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="750.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (41 samples, 0.03%)</title><rect x="747.7" y="691.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="750.7" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (41 samples, 0.03%)</title><rect x="747.7" y="675.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="750.7" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (41 samples, 0.03%)</title><rect x="747.7" y="659.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="750.7" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (41 samples, 0.03%)</title><rect x="747.7" y="643.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="750.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (39 samples, 0.03%)</title><rect x="748.3" y="787.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="751.3" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (39 samples, 0.03%)</title><rect x="748.3" y="771.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="751.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (39 samples, 0.03%)</title><rect x="748.3" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="751.3" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (39 samples, 0.03%)</title><rect x="748.3" y="739.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="751.3" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (48,123 samples, 37.40%)</title><rect x="748.7" y="803.0" width="441.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.7" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,981 samples, 1.54%)</title><rect x="748.7" y="787.0" width="18.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="751.7" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,981 samples, 1.54%)</title><rect x="748.7" y="771.0" width="18.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="751.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (46,142 samples, 35.86%)</title><rect x="766.8" y="787.0" width="423.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.8" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (46,142 samples, 35.86%)</title><rect x="766.8" y="771.0" width="423.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="769.8" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (46,142 samples, 35.86%)</title><rect x="766.8" y="755.0" width="423.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="769.8" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7,602 samples, 5.91%)</title><rect x="766.8" y="739.0" width="69.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="769.8" y="750.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7,602 samples, 5.91%)</title><rect x="766.8" y="723.0" width="69.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="769.8" y="734.0">one/nio..</text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (4,775 samples, 3.71%)</title><rect x="766.8" y="707.0" width="43.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="769.8" y="718.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (841 samples, 0.65%)</title><rect x="766.8" y="691.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="769.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (841 samples, 0.65%)</title><rect x="766.8" y="675.0" width="7.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="769.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (841 samples, 0.65%)</title><rect x="766.8" y="659.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="769.8" y="670.0"></text>
</g>
<g>
<title>java.lang.String (354 samples, 0.28%)</title><rect x="766.8" y="643.0" width="3.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="769.8" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (487 samples, 0.38%)</title><rect x="770.1" y="643.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="773.1" y="654.0"></text>
</g>
<g>
<title>byte[] (487 samples, 0.38%)</title><rect x="770.1" y="627.0" width="4.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="773.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2,355 samples, 1.83%)</title><rect x="774.5" y="691.0" width="21.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.5" y="702.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2,355 samples, 1.83%)</title><rect x="774.5" y="675.0" width="21.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="777.5" y="686.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (2,355 samples, 1.83%)</title><rect x="774.5" y="659.0" width="21.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.5" y="670.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,355 samples, 1.83%)</title><rect x="774.5" y="643.0" width="21.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="777.5" y="654.0">j..</text>
</g>
<g>
<title>java.lang.String (924 samples, 0.72%)</title><rect x="774.5" y="627.0" width="8.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="777.5" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,431 samples, 1.11%)</title><rect x="783.0" y="627.0" width="13.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="786.0" y="638.0"></text>
</g>
<g>
<title>byte[] (1,431 samples, 1.11%)</title><rect x="783.0" y="611.0" width="13.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="786.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut (1,579 samples, 1.23%)</title><rect x="796.1" y="691.0" width="14.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="799.1" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/726395557.linkToTargetMethod (1,563 samples, 1.21%)</title><rect x="796.1" y="675.0" width="14.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,563 samples, 1.21%)</title><rect x="796.1" y="659.0" width="14.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="799.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$120/1156768502.get$Lambda (1,563 samples, 1.21%)</title><rect x="796.1" y="643.0" width="14.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="799.1" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.alexander.marashov.ServiceImpl$$Lambda$120 (1,563 samples, 1.21%)</title><rect x="796.1" y="627.0" width="14.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="799.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2,827 samples, 2.20%)</title><rect x="810.6" y="707.0" width="25.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.6" y="718.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (2,827 samples, 2.20%)</title><rect x="810.6" y="691.0" width="25.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.6" y="702.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,827 samples, 2.20%)</title><rect x="810.6" y="675.0" width="25.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.6" y="686.0">j..</text>
</g>
<g>
<title>java.lang.String (1,119 samples, 0.87%)</title><rect x="810.6" y="659.0" width="10.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="813.6" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,708 samples, 1.33%)</title><rect x="820.9" y="659.0" width="15.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="823.9" y="670.0"></text>
</g>
<g>
<title>byte[] (1,708 samples, 1.33%)</title><rect x="820.9" y="643.0" width="15.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="823.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13,625 samples, 10.59%)</title><rect x="836.5" y="739.0" width="125.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="839.5" y="750.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one.nio.http.Request (2,216 samples, 1.72%)</title><rect x="836.5" y="723.0" width="20.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="839.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3,772 samples, 2.93%)</title><rect x="856.9" y="723.0" width="34.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="859.9" y="734.0">on..</text>
</g>
<g>
<title>java.lang.String[] (3,503 samples, 2.72%)</title><rect x="856.9" y="707.0" width="32.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="859.9" y="718.0">ja..</text>
</g>
<g>
<title>java.lang.String[] (269 samples, 0.21%)</title><rect x="889.0" y="707.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="892.0" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,637 samples, 5.94%)</title><rect x="891.5" y="723.0" width="70.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.5" y="734.0">one/nio/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,637 samples, 5.94%)</title><rect x="891.5" y="707.0" width="70.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="894.5" y="718.0">one/nio/..</text>
</g>
<g>
<title>char[] (3,929 samples, 3.05%)</title><rect x="891.5" y="691.0" width="36.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="894.5" y="702.0">cha..</text>
</g>
<g>
<title>char[] (435 samples, 0.34%)</title><rect x="927.5" y="691.0" width="4.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="930.5" y="702.0"></text>
</g>
<g>
<title>java.lang.String (921 samples, 0.72%)</title><rect x="931.5" y="691.0" width="8.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="934.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,352 samples, 1.83%)</title><rect x="939.9" y="691.0" width="21.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="942.9" y="702.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,352 samples, 1.83%)</title><rect x="939.9" y="675.0" width="21.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="942.9" y="686.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,352 samples, 1.83%)</title><rect x="939.9" y="659.0" width="21.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="942.9" y="670.0">j..</text>
</g>
<g>
<title>byte[] (2,351 samples, 1.83%)</title><rect x="939.9" y="643.0" width="21.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="942.9" y="654.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1,828 samples, 1.42%)</title><rect x="961.5" y="739.0" width="16.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="964.5" y="750.0"></text>
</g>
<g>
<title>byte[] (1,828 samples, 1.42%)</title><rect x="961.5" y="723.0" width="16.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="964.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2,408 samples, 1.87%)</title><rect x="978.3" y="739.0" width="22.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="981.3" y="750.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (2,408 samples, 1.87%)</title><rect x="978.3" y="723.0" width="22.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="981.3" y="734.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,408 samples, 1.87%)</title><rect x="978.3" y="707.0" width="22.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="981.3" y="718.0">j..</text>
</g>
<g>
<title>java.lang.String (1,246 samples, 0.97%)</title><rect x="978.3" y="691.0" width="11.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="981.3" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,162 samples, 0.90%)</title><rect x="989.7" y="691.0" width="10.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="992.7" y="702.0"></text>
</g>
<g>
<title>byte[] (1,162 samples, 0.90%)</title><rect x="989.7" y="675.0" width="10.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="992.7" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20,679 samples, 16.07%)</title><rect x="1000.4" y="739.0" width="189.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1003.4" y="750.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (20,679 samples, 16.07%)</title><rect x="1000.4" y="723.0" width="189.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1003.4" y="734.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (9,482 samples, 7.37%)</title><rect x="1000.4" y="707.0" width="86.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1003.4" y="718.0">char[]</text>
</g>
<g>
<title>char[] (809 samples, 0.63%)</title><rect x="1087.3" y="707.0" width="7.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1090.3" y="718.0"></text>
</g>
<g>
<title>java.lang.String (3,490 samples, 2.71%)</title><rect x="1094.7" y="707.0" width="32.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1097.7" y="718.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6,898 samples, 5.36%)</title><rect x="1126.7" y="707.0" width="63.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1129.7" y="718.0">java/la..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6,898 samples, 5.36%)</title><rect x="1126.7" y="691.0" width="63.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.7" y="702.0">java/la..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6,898 samples, 5.36%)</title><rect x="1126.7" y="675.0" width="63.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1129.7" y="686.0">java/la..</text>
</g>
<g>
<title>byte[] (6,885 samples, 5.35%)</title><rect x="1126.7" y="659.0" width="63.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1129.7" y="670.0">byte[]</text>
</g>
</g>
</svg>
