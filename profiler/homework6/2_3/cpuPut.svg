<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1270" onload="init(evt)" viewBox="0 0 1200 1270" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1253"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1253"> </text>
<g id="frames">
<g>
<title>all (4,742 samples, 100.00%)</title><rect x="10.0" y="1219.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1230.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (24 samples, 0.51%)</title><rect x="10.0" y="1203.0" width="6.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="1214.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (23 samples, 0.49%)</title><rect x="10.2" y="1187.0" width="5.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.2" y="1198.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (22 samples, 0.46%)</title><rect x="10.5" y="1171.0" width="5.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.5" y="1182.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (13 samples, 0.27%)</title><rect x="12.5" y="1155.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.5" y="1166.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.04%)</title><rect x="12.5" y="1139.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="15.5" y="1150.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.11%)</title><rect x="13.0" y="1139.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="16.0" y="1150.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 0.04%)</title><rect x="14.7" y="1139.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="17.7" y="1150.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.04%)</title><rect x="15.2" y="1139.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="18.2" y="1150.0"></text>
</g>
<g>
<title>[not_walkable_Java] (6 samples, 0.13%)</title><rect x="16.0" y="1203.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="19.0" y="1214.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.11%)</title><rect x="16.0" y="1187.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="19.0" y="1198.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (4 samples, 0.08%)</title><rect x="16.0" y="1171.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="19.0" y="1182.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.06%)</title><rect x="16.0" y="1155.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="19.0" y="1166.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.06%)</title><rect x="16.0" y="1139.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="19.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.15%)</title><rect x="17.5" y="1203.0" width="1.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="20.5" y="1214.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="17.7" y="1187.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="20.7" y="1198.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="17.7" y="1171.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="20.7" y="1182.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="17.7" y="1155.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="20.7" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (3 samples, 0.06%)</title><rect x="18.5" y="1187.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="21.5" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="18.5" y="1171.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="21.5" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.06%)</title><rect x="18.5" y="1155.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="21.5" y="1166.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="18.7" y="1139.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="21.7" y="1150.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="18.7" y="1123.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="21.7" y="1134.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.04%)</title><rect x="18.7" y="1107.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="21.7" y="1118.0"></text>
</g>
<g>
<title>[unknown_Java] (42 samples, 0.89%)</title><rect x="19.2" y="1203.0" width="10.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="22.2" y="1214.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (2 samples, 0.04%)</title><rect x="19.2" y="1187.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="22.2" y="1198.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.04%)</title><rect x="20.0" y="1187.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="23.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="20.5" y="1187.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="23.5" y="1198.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="20.5" y="1171.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="23.5" y="1182.0"></text>
</g>
<g>
<title>__pthread_cond_signal (34 samples, 0.72%)</title><rect x="20.9" y="1187.0" width="8.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="23.9" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.65%)</title><rect x="21.7" y="1171.0" width="7.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="24.7" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.65%)</title><rect x="21.7" y="1155.0" width="7.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="24.7" y="1166.0"></text>
</g>
<g>
<title>__x64_sys_futex (30 samples, 0.63%)</title><rect x="21.9" y="1139.0" width="7.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="24.9" y="1150.0"></text>
</g>
<g>
<title>do_futex (30 samples, 0.63%)</title><rect x="21.9" y="1123.0" width="7.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="24.9" y="1134.0"></text>
</g>
<g>
<title>futex_wake (30 samples, 0.63%)</title><rect x="21.9" y="1107.0" width="7.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="24.9" y="1118.0"></text>
</g>
<g>
<title>wake_up_q (23 samples, 0.49%)</title><rect x="23.7" y="1091.0" width="5.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="26.7" y="1102.0"></text>
</g>
<g>
<title>try_to_wake_up (22 samples, 0.46%)</title><rect x="23.9" y="1075.0" width="5.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="26.9" y="1086.0"></text>
</g>
<g>
<title>__lock_text_start (22 samples, 0.46%)</title><rect x="23.9" y="1059.0" width="5.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="26.9" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.04%)</title><rect x="29.7" y="1203.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="32.7" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="29.7" y="1187.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="32.7" y="1198.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (9 samples, 0.19%)</title><rect x="30.2" y="1203.0" width="2.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="33.2" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.17%)</title><rect x="30.4" y="1187.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="33.4" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.17%)</title><rect x="30.4" y="1171.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="33.4" y="1182.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.17%)</title><rect x="30.4" y="1155.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="33.4" y="1166.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.15%)</title><rect x="30.4" y="1139.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="33.4" y="1150.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.15%)</title><rect x="30.4" y="1123.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="33.4" y="1134.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.04%)</title><rect x="30.4" y="1107.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="33.4" y="1118.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (2 samples, 0.04%)</title><rect x="30.4" y="1091.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="33.4" y="1102.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.04%)</title><rect x="30.4" y="1075.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="33.4" y="1086.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.04%)</title><rect x="30.9" y="1107.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="33.9" y="1118.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (2 samples, 0.04%)</title><rect x="31.6" y="1107.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="34.6" y="1118.0"></text>
</g>
<g>
<title>__hrtimer_init (2 samples, 0.04%)</title><rect x="31.6" y="1091.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="34.6" y="1102.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.04%)</title><rect x="32.4" y="1203.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="35.4" y="1214.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="32.9" y="1203.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="35.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,759 samples, 58.18%)</title><rect x="33.4" y="1203.0" width="686.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="36.4" y="1214.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,759 samples, 58.18%)</title><rect x="33.4" y="1187.0" width="686.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="36.4" y="1198.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,759 samples, 58.18%)</title><rect x="33.4" y="1171.0" width="686.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="36.4" y="1182.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (446 samples, 9.41%)</title><rect x="33.9" y="1155.0" width="111.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="36.9" y="1166.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (443 samples, 9.34%)</title><rect x="34.6" y="1139.0" width="110.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.6" y="1150.0">java/util/con..</text>
</g>
<g>
<title>itable stub (3 samples, 0.06%)</title><rect x="35.4" y="1123.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="38.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (431 samples, 9.09%)</title><rect x="36.1" y="1123.0" width="107.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.1" y="1134.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.11%)</title><rect x="36.6" y="1107.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/2069674845.apply (4 samples, 0.08%)</title><rect x="36.9" y="1091.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="39.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/2069674845.apply (424 samples, 8.94%)</title><rect x="37.9" y="1107.0" width="105.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="40.9" y="1118.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (424 samples, 8.94%)</title><rect x="37.9" y="1091.0" width="105.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.9" y="1102.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (424 samples, 8.94%)</title><rect x="37.9" y="1075.0" width="105.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.9" y="1086.0">jdk/internal/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3 samples, 0.06%)</title><rect x="37.9" y="1059.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.06%)</title><rect x="38.6" y="1059.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.04%)</title><rect x="38.9" y="1043.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (312 samples, 6.58%)</title><rect x="39.4" y="1059.0" width="77.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.4" y="1070.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (312 samples, 6.58%)</title><rect x="39.4" y="1043.0" width="77.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.4" y="1054.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (312 samples, 6.58%)</title><rect x="39.4" y="1027.0" width="77.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.4" y="1038.0">jdk/inter..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (197 samples, 4.15%)</title><rect x="39.4" y="1011.0" width="49.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.4" y="1022.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (197 samples, 4.15%)</title><rect x="39.4" y="995.0" width="49.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="42.4" y="1006.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (196 samples, 4.13%)</title><rect x="39.4" y="979.0" width="48.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="42.4" y="990.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$374/1643021581.apply (195 samples, 4.11%)</title><rect x="39.6" y="963.0" width="48.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="42.6" y="974.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (194 samples, 4.09%)</title><rect x="39.9" y="947.0" width="48.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.9" y="958.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (194 samples, 4.09%)</title><rect x="39.9" y="931.0" width="48.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="42.9" y="942.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$189/1547189845.apply (193 samples, 4.07%)</title><rect x="40.1" y="915.0" width="48.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.1" y="926.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (193 samples, 4.07%)</title><rect x="40.1" y="899.0" width="48.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.1" y="910.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (4 samples, 0.08%)</title><rect x="40.1" y="883.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="43.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (4 samples, 0.08%)</title><rect x="40.1" y="867.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 0.06%)</title><rect x="40.1" y="851.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.04%)</title><rect x="41.1" y="883.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.04%)</title><rect x="41.1" y="867.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="44.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.04%)</title><rect x="41.1" y="851.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="44.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (187 samples, 3.94%)</title><rect x="41.6" y="883.0" width="46.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="44.6" y="894.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (164 samples, 3.46%)</title><rect x="41.6" y="867.0" width="40.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.6" y="878.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (164 samples, 3.46%)</title><rect x="41.6" y="851.0" width="40.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="44.6" y="862.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.08%)</title><rect x="42.1" y="835.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$453/499904817.apply (157 samples, 3.31%)</title><rect x="43.1" y="835.0" width="39.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="46.1" y="846.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (157 samples, 3.31%)</title><rect x="43.1" y="819.0" width="39.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.1" y="830.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.08%)</title><rect x="43.3" y="803.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.04%)</title><rect x="43.8" y="787.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="46.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.04%)</title><rect x="43.8" y="771.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="46.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (6 samples, 0.13%)</title><rect x="44.3" y="803.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (6 samples, 0.13%)</title><rect x="44.3" y="787.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.13%)</title><rect x="44.3" y="771.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.13%)</title><rect x="44.3" y="755.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.06%)</title><rect x="45.1" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.04%)</title><rect x="45.3" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.04%)</title><rect x="45.3" y="707.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (47 samples, 0.99%)</title><rect x="45.8" y="803.0" width="11.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="48.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (47 samples, 0.99%)</title><rect x="45.8" y="787.0" width="11.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (15 samples, 0.32%)</title><rect x="45.8" y="771.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (15 samples, 0.32%)</title><rect x="45.8" y="755.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (14 samples, 0.30%)</title><rect x="46.1" y="739.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="49.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (14 samples, 0.30%)</title><rect x="46.1" y="723.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (14 samples, 0.30%)</title><rect x="46.1" y="707.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="49.1" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="46.3" y="691.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="49.3" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (11 samples, 0.23%)</title><rect x="46.8" y="691.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="49.8" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 0.11%)</title><rect x="48.3" y="675.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="51.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="48.3" y="659.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="51.3" y="670.0"></text>
</g>
<g>
<title>__GI_write (5 samples, 0.11%)</title><rect x="48.3" y="643.0" width="1.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="51.3" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.08%)</title><rect x="48.6" y="627.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="51.6" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.08%)</title><rect x="48.6" y="611.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="51.6" y="622.0"></text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.04%)</title><rect x="49.1" y="595.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="52.1" y="606.0"></text>
</g>
<g>
<title>ksys_write (2 samples, 0.04%)</title><rect x="49.1" y="579.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="52.1" y="590.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.04%)</title><rect x="49.1" y="563.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="52.1" y="574.0"></text>
</g>
<g>
<title>__vfs_write (2 samples, 0.04%)</title><rect x="49.1" y="547.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="52.1" y="558.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.04%)</title><rect x="49.1" y="531.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="52.1" y="542.0"></text>
</g>
<g>
<title>pipe_write (2 samples, 0.04%)</title><rect x="49.1" y="515.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="52.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (32 samples, 0.67%)</title><rect x="49.6" y="771.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="52.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (32 samples, 0.67%)</title><rect x="49.6" y="755.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="52.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (24 samples, 0.51%)</title><rect x="50.8" y="739.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="53.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (24 samples, 0.51%)</title><rect x="50.8" y="723.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="53.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (24 samples, 0.51%)</title><rect x="50.8" y="707.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.8" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.06%)</title><rect x="52.1" y="691.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="55.1" y="702.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.06%)</title><rect x="52.1" y="675.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="55.1" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.06%)</title><rect x="52.1" y="659.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="55.1" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (3 samples, 0.06%)</title><rect x="52.1" y="643.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="55.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (16 samples, 0.34%)</title><rect x="52.8" y="691.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.8" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (10 samples, 0.21%)</title><rect x="54.3" y="675.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="57.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.21%)</title><rect x="54.3" y="659.0" width="2.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="57.3" y="670.0"></text>
</g>
<g>
<title>__GI_write (10 samples, 0.21%)</title><rect x="54.3" y="643.0" width="2.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="57.3" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.21%)</title><rect x="54.3" y="627.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="57.3" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.21%)</title><rect x="54.3" y="611.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="57.3" y="622.0"></text>
</g>
<g>
<title>__x64_sys_write (10 samples, 0.21%)</title><rect x="54.3" y="595.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="57.3" y="606.0"></text>
</g>
<g>
<title>ksys_write (10 samples, 0.21%)</title><rect x="54.3" y="579.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="57.3" y="590.0"></text>
</g>
<g>
<title>vfs_write (10 samples, 0.21%)</title><rect x="54.3" y="563.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="57.3" y="574.0"></text>
</g>
<g>
<title>__vfs_write (9 samples, 0.19%)</title><rect x="54.3" y="547.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="57.3" y="558.0"></text>
</g>
<g>
<title>new_sync_write (9 samples, 0.19%)</title><rect x="54.3" y="531.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="57.3" y="542.0"></text>
</g>
<g>
<title>pipe_write (8 samples, 0.17%)</title><rect x="54.5" y="515.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="57.5" y="526.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.11%)</title><rect x="55.0" y="499.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="58.0" y="510.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.11%)</title><rect x="55.0" y="483.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="58.0" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.11%)</title><rect x="55.0" y="467.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="58.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/FlowTube.asTubeSubscriber (2 samples, 0.04%)</title><rect x="57.0" y="739.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (99 samples, 2.09%)</title><rect x="57.5" y="803.0" width="24.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.5" y="814.0">j..</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.08%)</title><rect x="58.5" y="787.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.08%)</title><rect x="58.5" y="771.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (4 samples, 0.08%)</title><rect x="58.5" y="755.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (66 samples, 1.39%)</title><rect x="60.0" y="787.0" width="16.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (4 samples, 0.08%)</title><rect x="60.3" y="771.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.3" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.08%)</title><rect x="60.3" y="755.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="63.3" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.08%)</title><rect x="60.3" y="739.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.3" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.08%)</title><rect x="60.3" y="723.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.3" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.08%)</title><rect x="60.3" y="707.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.3" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.08%)</title><rect x="60.3" y="691.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.06%)</title><rect x="60.5" y="675.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.06%)</title><rect x="60.5" y="659.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.06%)</title><rect x="60.5" y="643.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (27 samples, 0.57%)</title><rect x="61.3" y="771.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.11%)</title><rect x="63.5" y="755.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="66.5" y="766.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.11%)</title><rect x="63.5" y="739.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.5" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.11%)</title><rect x="63.5" y="723.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="66.5" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (3 samples, 0.06%)</title><rect x="65.0" y="755.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.0" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (3 samples, 0.06%)</title><rect x="65.0" y="739.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.0" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (3 samples, 0.06%)</title><rect x="65.0" y="723.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.0" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (3 samples, 0.06%)</title><rect x="65.0" y="707.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.0" y="718.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$493/1492730482.test (6 samples, 0.13%)</title><rect x="65.7" y="755.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.7" y="766.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (6 samples, 0.13%)</title><rect x="65.7" y="739.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$92/1439337960.test (6 samples, 0.13%)</title><rect x="65.7" y="723.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (6 samples, 0.13%)</title><rect x="65.7" y="707.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="68.7" y="718.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$81/306123060.test (6 samples, 0.13%)</title><rect x="65.7" y="691.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.7" y="702.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (6 samples, 0.13%)</title><rect x="65.7" y="675.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="68.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/1052967153.test (6 samples, 0.13%)</title><rect x="65.7" y="659.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="68.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (6 samples, 0.13%)</title><rect x="65.7" y="643.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.11%)</title><rect x="66.0" y="627.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.08%)</title><rect x="66.0" y="611.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="69.0" y="622.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="67.5" y="755.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="70.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (3 samples, 0.06%)</title><rect x="68.0" y="771.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="71.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.isConnect (3 samples, 0.06%)</title><rect x="68.0" y="755.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.06%)</title><rect x="68.0" y="739.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (31 samples, 0.65%)</title><rect x="68.7" y="771.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.7" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (31 samples, 0.65%)</title><rect x="68.7" y="755.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.7" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (31 samples, 0.65%)</title><rect x="68.7" y="739.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.7" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (28 samples, 0.59%)</title><rect x="69.5" y="723.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.5" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/491938346.accept (22 samples, 0.46%)</title><rect x="70.0" y="707.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="73.0" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (22 samples, 0.46%)</title><rect x="70.0" y="691.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.0" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (13 samples, 0.27%)</title><rect x="71.0" y="675.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="74.0" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/829051045.accept (11 samples, 0.23%)</title><rect x="71.5" y="659.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.5" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (11 samples, 0.23%)</title><rect x="71.5" y="643.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="74.5" y="654.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.04%)</title><rect x="73.7" y="627.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.7" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.04%)</title><rect x="73.7" y="611.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.7" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.11%)</title><rect x="74.2" y="675.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.2" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.04%)</title><rect x="74.9" y="659.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="77.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (4 samples, 0.08%)</title><rect x="75.4" y="707.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.4" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/491938346.accept (2 samples, 0.04%)</title><rect x="75.9" y="691.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (5 samples, 0.11%)</title><rect x="76.7" y="787.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="79.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (5 samples, 0.11%)</title><rect x="76.7" y="771.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="79.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (5 samples, 0.11%)</title><rect x="76.7" y="755.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="79.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.04%)</title><rect x="76.9" y="739.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.04%)</title><rect x="76.9" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="79.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (16 samples, 0.34%)</title><rect x="78.2" y="787.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="81.2" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (12 samples, 0.25%)</title><rect x="79.2" y="771.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.06%)</title><rect x="80.2" y="755.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.06%)</title><rect x="80.2" y="739.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="83.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.06%)</title><rect x="80.2" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.2" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (5 samples, 0.11%)</title><rect x="80.9" y="755.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (23 samples, 0.49%)</title><rect x="82.4" y="867.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="85.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (23 samples, 0.49%)</title><rect x="82.4" y="851.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="85.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.46%)</title><rect x="82.7" y="835.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.46%)</title><rect x="82.7" y="819.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (15 samples, 0.32%)</title><rect x="84.4" y="803.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (15 samples, 0.32%)</title><rect x="84.4" y="787.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (2 samples, 0.04%)</title><rect x="84.4" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (9 samples, 0.19%)</title><rect x="84.9" y="771.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$346/2096808812.run (8 samples, 0.17%)</title><rect x="85.1" y="755.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (8 samples, 0.17%)</title><rect x="85.1" y="739.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (7 samples, 0.15%)</title><rect x="85.4" y="723.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="88.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (4 samples, 0.08%)</title><rect x="86.1" y="707.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="89.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (4 samples, 0.08%)</title><rect x="87.1" y="771.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.04%)</title><rect x="87.6" y="755.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.04%)</title><rect x="88.4" y="1011.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.04%)</title><rect x="88.4" y="995.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="91.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.04%)</title><rect x="88.4" y="979.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="91.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (113 samples, 2.38%)</title><rect x="88.9" y="1011.0" width="28.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="91.9" y="1022.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7 samples, 0.15%)</title><rect x="88.9" y="995.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="91.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.11%)</title><rect x="89.1" y="979.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="92.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$367/619467198.apply (3 samples, 0.06%)</title><rect x="89.6" y="963.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (3 samples, 0.06%)</title><rect x="89.6" y="947.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="92.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.06%)</title><rect x="89.6" y="931.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="92.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.06%)</title><rect x="89.6" y="915.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="92.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.06%)</title><rect x="89.6" y="899.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="92.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="90.6" y="995.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="93.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="90.6" y="979.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="93.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (104 samples, 2.19%)</title><rect x="91.1" y="995.0" width="25.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.1" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (104 samples, 2.19%)</title><rect x="91.1" y="979.0" width="25.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="94.1" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (102 samples, 2.15%)</title><rect x="91.1" y="963.0" width="25.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.1" y="974.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.08%)</title><rect x="91.6" y="947.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="94.6" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.08%)</title><rect x="91.6" y="931.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$208/86240945.get$Lambda (4 samples, 0.08%)</title><rect x="91.6" y="915.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$208/86240945.&lt;init&gt; (4 samples, 0.08%)</title><rect x="91.6" y="899.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (2 samples, 0.04%)</title><rect x="92.9" y="947.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="95.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.&lt;init&gt; (4 samples, 0.08%)</title><rect x="93.4" y="947.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="96.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (6 samples, 0.13%)</title><rect x="94.4" y="947.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="97.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (4 samples, 0.08%)</title><rect x="96.1" y="947.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (13 samples, 0.27%)</title><rect x="97.1" y="947.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (10 samples, 0.21%)</title><rect x="97.3" y="931.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="100.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (9 samples, 0.19%)</title><rect x="97.6" y="915.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.6" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.08%)</title><rect x="97.8" y="899.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.8" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.08%)</title><rect x="97.8" y="883.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (4 samples, 0.08%)</title><rect x="97.8" y="867.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.8" y="878.0"></text>
</g>
<g>
<title>java/util/Objects.equals (4 samples, 0.08%)</title><rect x="97.8" y="851.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="100.8" y="862.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (4 samples, 0.08%)</title><rect x="97.8" y="835.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="100.8" y="846.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (4 samples, 0.08%)</title><rect x="97.8" y="819.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="100.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (4 samples, 0.08%)</title><rect x="98.8" y="899.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.8" y="910.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (3 samples, 0.06%)</title><rect x="98.8" y="883.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (2 samples, 0.04%)</title><rect x="99.8" y="931.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="102.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (58 samples, 1.22%)</title><rect x="100.3" y="947.0" width="14.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="103.3" y="958.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (57 samples, 1.20%)</title><rect x="100.6" y="931.0" width="14.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="103.6" y="942.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (44 samples, 0.93%)</title><rect x="100.6" y="915.0" width="10.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="103.6" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (4 samples, 0.08%)</title><rect x="101.3" y="899.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="104.3" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (3 samples, 0.06%)</title><rect x="101.6" y="883.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="104.6" y="894.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (11 samples, 0.23%)</title><rect x="102.6" y="899.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="105.6" y="910.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.04%)</title><rect x="103.1" y="883.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="106.1" y="894.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (3 samples, 0.06%)</title><rect x="103.6" y="883.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="106.6" y="894.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (3 samples, 0.06%)</title><rect x="104.6" y="883.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="107.6" y="894.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (12 samples, 0.25%)</title><rect x="105.8" y="899.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="108.8" y="910.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (10 samples, 0.21%)</title><rect x="106.3" y="883.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="109.3" y="894.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (6 samples, 0.13%)</title><rect x="106.3" y="867.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="109.3" y="878.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.04%)</title><rect x="107.8" y="867.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="110.8" y="878.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.04%)</title><rect x="108.3" y="867.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="111.3" y="878.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (11 samples, 0.23%)</title><rect x="108.8" y="899.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="111.8" y="910.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.06%)</title><rect x="109.0" y="883.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="112.0" y="894.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.04%)</title><rect x="109.3" y="867.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="112.3" y="878.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.11%)</title><rect x="110.3" y="883.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="113.3" y="894.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (2 samples, 0.04%)</title><rect x="110.3" y="867.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="113.3" y="878.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.06%)</title><rect x="110.8" y="867.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="113.8" y="878.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.06%)</title><rect x="110.8" y="851.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="113.8" y="862.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.06%)</title><rect x="110.8" y="835.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="113.8" y="846.0"></text>
</g>
<g>
<title>call_stub (3 samples, 0.06%)</title><rect x="111.8" y="915.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="114.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$239/1268826471.run (7 samples, 0.15%)</title><rect x="112.5" y="915.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (6 samples, 0.13%)</title><rect x="112.8" y="899.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="115.8" y="910.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (6 samples, 0.13%)</title><rect x="112.8" y="883.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.8" y="894.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (6 samples, 0.13%)</title><rect x="112.8" y="867.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="115.8" y="878.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (6 samples, 0.13%)</title><rect x="112.8" y="851.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="115.8" y="862.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (6 samples, 0.13%)</title><rect x="112.8" y="835.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="115.8" y="846.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (3 samples, 0.06%)</title><rect x="113.5" y="819.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.04%)</title><rect x="113.8" y="803.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="113.8" y="787.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="116.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (4 samples, 0.08%)</title><rect x="114.8" y="947.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (3 samples, 0.06%)</title><rect x="115.8" y="947.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="118.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.04%)</title><rect x="116.0" y="931.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="119.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (2 samples, 0.04%)</title><rect x="116.0" y="915.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="119.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (2 samples, 0.04%)</title><rect x="116.0" y="899.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="119.0" y="910.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (2 samples, 0.04%)</title><rect x="116.0" y="883.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="119.0" y="894.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (2 samples, 0.04%)</title><rect x="116.0" y="867.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.04%)</title><rect x="116.5" y="963.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="119.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (72 samples, 1.52%)</title><rect x="117.0" y="1059.0" width="17.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.0" y="1070.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="118.2" y="1043.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="121.2" y="1054.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.04%)</title><rect x="118.2" y="1027.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="121.2" y="1038.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.04%)</title><rect x="118.2" y="1011.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="121.2" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (14 samples, 0.30%)</title><rect x="118.7" y="1043.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.7" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (11 samples, 0.23%)</title><rect x="119.5" y="1027.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="122.5" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (4 samples, 0.08%)</title><rect x="120.2" y="1011.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (4 samples, 0.08%)</title><rect x="121.2" y="1011.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="124.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (51 samples, 1.08%)</title><rect x="122.2" y="1043.0" width="12.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.2" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (51 samples, 1.08%)</title><rect x="122.2" y="1027.0" width="12.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="125.2" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (45 samples, 0.95%)</title><rect x="123.7" y="1011.0" width="11.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.93%)</title><rect x="124.0" y="995.0" width="10.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="127.0" y="1006.0"></text>
</g>
<g>
<title>__GI_write (44 samples, 0.93%)</title><rect x="124.0" y="979.0" width="10.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="127.0" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 0.93%)</title><rect x="124.0" y="963.0" width="10.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="127.0" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (43 samples, 0.91%)</title><rect x="124.2" y="947.0" width="10.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="127.2" y="958.0"></text>
</g>
<g>
<title>__x64_sys_write (41 samples, 0.86%)</title><rect x="124.5" y="931.0" width="10.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="127.5" y="942.0"></text>
</g>
<g>
<title>ksys_write (40 samples, 0.84%)</title><rect x="124.7" y="915.0" width="10.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="127.7" y="926.0"></text>
</g>
<g>
<title>vfs_write (38 samples, 0.80%)</title><rect x="125.2" y="899.0" width="9.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="128.2" y="910.0"></text>
</g>
<g>
<title>__vfs_write (36 samples, 0.76%)</title><rect x="125.2" y="883.0" width="9.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="128.2" y="894.0"></text>
</g>
<g>
<title>new_sync_write (35 samples, 0.74%)</title><rect x="125.5" y="867.0" width="8.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="128.5" y="878.0"></text>
</g>
<g>
<title>pipe_write (31 samples, 0.65%)</title><rect x="126.5" y="851.0" width="7.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="129.5" y="862.0"></text>
</g>
<g>
<title>__wake_up_sync_key (20 samples, 0.42%)</title><rect x="126.7" y="835.0" width="5.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="129.7" y="846.0"></text>
</g>
<g>
<title>__wake_up_common_lock (20 samples, 0.42%)</title><rect x="126.7" y="819.0" width="5.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="129.7" y="830.0"></text>
</g>
<g>
<title>__lock_text_start (19 samples, 0.40%)</title><rect x="126.7" y="803.0" width="4.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="129.7" y="814.0"></text>
</g>
<g>
<title>copy_page_from_iter (3 samples, 0.06%)</title><rect x="131.9" y="835.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="134.9" y="846.0"></text>
</g>
<g>
<title>file_update_time (3 samples, 0.06%)</title><rect x="132.9" y="835.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="135.9" y="846.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.04%)</title><rect x="133.7" y="835.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="136.7" y="846.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.04%)</title><rect x="134.2" y="883.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="137.2" y="894.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.04%)</title><rect x="134.2" y="867.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="137.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (3 samples, 0.06%)</title><rect x="134.9" y="1059.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="137.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (20 samples, 0.42%)</title><rect x="135.7" y="1059.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (11 samples, 0.23%)</title><rect x="136.7" y="1043.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (11 samples, 0.23%)</title><rect x="136.7" y="1027.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.7" y="1038.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (10 samples, 0.21%)</title><rect x="136.9" y="1011.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="139.9" y="1022.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (5 samples, 0.11%)</title><rect x="136.9" y="995.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="139.9" y="1006.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (2 samples, 0.04%)</title><rect x="137.7" y="979.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.7" y="990.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (2 samples, 0.04%)</title><rect x="137.7" y="963.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="140.7" y="974.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (2 samples, 0.04%)</title><rect x="137.7" y="947.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.7" y="958.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (5 samples, 0.11%)</title><rect x="138.2" y="995.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="141.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (5 samples, 0.11%)</title><rect x="138.2" y="979.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="141.2" y="990.0"></text>
</g>
<g>
<title>JVM_IHashCode (4 samples, 0.08%)</title><rect x="138.4" y="963.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="141.4" y="974.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.04%)</title><rect x="138.7" y="947.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="141.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.request (5 samples, 0.11%)</title><rect x="139.4" y="1043.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="142.4" y="1054.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (2 samples, 0.04%)</title><rect x="140.1" y="1027.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="143.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (11 samples, 0.23%)</title><rect x="140.6" y="1059.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="143.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (11 samples, 0.23%)</title><rect x="140.6" y="1043.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (3 samples, 0.06%)</title><rect x="142.6" y="1027.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="145.6" y="1038.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.04%)</title><rect x="142.6" y="1011.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.6" y="1022.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.04%)</title><rect x="142.6" y="995.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.04%)</title><rect x="142.6" y="979.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.6" y="990.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.04%)</title><rect x="142.6" y="963.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="145.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$170/1725831931.get (5 samples, 0.11%)</title><rect x="143.4" y="1123.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (165 samples, 3.48%)</title><rect x="144.9" y="1155.0" width="41.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="147.9" y="1166.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (165 samples, 3.48%)</title><rect x="144.9" y="1139.0" width="41.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.9" y="1150.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (160 samples, 3.37%)</title><rect x="145.4" y="1123.0" width="39.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="148.4" y="1134.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (160 samples, 3.37%)</title><rect x="145.4" y="1107.0" width="39.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.4" y="1118.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (157 samples, 3.31%)</title><rect x="145.9" y="1091.0" width="39.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="148.9" y="1102.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (157 samples, 3.31%)</title><rect x="145.9" y="1075.0" width="39.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="148.9" y="1086.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$230/1143606200.accept (157 samples, 3.31%)</title><rect x="145.9" y="1059.0" width="39.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.9" y="1070.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$respond$2 (157 samples, 3.31%)</title><rect x="145.9" y="1043.0" width="39.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.9" y="1054.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.trySendAnswer (157 samples, 3.31%)</title><rect x="145.9" y="1027.0" width="39.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.9" y="1038.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (157 samples, 3.31%)</title><rect x="145.9" y="1011.0" width="39.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="148.9" y="1022.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.06%)</title><rect x="145.9" y="995.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="148.9" y="1006.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.06%)</title><rect x="145.9" y="979.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="148.9" y="990.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="146.1" y="963.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="149.1" y="974.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="146.1" y="947.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="149.1" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (150 samples, 3.16%)</title><rect x="146.6" y="995.0" width="37.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.6" y="1006.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.11%)</title><rect x="146.6" y="979.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.6" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (145 samples, 3.06%)</title><rect x="147.9" y="979.0" width="36.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="150.9" y="990.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (144 samples, 3.04%)</title><rect x="148.1" y="963.0" width="35.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="151.1" y="974.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (142 samples, 2.99%)</title><rect x="148.6" y="947.0" width="35.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.6" y="958.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (142 samples, 2.99%)</title><rect x="148.6" y="931.0" width="35.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.6" y="942.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.08%)</title><rect x="148.9" y="915.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="151.9" y="926.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="149.4" y="899.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="152.4" y="910.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.04%)</title><rect x="149.8" y="915.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="152.8" y="926.0"></text>
</g>
<g>
<title>__libc_send (135 samples, 2.85%)</title><rect x="150.3" y="915.0" width="33.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="153.3" y="926.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (133 samples, 2.80%)</title><rect x="150.8" y="899.0" width="33.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="153.8" y="910.0">en..</text>
</g>
<g>
<title>do_syscall_64 (132 samples, 2.78%)</title><rect x="151.1" y="883.0" width="32.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="154.1" y="894.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (131 samples, 2.76%)</title><rect x="151.3" y="867.0" width="32.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="154.3" y="878.0">__..</text>
</g>
<g>
<title>__sys_sendto (130 samples, 2.74%)</title><rect x="151.3" y="851.0" width="32.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="154.3" y="862.0">__..</text>
</g>
<g>
<title>sock_sendmsg (128 samples, 2.70%)</title><rect x="151.3" y="835.0" width="31.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="154.3" y="846.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (125 samples, 2.64%)</title><rect x="151.6" y="819.0" width="31.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="154.6" y="830.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (125 samples, 2.64%)</title><rect x="151.6" y="803.0" width="31.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="154.6" y="814.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (123 samples, 2.59%)</title><rect x="151.8" y="787.0" width="30.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="154.8" y="798.0">tc..</text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.06%)</title><rect x="153.3" y="771.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="156.3" y="782.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.04%)</title><rect x="153.6" y="755.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="156.6" y="766.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.17%)</title><rect x="154.6" y="771.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="157.6" y="782.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.17%)</title><rect x="154.6" y="755.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="157.6" y="766.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.06%)</title><rect x="154.8" y="739.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="157.8" y="750.0"></text>
</g>
<g>
<title>memset (4 samples, 0.08%)</title><rect x="155.6" y="739.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="158.6" y="750.0"></text>
</g>
<g>
<title>tcp_push (102 samples, 2.15%)</title><rect x="156.6" y="771.0" width="25.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="159.6" y="782.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (102 samples, 2.15%)</title><rect x="156.6" y="755.0" width="25.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="159.6" y="766.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (102 samples, 2.15%)</title><rect x="156.6" y="739.0" width="25.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="159.6" y="750.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (95 samples, 2.00%)</title><rect x="156.8" y="723.0" width="23.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="159.8" y="734.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (90 samples, 1.90%)</title><rect x="157.3" y="707.0" width="22.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="160.3" y="718.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (89 samples, 1.88%)</title><rect x="157.3" y="691.0" width="22.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="160.3" y="702.0">_..</text>
</g>
<g>
<title>ip_local_out (88 samples, 1.86%)</title><rect x="157.6" y="675.0" width="21.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="160.6" y="686.0">i..</text>
</g>
<g>
<title>__ip_local_out (16 samples, 0.34%)</title><rect x="157.6" y="659.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="160.6" y="670.0"></text>
</g>
<g>
<title>nf_hook_slow (15 samples, 0.32%)</title><rect x="157.8" y="643.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="160.8" y="654.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.04%)</title><rect x="157.8" y="627.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="160.8" y="638.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.04%)</title><rect x="157.8" y="611.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="160.8" y="622.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (13 samples, 0.27%)</title><rect x="158.3" y="627.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="161.3" y="638.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (13 samples, 0.27%)</title><rect x="158.3" y="611.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="161.3" y="622.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (7 samples, 0.15%)</title><rect x="158.8" y="595.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="161.8" y="606.0"></text>
</g>
<g>
<title>ip_output (72 samples, 1.52%)</title><rect x="161.5" y="659.0" width="18.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="164.5" y="670.0"></text>
</g>
<g>
<title>ip_finish_output (70 samples, 1.48%)</title><rect x="162.0" y="643.0" width="17.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="165.0" y="654.0"></text>
</g>
<g>
<title>__ip_finish_output (70 samples, 1.48%)</title><rect x="162.0" y="627.0" width="17.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="165.0" y="638.0"></text>
</g>
<g>
<title>ip_finish_output2 (69 samples, 1.46%)</title><rect x="162.3" y="611.0" width="17.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="165.3" y="622.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (61 samples, 1.29%)</title><rect x="162.8" y="595.0" width="15.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="165.8" y="606.0"></text>
</g>
<g>
<title>do_softirq.part.20 (61 samples, 1.29%)</title><rect x="162.8" y="579.0" width="15.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="165.8" y="590.0"></text>
</g>
<g>
<title>do_softirq_own_stack (58 samples, 1.22%)</title><rect x="163.5" y="563.0" width="14.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="166.5" y="574.0"></text>
</g>
<g>
<title>__softirqentry_text_start (58 samples, 1.22%)</title><rect x="163.5" y="547.0" width="14.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="166.5" y="558.0"></text>
</g>
<g>
<title>net_rx_action (56 samples, 1.18%)</title><rect x="163.8" y="531.0" width="13.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="166.8" y="542.0"></text>
</g>
<g>
<title>process_backlog (54 samples, 1.14%)</title><rect x="164.3" y="515.0" width="13.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="167.3" y="526.0"></text>
</g>
<g>
<title>__netif_receive_skb (53 samples, 1.12%)</title><rect x="164.5" y="499.0" width="13.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="167.5" y="510.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (53 samples, 1.12%)</title><rect x="164.5" y="483.0" width="13.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="167.5" y="494.0"></text>
</g>
<g>
<title>ip_rcv (51 samples, 1.08%)</title><rect x="164.8" y="467.0" width="12.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="167.8" y="478.0"></text>
</g>
<g>
<title>ip_rcv_finish (48 samples, 1.01%)</title><rect x="164.8" y="451.0" width="11.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="167.8" y="462.0"></text>
</g>
<g>
<title>ip_local_deliver (47 samples, 0.99%)</title><rect x="164.8" y="435.0" width="11.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="167.8" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (47 samples, 0.99%)</title><rect x="164.8" y="419.0" width="11.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="167.8" y="430.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (46 samples, 0.97%)</title><rect x="164.8" y="403.0" width="11.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="167.8" y="414.0"></text>
</g>
<g>
<title>tcp_v4_rcv (46 samples, 0.97%)</title><rect x="164.8" y="387.0" width="11.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="167.8" y="398.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.06%)</title><rect x="165.5" y="371.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="168.5" y="382.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.04%)</title><rect x="166.3" y="371.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="169.3" y="382.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (38 samples, 0.80%)</title><rect x="166.8" y="371.0" width="9.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="169.8" y="382.0"></text>
</g>
<g>
<title>tcp_rcv_established (38 samples, 0.80%)</title><rect x="166.8" y="355.0" width="9.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="169.8" y="366.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.04%)</title><rect x="167.3" y="339.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="170.3" y="350.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.04%)</title><rect x="167.3" y="323.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="170.3" y="334.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="167.3" y="307.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="170.3" y="318.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="167.3" y="291.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="170.3" y="302.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.04%)</title><rect x="167.3" y="275.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="170.3" y="286.0"></text>
</g>
<g>
<title>tcp_ack (17 samples, 0.36%)</title><rect x="167.8" y="339.0" width="4.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="170.8" y="350.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (12 samples, 0.25%)</title><rect x="168.5" y="323.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="171.5" y="334.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.08%)</title><rect x="169.5" y="307.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="172.5" y="318.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.06%)</title><rect x="169.5" y="291.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="172.5" y="302.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.06%)</title><rect x="169.5" y="275.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="172.5" y="286.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.04%)</title><rect x="171.5" y="323.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="174.5" y="334.0"></text>
</g>
<g>
<title>tcp_data_ready (13 samples, 0.27%)</title><rect x="172.2" y="339.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="175.2" y="350.0"></text>
</g>
<g>
<title>sock_def_readable (13 samples, 0.27%)</title><rect x="172.2" y="323.0" width="3.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="175.2" y="334.0"></text>
</g>
<g>
<title>__wake_up_sync_key (13 samples, 0.27%)</title><rect x="172.2" y="307.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="175.2" y="318.0"></text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 0.27%)</title><rect x="172.2" y="291.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="175.2" y="302.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.27%)</title><rect x="172.2" y="275.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="175.2" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (6 samples, 0.13%)</title><rect x="178.0" y="595.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="181.0" y="606.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.13%)</title><rect x="178.0" y="579.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="181.0" y="590.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.11%)</title><rect x="178.2" y="563.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="181.2" y="574.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.06%)</title><rect x="178.5" y="547.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="181.5" y="558.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.04%)</title><rect x="178.7" y="531.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="181.7" y="542.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.04%)</title><rect x="178.7" y="515.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="181.7" y="526.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.04%)</title><rect x="179.7" y="707.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="182.7" y="718.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.04%)</title><rect x="179.7" y="691.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="182.7" y="702.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.06%)</title><rect x="180.5" y="723.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="183.5" y="734.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.04%)</title><rect x="181.9" y="771.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="184.9" y="782.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.04%)</title><rect x="181.9" y="755.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="184.9" y="766.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.04%)</title><rect x="182.7" y="819.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="185.7" y="830.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.04%)</title><rect x="182.7" y="803.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="185.7" y="814.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.04%)</title><rect x="182.7" y="787.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="185.7" y="798.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="183.2" y="835.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="186.2" y="846.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="183.2" y="819.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="186.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.08%)</title><rect x="183.9" y="995.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="186.9" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$215/68762744.apply (3 samples, 0.06%)</title><rect x="185.2" y="1123.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="188.2" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.lambda$put$2 (3 samples, 0.06%)</title><rect x="185.2" y="1107.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="188.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (29 samples, 0.61%)</title><rect x="185.9" y="1155.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="188.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (29 samples, 0.61%)</title><rect x="185.9" y="1139.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="188.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (29 samples, 0.61%)</title><rect x="185.9" y="1123.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="188.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (26 samples, 0.55%)</title><rect x="186.7" y="1107.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="189.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4 samples, 0.08%)</title><rect x="190.4" y="1091.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="193.4" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$120/1156768502.run (7 samples, 0.15%)</title><rect x="191.4" y="1091.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="194.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (625 samples, 13.18%)</title><rect x="193.1" y="1155.0" width="155.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="196.1" y="1166.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (620 samples, 13.07%)</title><rect x="194.4" y="1139.0" width="154.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="197.4" y="1150.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (365 samples, 7.70%)</title><rect x="203.8" y="1123.0" width="90.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="206.8" y="1134.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (21 samples, 0.44%)</title><rect x="204.3" y="1107.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="207.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (20 samples, 0.42%)</title><rect x="204.6" y="1091.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (20 samples, 0.42%)</title><rect x="204.6" y="1075.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="207.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.06%)</title><rect x="208.8" y="1059.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="211.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="209.1" y="1043.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="212.1" y="1054.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.04%)</title><rect x="209.1" y="1027.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="212.1" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="209.1" y="1011.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="212.1" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="209.1" y="995.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="212.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (198 samples, 4.18%)</title><rect x="209.6" y="1107.0" width="49.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="212.6" y="1118.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (198 samples, 4.18%)</title><rect x="209.6" y="1091.0" width="49.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="212.6" y="1102.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (186 samples, 3.92%)</title><rect x="211.8" y="1075.0" width="46.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.8" y="1086.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (186 samples, 3.92%)</title><rect x="211.8" y="1059.0" width="46.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="214.8" y="1070.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (182 samples, 3.84%)</title><rect x="212.8" y="1043.0" width="45.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="215.8" y="1054.0">jdk/..</text>
</g>
<g>
<title>Unsafe_Unpark (41 samples, 0.86%)</title><rect x="213.6" y="1027.0" width="10.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="216.6" y="1038.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="213.8" y="1011.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="216.8" y="1022.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.06%)</title><rect x="214.3" y="1011.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="217.3" y="1022.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (10 samples, 0.21%)</title><rect x="215.0" y="1011.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="218.0" y="1022.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (12 samples, 0.25%)</title><rect x="218.0" y="1011.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="221.0" y="1022.0"></text>
</g>
<g>
<title>pthread_mutex_lock (10 samples, 0.21%)</title><rect x="221.0" y="1011.0" width="2.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="224.0" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_signal (135 samples, 2.85%)</title><rect x="223.8" y="1027.0" width="33.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="226.8" y="1038.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (127 samples, 2.68%)</title><rect x="225.7" y="1011.0" width="31.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="228.7" y="1022.0">en..</text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.06%)</title><rect x="225.7" y="995.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="228.7" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (124 samples, 2.61%)</title><rect x="226.5" y="995.0" width="30.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="229.5" y="1006.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (121 samples, 2.55%)</title><rect x="227.2" y="979.0" width="30.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="230.2" y="990.0">__..</text>
</g>
<g>
<title>do_futex (121 samples, 2.55%)</title><rect x="227.2" y="963.0" width="30.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="230.2" y="974.0">do..</text>
</g>
<g>
<title>futex_wake (120 samples, 2.53%)</title><rect x="227.2" y="947.0" width="29.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="230.2" y="958.0">fu..</text>
</g>
<g>
<title>get_futex_key (5 samples, 0.11%)</title><rect x="229.7" y="931.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="232.7" y="942.0"></text>
</g>
<g>
<title>mark_wake_futex (12 samples, 0.25%)</title><rect x="231.0" y="931.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="234.0" y="942.0"></text>
</g>
<g>
<title>wake_q_add_safe (3 samples, 0.06%)</title><rect x="233.2" y="915.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="236.2" y="926.0"></text>
</g>
<g>
<title>wake_up_q (92 samples, 1.94%)</title><rect x="234.2" y="931.0" width="22.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="237.2" y="942.0">w..</text>
</g>
<g>
<title>try_to_wake_up (91 samples, 1.92%)</title><rect x="234.5" y="915.0" width="22.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="237.5" y="926.0">t..</text>
</g>
<g>
<title>__lock_text_start (91 samples, 1.92%)</title><rect x="234.5" y="899.0" width="22.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="237.5" y="910.0">_..</text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.06%)</title><rect x="257.3" y="1027.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="260.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.04%)</title><rect x="258.1" y="1075.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="261.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (7 samples, 0.15%)</title><rect x="258.8" y="1107.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="261.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (7 samples, 0.15%)</title><rect x="258.8" y="1091.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="261.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (136 samples, 2.87%)</title><rect x="260.6" y="1107.0" width="33.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="263.6" y="1118.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (127 samples, 2.68%)</title><rect x="262.8" y="1091.0" width="31.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.8" y="1102.0">jd..</text>
</g>
<g>
<title>Unsafe_Park (55 samples, 1.16%)</title><rect x="265.1" y="1075.0" width="13.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="268.1" y="1086.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.06%)</title><rect x="267.3" y="1059.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="270.3" y="1070.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (17 samples, 0.36%)</title><rect x="268.0" y="1059.0" width="4.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="271.0" y="1070.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="271.5" y="1043.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="274.5" y="1054.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.04%)</title><rect x="272.3" y="1059.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="275.3" y="1070.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.04%)</title><rect x="272.8" y="1059.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="275.8" y="1070.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.08%)</title><rect x="273.3" y="1059.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="276.3" y="1070.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.04%)</title><rect x="274.3" y="1059.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="277.3" y="1070.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.08%)</title><rect x="274.8" y="1059.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="277.8" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="275.0" y="1043.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="278.0" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.06%)</title><rect x="275.0" y="1027.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="278.0" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.06%)</title><rect x="275.0" y="1011.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="278.0" y="1022.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.06%)</title><rect x="275.0" y="995.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="278.0" y="1006.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="275.3" y="979.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="278.3" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.08%)</title><rect x="275.8" y="1059.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="278.8" y="1070.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.06%)</title><rect x="277.0" y="1059.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="280.0" y="1070.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (3 samples, 0.06%)</title><rect x="277.8" y="1059.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="280.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 1.27%)</title><rect x="278.7" y="1075.0" width="15.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="281.7" y="1086.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (58 samples, 1.22%)</title><rect x="279.2" y="1059.0" width="14.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="282.2" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (51 samples, 1.08%)</title><rect x="281.0" y="1043.0" width="12.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="284.0" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (50 samples, 1.05%)</title><rect x="281.2" y="1027.0" width="12.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="284.2" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (46 samples, 0.97%)</title><rect x="282.2" y="1011.0" width="11.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="285.2" y="1022.0"></text>
</g>
<g>
<title>do_futex (42 samples, 0.89%)</title><rect x="283.2" y="995.0" width="10.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="286.2" y="1006.0"></text>
</g>
<g>
<title>futex_wait (39 samples, 0.82%)</title><rect x="283.7" y="979.0" width="9.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="286.7" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (14 samples, 0.30%)</title><rect x="284.0" y="963.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="287.0" y="974.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.23%)</title><rect x="284.7" y="947.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="287.7" y="958.0"></text>
</g>
<g>
<title>__schedule (10 samples, 0.21%)</title><rect x="285.0" y="931.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="288.0" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.06%)</title><rect x="286.7" y="915.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="289.7" y="926.0"></text>
</g>
<g>
<title>futex_wait_setup (19 samples, 0.40%)</title><rect x="287.5" y="963.0" width="4.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="290.5" y="974.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="290.9" y="947.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="293.9" y="958.0"></text>
</g>
<g>
<title>get_futex_value_locked (3 samples, 0.06%)</title><rect x="291.4" y="947.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="294.4" y="958.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.06%)</title><rect x="292.4" y="963.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="295.4" y="974.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.06%)</title><rect x="293.7" y="1075.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="296.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (17 samples, 0.36%)</title><rect x="294.7" y="1123.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="297.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (17 samples, 0.36%)</title><rect x="294.7" y="1107.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="297.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (17 samples, 0.36%)</title><rect x="294.7" y="1091.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="297.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (8 samples, 0.17%)</title><rect x="296.7" y="1075.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="299.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.17%)</title><rect x="296.7" y="1059.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="299.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.15%)</title><rect x="296.9" y="1043.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="299.9" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.04%)</title><rect x="296.9" y="1027.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="299.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="297.4" y="1027.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="300.4" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (5 samples, 0.11%)</title><rect x="297.4" y="1011.0" width="1.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="300.4" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.11%)</title><rect x="297.4" y="995.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="300.4" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.11%)</title><rect x="297.4" y="979.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="300.4" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.08%)</title><rect x="297.7" y="963.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="300.7" y="974.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.08%)</title><rect x="297.7" y="947.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="300.7" y="958.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.08%)</title><rect x="297.7" y="931.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="300.7" y="942.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.06%)</title><rect x="297.7" y="915.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="300.7" y="926.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.06%)</title><rect x="297.7" y="899.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="300.7" y="910.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.04%)</title><rect x="297.9" y="883.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="300.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (200 samples, 4.22%)</title><rect x="298.9" y="1123.0" width="49.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="301.9" y="1134.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (200 samples, 4.22%)</title><rect x="298.9" y="1107.0" width="49.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="301.9" y="1118.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (200 samples, 4.22%)</title><rect x="298.9" y="1091.0" width="49.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="301.9" y="1102.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (200 samples, 4.22%)</title><rect x="298.9" y="1075.0" width="49.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="301.9" y="1086.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (189 samples, 3.99%)</title><rect x="301.6" y="1059.0" width="47.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="304.6" y="1070.0">jdk/..</text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.04%)</title><rect x="301.9" y="1043.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="304.9" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Unpark (51 samples, 1.08%)</title><rect x="302.6" y="1043.0" width="12.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="305.6" y="1054.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="303.4" y="1027.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="306.4" y="1038.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.04%)</title><rect x="303.9" y="1027.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="306.9" y="1038.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (12 samples, 0.25%)</title><rect x="304.4" y="1027.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="307.4" y="1038.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.04%)</title><rect x="307.4" y="1027.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="310.4" y="1038.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (3 samples, 0.06%)</title><rect x="307.9" y="1027.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="310.9" y="1038.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (6 samples, 0.13%)</title><rect x="308.6" y="1027.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="311.6" y="1038.0"></text>
</g>
<g>
<title>pthread_mutex_lock (19 samples, 0.40%)</title><rect x="310.1" y="1027.0" width="4.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="313.1" y="1038.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="314.8" y="1027.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="317.8" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (128 samples, 2.70%)</title><rect x="315.3" y="1043.0" width="31.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="318.3" y="1054.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (119 samples, 2.51%)</title><rect x="317.6" y="1027.0" width="29.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="320.6" y="1038.0">en..</text>
</g>
<g>
<title>do_syscall_64 (118 samples, 2.49%)</title><rect x="317.8" y="1011.0" width="29.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="320.8" y="1022.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (115 samples, 2.43%)</title><rect x="318.6" y="995.0" width="28.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="321.6" y="1006.0">__..</text>
</g>
<g>
<title>do_futex (115 samples, 2.43%)</title><rect x="318.6" y="979.0" width="28.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="321.6" y="990.0">do..</text>
</g>
<g>
<title>futex_wake (113 samples, 2.38%)</title><rect x="318.6" y="963.0" width="28.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="321.6" y="974.0">fu..</text>
</g>
<g>
<title>get_futex_key (3 samples, 0.06%)</title><rect x="321.8" y="947.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="324.8" y="958.0"></text>
</g>
<g>
<title>mark_wake_futex (7 samples, 0.15%)</title><rect x="322.5" y="947.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="325.5" y="958.0"></text>
</g>
<g>
<title>wake_up_q (90 samples, 1.90%)</title><rect x="324.3" y="947.0" width="22.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="327.3" y="958.0">w..</text>
</g>
<g>
<title>try_to_wake_up (89 samples, 1.88%)</title><rect x="324.5" y="931.0" width="22.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="327.5" y="942.0">t..</text>
</g>
<g>
<title>__lock_text_start (89 samples, 1.88%)</title><rect x="324.5" y="915.0" width="22.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="327.5" y="926.0">_..</text>
</g>
<g>
<title>hash_futex (2 samples, 0.04%)</title><rect x="346.7" y="963.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="349.7" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.11%)</title><rect x="347.4" y="1043.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="350.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$498/1191634906.run (541 samples, 11.41%)</title><rect x="348.7" y="1155.0" width="134.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="351.7" y="1166.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (541 samples, 11.41%)</title><rect x="348.7" y="1139.0" width="134.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="351.7" y="1150.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (540 samples, 11.39%)</title><rect x="348.9" y="1123.0" width="134.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="351.9" y="1134.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (529 samples, 11.16%)</title><rect x="351.4" y="1107.0" width="131.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="354.4" y="1118.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (529 samples, 11.16%)</title><rect x="351.4" y="1091.0" width="131.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="354.4" y="1102.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (529 samples, 11.16%)</title><rect x="351.4" y="1075.0" width="131.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="354.4" y="1086.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (526 samples, 11.09%)</title><rect x="351.7" y="1059.0" width="130.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="354.7" y="1070.0">jdk/internal/net..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.06%)</title><rect x="351.7" y="1043.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="354.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.06%)</title><rect x="351.7" y="1027.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="354.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.06%)</title><rect x="351.7" y="1011.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="354.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.06%)</title><rect x="351.7" y="995.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="354.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.06%)</title><rect x="351.7" y="979.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="354.7" y="990.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="351.7" y="963.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="354.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (523 samples, 11.03%)</title><rect x="352.4" y="1043.0" width="130.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="355.4" y="1054.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (523 samples, 11.03%)</title><rect x="352.4" y="1027.0" width="130.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="355.4" y="1038.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (522 samples, 11.01%)</title><rect x="352.7" y="1011.0" width="129.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="355.7" y="1022.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (522 samples, 11.01%)</title><rect x="352.7" y="995.0" width="129.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="355.7" y="1006.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (93 samples, 1.96%)</title><rect x="354.4" y="979.0" width="23.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="357.4" y="990.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (83 samples, 1.75%)</title><rect x="354.4" y="963.0" width="20.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="357.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (80 samples, 1.69%)</title><rect x="355.1" y="947.0" width="19.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="358.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (77 samples, 1.62%)</title><rect x="355.1" y="931.0" width="19.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="358.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (77 samples, 1.62%)</title><rect x="355.1" y="915.0" width="19.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="358.1" y="926.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.06%)</title><rect x="356.1" y="899.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="359.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (13 samples, 0.27%)</title><rect x="356.9" y="899.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="359.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.15%)</title><rect x="357.1" y="883.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="360.1" y="894.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.08%)</title><rect x="357.4" y="867.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="360.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$518/1735583741.apply (5 samples, 0.11%)</title><rect x="358.9" y="883.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="361.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (5 samples, 0.11%)</title><rect x="358.9" y="867.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="361.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (5 samples, 0.11%)</title><rect x="358.9" y="851.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="361.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (2 samples, 0.04%)</title><rect x="359.1" y="835.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="362.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.04%)</title><rect x="359.1" y="819.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="362.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.04%)</title><rect x="359.1" y="803.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="362.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.wrapForDebug (2 samples, 0.04%)</title><rect x="359.6" y="835.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="362.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (47 samples, 0.99%)</title><rect x="360.1" y="899.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="363.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (47 samples, 0.99%)</title><rect x="360.1" y="883.0" width="11.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="363.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="360.1" y="867.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="363.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$463/1047907756.apply (45 samples, 0.95%)</title><rect x="360.6" y="867.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="363.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (45 samples, 0.95%)</title><rect x="360.6" y="851.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="363.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (45 samples, 0.95%)</title><rect x="360.6" y="835.0" width="11.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="363.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$183/1392495226.apply (44 samples, 0.93%)</title><rect x="360.6" y="819.0" width="11.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="363.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (44 samples, 0.93%)</title><rect x="360.6" y="803.0" width="11.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="363.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.08%)</title><rect x="360.6" y="787.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="363.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (40 samples, 0.84%)</title><rect x="361.6" y="787.0" width="10.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (18 samples, 0.38%)</title><rect x="361.6" y="771.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="364.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (16 samples, 0.34%)</title><rect x="362.1" y="755.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="365.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (16 samples, 0.34%)</title><rect x="362.1" y="739.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="365.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$513/856070982.accept (15 samples, 0.32%)</title><rect x="362.4" y="723.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="365.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (15 samples, 0.32%)</title><rect x="362.4" y="707.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="365.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (15 samples, 0.32%)</title><rect x="362.4" y="691.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="365.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (15 samples, 0.32%)</title><rect x="362.4" y="675.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="365.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (15 samples, 0.32%)</title><rect x="362.4" y="659.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="365.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.32%)</title><rect x="362.4" y="643.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="365.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.32%)</title><rect x="362.4" y="627.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="365.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (14 samples, 0.30%)</title><rect x="362.6" y="611.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="365.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (11 samples, 0.23%)</title><rect x="363.4" y="595.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="366.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (11 samples, 0.23%)</title><rect x="363.4" y="579.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="366.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (5 samples, 0.11%)</title><rect x="364.3" y="563.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="367.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (5 samples, 0.11%)</title><rect x="364.3" y="547.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="367.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.08%)</title><rect x="364.6" y="531.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="367.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.08%)</title><rect x="364.6" y="515.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="367.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.08%)</title><rect x="364.6" y="499.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="367.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.08%)</title><rect x="364.6" y="483.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (2 samples, 0.04%)</title><rect x="365.6" y="563.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (2 samples, 0.04%)</title><rect x="365.6" y="547.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="368.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (22 samples, 0.46%)</title><rect x="366.1" y="771.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="369.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (22 samples, 0.46%)</title><rect x="366.1" y="755.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="369.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (9 samples, 0.19%)</title><rect x="366.1" y="739.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="369.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (9 samples, 0.19%)</title><rect x="366.1" y="723.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="369.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.setSubscription (9 samples, 0.19%)</title><rect x="366.1" y="707.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="369.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (9 samples, 0.19%)</title><rect x="366.1" y="691.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="369.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.19%)</title><rect x="366.1" y="675.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="369.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (13 samples, 0.27%)</title><rect x="368.3" y="739.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="371.3" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.15%)</title><rect x="368.6" y="723.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="371.6" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.15%)</title><rect x="368.6" y="707.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="371.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.15%)</title><rect x="368.6" y="691.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="371.6" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.15%)</title><rect x="368.6" y="675.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="371.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.13%)</title><rect x="368.6" y="659.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="371.6" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.08%)</title><rect x="370.3" y="723.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="373.3" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.08%)</title><rect x="370.3" y="707.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="373.3" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.08%)</title><rect x="370.3" y="691.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="373.3" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.08%)</title><rect x="370.3" y="675.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="373.3" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.08%)</title><rect x="370.3" y="659.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="373.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (5 samples, 0.11%)</title><rect x="371.8" y="899.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="374.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.08%)</title><rect x="372.1" y="883.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="375.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.08%)</title><rect x="372.1" y="867.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="375.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$499/1091379255.get (3 samples, 0.06%)</title><rect x="373.1" y="899.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="376.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.06%)</title><rect x="374.3" y="931.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="377.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.06%)</title><rect x="374.3" y="915.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="377.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.06%)</title><rect x="374.3" y="899.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="377.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.06%)</title><rect x="374.3" y="883.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="377.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.06%)</title><rect x="374.3" y="867.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="377.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2 samples, 0.04%)</title><rect x="374.6" y="851.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="377.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (7 samples, 0.15%)</title><rect x="375.0" y="963.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="378.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (4 samples, 0.08%)</title><rect x="375.8" y="947.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="378.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (2 samples, 0.04%)</title><rect x="376.3" y="931.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.06%)</title><rect x="376.8" y="963.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="379.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.04%)</title><rect x="376.8" y="947.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="379.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.04%)</title><rect x="376.8" y="931.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="379.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="376.8" y="915.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="379.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="376.8" y="899.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="379.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.04%)</title><rect x="376.8" y="883.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="379.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$531/1830331575.run (2 samples, 0.04%)</title><rect x="376.8" y="867.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="379.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (422 samples, 8.90%)</title><rect x="377.5" y="979.0" width="105.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.5" y="990.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (422 samples, 8.90%)</title><rect x="377.5" y="963.0" width="105.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="380.5" y="974.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (422 samples, 8.90%)</title><rect x="377.5" y="947.0" width="105.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="380.5" y="958.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (419 samples, 8.84%)</title><rect x="378.3" y="931.0" width="104.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="381.3" y="942.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$525/269925334.run (3 samples, 0.06%)</title><rect x="378.3" y="915.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="381.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (3 samples, 0.06%)</title><rect x="378.3" y="899.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="381.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2 samples, 0.04%)</title><rect x="378.5" y="883.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="381.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (416 samples, 8.77%)</title><rect x="379.0" y="915.0" width="103.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="382.0" y="926.0">jdk/internal..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (411 samples, 8.67%)</title><rect x="379.0" y="899.0" width="102.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.0" y="910.0">java/nio/cha..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (411 samples, 8.67%)</title><rect x="379.0" y="883.0" width="102.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="382.0" y="894.0">sun/nio/ch/S..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.06%)</title><rect x="379.3" y="867.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.06%)</title><rect x="379.3" y="851.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.06%)</title><rect x="379.3" y="835.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.06%)</title><rect x="379.3" y="819.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (407 samples, 8.58%)</title><rect x="380.0" y="867.0" width="101.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.0" y="878.0">sun/nio/ch/I..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (407 samples, 8.58%)</title><rect x="380.0" y="851.0" width="101.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="383.0" y="862.0">sun/nio/ch/I..</text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (10 samples, 0.21%)</title><rect x="380.0" y="835.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.0" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (10 samples, 0.21%)</title><rect x="380.0" y="819.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="383.0" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (10 samples, 0.21%)</title><rect x="380.0" y="803.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="383.0" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (397 samples, 8.37%)</title><rect x="382.5" y="835.0" width="98.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="385.5" y="846.0">sun/nio/ch/S..</text>
</g>
<g>
<title>jshort_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="383.3" y="819.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="386.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (391 samples, 8.25%)</title><rect x="383.8" y="819.0" width="97.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.8" y="830.0">sun/nio/ch/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (3 samples, 0.06%)</title><rect x="384.8" y="803.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="387.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (383 samples, 8.08%)</title><rect x="385.5" y="803.0" width="95.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="388.5" y="814.0">[unknown]</text>
</g>
<g>
<title>[unknown] (383 samples, 8.08%)</title><rect x="385.5" y="787.0" width="95.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="388.5" y="798.0">[unknown]</text>
</g>
<g>
<title>__GI___writev (383 samples, 8.08%)</title><rect x="385.5" y="771.0" width="95.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="388.5" y="782.0">__GI___writev</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (381 samples, 8.03%)</title><rect x="386.0" y="755.0" width="94.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="389.0" y="766.0">entry_SYSCA..</text>
</g>
<g>
<title>do_syscall_64 (380 samples, 8.01%)</title><rect x="386.2" y="739.0" width="94.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="389.2" y="750.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_writev (379 samples, 7.99%)</title><rect x="386.5" y="723.0" width="94.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="389.5" y="734.0">__x64_sys_w..</text>
</g>
<g>
<title>do_writev (379 samples, 7.99%)</title><rect x="386.5" y="707.0" width="94.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="389.5" y="718.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.04%)</title><rect x="387.0" y="691.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="390.0" y="702.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="387.0" y="675.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="390.0" y="686.0"></text>
</g>
<g>
<title>vfs_writev (375 samples, 7.91%)</title><rect x="387.5" y="691.0" width="93.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="390.5" y="702.0">vfs_writev</text>
</g>
<g>
<title>do_iter_write (372 samples, 7.84%)</title><rect x="388.0" y="675.0" width="92.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="391.0" y="686.0">do_iter_write</text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.04%)</title><rect x="389.7" y="659.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="392.7" y="670.0"></text>
</g>
<g>
<title>do_iter_readv_writev (357 samples, 7.53%)</title><rect x="390.2" y="659.0" width="88.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="393.2" y="670.0">do_iter_re..</text>
</g>
<g>
<title>sock_write_iter (355 samples, 7.49%)</title><rect x="390.7" y="643.0" width="88.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="393.7" y="654.0">sock_write..</text>
</g>
<g>
<title>sock_sendmsg (354 samples, 7.47%)</title><rect x="391.0" y="627.0" width="88.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="394.0" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.06%)</title><rect x="391.2" y="611.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="394.2" y="622.0"></text>
</g>
<g>
<title>inet6_sendmsg (342 samples, 7.21%)</title><rect x="392.0" y="611.0" width="85.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="395.0" y="622.0">inet6_send..</text>
</g>
<g>
<title>tcp_sendmsg (339 samples, 7.15%)</title><rect x="392.7" y="595.0" width="84.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="395.7" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.06%)</title><rect x="393.0" y="579.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="396.0" y="590.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="393.7" y="579.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="396.7" y="590.0"></text>
</g>
<g>
<title>sock_zerocopy_put (3 samples, 0.06%)</title><rect x="394.7" y="579.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="397.7" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (325 samples, 6.85%)</title><rect x="395.7" y="579.0" width="80.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="398.7" y="590.0">tcp_sendm..</text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.04%)</title><rect x="396.7" y="563.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="399.7" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.06%)</title><rect x="397.2" y="563.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="400.2" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.11%)</title><rect x="397.9" y="563.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="400.9" y="574.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.08%)</title><rect x="397.9" y="547.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="400.9" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (29 samples, 0.61%)</title><rect x="399.7" y="563.0" width="7.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="402.7" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (25 samples, 0.53%)</title><rect x="400.4" y="547.0" width="6.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="403.4" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (10 samples, 0.21%)</title><rect x="401.2" y="531.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="404.2" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.04%)</title><rect x="401.4" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="404.4" y="526.0"></text>
</g>
<g>
<title>memset (7 samples, 0.15%)</title><rect x="401.9" y="515.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="404.9" y="526.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.06%)</title><rect x="403.7" y="531.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="406.7" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.06%)</title><rect x="404.4" y="531.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="407.4" y="542.0"></text>
</g>
<g>
<title>memset (6 samples, 0.13%)</title><rect x="405.2" y="531.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="408.2" y="542.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.04%)</title><rect x="406.9" y="563.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="409.9" y="574.0"></text>
</g>
<g>
<title>tcp_push (269 samples, 5.67%)</title><rect x="407.4" y="563.0" width="66.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="410.4" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (269 samples, 5.67%)</title><rect x="407.4" y="547.0" width="66.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="410.4" y="558.0">__tcp_p..</text>
</g>
<g>
<title>tcp_write_xmit (266 samples, 5.61%)</title><rect x="408.1" y="531.0" width="66.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="411.1" y="542.0">tcp_wri..</text>
</g>
<g>
<title>__tcp_transmit_skb (247 samples, 5.21%)</title><rect x="409.6" y="515.0" width="61.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="412.6" y="526.0">__tcp_..</text>
</g>
<g>
<title>ip_queue_xmit (231 samples, 4.87%)</title><rect x="412.4" y="499.0" width="57.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="415.4" y="510.0">ip_que..</text>
</g>
<g>
<title>__ip_queue_xmit (231 samples, 4.87%)</title><rect x="412.4" y="483.0" width="57.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="415.4" y="494.0">__ip_q..</text>
</g>
<g>
<title>ip_local_out (223 samples, 4.70%)</title><rect x="413.6" y="467.0" width="55.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="416.6" y="478.0">ip_lo..</text>
</g>
<g>
<title>__ip_local_out (37 samples, 0.78%)</title><rect x="413.9" y="451.0" width="9.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="416.9" y="462.0"></text>
</g>
<g>
<title>ip_send_check (3 samples, 0.06%)</title><rect x="414.4" y="435.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="417.4" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (32 samples, 0.67%)</title><rect x="415.1" y="435.0" width="8.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="418.1" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.04%)</title><rect x="415.1" y="419.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="418.1" y="430.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (6 samples, 0.13%)</title><rect x="415.6" y="419.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="418.6" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.11%)</title><rect x="415.9" y="403.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="418.9" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (24 samples, 0.51%)</title><rect x="417.1" y="419.0" width="6.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="420.1" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (21 samples, 0.44%)</title><rect x="417.6" y="403.0" width="5.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="420.6" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (5 samples, 0.11%)</title><rect x="417.8" y="387.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="420.8" y="398.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (2 samples, 0.04%)</title><rect x="419.1" y="387.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="422.1" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (11 samples, 0.23%)</title><rect x="420.1" y="387.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="423.1" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (4 samples, 0.08%)</title><rect x="421.8" y="371.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="424.8" y="382.0"></text>
</g>
<g>
<title>ip_output (184 samples, 3.88%)</title><rect x="423.1" y="451.0" width="45.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="426.1" y="462.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (178 samples, 3.75%)</title><rect x="423.6" y="435.0" width="44.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="426.6" y="446.0">ip_f..</text>
</g>
<g>
<title>__ip_finish_output (178 samples, 3.75%)</title><rect x="423.6" y="419.0" width="44.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="426.6" y="430.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (177 samples, 3.73%)</title><rect x="423.8" y="403.0" width="44.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="426.8" y="414.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (158 samples, 3.33%)</title><rect x="425.1" y="387.0" width="39.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="428.1" y="398.0">__l..</text>
</g>
<g>
<title>do_softirq.part.20 (158 samples, 3.33%)</title><rect x="425.1" y="371.0" width="39.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="428.1" y="382.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (156 samples, 3.29%)</title><rect x="425.6" y="355.0" width="38.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="428.6" y="366.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (156 samples, 3.29%)</title><rect x="425.6" y="339.0" width="38.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="428.6" y="350.0">__s..</text>
</g>
<g>
<title>net_rx_action (151 samples, 3.18%)</title><rect x="426.6" y="323.0" width="37.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="429.6" y="334.0">net..</text>
</g>
<g>
<title>process_backlog (150 samples, 3.16%)</title><rect x="426.8" y="307.0" width="37.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="429.8" y="318.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (144 samples, 3.04%)</title><rect x="428.3" y="291.0" width="35.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="431.3" y="302.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (142 samples, 2.99%)</title><rect x="428.3" y="275.0" width="35.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="431.3" y="286.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.06%)</title><rect x="428.3" y="259.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="431.3" y="270.0"></text>
</g>
<g>
<title>ip_rcv (139 samples, 2.93%)</title><rect x="429.0" y="259.0" width="34.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="432.0" y="270.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.04%)</title><rect x="429.5" y="243.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="432.5" y="254.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (3 samples, 0.06%)</title><rect x="430.0" y="243.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="433.0" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (123 samples, 2.59%)</title><rect x="430.8" y="243.0" width="30.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="433.8" y="254.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (120 samples, 2.53%)</title><rect x="431.3" y="227.0" width="29.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="434.3" y="238.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (113 samples, 2.38%)</title><rect x="431.8" y="211.0" width="28.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="434.8" y="222.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (112 samples, 2.36%)</title><rect x="431.8" y="195.0" width="27.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="434.8" y="206.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (110 samples, 2.32%)</title><rect x="432.3" y="179.0" width="27.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="435.3" y="190.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (12 samples, 0.25%)</title><rect x="433.0" y="163.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="436.0" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.04%)</title><rect x="436.0" y="163.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="439.0" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.06%)</title><rect x="436.5" y="163.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="439.5" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.04%)</title><rect x="436.5" y="147.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="439.5" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (90 samples, 1.90%)</title><rect x="437.3" y="163.0" width="22.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="440.3" y="174.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (90 samples, 1.90%)</title><rect x="437.3" y="147.0" width="22.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="440.3" y="158.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.13%)</title><rect x="438.3" y="131.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="441.3" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (6 samples, 0.13%)</title><rect x="438.3" y="115.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="441.3" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.08%)</title><rect x="438.8" y="99.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="441.8" y="110.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.08%)</title><rect x="438.8" y="83.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="441.8" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.06%)</title><rect x="439.0" y="67.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="442.0" y="78.0"></text>
</g>
<g>
<title>tcp_ack (22 samples, 0.46%)</title><rect x="440.0" y="131.0" width="5.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="443.0" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (16 samples, 0.34%)</title><rect x="441.5" y="115.0" width="4.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="444.5" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.19%)</title><rect x="442.0" y="99.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="445.0" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="442.0" y="83.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="445.0" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="442.0" y="67.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="445.0" y="78.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.15%)</title><rect x="442.5" y="83.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="445.5" y="94.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.13%)</title><rect x="442.5" y="67.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="445.5" y="78.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.04%)</title><rect x="443.5" y="51.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="446.5" y="62.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.04%)</title><rect x="443.5" y="35.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="446.5" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (3 samples, 0.06%)</title><rect x="444.7" y="99.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="447.7" y="110.0"></text>
</g>
<g>
<title>tcp_data_ready (44 samples, 0.93%)</title><rect x="445.5" y="131.0" width="10.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="448.5" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (44 samples, 0.93%)</title><rect x="445.5" y="115.0" width="10.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="448.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (42 samples, 0.89%)</title><rect x="446.0" y="99.0" width="10.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="449.0" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (42 samples, 0.89%)</title><rect x="446.0" y="83.0" width="10.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="449.0" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (42 samples, 0.89%)</title><rect x="446.0" y="67.0" width="10.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="449.0" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.06%)</title><rect x="456.4" y="131.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="459.4" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.06%)</title><rect x="457.4" y="131.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="460.4" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (4 samples, 0.08%)</title><rect x="458.2" y="131.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="461.2" y="142.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.04%)</title><rect x="459.2" y="131.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="462.2" y="142.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.04%)</title><rect x="460.4" y="211.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="463.4" y="222.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (4 samples, 0.08%)</title><rect x="461.4" y="243.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="464.4" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.08%)</title><rect x="462.6" y="243.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="465.6" y="254.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat] (2 samples, 0.04%)</title><rect x="463.1" y="227.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="466.1" y="238.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.04%)</title><rect x="463.6" y="275.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="466.6" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (14 samples, 0.30%)</title><rect x="464.4" y="387.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="467.4" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (13 samples, 0.27%)</title><rect x="464.4" y="371.0" width="3.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="467.4" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.11%)</title><rect x="465.6" y="355.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="468.6" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.06%)</title><rect x="465.9" y="339.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="468.9" y="350.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.06%)</title><rect x="465.9" y="323.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="468.9" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.06%)</title><rect x="465.9" y="307.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="468.9" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.06%)</title><rect x="465.9" y="291.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="468.9" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.04%)</title><rect x="467.1" y="355.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="470.1" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.08%)</title><rect x="467.9" y="435.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="470.9" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat] (2 samples, 0.04%)</title><rect x="468.4" y="419.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="471.4" y="430.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.06%)</title><rect x="469.1" y="467.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="472.1" y="478.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.08%)</title><rect x="469.9" y="499.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="472.9" y="510.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.04%)</title><rect x="470.4" y="483.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="473.4" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.13%)</title><rect x="471.8" y="515.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="474.8" y="526.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.04%)</title><rect x="472.3" y="499.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="475.3" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.04%)</title><rect x="472.8" y="499.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="475.8" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="472.8" y="483.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="475.8" y="494.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="472.8" y="467.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="475.8" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.06%)</title><rect x="473.6" y="515.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="476.6" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.06%)</title><rect x="473.6" y="499.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="476.6" y="510.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="473.8" y="483.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="476.8" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.04%)</title><rect x="473.8" y="467.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="476.8" y="478.0"></text>
</g>
<g>
<title>tcp_send_mss (8 samples, 0.17%)</title><rect x="474.3" y="563.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="477.3" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (8 samples, 0.17%)</title><rect x="474.3" y="547.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="477.3" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.04%)</title><rect x="475.8" y="531.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="478.8" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (8 samples, 0.17%)</title><rect x="477.1" y="611.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="480.1" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (7 samples, 0.15%)</title><rect x="477.3" y="595.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="480.3" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.15%)</title><rect x="477.3" y="579.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="480.3" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.13%)</title><rect x="477.6" y="563.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="480.6" y="574.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (4 samples, 0.08%)</title><rect x="477.8" y="547.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="480.8" y="558.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.04%)</title><rect x="478.3" y="531.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="481.3" y="542.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.11%)</title><rect x="479.1" y="659.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="482.1" y="670.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.11%)</title><rect x="479.1" y="643.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="482.1" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.04%)</title><rect x="479.1" y="627.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="482.1" y="638.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.04%)</title><rect x="479.1" y="611.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="482.1" y="622.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.06%)</title><rect x="479.6" y="627.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="482.6" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (5 samples, 0.11%)</title><rect x="481.3" y="899.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="484.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.04%)</title><rect x="482.5" y="1059.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.04%)</title><rect x="482.5" y="1043.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="485.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (602 samples, 12.70%)</title><rect x="483.3" y="1155.0" width="149.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.3" y="1166.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (602 samples, 12.70%)</title><rect x="483.3" y="1139.0" width="149.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="486.3" y="1150.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (346 samples, 7.30%)</title><rect x="484.3" y="1123.0" width="86.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.3" y="1134.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$346/2096808812.run (339 samples, 7.15%)</title><rect x="486.0" y="1107.0" width="84.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="489.0" y="1118.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (338 samples, 7.13%)</title><rect x="486.3" y="1091.0" width="84.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="489.3" y="1102.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (47 samples, 0.99%)</title><rect x="487.8" y="1075.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="490.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (47 samples, 0.99%)</title><rect x="487.8" y="1059.0" width="11.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="490.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (46 samples, 0.97%)</title><rect x="488.0" y="1043.0" width="11.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (46 samples, 0.97%)</title><rect x="488.0" y="1027.0" width="11.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="491.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (46 samples, 0.97%)</title><rect x="488.0" y="1011.0" width="11.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (46 samples, 0.97%)</title><rect x="488.0" y="995.0" width="11.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (45 samples, 0.95%)</title><rect x="488.3" y="979.0" width="11.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="491.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (39 samples, 0.82%)</title><rect x="489.8" y="963.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="492.8" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="490.0" y="947.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="493.0" y="958.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.04%)</title><rect x="490.0" y="931.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="493.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (36 samples, 0.76%)</title><rect x="490.5" y="947.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="493.5" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="490.5" y="931.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="493.5" y="942.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.04%)</title><rect x="490.5" y="915.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="493.5" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (33 samples, 0.70%)</title><rect x="491.3" y="931.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="494.3" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (30 samples, 0.63%)</title><rect x="492.0" y="915.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="495.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.59%)</title><rect x="492.3" y="899.0" width="6.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="495.3" y="910.0"></text>
</g>
<g>
<title>__GI_write (28 samples, 0.59%)</title><rect x="492.3" y="883.0" width="6.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="495.3" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.57%)</title><rect x="492.5" y="867.0" width="6.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="495.5" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.57%)</title><rect x="492.5" y="851.0" width="6.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="495.5" y="862.0"></text>
</g>
<g>
<title>__x64_sys_write (25 samples, 0.53%)</title><rect x="493.0" y="835.0" width="6.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="496.0" y="846.0"></text>
</g>
<g>
<title>ksys_write (25 samples, 0.53%)</title><rect x="493.0" y="819.0" width="6.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="496.0" y="830.0"></text>
</g>
<g>
<title>vfs_write (22 samples, 0.46%)</title><rect x="493.7" y="803.0" width="5.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="496.7" y="814.0"></text>
</g>
<g>
<title>__vfs_write (19 samples, 0.40%)</title><rect x="494.0" y="787.0" width="4.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="497.0" y="798.0"></text>
</g>
<g>
<title>new_sync_write (17 samples, 0.36%)</title><rect x="494.2" y="771.0" width="4.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="497.2" y="782.0"></text>
</g>
<g>
<title>pipe_write (17 samples, 0.36%)</title><rect x="494.2" y="755.0" width="4.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="497.2" y="766.0"></text>
</g>
<g>
<title>__wake_up_sync_key (8 samples, 0.17%)</title><rect x="495.5" y="739.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="498.5" y="750.0"></text>
</g>
<g>
<title>__wake_up_common_lock (8 samples, 0.17%)</title><rect x="495.5" y="723.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="498.5" y="734.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.15%)</title><rect x="495.7" y="707.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="498.7" y="718.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.04%)</title><rect x="497.7" y="739.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="500.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.04%)</title><rect x="499.5" y="1075.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="502.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (2 samples, 0.04%)</title><rect x="499.5" y="1059.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="502.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (283 samples, 5.97%)</title><rect x="500.0" y="1075.0" width="70.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="503.0" y="1086.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (280 samples, 5.90%)</title><rect x="500.0" y="1059.0" width="69.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.0" y="1070.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (280 samples, 5.90%)</title><rect x="500.0" y="1043.0" width="69.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="503.0" y="1054.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (280 samples, 5.90%)</title><rect x="500.0" y="1027.0" width="69.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="503.0" y="1038.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (151 samples, 3.18%)</title><rect x="500.7" y="1011.0" width="37.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="503.7" y="1022.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (149 samples, 3.14%)</title><rect x="501.2" y="995.0" width="37.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.2" y="1006.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.04%)</title><rect x="501.5" y="979.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.5" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.04%)</title><rect x="501.5" y="963.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="504.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (146 samples, 3.08%)</title><rect x="502.0" y="979.0" width="36.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.0" y="990.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (141 samples, 2.97%)</title><rect x="503.2" y="963.0" width="35.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.2" y="974.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (141 samples, 2.97%)</title><rect x="503.2" y="947.0" width="35.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="506.2" y="958.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (137 samples, 2.89%)</title><rect x="503.5" y="931.0" width="34.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="506.5" y="942.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (137 samples, 2.89%)</title><rect x="503.5" y="915.0" width="34.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="506.5" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (130 samples, 2.74%)</title><rect x="503.5" y="899.0" width="32.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="506.5" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (127 samples, 2.68%)</title><rect x="504.2" y="883.0" width="31.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="507.2" y="894.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (101 samples, 2.13%)</title><rect x="504.4" y="867.0" width="25.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="507.4" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.13%)</title><rect x="505.4" y="851.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.4" y="862.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="505.7" y="835.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="508.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$468/1430929057.apply (2 samples, 0.04%)</title><rect x="506.4" y="835.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="509.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$164/1050469577.apply (67 samples, 1.41%)</title><rect x="506.9" y="851.0" width="16.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="509.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (67 samples, 1.41%)</title><rect x="506.9" y="835.0" width="16.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="509.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (66 samples, 1.39%)</title><rect x="506.9" y="819.0" width="16.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (65 samples, 1.37%)</title><rect x="507.2" y="803.0" width="16.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="510.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (65 samples, 1.37%)</title><rect x="507.2" y="787.0" width="16.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="510.2" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (21 samples, 0.44%)</title><rect x="508.4" y="771.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="511.4" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (5 samples, 0.11%)</title><rect x="508.4" y="755.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="511.4" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (5 samples, 0.11%)</title><rect x="508.4" y="739.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="511.4" y="750.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.04%)</title><rect x="509.7" y="755.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="512.7" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.04%)</title><rect x="509.7" y="739.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="512.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (2 samples, 0.04%)</title><rect x="509.7" y="723.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="512.7" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.04%)</title><rect x="509.7" y="707.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="512.7" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.04%)</title><rect x="509.7" y="691.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="512.7" y="702.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (11 samples, 0.23%)</title><rect x="510.2" y="755.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.2" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (11 samples, 0.23%)</title><rect x="510.2" y="739.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.2" y="750.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (10 samples, 0.21%)</title><rect x="510.2" y="723.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.2" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.15%)</title><rect x="510.9" y="707.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="513.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.08%)</title><rect x="510.9" y="691.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.9" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (4 samples, 0.08%)</title><rect x="510.9" y="675.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (4 samples, 0.08%)</title><rect x="510.9" y="659.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="513.9" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (2 samples, 0.04%)</title><rect x="510.9" y="643.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="513.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (2 samples, 0.04%)</title><rect x="510.9" y="627.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="513.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.accept (2 samples, 0.04%)</title><rect x="511.4" y="643.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="514.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.06%)</title><rect x="511.9" y="691.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="514.9" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (3 samples, 0.06%)</title><rect x="512.9" y="755.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.9" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.&lt;init&gt; (3 samples, 0.06%)</title><rect x="512.9" y="739.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.&lt;init&gt; (3 samples, 0.06%)</title><rect x="512.9" y="723.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.9" y="734.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.&lt;init&gt; (3 samples, 0.06%)</title><rect x="512.9" y="707.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="515.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (3 samples, 0.06%)</title><rect x="512.9" y="691.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="515.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="513.7" y="771.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="516.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (36 samples, 0.76%)</title><rect x="514.4" y="771.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="517.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$571/1082470423.run (36 samples, 0.76%)</title><rect x="514.4" y="755.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="517.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (36 samples, 0.76%)</title><rect x="514.4" y="739.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="517.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (10 samples, 0.21%)</title><rect x="515.9" y="723.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="518.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (3 samples, 0.06%)</title><rect x="516.1" y="707.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.06%)</title><rect x="516.1" y="691.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="519.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.13%)</title><rect x="516.9" y="707.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="519.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.13%)</title><rect x="516.9" y="691.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (14 samples, 0.30%)</title><rect x="518.6" y="723.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="521.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (14 samples, 0.30%)</title><rect x="518.6" y="707.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.6" y="718.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (8 samples, 0.17%)</title><rect x="519.4" y="691.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="522.4" y="702.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (8 samples, 0.17%)</title><rect x="519.4" y="675.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="522.4" y="686.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (8 samples, 0.17%)</title><rect x="519.4" y="659.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="522.4" y="670.0"></text>
</g>
<g>
<title>JVM_IHashCode (7 samples, 0.15%)</title><rect x="519.6" y="643.0" width="1.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="522.6" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (3 samples, 0.06%)</title><rect x="520.1" y="627.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="523.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.06%)</title><rect x="521.4" y="691.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="524.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.06%)</title><rect x="521.4" y="675.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="524.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (4 samples, 0.08%)</title><rect x="522.1" y="723.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="525.1" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="522.4" y="707.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="525.4" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/809762318.invoke (2 samples, 0.04%)</title><rect x="522.4" y="691.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="525.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="522.4" y="675.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="525.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.04%)</title><rect x="522.4" y="659.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="525.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$468/1430929057.apply (24 samples, 0.51%)</title><rect x="523.6" y="851.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="526.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (24 samples, 0.51%)</title><rect x="523.6" y="835.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="526.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (22 samples, 0.46%)</title><rect x="523.6" y="819.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="526.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (15 samples, 0.32%)</title><rect x="525.1" y="803.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="528.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (15 samples, 0.32%)</title><rect x="525.1" y="787.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="528.1" y="798.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (11 samples, 0.23%)</title><rect x="526.1" y="771.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="529.1" y="782.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (4 samples, 0.08%)</title><rect x="526.3" y="755.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="529.3" y="766.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (6 samples, 0.13%)</title><rect x="527.3" y="755.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.3" y="766.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (6 samples, 0.13%)</title><rect x="527.3" y="739.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.3" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="527.6" y="723.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="530.6" y="734.0"></text>
</g>
<g>
<title>JVM_IHashCode (3 samples, 0.06%)</title><rect x="528.1" y="723.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="531.1" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (2 samples, 0.04%)</title><rect x="528.3" y="707.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="531.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.04%)</title><rect x="529.1" y="819.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.04%)</title><rect x="529.1" y="803.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="532.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="529.1" y="787.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="532.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (16 samples, 0.34%)</title><rect x="529.6" y="867.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="532.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (15 samples, 0.32%)</title><rect x="529.8" y="851.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$473/1161986313.apply (15 samples, 0.32%)</title><rect x="529.8" y="835.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="532.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (15 samples, 0.32%)</title><rect x="529.8" y="819.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="532.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (12 samples, 0.25%)</title><rect x="529.8" y="803.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="532.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (12 samples, 0.25%)</title><rect x="529.8" y="787.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="532.8" y="798.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (11 samples, 0.23%)</title><rect x="530.1" y="771.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="533.1" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (7 samples, 0.15%)</title><rect x="531.1" y="755.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.1" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (4 samples, 0.08%)</title><rect x="531.1" y="739.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="534.1" y="750.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="531.1" y="723.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="534.1" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (2 samples, 0.04%)</title><rect x="531.6" y="723.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="534.6" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.06%)</title><rect x="532.1" y="739.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="535.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.06%)</title><rect x="532.8" y="803.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="535.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.04%)</title><rect x="533.1" y="787.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="536.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="533.1" y="771.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="536.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (6 samples, 0.13%)</title><rect x="533.6" y="867.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="536.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (5 samples, 0.11%)</title><rect x="533.8" y="851.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="536.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.11%)</title><rect x="533.8" y="835.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="536.8" y="846.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.04%)</title><rect x="535.3" y="867.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="538.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$543/1444925880.apply (7 samples, 0.15%)</title><rect x="535.8" y="899.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="538.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (7 samples, 0.15%)</title><rect x="535.8" y="883.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="538.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (6 samples, 0.13%)</title><rect x="536.0" y="867.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="539.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.08%)</title><rect x="536.0" y="851.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="539.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="537.0" y="851.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="540.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.06%)</title><rect x="537.5" y="931.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="540.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.06%)</title><rect x="537.5" y="915.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="540.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.06%)</title><rect x="537.5" y="899.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="540.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.06%)</title><rect x="537.5" y="883.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="540.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.06%)</title><rect x="537.5" y="867.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="540.5" y="878.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="537.5" y="851.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="540.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (117 samples, 2.47%)</title><rect x="538.3" y="1011.0" width="29.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="541.3" y="1022.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (6 samples, 0.13%)</title><rect x="540.3" y="995.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="543.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (2 samples, 0.04%)</title><rect x="541.3" y="979.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="544.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (12 samples, 0.25%)</title><rect x="541.8" y="995.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="544.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (12 samples, 0.25%)</title><rect x="541.8" y="979.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="544.8" y="990.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (12 samples, 0.25%)</title><rect x="541.8" y="963.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="544.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (9 samples, 0.19%)</title><rect x="544.8" y="995.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.15%)</title><rect x="545.3" y="979.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="548.3" y="990.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.15%)</title><rect x="545.3" y="963.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="548.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (27 samples, 0.57%)</title><rect x="547.0" y="995.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="550.0" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (27 samples, 0.57%)</title><rect x="547.0" y="979.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="550.0" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (27 samples, 0.57%)</title><rect x="547.0" y="963.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="550.0" y="974.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="547.2" y="947.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="550.2" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (24 samples, 0.51%)</title><rect x="547.7" y="947.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="550.7" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/491938346.accept (20 samples, 0.42%)</title><rect x="548.7" y="931.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="551.7" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (18 samples, 0.38%)</title><rect x="549.2" y="915.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.2" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (10 samples, 0.21%)</title><rect x="550.0" y="899.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="553.0" y="910.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="550.0" y="883.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="553.0" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/829051045.accept (4 samples, 0.08%)</title><rect x="550.5" y="883.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="553.5" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.08%)</title><rect x="550.5" y="867.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="553.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/1088872417.test (4 samples, 0.08%)</title><rect x="551.5" y="883.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="554.5" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.08%)</title><rect x="552.5" y="899.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.5" y="910.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="553.0" y="883.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="556.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="553.0" y="867.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.0" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.04%)</title><rect x="553.0" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (53 samples, 1.12%)</title><rect x="553.7" y="995.0" width="13.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="556.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (52 samples, 1.10%)</title><rect x="554.0" y="979.0" width="12.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="557.0" y="990.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.11%)</title><rect x="554.0" y="963.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.0" y="974.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.11%)</title><rect x="554.0" y="947.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="557.0" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.11%)</title><rect x="554.0" y="931.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="557.0" y="942.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (22 samples, 0.46%)</title><rect x="555.2" y="963.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="558.2" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (8 samples, 0.17%)</title><rect x="557.9" y="947.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="560.9" y="958.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="560.2" y="947.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="563.2" y="958.0"></text>
</g>
<g>
<title>java/lang/String.trim (13 samples, 0.27%)</title><rect x="560.7" y="963.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="563.7" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (13 samples, 0.27%)</title><rect x="560.7" y="947.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="563.7" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.04%)</title><rect x="563.9" y="963.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="566.9" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (10 samples, 0.21%)</title><rect x="564.4" y="963.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.4" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.11%)</title><rect x="565.4" y="947.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="568.4" y="958.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.06%)</title><rect x="565.7" y="931.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="568.7" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.06%)</title><rect x="565.7" y="915.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="568.7" y="926.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="566.9" y="995.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="569.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$390/1167335099.accept (9 samples, 0.19%)</title><rect x="567.4" y="1011.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="570.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (9 samples, 0.19%)</title><rect x="567.4" y="995.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="570.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (6 samples, 0.13%)</title><rect x="568.1" y="979.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="571.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (3 samples, 0.06%)</title><rect x="569.6" y="1059.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="572.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (3 samples, 0.06%)</title><rect x="569.6" y="1043.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="572.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.06%)</title><rect x="569.6" y="1027.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (252 samples, 5.31%)</title><rect x="570.4" y="1123.0" width="62.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="573.4" y="1134.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (252 samples, 5.31%)</title><rect x="570.4" y="1107.0" width="62.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="573.4" y="1118.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (249 samples, 5.25%)</title><rect x="571.1" y="1091.0" width="62.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="574.1" y="1102.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$346/2096808812.run (249 samples, 5.25%)</title><rect x="571.1" y="1075.0" width="62.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="574.1" y="1086.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (249 samples, 5.25%)</title><rect x="571.1" y="1059.0" width="62.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.1" y="1070.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (247 samples, 5.21%)</title><rect x="571.6" y="1043.0" width="61.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.6" y="1054.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (245 samples, 5.17%)</title><rect x="571.6" y="1027.0" width="61.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.6" y="1038.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (244 samples, 5.15%)</title><rect x="571.9" y="1011.0" width="60.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="574.9" y="1022.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$579/1110781505.run (139 samples, 2.93%)</title><rect x="571.9" y="995.0" width="34.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="574.9" y="1006.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (139 samples, 2.93%)</title><rect x="571.9" y="979.0" width="34.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="574.9" y="990.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (139 samples, 2.93%)</title><rect x="571.9" y="963.0" width="34.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.9" y="974.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (8 samples, 0.17%)</title><rect x="571.9" y="947.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="574.9" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (6 samples, 0.13%)</title><rect x="572.4" y="931.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="575.4" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.11%)</title><rect x="572.6" y="915.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="575.6" y="926.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.06%)</title><rect x="572.6" y="899.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="575.6" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (2 samples, 0.04%)</title><rect x="573.4" y="899.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.4" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (2 samples, 0.04%)</title><rect x="573.4" y="883.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.4" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.04%)</title><rect x="573.4" y="867.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="576.4" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.04%)</title><rect x="573.4" y="851.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (130 samples, 2.74%)</title><rect x="574.1" y="947.0" width="32.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="577.1" y="958.0">jd..</text>
</g>
<g>
<title>java/time/Instant.now (6 samples, 0.13%)</title><rect x="574.1" y="931.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.1" y="942.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (6 samples, 0.13%)</title><rect x="574.1" y="915.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="577.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (124 samples, 2.61%)</title><rect x="575.6" y="931.0" width="30.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="578.6" y="942.0">jd..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.08%)</title><rect x="576.4" y="915.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="579.4" y="926.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.08%)</title><rect x="576.4" y="899.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="579.4" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.08%)</title><rect x="576.4" y="883.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="579.4" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (3 samples, 0.06%)</title><rect x="576.4" y="867.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="579.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (46 samples, 0.97%)</title><rect x="577.4" y="915.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="580.4" y="926.0"></text>
</g>
<g>
<title>java/time/Instant.isAfter (2 samples, 0.04%)</title><rect x="582.8" y="899.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="585.8" y="910.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.04%)</title><rect x="583.3" y="899.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="586.3" y="910.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (2 samples, 0.04%)</title><rect x="583.3" y="883.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="586.3" y="894.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.04%)</title><rect x="583.3" y="867.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="586.3" y="878.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.04%)</title><rect x="583.3" y="851.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="586.3" y="862.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.04%)</title><rect x="583.3" y="835.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="586.3" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (14 samples, 0.30%)</title><rect x="583.8" y="899.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="586.8" y="910.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (14 samples, 0.30%)</title><rect x="583.8" y="883.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="586.8" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (14 samples, 0.30%)</title><rect x="583.8" y="867.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="586.8" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (14 samples, 0.30%)</title><rect x="583.8" y="851.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="586.8" y="862.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (6 samples, 0.13%)</title><rect x="587.3" y="899.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="590.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (4 samples, 0.08%)</title><rect x="588.8" y="915.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.8" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.08%)</title><rect x="588.8" y="899.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="591.8" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.04%)</title><rect x="588.8" y="883.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="591.8" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.04%)</title><rect x="589.3" y="883.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="592.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (2 samples, 0.04%)</title><rect x="589.3" y="867.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="592.3" y="878.0"></text>
</g>
<g>
<title>java/util/Objects.hash (2 samples, 0.04%)</title><rect x="589.3" y="851.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="592.3" y="862.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (2 samples, 0.04%)</title><rect x="589.3" y="835.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (67 samples, 1.41%)</title><rect x="589.8" y="915.0" width="16.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (67 samples, 1.41%)</title><rect x="589.8" y="899.0" width="16.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="592.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (15 samples, 0.32%)</title><rect x="589.8" y="883.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="592.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (15 samples, 0.32%)</title><rect x="589.8" y="867.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="592.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (15 samples, 0.32%)</title><rect x="589.8" y="851.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="592.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (13 samples, 0.27%)</title><rect x="589.8" y="835.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (13 samples, 0.27%)</title><rect x="589.8" y="819.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.8" y="830.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="590.0" y="803.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="593.0" y="814.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.04%)</title><rect x="590.0" y="787.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="593.0" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.04%)</title><rect x="590.0" y="771.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="593.0" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (10 samples, 0.21%)</title><rect x="590.5" y="803.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="593.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (4 samples, 0.08%)</title><rect x="592.0" y="787.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="592.0" y="771.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="595.0" y="782.0"></text>
</g>
<g>
<title>__GI_write (4 samples, 0.08%)</title><rect x="592.0" y="755.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="595.0" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.08%)</title><rect x="592.0" y="739.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="595.0" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.08%)</title><rect x="592.0" y="723.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="595.0" y="734.0"></text>
</g>
<g>
<title>__x64_sys_write (4 samples, 0.08%)</title><rect x="592.0" y="707.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="595.0" y="718.0"></text>
</g>
<g>
<title>ksys_write (4 samples, 0.08%)</title><rect x="592.0" y="691.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="595.0" y="702.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 0.06%)</title><rect x="592.3" y="675.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="595.3" y="686.0"></text>
</g>
<g>
<title>__vfs_write (2 samples, 0.04%)</title><rect x="592.3" y="659.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="595.3" y="670.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.04%)</title><rect x="592.3" y="643.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="595.3" y="654.0"></text>
</g>
<g>
<title>pipe_write (2 samples, 0.04%)</title><rect x="592.3" y="627.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="595.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (2 samples, 0.04%)</title><rect x="593.0" y="835.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (52 samples, 1.10%)</title><rect x="593.5" y="883.0" width="13.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="596.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (52 samples, 1.10%)</title><rect x="593.5" y="867.0" width="13.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="596.5" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.11%)</title><rect x="594.0" y="851.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="597.0" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (3 samples, 0.06%)</title><rect x="594.5" y="835.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="597.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (42 samples, 0.89%)</title><rect x="595.3" y="851.0" width="10.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (42 samples, 0.89%)</title><rect x="595.3" y="835.0" width="10.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="598.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (42 samples, 0.89%)</title><rect x="595.3" y="819.0" width="10.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="598.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (38 samples, 0.80%)</title><rect x="596.3" y="803.0" width="9.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="599.3" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (37 samples, 0.78%)</title><rect x="596.5" y="787.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="599.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.70%)</title><rect x="597.0" y="771.0" width="8.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="600.0" y="782.0"></text>
</g>
<g>
<title>__GI_write (33 samples, 0.70%)</title><rect x="597.0" y="755.0" width="8.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="600.0" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.70%)</title><rect x="597.0" y="739.0" width="8.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="600.0" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.70%)</title><rect x="597.0" y="723.0" width="8.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="600.0" y="734.0"></text>
</g>
<g>
<title>__x64_sys_write (32 samples, 0.67%)</title><rect x="597.3" y="707.0" width="7.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="600.3" y="718.0"></text>
</g>
<g>
<title>ksys_write (32 samples, 0.67%)</title><rect x="597.3" y="691.0" width="7.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="600.3" y="702.0"></text>
</g>
<g>
<title>__fdget_pos (4 samples, 0.08%)</title><rect x="597.3" y="675.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="600.3" y="686.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="597.5" y="659.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="600.5" y="670.0"></text>
</g>
<g>
<title>vfs_write (27 samples, 0.57%)</title><rect x="598.5" y="675.0" width="6.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="601.5" y="686.0"></text>
</g>
<g>
<title>__vfs_write (22 samples, 0.46%)</title><rect x="598.8" y="659.0" width="5.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="601.8" y="670.0"></text>
</g>
<g>
<title>new_sync_write (22 samples, 0.46%)</title><rect x="598.8" y="643.0" width="5.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="601.8" y="654.0"></text>
</g>
<g>
<title>pipe_write (17 samples, 0.36%)</title><rect x="600.0" y="627.0" width="4.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="603.0" y="638.0"></text>
</g>
<g>
<title>__wake_up_sync_key (12 samples, 0.25%)</title><rect x="600.5" y="611.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="603.5" y="622.0"></text>
</g>
<g>
<title>__wake_up_common_lock (12 samples, 0.25%)</title><rect x="600.5" y="595.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="603.5" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.25%)</title><rect x="600.5" y="579.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="603.5" y="590.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.04%)</title><rect x="603.5" y="611.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="606.5" y="622.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.06%)</title><rect x="604.5" y="659.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="607.5" y="670.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.04%)</title><rect x="604.7" y="643.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="607.7" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.04%)</title><rect x="604.7" y="627.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="607.7" y="638.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.04%)</title><rect x="604.7" y="611.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="607.7" y="622.0"></text>
</g>
<g>
<title>__GI_write (2 samples, 0.04%)</title><rect x="605.2" y="771.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="608.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (3 samples, 0.06%)</title><rect x="605.7" y="851.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="608.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$595/959043100.accept (11 samples, 0.23%)</title><rect x="606.5" y="995.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="609.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (11 samples, 0.23%)</title><rect x="606.5" y="979.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="609.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (11 samples, 0.23%)</title><rect x="606.5" y="963.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (10 samples, 0.21%)</title><rect x="606.5" y="947.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="609.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.21%)</title><rect x="606.5" y="931.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="609.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (6 samples, 0.13%)</title><rect x="607.5" y="915.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="610.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.04%)</title><rect x="607.5" y="899.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="607.5" y="883.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="610.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$606/2026424179.accept (2 samples, 0.04%)</title><rect x="607.5" y="867.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="610.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.08%)</title><rect x="608.0" y="899.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="611.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$606/2026424179.accept (3 samples, 0.06%)</title><rect x="608.2" y="883.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (2 samples, 0.04%)</title><rect x="608.5" y="867.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="611.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (2 samples, 0.04%)</title><rect x="608.5" y="851.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="611.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (94 samples, 1.98%)</title><rect x="609.2" y="995.0" width="23.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.2" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (94 samples, 1.98%)</title><rect x="609.2" y="979.0" width="23.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="612.2" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (94 samples, 1.98%)</title><rect x="609.2" y="963.0" width="23.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.2" y="974.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (94 samples, 1.98%)</title><rect x="609.2" y="947.0" width="23.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.2" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (94 samples, 1.98%)</title><rect x="609.2" y="931.0" width="23.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="612.2" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (91 samples, 1.92%)</title><rect x="610.0" y="915.0" width="22.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.0" y="926.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.04%)</title><rect x="610.0" y="899.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="613.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="610.0" y="883.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="613.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (89 samples, 1.88%)</title><rect x="610.5" y="899.0" width="22.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="613.5" y="910.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$608/614048305.accept (88 samples, 1.86%)</title><rect x="610.7" y="883.0" width="21.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="613.7" y="894.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (87 samples, 1.83%)</title><rect x="610.9" y="867.0" width="21.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="613.9" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (87 samples, 1.83%)</title><rect x="610.9" y="851.0" width="21.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="613.9" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (87 samples, 1.83%)</title><rect x="610.9" y="835.0" width="21.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="613.9" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.04%)</title><rect x="611.2" y="819.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$630/288961646.apply (2 samples, 0.04%)</title><rect x="611.2" y="803.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="614.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (2 samples, 0.04%)</title><rect x="611.2" y="787.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (82 samples, 1.73%)</title><rect x="611.9" y="819.0" width="20.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="614.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.06%)</title><rect x="612.4" y="803.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="615.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.06%)</title><rect x="612.4" y="787.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="615.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (77 samples, 1.62%)</title><rect x="613.2" y="803.0" width="19.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="616.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (72 samples, 1.52%)</title><rect x="613.2" y="787.0" width="17.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="616.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (65 samples, 1.37%)</title><rect x="613.4" y="771.0" width="16.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="616.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (65 samples, 1.37%)</title><rect x="613.4" y="755.0" width="16.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="616.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (65 samples, 1.37%)</title><rect x="613.4" y="739.0" width="16.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="616.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (65 samples, 1.37%)</title><rect x="613.4" y="723.0" width="16.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="616.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (65 samples, 1.37%)</title><rect x="613.4" y="707.0" width="16.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="616.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (56 samples, 1.18%)</title><rect x="615.7" y="691.0" width="13.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="618.7" y="702.0"></text>
</g>
<g>
<title>Unsafe_Unpark (12 samples, 0.25%)</title><rect x="616.9" y="675.0" width="3.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="619.9" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.08%)</title><rect x="616.9" y="659.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="619.9" y="670.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.04%)</title><rect x="617.9" y="659.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="620.9" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_lock (6 samples, 0.13%)</title><rect x="618.4" y="659.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="621.4" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (38 samples, 0.80%)</title><rect x="619.9" y="675.0" width="9.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="622.9" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.76%)</title><rect x="620.4" y="659.0" width="9.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="623.4" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.76%)</title><rect x="620.4" y="643.0" width="9.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="623.4" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (35 samples, 0.74%)</title><rect x="620.7" y="627.0" width="8.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="623.7" y="638.0"></text>
</g>
<g>
<title>do_futex (35 samples, 0.74%)</title><rect x="620.7" y="611.0" width="8.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="623.7" y="622.0"></text>
</g>
<g>
<title>futex_wake (34 samples, 0.72%)</title><rect x="620.7" y="595.0" width="8.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="623.7" y="606.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.04%)</title><rect x="621.6" y="579.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="624.6" y="590.0"></text>
</g>
<g>
<title>wake_up_q (28 samples, 0.59%)</title><rect x="622.1" y="579.0" width="7.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="625.1" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (28 samples, 0.59%)</title><rect x="622.1" y="563.0" width="7.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="625.1" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (28 samples, 0.59%)</title><rect x="622.1" y="547.0" width="7.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="625.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (6 samples, 0.13%)</title><rect x="629.6" y="771.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$622/2070946015.accept (3 samples, 0.06%)</title><rect x="631.1" y="787.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="634.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (2 samples, 0.04%)</title><rect x="631.4" y="771.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="634.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$174/682362481.accept (2 samples, 0.04%)</title><rect x="631.9" y="787.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="634.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (2 samples, 0.04%)</title><rect x="631.9" y="771.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="634.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (2 samples, 0.04%)</title><rect x="631.9" y="755.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="634.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$120/1156768502.run (334 samples, 7.04%)</title><rect x="633.1" y="1155.0" width="83.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="636.1" y="1166.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityPut$4 (334 samples, 7.04%)</title><rect x="633.1" y="1139.0" width="83.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="636.1" y="1150.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="633.8" y="1123.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="636.8" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="633.8" y="1107.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="636.8" y="1118.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.04%)</title><rect x="633.8" y="1091.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="636.8" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.04%)</title><rect x="633.8" y="1075.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="636.8" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.04%)</title><rect x="633.8" y="1059.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="636.8" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="633.8" y="1043.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="636.8" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.put (305 samples, 6.43%)</title><rect x="634.3" y="1123.0" width="75.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.3" y="1134.0">ru/mail/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (127 samples, 2.68%)</title><rect x="634.6" y="1107.0" width="31.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="637.6" y="1118.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (127 samples, 2.68%)</title><rect x="634.6" y="1091.0" width="31.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.6" y="1102.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.04%)</title><rect x="635.1" y="1075.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="638.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (123 samples, 2.59%)</title><rect x="635.6" y="1075.0" width="30.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.6" y="1086.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (123 samples, 2.59%)</title><rect x="635.6" y="1059.0" width="30.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="638.6" y="1070.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.06%)</title><rect x="636.6" y="1043.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="639.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.06%)</title><rect x="636.6" y="1027.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="639.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.06%)</title><rect x="636.6" y="1011.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="639.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (66 samples, 1.39%)</title><rect x="637.6" y="1043.0" width="16.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="640.6" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (6 samples, 0.13%)</title><rect x="638.3" y="1027.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="641.3" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.04%)</title><rect x="638.3" y="1011.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="641.3" y="1022.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.04%)</title><rect x="638.3" y="995.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="641.3" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.04%)</title><rect x="638.3" y="979.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="641.3" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.04%)</title><rect x="638.3" y="963.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="641.3" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.04%)</title><rect x="638.3" y="947.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="641.3" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (4 samples, 0.08%)</title><rect x="638.8" y="1011.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="641.8" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.06%)</title><rect x="639.1" y="995.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.1" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.06%)</title><rect x="639.1" y="979.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.1" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.04%)</title><rect x="639.3" y="963.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.3" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (11 samples, 0.23%)</title><rect x="639.8" y="1027.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="642.8" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (9 samples, 0.19%)</title><rect x="640.3" y="1011.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="643.3" y="1022.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (9 samples, 0.19%)</title><rect x="640.3" y="995.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="643.3" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (9 samples, 0.19%)</title><rect x="640.3" y="979.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="643.3" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/491938346.accept (8 samples, 0.17%)</title><rect x="640.6" y="963.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="643.6" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8 samples, 0.17%)</title><rect x="640.6" y="947.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="643.6" y="958.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6 samples, 0.13%)</title><rect x="640.8" y="931.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.8" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/829051045.accept (6 samples, 0.13%)</title><rect x="640.8" y="915.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.8" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (6 samples, 0.13%)</title><rect x="640.8" y="899.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$79/274722023.test (5 samples, 0.11%)</title><rect x="641.1" y="883.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="644.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (5 samples, 0.11%)</title><rect x="641.1" y="867.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/453523494.test (4 samples, 0.08%)</title><rect x="641.1" y="851.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="644.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (4 samples, 0.08%)</title><rect x="641.1" y="835.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.1" y="846.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (4 samples, 0.08%)</title><rect x="641.1" y="819.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.1" y="830.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (3 samples, 0.06%)</title><rect x="641.3" y="803.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="644.3" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (3 samples, 0.06%)</title><rect x="641.3" y="787.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="644.3" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.06%)</title><rect x="641.3" y="771.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="644.3" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.06%)</title><rect x="641.3" y="755.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (42 samples, 0.89%)</title><rect x="642.8" y="1027.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="645.8" y="1038.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (42 samples, 0.89%)</title><rect x="642.8" y="1011.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.04%)</title><rect x="643.0" y="995.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.04%)</title><rect x="643.0" y="979.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="646.0" y="990.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (38 samples, 0.80%)</title><rect x="643.8" y="995.0" width="9.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.8" y="1006.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (19 samples, 0.40%)</title><rect x="644.0" y="979.0" width="4.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="647.0" y="990.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.08%)</title><rect x="645.3" y="963.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="648.3" y="974.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.04%)</title><rect x="645.8" y="947.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="648.8" y="958.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (5 samples, 0.11%)</title><rect x="647.3" y="963.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="650.3" y="974.0"></text>
</g>
<g>
<title>call_stub (3 samples, 0.06%)</title><rect x="649.0" y="979.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="652.0" y="990.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.04%)</title><rect x="649.8" y="979.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="652.8" y="990.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (11 samples, 0.23%)</title><rect x="650.3" y="979.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="653.3" y="990.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (10 samples, 0.21%)</title><rect x="650.5" y="963.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="653.5" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.06%)</title><rect x="651.3" y="947.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="654.3" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.06%)</title><rect x="651.3" y="931.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.3" y="942.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (3 samples, 0.06%)</title><rect x="651.3" y="915.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="654.3" y="926.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (4 samples, 0.08%)</title><rect x="652.0" y="947.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="655.0" y="958.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.08%)</title><rect x="652.0" y="931.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="655.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.08%)</title><rect x="652.0" y="915.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.0" y="926.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.08%)</title><rect x="652.0" y="899.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="655.0" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.08%)</title><rect x="652.0" y="883.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="655.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (2 samples, 0.04%)</title><rect x="653.5" y="1027.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="656.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (14 samples, 0.30%)</title><rect x="654.0" y="1043.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="657.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (2 samples, 0.04%)</title><rect x="655.0" y="1027.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="658.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (7 samples, 0.15%)</title><rect x="655.7" y="1027.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="658.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (7 samples, 0.15%)</title><rect x="655.7" y="1011.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="658.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (4 samples, 0.08%)</title><rect x="656.2" y="995.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="659.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (3 samples, 0.06%)</title><rect x="656.2" y="979.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.2" y="990.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (3 samples, 0.06%)</title><rect x="656.2" y="963.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.2" y="974.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (3 samples, 0.06%)</title><rect x="656.2" y="947.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (3 samples, 0.06%)</title><rect x="656.2" y="931.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSameClassPackage (3 samples, 0.06%)</title><rect x="656.2" y="915.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="659.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (35 samples, 0.74%)</title><rect x="657.5" y="1043.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="660.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (28 samples, 0.59%)</title><rect x="657.5" y="1027.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (28 samples, 0.59%)</title><rect x="657.5" y="1011.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (27 samples, 0.57%)</title><rect x="657.7" y="995.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (5 samples, 0.11%)</title><rect x="658.0" y="979.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="661.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.11%)</title><rect x="658.0" y="963.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.11%)</title><rect x="658.0" y="947.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.11%)</title><rect x="658.0" y="931.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8 samples, 0.17%)</title><rect x="659.2" y="979.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="662.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.11%)</title><rect x="660.0" y="963.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="663.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.06%)</title><rect x="660.5" y="947.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="663.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.06%)</title><rect x="660.5" y="931.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="663.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.06%)</title><rect x="660.5" y="915.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="663.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.06%)</title><rect x="660.5" y="899.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="663.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="660.5" y="883.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="663.5" y="894.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.04%)</title><rect x="660.7" y="867.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="663.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (13 samples, 0.27%)</title><rect x="661.2" y="979.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="664.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.27%)</title><rect x="661.2" y="963.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="664.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.27%)</title><rect x="661.2" y="947.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="664.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.27%)</title><rect x="661.2" y="931.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="664.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.27%)</title><rect x="661.2" y="915.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="664.2" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.23%)</title><rect x="661.7" y="899.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="664.7" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.21%)</title><rect x="662.0" y="883.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="665.0" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.21%)</title><rect x="662.0" y="867.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="665.0" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.17%)</title><rect x="662.5" y="851.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="665.5" y="862.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.17%)</title><rect x="662.5" y="835.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="665.5" y="846.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.17%)</title><rect x="662.5" y="819.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="665.5" y="830.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.17%)</title><rect x="662.5" y="803.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="665.5" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.17%)</title><rect x="662.5" y="787.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="665.5" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.17%)</title><rect x="662.5" y="771.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="665.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (7 samples, 0.15%)</title><rect x="664.4" y="1027.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="667.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7 samples, 0.15%)</title><rect x="664.4" y="1011.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="667.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.06%)</title><rect x="665.4" y="995.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="668.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.04%)</title><rect x="665.7" y="979.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="668.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (9 samples, 0.19%)</title><rect x="666.2" y="1107.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (9 samples, 0.19%)</title><rect x="666.2" y="1091.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="669.2" y="1102.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (9 samples, 0.19%)</title><rect x="666.2" y="1075.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.2" y="1086.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (9 samples, 0.19%)</title><rect x="666.2" y="1059.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="669.2" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (7 samples, 0.15%)</title><rect x="666.7" y="1043.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.7" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/491938346.accept (7 samples, 0.15%)</title><rect x="666.7" y="1027.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="669.7" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (7 samples, 0.15%)</title><rect x="666.7" y="1011.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.7" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (7 samples, 0.15%)</title><rect x="666.7" y="995.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="669.7" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/829051045.accept (4 samples, 0.08%)</title><rect x="666.7" y="979.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.7" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.08%)</title><rect x="666.7" y="963.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.7" y="974.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.04%)</title><rect x="666.7" y="947.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="669.7" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.04%)</title><rect x="666.7" y="931.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="669.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/453523494.test (2 samples, 0.04%)</title><rect x="667.2" y="947.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="670.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.04%)</title><rect x="667.2" y="931.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="670.2" y="942.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.04%)</title><rect x="667.2" y="915.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="670.2" y="926.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.04%)</title><rect x="667.2" y="899.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.2" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.04%)</title><rect x="667.2" y="883.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="670.2" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.04%)</title><rect x="667.2" y="867.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="670.2" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.04%)</title><rect x="667.2" y="851.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="670.2" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="667.2" y="835.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="670.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="667.2" y="819.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="670.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.04%)</title><rect x="667.2" y="803.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="670.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/453523494.test (3 samples, 0.06%)</title><rect x="667.7" y="979.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="670.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (9 samples, 0.19%)</title><rect x="668.4" y="1107.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="671.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (9 samples, 0.19%)</title><rect x="668.4" y="1091.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="671.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (6 samples, 0.13%)</title><rect x="668.4" y="1075.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="671.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/453523494.test (6 samples, 0.13%)</title><rect x="668.4" y="1059.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="671.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (6 samples, 0.13%)</title><rect x="668.4" y="1043.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="671.4" y="1054.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (6 samples, 0.13%)</title><rect x="668.4" y="1027.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="671.4" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (6 samples, 0.13%)</title><rect x="668.4" y="1011.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="671.4" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (4 samples, 0.08%)</title><rect x="668.9" y="995.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="671.9" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.08%)</title><rect x="668.9" y="979.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="671.9" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.08%)</title><rect x="668.9" y="963.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="671.9" y="974.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.06%)</title><rect x="669.2" y="947.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="672.2" y="958.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.06%)</title><rect x="669.2" y="931.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="672.2" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.06%)</title><rect x="669.2" y="915.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="672.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (3 samples, 0.06%)</title><rect x="669.9" y="1075.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="672.9" y="1086.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (3 samples, 0.06%)</title><rect x="669.9" y="1059.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="672.9" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (20 samples, 0.42%)</title><rect x="670.7" y="1107.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="673.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (13 samples, 0.27%)</title><rect x="671.7" y="1091.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="674.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (13 samples, 0.27%)</title><rect x="671.7" y="1075.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.06%)</title><rect x="674.9" y="1091.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.06%)</title><rect x="674.9" y="1075.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="677.9" y="1086.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.04%)</title><rect x="675.1" y="1059.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.1" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager.put (86 samples, 1.81%)</title><rect x="675.6" y="1107.0" width="21.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="678.6" y="1118.0">r..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (86 samples, 1.81%)</title><rect x="675.6" y="1091.0" width="21.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="678.6" y="1102.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (86 samples, 1.81%)</title><rect x="675.6" y="1075.0" width="21.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="678.6" y="1086.0">j..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.04%)</title><rect x="676.6" y="1059.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="679.6" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.04%)</title><rect x="676.6" y="1043.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="679.6" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.04%)</title><rect x="676.6" y="1027.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="679.6" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="676.6" y="1011.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="679.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (79 samples, 1.67%)</title><rect x="677.1" y="1059.0" width="19.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (79 samples, 1.67%)</title><rect x="677.1" y="1043.0" width="19.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (79 samples, 1.67%)</title><rect x="677.1" y="1027.0" width="19.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (79 samples, 1.67%)</title><rect x="677.1" y="1011.0" width="19.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="680.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (79 samples, 1.67%)</title><rect x="677.1" y="995.0" width="19.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (70 samples, 1.48%)</title><rect x="679.4" y="979.0" width="17.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.4" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (12 samples, 0.25%)</title><rect x="679.4" y="963.0" width="3.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="682.4" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.04%)</title><rect x="680.4" y="947.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="683.4" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.11%)</title><rect x="680.9" y="947.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="683.9" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (57 samples, 1.20%)</title><rect x="682.4" y="963.0" width="14.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="685.4" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (53 samples, 1.12%)</title><rect x="683.4" y="947.0" width="13.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="686.4" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (53 samples, 1.12%)</title><rect x="683.4" y="931.0" width="13.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="686.4" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (47 samples, 0.99%)</title><rect x="684.6" y="915.0" width="11.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="687.6" y="926.0"></text>
</g>
<g>
<title>do_futex (47 samples, 0.99%)</title><rect x="684.6" y="899.0" width="11.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="687.6" y="910.0"></text>
</g>
<g>
<title>futex_wake (47 samples, 0.99%)</title><rect x="684.6" y="883.0" width="11.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="687.6" y="894.0"></text>
</g>
<g>
<title>wake_up_q (44 samples, 0.93%)</title><rect x="685.4" y="867.0" width="10.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="688.4" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (44 samples, 0.93%)</title><rect x="685.4" y="851.0" width="10.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="688.4" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (44 samples, 0.93%)</title><rect x="685.4" y="835.0" width="10.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="688.4" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.requestForReplicaBuilder (43 samples, 0.91%)</title><rect x="697.0" y="1107.0" width="10.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.0" y="1118.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (41 samples, 0.86%)</title><rect x="697.0" y="1091.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.0" y="1102.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (32 samples, 0.67%)</title><rect x="698.3" y="1075.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="701.3" y="1086.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (32 samples, 0.67%)</title><rect x="698.3" y="1059.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.3" y="1070.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (8 samples, 0.17%)</title><rect x="698.3" y="1043.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="701.3" y="1054.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (8 samples, 0.17%)</title><rect x="698.3" y="1027.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.3" y="1038.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (24 samples, 0.51%)</title><rect x="700.3" y="1043.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="703.3" y="1054.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (8 samples, 0.17%)</title><rect x="701.8" y="1027.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="704.8" y="1038.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (4 samples, 0.08%)</title><rect x="701.8" y="1011.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="704.8" y="1022.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.06%)</title><rect x="702.0" y="995.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="705.0" y="1006.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (4 samples, 0.08%)</title><rect x="702.8" y="1011.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="705.8" y="1022.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scanIPv4Address (4 samples, 0.08%)</title><rect x="702.8" y="995.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.8" y="1006.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.08%)</title><rect x="702.8" y="979.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.8" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (10 samples, 0.21%)</title><rect x="703.8" y="1027.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="706.8" y="1038.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="706.5" y="1075.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="709.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (2 samples, 0.04%)</title><rect x="707.3" y="1091.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="710.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (2 samples, 0.04%)</title><rect x="707.3" y="1075.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="710.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.04%)</title><rect x="707.3" y="1059.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="710.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.04%)</title><rect x="707.3" y="1043.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="710.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.04%)</title><rect x="707.3" y="1027.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.3" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/FutureAnalyzer.atLeastAsync (4 samples, 0.08%)</title><rect x="707.7" y="1107.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.7" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.08%)</title><rect x="707.7" y="1091.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="710.7" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/FutureAnalyzer$$Lambda$203/1336948344.accept (4 samples, 0.08%)</title><rect x="707.7" y="1075.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="710.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/FutureAnalyzer.lambda$atLeastAsync$1 (4 samples, 0.08%)</title><rect x="707.7" y="1059.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="710.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.08%)</title><rect x="707.7" y="1043.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="710.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.06%)</title><rect x="708.0" y="1027.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="711.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.06%)</title><rect x="708.0" y="1011.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="711.0" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primariesFor (6 samples, 0.13%)</title><rect x="708.7" y="1107.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="711.7" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primariesFor (6 samples, 0.13%)</title><rect x="708.7" y="1091.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="711.7" y="1102.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2 samples, 0.04%)</title><rect x="709.2" y="1075.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="712.2" y="1086.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2 samples, 0.04%)</title><rect x="709.2" y="1059.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="712.2" y="1070.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2 samples, 0.04%)</title><rect x="709.2" y="1043.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="712.2" y="1054.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpComparable (2 samples, 0.04%)</title><rect x="709.2" y="1027.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="712.2" y="1038.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.04%)</title><rect x="709.7" y="1075.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="712.7" y="1086.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownComparable (2 samples, 0.04%)</title><rect x="709.7" y="1059.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="712.7" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.respond (8 samples, 0.17%)</title><rect x="710.2" y="1123.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="713.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (8 samples, 0.17%)</title><rect x="710.2" y="1107.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="713.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (7 samples, 0.15%)</title><rect x="710.5" y="1091.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="713.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.11%)</title><rect x="710.5" y="1075.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="713.5" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$230/1143606200.accept (3 samples, 0.06%)</title><rect x="711.0" y="1059.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="714.0" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$respond$2 (3 samples, 0.06%)</title><rect x="711.0" y="1043.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="714.0" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.trySendAnswer (3 samples, 0.06%)</title><rect x="711.0" y="1027.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.0" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.06%)</title><rect x="711.0" y="1011.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="714.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.06%)</title><rect x="711.0" y="995.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="714.0" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.06%)</title><rect x="711.0" y="979.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="714.0" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.06%)</title><rect x="711.0" y="963.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="714.0" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.06%)</title><rect x="711.0" y="947.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="714.0" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.06%)</title><rect x="711.0" y="931.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.0" y="942.0"></text>
</g>
<g>
<title>__libc_send (3 samples, 0.06%)</title><rect x="711.0" y="915.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="714.0" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="711.0" y="899.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="714.0" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.06%)</title><rect x="711.0" y="883.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="714.0" y="894.0"></text>
</g>
<g>
<title>__x64_sys_sendto (3 samples, 0.06%)</title><rect x="711.0" y="867.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="714.0" y="878.0"></text>
</g>
<g>
<title>__sys_sendto (3 samples, 0.06%)</title><rect x="711.0" y="851.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="714.0" y="862.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.04%)</title><rect x="711.0" y="835.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="714.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.04%)</title><rect x="711.7" y="1075.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.04%)</title><rect x="711.7" y="1059.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="714.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.04%)</title><rect x="711.7" y="1043.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="714.7" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$230/1143606200.accept (2 samples, 0.04%)</title><rect x="711.7" y="1027.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="714.7" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$respond$2 (2 samples, 0.04%)</title><rect x="711.7" y="1011.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.7" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.trySendAnswer (2 samples, 0.04%)</title><rect x="711.7" y="995.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.7" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.04%)</title><rect x="711.7" y="979.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.7" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.04%)</title><rect x="711.7" y="963.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="714.7" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.04%)</title><rect x="711.7" y="947.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="714.7" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.04%)</title><rect x="711.7" y="931.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="714.7" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValidatedParameters.validateParameters (16 samples, 0.34%)</title><rect x="712.2" y="1123.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="715.2" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.08%)</title><rect x="712.7" y="1107.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="715.7" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.08%)</title><rect x="712.7" y="1091.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="715.7" y="1102.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.04%)</title><rect x="713.0" y="1075.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="716.0" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValidatedParameters.unpackReplicasParameter (10 samples, 0.21%)</title><rect x="713.7" y="1107.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="716.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="713.7" y="1091.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="713.7" y="1075.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="716.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="713.7" y="1059.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="716.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (8 samples, 0.17%)</title><rect x="714.2" y="1091.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="717.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (8 samples, 0.17%)</title><rect x="714.2" y="1075.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="717.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.lastIndexOf (8 samples, 0.17%)</title><rect x="714.2" y="1059.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="717.2" y="1070.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="715.7" y="1043.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="718.7" y="1054.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (15 samples, 0.32%)</title><rect x="716.2" y="1155.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="719.2" y="1166.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (15 samples, 0.32%)</title><rect x="716.2" y="1139.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="719.2" y="1150.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$678/661083857.run (15 samples, 0.32%)</title><rect x="716.2" y="1123.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="719.2" y="1134.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (15 samples, 0.32%)</title><rect x="716.2" y="1107.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="719.2" y="1118.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (15 samples, 0.32%)</title><rect x="716.2" y="1091.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="719.2" y="1102.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (15 samples, 0.32%)</title><rect x="716.2" y="1075.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="719.2" y="1086.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (13 samples, 0.27%)</title><rect x="716.5" y="1059.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="719.5" y="1070.0"></text>
</g>
<g>
<title>java/rmi/server/ObjID.read (2 samples, 0.04%)</title><rect x="716.5" y="1043.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.5" y="1054.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readLong (2 samples, 0.04%)</title><rect x="716.5" y="1027.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="719.5" y="1038.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readLong (2 samples, 0.04%)</title><rect x="716.5" y="1011.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="719.5" y="1022.0"></text>
</g>
<g>
<title>java/io/DataInputStream.readLong (2 samples, 0.04%)</title><rect x="716.5" y="995.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="719.5" y="1006.0"></text>
</g>
<g>
<title>java/io/DataInputStream.readFully (2 samples, 0.04%)</title><rect x="716.5" y="979.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="719.5" y="990.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.read (2 samples, 0.04%)</title><rect x="716.5" y="963.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="719.5" y="974.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.read (2 samples, 0.04%)</title><rect x="716.5" y="947.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="719.5" y="958.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.refill (2 samples, 0.04%)</title><rect x="716.5" y="931.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="719.5" y="942.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readBlockHeader (2 samples, 0.04%)</title><rect x="716.5" y="915.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="719.5" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (10 samples, 0.21%)</title><rect x="717.0" y="1043.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="720.0" y="1054.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (10 samples, 0.21%)</title><rect x="717.0" y="1027.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="720.0" y="1038.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (10 samples, 0.21%)</title><rect x="717.0" y="1011.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="720.0" y="1022.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (10 samples, 0.21%)</title><rect x="717.0" y="995.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.13%)</title><rect x="717.0" y="979.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="720.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.13%)</title><rect x="717.0" y="963.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="720.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (6 samples, 0.13%)</title><rect x="717.0" y="947.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="720.0" y="958.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (6 samples, 0.13%)</title><rect x="717.0" y="931.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="720.0" y="942.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (6 samples, 0.13%)</title><rect x="717.0" y="915.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="720.0" y="926.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (6 samples, 0.13%)</title><rect x="717.0" y="899.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="720.0" y="910.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (6 samples, 0.13%)</title><rect x="717.0" y="883.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="720.0" y="894.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (6 samples, 0.13%)</title><rect x="717.0" y="867.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="720.0" y="878.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (6 samples, 0.13%)</title><rect x="717.0" y="851.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="720.0" y="862.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (6 samples, 0.13%)</title><rect x="717.0" y="835.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="720.0" y="846.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (6 samples, 0.13%)</title><rect x="717.0" y="819.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="720.0" y="830.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (6 samples, 0.13%)</title><rect x="717.0" y="803.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="720.0" y="814.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (6 samples, 0.13%)</title><rect x="717.0" y="787.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="720.0" y="798.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (6 samples, 0.13%)</title><rect x="717.0" y="771.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="720.0" y="782.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (6 samples, 0.13%)</title><rect x="717.0" y="755.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.0" y="766.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (6 samples, 0.13%)</title><rect x="717.0" y="739.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="720.0" y="750.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (6 samples, 0.13%)</title><rect x="717.0" y="723.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="720.0" y="734.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (5 samples, 0.11%)</title><rect x="717.0" y="707.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="720.0" y="718.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (5 samples, 0.11%)</title><rect x="717.0" y="691.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="720.0" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (5 samples, 0.11%)</title><rect x="717.0" y="675.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="720.0" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (5 samples, 0.11%)</title><rect x="717.0" y="659.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="720.0" y="670.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (3 samples, 0.06%)</title><rect x="717.0" y="643.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.0" y="654.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.04%)</title><rect x="717.0" y="627.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.0" y="638.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.04%)</title><rect x="717.7" y="643.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="720.7" y="654.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.04%)</title><rect x="717.7" y="627.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="720.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.04%)</title><rect x="717.7" y="611.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="720.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (2 samples, 0.04%)</title><rect x="717.7" y="595.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="720.7" y="606.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (2 samples, 0.04%)</title><rect x="717.7" y="579.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="720.7" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.04%)</title><rect x="717.7" y="563.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.04%)</title><rect x="717.7" y="547.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="720.7" y="558.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (2 samples, 0.04%)</title><rect x="718.4" y="979.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="721.4" y="990.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.04%)</title><rect x="718.4" y="963.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="721.4" y="974.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.04%)</title><rect x="718.4" y="947.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="721.4" y="958.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (2 samples, 0.04%)</title><rect x="718.4" y="931.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="721.4" y="942.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.04%)</title><rect x="718.4" y="915.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="721.4" y="926.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.04%)</title><rect x="718.4" y="899.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="721.4" y="910.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.04%)</title><rect x="718.4" y="883.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="721.4" y="894.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.04%)</title><rect x="718.4" y="867.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="721.4" y="878.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.04%)</title><rect x="718.4" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="721.4" y="862.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.04%)</title><rect x="718.4" y="835.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="721.4" y="846.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.04%)</title><rect x="718.4" y="819.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="721.4" y="830.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (2 samples, 0.04%)</title><rect x="718.9" y="979.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="721.9" y="990.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.04%)</title><rect x="718.9" y="963.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="721.9" y="974.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.04%)</title><rect x="718.9" y="947.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="721.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (733 samples, 15.46%)</title><rect x="719.9" y="1203.0" width="182.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="722.9" y="1214.0">java/util/concurrent/For..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (733 samples, 15.46%)</title><rect x="719.9" y="1187.0" width="182.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.9" y="1198.0">java/util/concurrent/For..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.04%)</title><rect x="723.2" y="1171.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="726.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (596 samples, 12.57%)</title><rect x="723.7" y="1171.0" width="148.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="726.7" y="1182.0">java/util/concurren..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (2 samples, 0.04%)</title><rect x="725.2" y="1155.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="728.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAcquire (2 samples, 0.04%)</title><rect x="725.2" y="1139.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="728.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (574 samples, 12.10%)</title><rect x="725.7" y="1155.0" width="142.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="728.7" y="1166.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (5 samples, 0.11%)</title><rect x="737.4" y="1139.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="740.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (2 samples, 0.04%)</title><rect x="738.6" y="1139.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="741.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (520 samples, 10.97%)</title><rect x="739.1" y="1139.0" width="129.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="742.1" y="1150.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (381 samples, 8.03%)</title><rect x="741.1" y="1123.0" width="94.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="744.1" y="1134.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (378 samples, 7.97%)</title><rect x="741.8" y="1107.0" width="94.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="744.8" y="1118.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (240 samples, 5.06%)</title><rect x="741.8" y="1091.0" width="59.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="744.8" y="1102.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (233 samples, 4.91%)</title><rect x="743.1" y="1075.0" width="58.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="746.1" y="1086.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.06%)</title><rect x="743.1" y="1059.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="746.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.06%)</title><rect x="743.1" y="1043.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="746.1" y="1054.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.06%)</title><rect x="743.1" y="1027.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="746.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (230 samples, 4.85%)</title><rect x="743.8" y="1059.0" width="57.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.8" y="1070.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.06%)</title><rect x="743.8" y="1043.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="746.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.06%)</title><rect x="743.8" y="1027.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="746.8" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$230/1143606200.accept (227 samples, 4.79%)</title><rect x="744.6" y="1043.0" width="56.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="747.6" y="1054.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$respond$2 (226 samples, 4.77%)</title><rect x="744.8" y="1027.0" width="56.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="747.8" y="1038.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.trySendAnswer (226 samples, 4.77%)</title><rect x="744.8" y="1011.0" width="56.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.8" y="1022.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (226 samples, 4.77%)</title><rect x="744.8" y="995.0" width="56.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="747.8" y="1006.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.06%)</title><rect x="744.8" y="979.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="747.8" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (216 samples, 4.56%)</title><rect x="745.6" y="979.0" width="53.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="748.6" y="990.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.25%)</title><rect x="745.6" y="963.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="748.6" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.06%)</title><rect x="747.8" y="947.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="750.8" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.06%)</title><rect x="747.8" y="931.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="750.8" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.06%)</title><rect x="747.8" y="915.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.8" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.06%)</title><rect x="747.8" y="899.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="750.8" y="910.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.06%)</title><rect x="747.8" y="883.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.8" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (204 samples, 4.30%)</title><rect x="748.6" y="963.0" width="50.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="751.6" y="974.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (204 samples, 4.30%)</title><rect x="748.6" y="947.0" width="50.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="751.6" y="958.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (201 samples, 4.24%)</title><rect x="749.3" y="931.0" width="50.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="752.3" y="942.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (200 samples, 4.22%)</title><rect x="749.6" y="915.0" width="49.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="752.6" y="926.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (12 samples, 0.25%)</title><rect x="750.1" y="899.0" width="2.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="753.1" y="910.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.13%)</title><rect x="751.5" y="883.0" width="1.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="754.5" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="751.5" y="867.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="754.5" y="878.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.08%)</title><rect x="752.0" y="867.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="755.0" y="878.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.04%)</title><rect x="752.5" y="851.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="755.5" y="862.0"></text>
</g>
<g>
<title>__libc_send (184 samples, 3.88%)</title><rect x="753.0" y="899.0" width="45.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="756.0" y="910.0">__li..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (181 samples, 3.82%)</title><rect x="753.8" y="883.0" width="45.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="756.8" y="894.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (181 samples, 3.82%)</title><rect x="753.8" y="867.0" width="45.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="756.8" y="878.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (179 samples, 3.77%)</title><rect x="754.3" y="851.0" width="44.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="757.3" y="862.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (179 samples, 3.77%)</title><rect x="754.3" y="835.0" width="44.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="757.3" y="846.0">__sy..</text>
</g>
<g>
<title>fput (3 samples, 0.06%)</title><rect x="754.3" y="819.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="757.3" y="830.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.06%)</title><rect x="754.3" y="803.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="757.3" y="814.0"></text>
</g>
<g>
<title>sock_sendmsg (173 samples, 3.65%)</title><rect x="755.0" y="819.0" width="43.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="758.0" y="830.0">sock..</text>
</g>
<g>
<title>inet6_sendmsg (165 samples, 3.48%)</title><rect x="755.3" y="803.0" width="41.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="758.3" y="814.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (165 samples, 3.48%)</title><rect x="755.3" y="787.0" width="41.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="758.3" y="798.0">tcp..</text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.06%)</title><rect x="755.5" y="771.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="758.5" y="782.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="755.5" y="755.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="758.5" y="766.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.04%)</title><rect x="755.5" y="739.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="758.5" y="750.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.04%)</title><rect x="756.8" y="771.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="759.8" y="782.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.04%)</title><rect x="757.3" y="771.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="760.3" y="782.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (153 samples, 3.23%)</title><rect x="758.0" y="771.0" width="38.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="761.0" y="782.0">tcp..</text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.04%)</title><rect x="759.5" y="755.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="762.5" y="766.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.06%)</title><rect x="760.0" y="755.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="763.0" y="766.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.04%)</title><rect x="760.0" y="739.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="763.0" y="750.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.04%)</title><rect x="761.0" y="755.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="764.0" y="766.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.04%)</title><rect x="761.0" y="739.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="764.0" y="750.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (15 samples, 0.32%)</title><rect x="761.5" y="755.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="764.5" y="766.0"></text>
</g>
<g>
<title>__alloc_skb (14 samples, 0.30%)</title><rect x="761.5" y="739.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="764.5" y="750.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (6 samples, 0.13%)</title><rect x="762.0" y="723.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="765.0" y="734.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.08%)</title><rect x="762.0" y="707.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="765.0" y="718.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.06%)</title><rect x="762.2" y="691.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="765.2" y="702.0"></text>
</g>
<g>
<title>memset (2 samples, 0.04%)</title><rect x="763.0" y="707.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="766.0" y="718.0"></text>
</g>
<g>
<title>memset (4 samples, 0.08%)</title><rect x="763.7" y="723.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="766.7" y="734.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.04%)</title><rect x="765.2" y="755.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="768.2" y="766.0"></text>
</g>
<g>
<title>tcp_push (117 samples, 2.47%)</title><rect x="765.7" y="755.0" width="29.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="768.7" y="766.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (117 samples, 2.47%)</title><rect x="765.7" y="739.0" width="29.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="768.7" y="750.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (115 samples, 2.43%)</title><rect x="766.2" y="723.0" width="28.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="769.2" y="734.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (107 samples, 2.26%)</title><rect x="766.5" y="707.0" width="26.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="769.5" y="718.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (102 samples, 2.15%)</title><rect x="767.5" y="691.0" width="25.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="770.5" y="702.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (102 samples, 2.15%)</title><rect x="767.5" y="675.0" width="25.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="770.5" y="686.0">_..</text>
</g>
<g>
<title>ip_local_out (101 samples, 2.13%)</title><rect x="767.5" y="659.0" width="25.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="770.5" y="670.0">i..</text>
</g>
<g>
<title>__ip_local_out (19 samples, 0.40%)</title><rect x="768.0" y="643.0" width="4.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="771.0" y="654.0"></text>
</g>
<g>
<title>nf_hook_slow (18 samples, 0.38%)</title><rect x="768.2" y="627.0" width="4.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="771.2" y="638.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.04%)</title><rect x="768.2" y="611.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="771.2" y="622.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.04%)</title><rect x="768.7" y="611.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="771.7" y="622.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.04%)</title><rect x="768.7" y="595.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="771.7" y="606.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (13 samples, 0.27%)</title><rect x="769.2" y="611.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="772.2" y="622.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (12 samples, 0.25%)</title><rect x="769.5" y="595.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="772.5" y="606.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (5 samples, 0.11%)</title><rect x="769.5" y="579.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="772.5" y="590.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (5 samples, 0.11%)</title><rect x="771.2" y="579.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="774.2" y="590.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (3 samples, 0.06%)</title><rect x="771.7" y="563.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="774.7" y="574.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.04%)</title><rect x="771.9" y="547.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="774.9" y="558.0"></text>
</g>
<g>
<title>ip_output (77 samples, 1.62%)</title><rect x="772.7" y="643.0" width="19.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="775.7" y="654.0"></text>
</g>
<g>
<title>ip_finish_output (75 samples, 1.58%)</title><rect x="772.9" y="627.0" width="18.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="775.9" y="638.0"></text>
</g>
<g>
<title>__ip_finish_output (70 samples, 1.48%)</title><rect x="773.7" y="611.0" width="17.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="776.7" y="622.0"></text>
</g>
<g>
<title>ip_finish_output2 (69 samples, 1.46%)</title><rect x="773.9" y="595.0" width="17.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="776.9" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (59 samples, 1.24%)</title><rect x="774.7" y="579.0" width="14.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="777.7" y="590.0"></text>
</g>
<g>
<title>do_softirq.part.20 (59 samples, 1.24%)</title><rect x="774.7" y="563.0" width="14.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="777.7" y="574.0"></text>
</g>
<g>
<title>do_softirq_own_stack (59 samples, 1.24%)</title><rect x="774.7" y="547.0" width="14.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="777.7" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (59 samples, 1.24%)</title><rect x="774.7" y="531.0" width="14.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="777.7" y="542.0"></text>
</g>
<g>
<title>net_rx_action (57 samples, 1.20%)</title><rect x="775.2" y="515.0" width="14.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="778.2" y="526.0"></text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.04%)</title><rect x="775.2" y="499.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="778.2" y="510.0"></text>
</g>
<g>
<title>process_backlog (54 samples, 1.14%)</title><rect x="775.9" y="499.0" width="13.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="778.9" y="510.0"></text>
</g>
<g>
<title>__netif_receive_skb (52 samples, 1.10%)</title><rect x="776.4" y="483.0" width="13.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="779.4" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.04%)</title><rect x="776.4" y="467.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="779.4" y="478.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (50 samples, 1.05%)</title><rect x="776.9" y="467.0" width="12.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="779.9" y="478.0"></text>
</g>
<g>
<title>ip_rcv (48 samples, 1.01%)</title><rect x="777.4" y="451.0" width="12.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="780.4" y="462.0"></text>
</g>
<g>
<title>ip_rcv_finish (45 samples, 0.95%)</title><rect x="777.7" y="435.0" width="11.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="780.7" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver (44 samples, 0.93%)</title><rect x="777.7" y="419.0" width="10.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="780.7" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (42 samples, 0.89%)</title><rect x="777.9" y="403.0" width="10.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="780.9" y="414.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (42 samples, 0.89%)</title><rect x="777.9" y="387.0" width="10.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="780.9" y="398.0"></text>
</g>
<g>
<title>tcp_v4_rcv (40 samples, 0.84%)</title><rect x="778.4" y="371.0" width="10.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="781.4" y="382.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.08%)</title><rect x="779.7" y="355.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="782.7" y="366.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.06%)</title><rect x="780.7" y="355.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="783.7" y="366.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (28 samples, 0.59%)</title><rect x="781.4" y="355.0" width="7.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="784.4" y="366.0"></text>
</g>
<g>
<title>tcp_rcv_established (27 samples, 0.57%)</title><rect x="781.7" y="339.0" width="6.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="784.7" y="350.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (9 samples, 0.19%)</title><rect x="781.9" y="323.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="784.9" y="334.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (8 samples, 0.17%)</title><rect x="782.2" y="307.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="785.2" y="318.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.17%)</title><rect x="782.2" y="291.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="785.2" y="302.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.17%)</title><rect x="782.2" y="275.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="785.2" y="286.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.13%)</title><rect x="782.2" y="259.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="785.2" y="270.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.04%)</title><rect x="783.6" y="259.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="786.6" y="270.0"></text>
</g>
<g>
<title>tcp_data_ready (15 samples, 0.32%)</title><rect x="784.1" y="323.0" width="3.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="787.1" y="334.0"></text>
</g>
<g>
<title>sock_def_readable (15 samples, 0.32%)</title><rect x="784.1" y="307.0" width="3.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="787.1" y="318.0"></text>
</g>
<g>
<title>__wake_up_sync_key (15 samples, 0.32%)</title><rect x="784.1" y="291.0" width="3.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="787.1" y="302.0"></text>
</g>
<g>
<title>__wake_up_common_lock (15 samples, 0.32%)</title><rect x="784.1" y="275.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="787.1" y="286.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.32%)</title><rect x="784.1" y="259.0" width="3.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="787.1" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (7 samples, 0.15%)</title><rect x="789.4" y="579.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="792.4" y="590.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.15%)</title><rect x="789.4" y="563.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="792.4" y="574.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.13%)</title><rect x="789.6" y="547.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="792.6" y="558.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.11%)</title><rect x="789.9" y="531.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="792.9" y="542.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.04%)</title><rect x="789.9" y="515.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="792.9" y="526.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.04%)</title><rect x="790.4" y="515.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="793.4" y="526.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.04%)</title><rect x="790.4" y="499.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="793.4" y="510.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.04%)</title><rect x="790.4" y="483.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="793.4" y="494.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.04%)</title><rect x="791.1" y="611.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="794.1" y="622.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.06%)</title><rect x="791.9" y="643.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="794.9" y="654.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.08%)</title><rect x="793.3" y="707.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="796.3" y="718.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.06%)</title><rect x="793.6" y="691.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="796.6" y="702.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.06%)</title><rect x="793.6" y="675.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="796.6" y="686.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.06%)</title><rect x="793.6" y="659.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="796.6" y="670.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.04%)</title><rect x="794.3" y="707.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="797.3" y="718.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.08%)</title><rect x="794.8" y="755.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="797.8" y="766.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.08%)</title><rect x="794.8" y="739.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="797.8" y="750.0"></text>
</g>
<g>
<title>security_socket_sendmsg (7 samples, 0.15%)</title><rect x="796.3" y="803.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="799.3" y="814.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (7 samples, 0.15%)</title><rect x="796.3" y="787.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="799.3" y="798.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.15%)</title><rect x="796.3" y="771.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="799.3" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.15%)</title><rect x="796.3" y="755.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="799.3" y="766.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (7 samples, 0.15%)</title><rect x="796.3" y="739.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="799.3" y="750.0"></text>
</g>
<g>
<title>aa_label_next_confined (3 samples, 0.06%)</title><rect x="797.1" y="723.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="800.1" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.06%)</title><rect x="798.1" y="819.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="801.1" y="830.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.06%)</title><rect x="798.1" y="803.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="801.1" y="814.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="798.1" y="787.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="801.1" y="798.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.06%)</title><rect x="798.1" y="771.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="801.1" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="798.8" y="899.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="801.8" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.15%)</title><rect x="799.3" y="979.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="802.3" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="800.3" y="963.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="803.3" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="800.3" y="947.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="803.3" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager$$Lambda$122/181809431.get (2 samples, 0.04%)</title><rect x="801.1" y="1075.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="804.1" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager$$Lambda$122/181809431.get (138 samples, 2.91%)</title><rect x="801.6" y="1091.0" width="34.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="804.6" y="1102.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager.lambda$put$0 (138 samples, 2.91%)</title><rect x="801.6" y="1075.0" width="34.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="804.6" y="1086.0">ru..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="801.6" y="1059.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="804.6" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (136 samples, 2.87%)</title><rect x="802.1" y="1059.0" width="33.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="805.1" y="1070.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="802.1" y="1043.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="805.1" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.04%)</title><rect x="802.1" y="1027.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="805.1" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.04%)</title><rect x="802.1" y="1011.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="805.1" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.04%)</title><rect x="802.1" y="995.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="805.1" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="802.1" y="979.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="805.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.08%)</title><rect x="802.6" y="1043.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="805.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.08%)</title><rect x="802.6" y="1027.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="805.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.08%)</title><rect x="802.6" y="1011.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="805.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.06%)</title><rect x="802.8" y="995.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="805.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.04%)</title><rect x="802.8" y="979.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.8" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.upsert (130 samples, 2.74%)</title><rect x="803.6" y="1043.0" width="32.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="806.6" y="1054.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (130 samples, 2.74%)</title><rect x="803.6" y="1027.0" width="32.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="806.6" y="1038.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (113 samples, 2.38%)</title><rect x="806.5" y="1011.0" width="28.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.5" y="1022.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (12 samples, 0.25%)</title><rect x="812.3" y="995.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="815.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.04%)</title><rect x="812.5" y="979.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="815.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.04%)</title><rect x="812.5" y="963.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="815.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.04%)</title><rect x="812.5" y="947.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="815.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (9 samples, 0.19%)</title><rect x="813.0" y="979.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="816.0" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.08%)</title><rect x="814.3" y="963.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="817.3" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.08%)</title><rect x="814.3" y="947.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="817.3" y="958.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.08%)</title><rect x="814.3" y="931.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="817.3" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.04%)</title><rect x="814.5" y="915.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="817.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (78 samples, 1.64%)</title><rect x="815.2" y="995.0" width="19.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="818.2" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (40 samples, 0.84%)</title><rect x="824.7" y="979.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="827.7" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (35 samples, 0.74%)</title><rect x="825.9" y="963.0" width="8.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="828.9" y="974.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (29 samples, 0.61%)</title><rect x="827.2" y="947.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.2" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (20 samples, 0.42%)</title><rect x="828.7" y="931.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="831.7" y="942.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (13 samples, 0.27%)</title><rect x="830.2" y="915.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="833.2" y="926.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.06%)</title><rect x="833.7" y="931.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="836.7" y="942.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.11%)</title><rect x="834.7" y="1011.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="837.7" y="1022.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.11%)</title><rect x="834.7" y="995.0" width="1.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="837.7" y="1006.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.11%)</title><rect x="834.7" y="979.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="837.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (130 samples, 2.74%)</title><rect x="835.9" y="1123.0" width="32.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="838.9" y="1134.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (41 samples, 0.86%)</title><rect x="836.9" y="1107.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="839.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (36 samples, 0.76%)</title><rect x="837.6" y="1091.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="840.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (34 samples, 0.72%)</title><rect x="838.1" y="1075.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="841.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (32 samples, 0.67%)</title><rect x="838.1" y="1059.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="841.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (30 samples, 0.63%)</title><rect x="838.6" y="1043.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="841.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="838.9" y="1027.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="841.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.04%)</title><rect x="838.9" y="1011.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="841.9" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/FutureAnalyzer$$Lambda$212/2118877580.accept (27 samples, 0.57%)</title><rect x="839.4" y="1027.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="842.4" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/FutureAnalyzer.lambda$atLeastAsync$0 (21 samples, 0.44%)</title><rect x="840.9" y="1011.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="843.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (19 samples, 0.40%)</title><rect x="841.1" y="995.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="844.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (19 samples, 0.40%)</title><rect x="841.1" y="979.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="844.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (19 samples, 0.40%)</title><rect x="841.1" y="963.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="844.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (16 samples, 0.34%)</title><rect x="841.4" y="947.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="844.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.32%)</title><rect x="841.6" y="931.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="844.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (15 samples, 0.32%)</title><rect x="841.6" y="915.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="844.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (3 samples, 0.06%)</title><rect x="841.6" y="899.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="844.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.06%)</title><rect x="841.6" y="883.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="844.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.06%)</title><rect x="841.6" y="867.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="844.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.06%)</title><rect x="841.6" y="851.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="844.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.08%)</title><rect x="842.4" y="899.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="845.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.08%)</title><rect x="842.4" y="883.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="845.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.17%)</title><rect x="843.4" y="899.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="846.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.17%)</title><rect x="843.4" y="883.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="846.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.17%)</title><rect x="843.4" y="867.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="846.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.17%)</title><rect x="843.4" y="851.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="846.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.17%)</title><rect x="843.4" y="835.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="846.4" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.15%)</title><rect x="843.6" y="819.0" width="1.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="846.6" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.15%)</title><rect x="843.6" y="803.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="846.6" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.15%)</title><rect x="843.6" y="787.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="846.6" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.15%)</title><rect x="843.6" y="771.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="846.6" y="782.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.15%)</title><rect x="843.6" y="755.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="846.6" y="766.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.15%)</title><rect x="843.6" y="739.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="846.6" y="750.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.11%)</title><rect x="844.1" y="723.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="847.1" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.11%)</title><rect x="844.1" y="707.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="847.1" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.11%)</title><rect x="844.1" y="691.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="847.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.04%)</title><rect x="845.4" y="947.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="848.4" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$180/826687228.apply (2 samples, 0.04%)</title><rect x="846.6" y="1091.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.6" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.lambda$put$1 (2 samples, 0.04%)</title><rect x="846.6" y="1075.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="849.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (85 samples, 1.79%)</title><rect x="847.1" y="1107.0" width="21.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="850.1" y="1118.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (80 samples, 1.69%)</title><rect x="847.1" y="1091.0" width="19.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="850.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (80 samples, 1.69%)</title><rect x="847.1" y="1075.0" width="19.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (73 samples, 1.54%)</title><rect x="848.3" y="1059.0" width="18.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="851.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (70 samples, 1.48%)</title><rect x="848.3" y="1043.0" width="17.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="851.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (66 samples, 1.39%)</title><rect x="848.3" y="1027.0" width="16.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="851.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (66 samples, 1.39%)</title><rect x="848.3" y="1011.0" width="16.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="851.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (66 samples, 1.39%)</title><rect x="848.3" y="995.0" width="16.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="851.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (66 samples, 1.39%)</title><rect x="848.3" y="979.0" width="16.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="851.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (66 samples, 1.39%)</title><rect x="848.3" y="963.0" width="16.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="851.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (58 samples, 1.22%)</title><rect x="850.3" y="947.0" width="14.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.3" y="958.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.17%)</title><rect x="851.1" y="931.0" width="2.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="854.1" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.08%)</title><rect x="851.3" y="915.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="854.3" y="926.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.04%)</title><rect x="852.6" y="915.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="855.6" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_signal (47 samples, 0.99%)</title><rect x="853.1" y="931.0" width="11.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="856.1" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.89%)</title><rect x="854.3" y="915.0" width="10.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="857.3" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 0.89%)</title><rect x="854.3" y="899.0" width="10.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="857.3" y="910.0"></text>
</g>
<g>
<title>__x64_sys_futex (41 samples, 0.86%)</title><rect x="854.6" y="883.0" width="10.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="857.6" y="894.0"></text>
</g>
<g>
<title>do_futex (41 samples, 0.86%)</title><rect x="854.6" y="867.0" width="10.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="857.6" y="878.0"></text>
</g>
<g>
<title>futex_wake (40 samples, 0.84%)</title><rect x="854.6" y="851.0" width="9.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="857.6" y="862.0"></text>
</g>
<g>
<title>wake_up_q (34 samples, 0.72%)</title><rect x="856.1" y="835.0" width="8.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="859.1" y="846.0"></text>
</g>
<g>
<title>try_to_wake_up (34 samples, 0.72%)</title><rect x="856.1" y="819.0" width="8.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="859.1" y="830.0"></text>
</g>
<g>
<title>__lock_text_start (34 samples, 0.72%)</title><rect x="856.1" y="803.0" width="8.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="859.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.08%)</title><rect x="864.8" y="1027.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="867.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.06%)</title><rect x="865.8" y="1043.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="868.8" y="1054.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.04%)</title><rect x="866.5" y="1059.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="869.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.11%)</title><rect x="867.0" y="1091.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="870.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (14 samples, 0.30%)</title><rect x="868.5" y="1155.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="871.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.30%)</title><rect x="868.5" y="1139.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="871.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.27%)</title><rect x="868.7" y="1123.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="871.7" y="1134.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.25%)</title><rect x="869.0" y="1107.0" width="3.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="872.0" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.25%)</title><rect x="869.0" y="1091.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="872.0" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.25%)</title><rect x="869.0" y="1075.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="872.0" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.23%)</title><rect x="869.2" y="1059.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="872.2" y="1070.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.23%)</title><rect x="869.2" y="1043.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="872.2" y="1054.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.21%)</title><rect x="869.2" y="1027.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="872.2" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.19%)</title><rect x="869.5" y="1011.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="872.5" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.19%)</title><rect x="869.5" y="995.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="872.5" y="1006.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.19%)</title><rect x="869.5" y="979.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="872.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (75 samples, 1.58%)</title><rect x="872.0" y="1171.0" width="18.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="875.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (72 samples, 1.52%)</title><rect x="872.7" y="1155.0" width="17.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="875.7" y="1166.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="875.0" y="1139.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="878.0" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Park (27 samples, 0.57%)</title><rect x="875.5" y="1139.0" width="6.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="878.5" y="1150.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 0.21%)</title><rect x="877.2" y="1123.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="880.2" y="1134.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.06%)</title><rect x="878.9" y="1107.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="881.9" y="1118.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.06%)</title><rect x="880.2" y="1123.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="883.2" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="880.2" y="1107.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="883.2" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="880.4" y="1091.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="883.4" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.04%)</title><rect x="880.9" y="1123.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="883.9" y="1134.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="881.4" y="1123.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="884.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.72%)</title><rect x="882.2" y="1139.0" width="8.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="885.2" y="1150.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.04%)</title><rect x="882.2" y="1123.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="885.2" y="1134.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.04%)</title><rect x="882.7" y="1123.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="885.7" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (30 samples, 0.63%)</title><rect x="883.2" y="1123.0" width="7.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="886.2" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.63%)</title><rect x="883.2" y="1107.0" width="7.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="886.2" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="883.2" y="1091.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="886.2" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.59%)</title><rect x="883.7" y="1091.0" width="6.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="886.7" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (25 samples, 0.53%)</title><rect x="884.4" y="1075.0" width="6.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="887.4" y="1086.0"></text>
</g>
<g>
<title>do_futex (25 samples, 0.53%)</title><rect x="884.4" y="1059.0" width="6.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="887.4" y="1070.0"></text>
</g>
<g>
<title>futex_wait (24 samples, 0.51%)</title><rect x="884.7" y="1043.0" width="5.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="887.7" y="1054.0"></text>
</g>
<g>
<title>futex_wait_queue_me (9 samples, 0.19%)</title><rect x="885.2" y="1027.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="888.2" y="1038.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.11%)</title><rect x="886.2" y="1011.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="889.2" y="1022.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.11%)</title><rect x="886.2" y="995.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="889.2" y="1006.0"></text>
</g>
<g>
<title>futex_wait_setup (11 samples, 0.23%)</title><rect x="887.4" y="1027.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="890.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (47 samples, 0.99%)</title><rect x="890.6" y="1171.0" width="11.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="893.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (2 samples, 0.04%)</title><rect x="891.9" y="1155.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="894.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (38 samples, 0.80%)</title><rect x="892.4" y="1155.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="895.4" y="1166.0"></text>
</g>
<g>
<title>Unsafe_Park (11 samples, 0.23%)</title><rect x="892.6" y="1139.0" width="2.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="895.6" y="1150.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.06%)</title><rect x="893.1" y="1123.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="896.1" y="1134.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (3 samples, 0.06%)</title><rect x="893.1" y="1107.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="896.1" y="1118.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.04%)</title><rect x="894.1" y="1123.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="897.1" y="1134.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (23 samples, 0.49%)</title><rect x="895.4" y="1139.0" width="5.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="898.4" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.46%)</title><rect x="895.6" y="1123.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="898.6" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.46%)</title><rect x="895.6" y="1107.0" width="5.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="898.6" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 0.42%)</title><rect x="896.1" y="1091.0" width="5.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="899.1" y="1102.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.34%)</title><rect x="896.1" y="1075.0" width="4.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="899.1" y="1086.0"></text>
</g>
<g>
<title>futex_wait (14 samples, 0.30%)</title><rect x="896.4" y="1059.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="899.4" y="1070.0"></text>
</g>
<g>
<title>futex_wait_queue_me (10 samples, 0.21%)</title><rect x="896.6" y="1043.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="899.6" y="1054.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (6 samples, 0.13%)</title><rect x="897.1" y="1027.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="900.1" y="1038.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (6 samples, 0.13%)</title><rect x="897.1" y="1011.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="900.1" y="1022.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.11%)</title><rect x="897.1" y="995.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="900.1" y="1006.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="898.6" y="1027.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="901.6" y="1038.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.04%)</title><rect x="899.1" y="1043.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="902.1" y="1054.0"></text>
</g>
<g>
<title>get_timespec64 (4 samples, 0.08%)</title><rect x="900.1" y="1075.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="903.1" y="1086.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.06%)</title><rect x="900.4" y="1059.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="903.4" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="901.8" y="1155.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="904.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (418 samples, 8.81%)</title><rect x="902.3" y="1203.0" width="104.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.3" y="1214.0">jdk/internal..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.08%)</title><rect x="907.6" y="1187.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="910.6" y="1198.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.08%)</title><rect x="907.6" y="1171.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="910.6" y="1182.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.06%)</title><rect x="907.6" y="1155.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="910.6" y="1166.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.04%)</title><rect x="907.8" y="1139.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="910.8" y="1150.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (4 samples, 0.08%)</title><rect x="908.6" y="1187.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="911.6" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (6 samples, 0.13%)</title><rect x="909.6" y="1187.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="912.6" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (96 samples, 2.02%)</title><rect x="911.1" y="1187.0" width="23.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="914.1" y="1198.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$479/1026613403.accept (93 samples, 1.96%)</title><rect x="911.1" y="1171.0" width="23.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="914.1" y="1182.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (93 samples, 1.96%)</title><rect x="911.1" y="1155.0" width="23.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="914.1" y="1166.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (93 samples, 1.96%)</title><rect x="911.1" y="1139.0" width="23.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="914.1" y="1150.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (93 samples, 1.96%)</title><rect x="911.1" y="1123.0" width="23.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="914.1" y="1134.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (93 samples, 1.96%)</title><rect x="911.1" y="1107.0" width="23.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.1" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.06%)</title><rect x="911.1" y="1091.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="914.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.04%)</title><rect x="911.3" y="1075.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (90 samples, 1.90%)</title><rect x="911.8" y="1091.0" width="22.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="914.8" y="1102.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (90 samples, 1.90%)</title><rect x="911.8" y="1075.0" width="22.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.8" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (90 samples, 1.90%)</title><rect x="911.8" y="1059.0" width="22.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.8" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (90 samples, 1.90%)</title><rect x="911.8" y="1043.0" width="22.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="914.8" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (89 samples, 1.88%)</title><rect x="912.0" y="1027.0" width="22.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="915.0" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$288/1121301686.run (87 samples, 1.83%)</title><rect x="912.5" y="1011.0" width="21.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.5" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (87 samples, 1.83%)</title><rect x="912.5" y="995.0" width="21.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="915.5" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (27 samples, 0.57%)</title><rect x="912.5" y="979.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (27 samples, 0.57%)</title><rect x="912.5" y="963.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="915.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (27 samples, 0.57%)</title><rect x="912.5" y="947.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="915.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (27 samples, 0.57%)</title><rect x="912.5" y="931.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="915.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (27 samples, 0.57%)</title><rect x="912.5" y="915.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="915.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (24 samples, 0.51%)</title><rect x="913.3" y="899.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="916.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (24 samples, 0.51%)</title><rect x="913.3" y="883.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="916.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (24 samples, 0.51%)</title><rect x="913.3" y="867.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="916.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="913.3" y="851.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="916.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="913.3" y="835.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="916.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.04%)</title><rect x="913.3" y="819.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="916.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.04%)</title><rect x="913.3" y="803.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="916.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.04%)</title><rect x="913.3" y="787.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="916.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.04%)</title><rect x="913.3" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="916.3" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.04%)</title><rect x="913.3" y="755.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="916.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (22 samples, 0.46%)</title><rect x="913.8" y="851.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="916.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (22 samples, 0.46%)</title><rect x="913.8" y="835.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="916.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (22 samples, 0.46%)</title><rect x="913.8" y="819.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="916.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (22 samples, 0.46%)</title><rect x="913.8" y="803.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="916.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (22 samples, 0.46%)</title><rect x="913.8" y="787.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="916.8" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.04%)</title><rect x="914.0" y="771.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="917.0" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (19 samples, 0.40%)</title><rect x="914.5" y="771.0" width="4.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="917.5" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.38%)</title><rect x="914.8" y="755.0" width="4.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="917.8" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.38%)</title><rect x="914.8" y="739.0" width="4.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="917.8" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 0.38%)</title><rect x="914.8" y="723.0" width="4.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="917.8" y="734.0"></text>
</g>
<g>
<title>do_futex (18 samples, 0.38%)</title><rect x="914.8" y="707.0" width="4.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="917.8" y="718.0"></text>
</g>
<g>
<title>futex_wake (18 samples, 0.38%)</title><rect x="914.8" y="691.0" width="4.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="917.8" y="702.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.06%)</title><rect x="915.5" y="675.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="918.5" y="686.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.25%)</title><rect x="916.3" y="675.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="919.3" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.25%)</title><rect x="916.3" y="659.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="919.3" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.25%)</title><rect x="916.3" y="643.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="919.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.04%)</title><rect x="919.5" y="979.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="922.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.04%)</title><rect x="919.5" y="963.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="922.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (56 samples, 1.18%)</title><rect x="920.3" y="979.0" width="13.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="923.3" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (55 samples, 1.16%)</title><rect x="920.5" y="963.0" width="13.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="923.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="920.5" y="947.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="923.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="920.5" y="931.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="923.5" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (53 samples, 1.12%)</title><rect x="921.0" y="947.0" width="13.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="924.0" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (52 samples, 1.10%)</title><rect x="921.3" y="931.0" width="12.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="924.3" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (46 samples, 0.97%)</title><rect x="921.3" y="915.0" width="11.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="924.3" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (46 samples, 0.97%)</title><rect x="921.3" y="899.0" width="11.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="924.3" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (42 samples, 0.89%)</title><rect x="922.2" y="883.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="925.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.80%)</title><rect x="922.7" y="867.0" width="9.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="925.7" y="878.0"></text>
</g>
<g>
<title>__GI___libc_read (38 samples, 0.80%)</title><rect x="922.7" y="851.0" width="9.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="925.7" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 0.78%)</title><rect x="923.0" y="835.0" width="9.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="926.0" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 0.78%)</title><rect x="923.0" y="819.0" width="9.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="926.0" y="830.0"></text>
</g>
<g>
<title>__x64_sys_read (36 samples, 0.76%)</title><rect x="923.0" y="803.0" width="9.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="926.0" y="814.0"></text>
</g>
<g>
<title>ksys_read (36 samples, 0.76%)</title><rect x="923.0" y="787.0" width="9.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="926.0" y="798.0"></text>
</g>
<g>
<title>vfs_read (36 samples, 0.76%)</title><rect x="923.0" y="771.0" width="9.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="926.0" y="782.0"></text>
</g>
<g>
<title>__vfs_read (32 samples, 0.67%)</title><rect x="923.2" y="755.0" width="8.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="926.2" y="766.0"></text>
</g>
<g>
<title>new_sync_read (31 samples, 0.65%)</title><rect x="923.5" y="739.0" width="7.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="926.5" y="750.0"></text>
</g>
<g>
<title>sock_read_iter (30 samples, 0.63%)</title><rect x="923.7" y="723.0" width="7.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="926.7" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (29 samples, 0.61%)</title><rect x="924.0" y="707.0" width="7.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="927.0" y="718.0"></text>
</g>
<g>
<title>inet6_recvmsg (21 samples, 0.44%)</title><rect x="924.2" y="691.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="927.2" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (20 samples, 0.42%)</title><rect x="924.5" y="675.0" width="5.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="927.5" y="686.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.08%)</title><rect x="925.2" y="659.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="928.2" y="670.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="925.2" y="643.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="928.2" y="654.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.15%)</title><rect x="926.7" y="659.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="929.7" y="670.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.11%)</title><rect x="927.2" y="643.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="930.2" y="654.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.08%)</title><rect x="927.5" y="627.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="930.5" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.04%)</title><rect x="928.0" y="611.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="931.0" y="622.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.04%)</title><rect x="928.0" y="595.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="931.0" y="606.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.06%)</title><rect x="928.7" y="659.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="931.7" y="670.0"></text>
</g>
<g>
<title>tcp_send_ack (2 samples, 0.04%)</title><rect x="929.0" y="643.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="932.0" y="654.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (2 samples, 0.04%)</title><rect x="929.0" y="627.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="932.0" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (7 samples, 0.15%)</title><rect x="929.5" y="691.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="932.5" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (6 samples, 0.13%)</title><rect x="929.7" y="675.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="932.7" y="686.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.13%)</title><rect x="929.7" y="659.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="932.7" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.13%)</title><rect x="929.7" y="643.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="932.7" y="654.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (5 samples, 0.11%)</title><rect x="930.0" y="627.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="933.0" y="638.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.04%)</title><rect x="930.7" y="611.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="933.7" y="622.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.04%)</title><rect x="931.2" y="755.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="934.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.13%)</title><rect x="932.7" y="915.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="935.7" y="926.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.13%)</title><rect x="932.7" y="899.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="935.7" y="910.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (6 samples, 0.13%)</title><rect x="932.7" y="883.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="935.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$487/1175872901.accept (3 samples, 0.06%)</title><rect x="934.2" y="1171.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="937.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (3 samples, 0.06%)</title><rect x="934.2" y="1155.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="937.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$478/385832277.run (3 samples, 0.06%)</title><rect x="934.2" y="1139.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="937.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (3 samples, 0.06%)</title><rect x="934.2" y="1123.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="937.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (3 samples, 0.06%)</title><rect x="934.2" y="1107.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="937.2" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (8 samples, 0.17%)</title><rect x="935.2" y="1187.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="938.2" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.17%)</title><rect x="935.2" y="1171.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="938.2" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (8 samples, 0.17%)</title><rect x="935.2" y="1155.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="938.2" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (8 samples, 0.17%)</title><rect x="935.2" y="1139.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="938.2" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (8 samples, 0.17%)</title><rect x="935.2" y="1123.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="938.2" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (7 samples, 0.15%)</title><rect x="935.4" y="1107.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="938.4" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (5 samples, 0.11%)</title><rect x="935.4" y="1091.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="938.4" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (4 samples, 0.08%)</title><rect x="935.7" y="1075.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="938.7" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (3 samples, 0.06%)</title><rect x="935.7" y="1059.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="938.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$477/1711369908.accept (3 samples, 0.06%)</title><rect x="935.7" y="1043.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="938.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (78 samples, 1.64%)</title><rect x="937.2" y="1187.0" width="19.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="940.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$303/679754523.run (50 samples, 1.05%)</title><rect x="937.2" y="1171.0" width="12.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="940.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (50 samples, 1.05%)</title><rect x="937.2" y="1155.0" width="12.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="940.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (50 samples, 1.05%)</title><rect x="937.2" y="1139.0" width="12.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="940.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (50 samples, 1.05%)</title><rect x="937.2" y="1123.0" width="12.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="940.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (46 samples, 0.97%)</title><rect x="938.2" y="1107.0" width="11.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="941.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (43 samples, 0.91%)</title><rect x="938.9" y="1091.0" width="10.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="941.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$288/1121301686.run (43 samples, 0.91%)</title><rect x="938.9" y="1075.0" width="10.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="941.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (42 samples, 0.89%)</title><rect x="939.2" y="1059.0" width="10.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="942.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (41 samples, 0.86%)</title><rect x="939.4" y="1043.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="942.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription (2 samples, 0.04%)</title><rect x="940.2" y="1027.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="943.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (36 samples, 0.76%)</title><rect x="940.7" y="1027.0" width="8.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="943.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (9 samples, 0.19%)</title><rect x="940.9" y="1011.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="943.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (9 samples, 0.19%)</title><rect x="940.9" y="995.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="943.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (9 samples, 0.19%)</title><rect x="940.9" y="979.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="943.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (8 samples, 0.17%)</title><rect x="941.2" y="963.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="944.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (8 samples, 0.17%)</title><rect x="941.2" y="947.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="944.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (5 samples, 0.11%)</title><rect x="941.2" y="931.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="944.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.04%)</title><rect x="941.9" y="915.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="944.9" y="926.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (2 samples, 0.04%)</title><rect x="941.9" y="899.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="944.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3 samples, 0.06%)</title><rect x="942.4" y="931.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="945.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.06%)</title><rect x="942.4" y="915.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="945.4" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.06%)</title><rect x="942.4" y="899.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="945.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (26 samples, 0.55%)</title><rect x="943.2" y="1011.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="946.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (17 samples, 0.36%)</title><rect x="945.4" y="995.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="948.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (16 samples, 0.34%)</title><rect x="945.6" y="979.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="948.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (16 samples, 0.34%)</title><rect x="945.6" y="963.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="948.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (16 samples, 0.34%)</title><rect x="945.6" y="947.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="948.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (16 samples, 0.34%)</title><rect x="945.6" y="931.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="948.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="945.6" y="915.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="948.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="945.6" y="899.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="948.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.30%)</title><rect x="946.1" y="915.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="949.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.30%)</title><rect x="946.1" y="899.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="949.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.30%)</title><rect x="946.1" y="883.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="949.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.30%)</title><rect x="946.1" y="867.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="949.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.15%)</title><rect x="947.9" y="851.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="950.9" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.13%)</title><rect x="948.1" y="835.0" width="1.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="951.1" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.13%)</title><rect x="948.1" y="819.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="951.1" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.13%)</title><rect x="948.1" y="803.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="951.1" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.13%)</title><rect x="948.1" y="787.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="951.1" y="798.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.13%)</title><rect x="948.1" y="771.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="951.1" y="782.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.11%)</title><rect x="948.1" y="755.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="951.1" y="766.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.11%)</title><rect x="948.1" y="739.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="951.1" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.11%)</title><rect x="948.1" y="723.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="951.1" y="734.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.11%)</title><rect x="948.1" y="707.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="951.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$320/1768743970.run (28 samples, 0.59%)</title><rect x="949.6" y="1171.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="952.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (28 samples, 0.59%)</title><rect x="949.6" y="1155.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="952.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (27 samples, 0.57%)</title><rect x="949.9" y="1139.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="952.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (27 samples, 0.57%)</title><rect x="949.9" y="1123.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="952.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (26 samples, 0.55%)</title><rect x="950.1" y="1107.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="953.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="950.1" y="1091.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="953.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="950.1" y="1075.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="953.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.04%)</title><rect x="950.1" y="1059.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="953.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (24 samples, 0.51%)</title><rect x="950.6" y="1091.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="953.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 0.51%)</title><rect x="950.6" y="1075.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="953.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (24 samples, 0.51%)</title><rect x="950.6" y="1059.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="953.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 0.51%)</title><rect x="950.6" y="1043.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="953.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.38%)</title><rect x="952.1" y="1027.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="955.1" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.11%)</title><rect x="952.4" y="1011.0" width="1.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="955.4" y="1022.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.06%)</title><rect x="952.9" y="995.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="955.9" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.25%)</title><rect x="953.6" y="1011.0" width="3.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="956.6" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.25%)</title><rect x="953.6" y="995.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="956.6" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.25%)</title><rect x="953.6" y="979.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="956.6" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.23%)</title><rect x="953.9" y="963.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="956.9" y="974.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.23%)</title><rect x="953.9" y="947.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="956.9" y="958.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.23%)</title><rect x="953.9" y="931.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="956.9" y="942.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.21%)</title><rect x="954.1" y="915.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="957.1" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.21%)</title><rect x="954.1" y="899.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="957.1" y="910.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.21%)</title><rect x="954.1" y="883.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="957.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (16 samples, 0.34%)</title><rect x="956.6" y="1187.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="959.6" y="1198.0"></text>
</g>
<g>
<title>java/time/Instant.now (7 samples, 0.15%)</title><rect x="956.8" y="1171.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="959.8" y="1182.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (7 samples, 0.15%)</title><rect x="956.8" y="1155.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="959.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (4 samples, 0.08%)</title><rect x="957.6" y="1139.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="960.6" y="1150.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.06%)</title><rect x="957.8" y="1123.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="960.8" y="1134.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.04%)</title><rect x="958.1" y="1107.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="961.1" y="1118.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="958.1" y="1091.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="961.1" y="1102.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="958.1" y="1075.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="961.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (8 samples, 0.17%)</title><rect x="958.6" y="1171.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="961.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (26 samples, 0.55%)</title><rect x="961.1" y="1187.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="964.1" y="1198.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.06%)</title><rect x="961.8" y="1171.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="964.8" y="1182.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.04%)</title><rect x="962.1" y="1155.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="965.1" y="1166.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.04%)</title><rect x="962.1" y="1139.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="965.1" y="1150.0"></text>
</g>
<g>
<title>java/time/Instant.now (14 samples, 0.30%)</title><rect x="962.6" y="1171.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="965.6" y="1182.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (14 samples, 0.30%)</title><rect x="962.6" y="1155.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="965.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (13 samples, 0.27%)</title><rect x="962.8" y="1139.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="965.8" y="1150.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (11 samples, 0.23%)</title><rect x="963.3" y="1123.0" width="2.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="966.3" y="1134.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (8 samples, 0.17%)</title><rect x="964.1" y="1107.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="967.1" y="1118.0"></text>
</g>
<g>
<title>gettimeofday (7 samples, 0.15%)</title><rect x="964.3" y="1091.0" width="1.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="967.3" y="1102.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.11%)</title><rect x="964.8" y="1075.0" width="1.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="967.8" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (4 samples, 0.08%)</title><rect x="966.0" y="1171.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="969.0" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (4 samples, 0.08%)</title><rect x="966.0" y="1155.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="969.0" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (4 samples, 0.08%)</title><rect x="966.0" y="1139.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="969.0" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (2 samples, 0.04%)</title><rect x="967.0" y="1171.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="970.0" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (2 samples, 0.04%)</title><rect x="967.0" y="1155.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="970.0" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (2 samples, 0.04%)</title><rect x="967.0" y="1139.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="970.0" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (2 samples, 0.04%)</title><rect x="967.0" y="1123.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="970.0" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (140 samples, 2.95%)</title><rect x="967.8" y="1187.0" width="34.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="970.8" y="1198.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (139 samples, 2.93%)</title><rect x="968.0" y="1171.0" width="34.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="971.0" y="1182.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (130 samples, 2.74%)</title><rect x="969.5" y="1155.0" width="32.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="972.5" y="1166.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (53 samples, 1.12%)</title><rect x="969.8" y="1139.0" width="13.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="972.8" y="1150.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (2 samples, 0.04%)</title><rect x="970.5" y="1123.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="973.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.99%)</title><rect x="971.0" y="1123.0" width="11.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="974.0" y="1134.0"></text>
</g>
<g>
<title>epoll_wait (46 samples, 0.97%)</title><rect x="971.3" y="1107.0" width="11.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="974.3" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.89%)</title><rect x="972.3" y="1091.0" width="10.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="975.3" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 0.89%)</title><rect x="972.3" y="1075.0" width="10.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="975.3" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (39 samples, 0.82%)</title><rect x="973.0" y="1059.0" width="9.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="976.0" y="1070.0"></text>
</g>
<g>
<title>do_epoll_wait (39 samples, 0.82%)</title><rect x="973.0" y="1043.0" width="9.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="976.0" y="1054.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="973.3" y="1027.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="976.3" y="1038.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="973.3" y="1011.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="976.3" y="1022.0"></text>
</g>
<g>
<title>ep_poll (36 samples, 0.76%)</title><rect x="973.8" y="1027.0" width="8.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="976.8" y="1038.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (13 samples, 0.27%)</title><rect x="975.5" y="1011.0" width="3.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="978.5" y="1022.0"></text>
</g>
<g>
<title>ep_send_events_proc (9 samples, 0.19%)</title><rect x="976.0" y="995.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="979.0" y="1006.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (6 samples, 0.13%)</title><rect x="976.7" y="979.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="979.7" y="990.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.08%)</title><rect x="977.2" y="963.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="980.2" y="974.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.04%)</title><rect x="978.2" y="995.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="981.2" y="1006.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.04%)</title><rect x="978.7" y="1011.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="981.7" y="1022.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.04%)</title><rect x="979.2" y="1011.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="982.2" y="1022.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.04%)</title><rect x="979.2" y="995.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="982.2" y="1006.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.11%)</title><rect x="980.0" y="1011.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="983.0" y="1022.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.11%)</title><rect x="980.0" y="995.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="983.0" y="1006.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (3 samples, 0.06%)</title><rect x="980.0" y="979.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="983.0" y="990.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.04%)</title><rect x="980.0" y="963.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="983.0" y="974.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="980.7" y="979.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="983.7" y="990.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.04%)</title><rect x="980.7" y="963.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="983.7" y="974.0"></text>
</g>
<g>
<title>select_estimate_accuracy (5 samples, 0.11%)</title><rect x="981.2" y="1011.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="984.2" y="1022.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.04%)</title><rect x="981.7" y="995.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="984.7" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (62 samples, 1.31%)</title><rect x="983.0" y="1139.0" width="15.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="986.0" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.11%)</title><rect x="983.2" y="1123.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="986.2" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.08%)</title><rect x="983.2" y="1107.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="986.2" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (52 samples, 1.10%)</title><rect x="984.7" y="1123.0" width="12.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="987.7" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (50 samples, 1.05%)</title><rect x="985.2" y="1107.0" width="12.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="988.2" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (8 samples, 0.17%)</title><rect x="985.5" y="1091.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="988.5" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_read (7 samples, 0.15%)</title><rect x="985.5" y="1075.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="988.5" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.15%)</title><rect x="985.5" y="1059.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="988.5" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.15%)</title><rect x="985.5" y="1043.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="988.5" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_read (7 samples, 0.15%)</title><rect x="985.5" y="1027.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="988.5" y="1038.0"></text>
</g>
<g>
<title>ksys_read (7 samples, 0.15%)</title><rect x="985.5" y="1011.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="988.5" y="1022.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.15%)</title><rect x="985.5" y="995.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="988.5" y="1006.0"></text>
</g>
<g>
<title>__vfs_read (6 samples, 0.13%)</title><rect x="985.5" y="979.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="988.5" y="990.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.11%)</title><rect x="985.5" y="963.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="988.5" y="974.0"></text>
</g>
<g>
<title>pipe_read (5 samples, 0.11%)</title><rect x="985.5" y="947.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="988.5" y="958.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.04%)</title><rect x="986.2" y="931.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="989.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.84%)</title><rect x="987.4" y="1091.0" width="10.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="990.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.15%)</title><rect x="987.4" y="1075.0" width="1.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="990.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="987.7" y="1059.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="990.7" y="1070.0"></text>
</g>
<g>
<title>__GI___libc_read (4 samples, 0.08%)</title><rect x="987.7" y="1043.0" width="1.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="990.7" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.08%)</title><rect x="987.7" y="1027.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="990.7" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.08%)</title><rect x="987.7" y="1011.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="990.7" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_read (4 samples, 0.08%)</title><rect x="987.7" y="995.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="990.7" y="1006.0"></text>
</g>
<g>
<title>ksys_read (4 samples, 0.08%)</title><rect x="987.7" y="979.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="990.7" y="990.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.08%)</title><rect x="987.7" y="963.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="990.7" y="974.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.06%)</title><rect x="987.7" y="947.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="990.7" y="958.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.06%)</title><rect x="987.7" y="931.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="990.7" y="942.0"></text>
</g>
<g>
<title>pipe_read (3 samples, 0.06%)</title><rect x="987.7" y="915.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="990.7" y="926.0"></text>
</g>
<g>
<title>__GI___libc_read (2 samples, 0.04%)</title><rect x="988.7" y="1059.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="991.7" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="988.7" y="1043.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="991.7" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="988.7" y="1027.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="991.7" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_read (2 samples, 0.04%)</title><rect x="988.7" y="1011.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="991.7" y="1022.0"></text>
</g>
<g>
<title>ksys_read (2 samples, 0.04%)</title><rect x="988.7" y="995.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="991.7" y="1006.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.04%)</title><rect x="988.7" y="979.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="991.7" y="990.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.04%)</title><rect x="988.7" y="963.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="991.7" y="974.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.04%)</title><rect x="988.7" y="947.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="991.7" y="958.0"></text>
</g>
<g>
<title>pipe_read (2 samples, 0.04%)</title><rect x="988.7" y="931.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="991.7" y="942.0"></text>
</g>
<g>
<title>__GI___libc_read (33 samples, 0.70%)</title><rect x="989.2" y="1075.0" width="8.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="992.2" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.70%)</title><rect x="989.2" y="1059.0" width="8.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="992.2" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 0.67%)</title><rect x="989.4" y="1043.0" width="8.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="992.4" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_read (30 samples, 0.63%)</title><rect x="989.9" y="1027.0" width="7.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="992.9" y="1038.0"></text>
</g>
<g>
<title>ksys_read (30 samples, 0.63%)</title><rect x="989.9" y="1011.0" width="7.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="992.9" y="1022.0"></text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.06%)</title><rect x="989.9" y="995.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="992.9" y="1006.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="989.9" y="979.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="992.9" y="990.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="990.2" y="963.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="993.2" y="974.0"></text>
</g>
<g>
<title>vfs_read (27 samples, 0.57%)</title><rect x="990.7" y="995.0" width="6.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="993.7" y="1006.0"></text>
</g>
<g>
<title>__vfs_read (19 samples, 0.40%)</title><rect x="991.7" y="979.0" width="4.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="994.7" y="990.0"></text>
</g>
<g>
<title>new_sync_read (18 samples, 0.38%)</title><rect x="991.9" y="963.0" width="4.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="994.9" y="974.0"></text>
</g>
<g>
<title>pipe_read (13 samples, 0.27%)</title><rect x="992.9" y="947.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="995.9" y="958.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.06%)</title><rect x="993.7" y="931.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="996.7" y="942.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.06%)</title><rect x="993.7" y="915.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="996.7" y="926.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.06%)</title><rect x="993.7" y="899.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="996.7" y="910.0"></text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.11%)</title><rect x="994.7" y="931.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="997.7" y="942.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.06%)</title><rect x="995.2" y="915.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="998.2" y="926.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.08%)</title><rect x="996.4" y="979.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="999.4" y="990.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.04%)</title><rect x="996.9" y="963.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="999.9" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.06%)</title><rect x="997.6" y="1123.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1000.6" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (2 samples, 0.04%)</title><rect x="997.6" y="1107.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1000.6" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (2 samples, 0.04%)</title><rect x="997.6" y="1091.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1000.6" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.04%)</title><rect x="997.6" y="1075.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1000.6" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (4 samples, 0.08%)</title><rect x="998.4" y="1139.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1001.4" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (8 samples, 0.17%)</title><rect x="999.9" y="1139.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1002.9" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (3 samples, 0.06%)</title><rect x="1001.9" y="1155.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1004.9" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (12 samples, 0.25%)</title><rect x="1002.6" y="1187.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1005.6" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (12 samples, 0.25%)</title><rect x="1002.6" y="1171.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1005.6" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (11 samples, 0.23%)</title><rect x="1002.9" y="1155.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1005.9" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (9 samples, 0.19%)</title><rect x="1002.9" y="1139.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1005.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.17%)</title><rect x="1003.1" y="1123.0" width="2.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1006.1" y="1134.0"></text>
</g>
<g>
<title>epoll_wait (8 samples, 0.17%)</title><rect x="1003.1" y="1107.0" width="2.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1006.1" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.15%)</title><rect x="1003.4" y="1091.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1006.4" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.15%)</title><rect x="1003.4" y="1075.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1006.4" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (7 samples, 0.15%)</title><rect x="1003.4" y="1059.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1006.4" y="1070.0"></text>
</g>
<g>
<title>do_epoll_wait (7 samples, 0.15%)</title><rect x="1003.4" y="1043.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1006.4" y="1054.0"></text>
</g>
<g>
<title>ep_poll (7 samples, 0.15%)</title><rect x="1003.4" y="1027.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1006.4" y="1038.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (6 samples, 0.13%)</title><rect x="1003.6" y="1011.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1006.6" y="1022.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.11%)</title><rect x="1003.9" y="995.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1006.9" y="1006.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (4 samples, 0.08%)</title><rect x="1004.1" y="979.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1007.1" y="990.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.06%)</title><rect x="1004.4" y="963.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1007.4" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (2 samples, 0.04%)</title><rect x="1005.1" y="1139.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1008.1" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (2 samples, 0.04%)</title><rect x="1005.1" y="1123.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1008.1" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (2 samples, 0.04%)</title><rect x="1005.6" y="1187.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1008.6" y="1198.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (2 samples, 0.04%)</title><rect x="1005.6" y="1171.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1008.6" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (2 samples, 0.04%)</title><rect x="1005.6" y="1155.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1008.6" y="1166.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (579 samples, 12.21%)</title><rect x="1006.4" y="1203.0" width="144.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1009.4" y="1214.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.13%)</title><rect x="1007.8" y="1187.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1010.8" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.13%)</title><rect x="1007.8" y="1171.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1010.8" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (6 samples, 0.13%)</title><rect x="1007.8" y="1155.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1010.8" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (84 samples, 1.77%)</title><rect x="1009.3" y="1187.0" width="20.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1012.3" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (73 samples, 1.54%)</title><rect x="1012.1" y="1171.0" width="18.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1015.1" y="1182.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.06%)</title><rect x="1015.1" y="1155.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1018.1" y="1166.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 1.14%)</title><rect x="1015.8" y="1155.0" width="13.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1018.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="1015.8" y="1139.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1018.8" y="1150.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.11%)</title><rect x="1015.8" y="1123.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1018.8" y="1134.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.06%)</title><rect x="1016.3" y="1107.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1019.3" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (48 samples, 1.01%)</title><rect x="1017.3" y="1139.0" width="11.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1020.3" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.61%)</title><rect x="1022.0" y="1123.0" width="7.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1025.0" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.61%)</title><rect x="1022.0" y="1107.0" width="7.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1025.0" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (24 samples, 0.51%)</title><rect x="1023.3" y="1091.0" width="5.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1026.3" y="1102.0"></text>
</g>
<g>
<title>do_epoll_wait (24 samples, 0.51%)</title><rect x="1023.3" y="1075.0" width="5.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1026.3" y="1086.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="1023.8" y="1059.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1026.8" y="1070.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="1023.8" y="1043.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1026.8" y="1054.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="1023.8" y="1027.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1026.8" y="1038.0"></text>
</g>
<g>
<title>ep_poll (17 samples, 0.36%)</title><rect x="1024.5" y="1059.0" width="4.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1027.5" y="1070.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (11 samples, 0.23%)</title><rect x="1024.8" y="1043.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1027.8" y="1054.0"></text>
</g>
<g>
<title>ep_send_events_proc (9 samples, 0.19%)</title><rect x="1025.3" y="1027.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1028.3" y="1038.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (5 samples, 0.11%)</title><rect x="1025.8" y="1011.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1028.8" y="1022.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.08%)</title><rect x="1026.0" y="995.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1029.0" y="1006.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.06%)</title><rect x="1026.3" y="979.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1029.3" y="990.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.04%)</title><rect x="1027.0" y="1011.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1030.0" y="1022.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.11%)</title><rect x="1027.5" y="1043.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1030.5" y="1054.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.11%)</title><rect x="1027.5" y="1027.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1030.5" y="1038.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.11%)</title><rect x="1027.5" y="1011.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1030.5" y="1022.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.11%)</title><rect x="1027.5" y="995.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1030.5" y="1006.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.06%)</title><rect x="1028.0" y="979.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1031.0" y="990.0"></text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="1028.8" y="1059.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1031.8" y="1070.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.04%)</title><rect x="1028.8" y="1043.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1031.8" y="1054.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.08%)</title><rect x="1029.2" y="1155.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1032.2" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (480 samples, 10.12%)</title><rect x="1030.2" y="1187.0" width="119.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1033.2" y="1198.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (474 samples, 10.00%)</title><rect x="1031.7" y="1171.0" width="118.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1034.7" y="1182.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (183 samples, 3.86%)</title><rect x="1032.0" y="1155.0" width="45.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1035.0" y="1166.0">one/..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="1033.7" y="1139.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1036.7" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2 samples, 0.04%)</title><rect x="1034.2" y="1139.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1037.2" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (120 samples, 2.53%)</title><rect x="1034.7" y="1139.0" width="29.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1037.7" y="1150.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (117 samples, 2.47%)</title><rect x="1035.5" y="1123.0" width="29.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1038.5" y="1134.0">on..</text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (105 samples, 2.21%)</title><rect x="1035.5" y="1107.0" width="26.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1038.5" y="1118.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.11%)</title><rect x="1035.7" y="1091.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1038.7" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (8 samples, 0.17%)</title><rect x="1037.0" y="1091.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1040.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.17%)</title><rect x="1037.0" y="1075.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1040.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="1037.7" y="1059.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1040.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="1037.7" y="1043.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1040.7" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.06%)</title><rect x="1038.2" y="1059.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1041.2" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut (91 samples, 1.92%)</title><rect x="1039.0" y="1091.0" width="22.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1042.0" y="1102.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.executeOrSendError (91 samples, 1.92%)</title><rect x="1039.0" y="1075.0" width="22.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1042.0" y="1086.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (91 samples, 1.92%)</title><rect x="1039.0" y="1059.0" width="22.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1042.0" y="1070.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (91 samples, 1.92%)</title><rect x="1039.0" y="1043.0" width="22.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1042.0" y="1054.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (13 samples, 0.27%)</title><rect x="1041.4" y="1027.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1044.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (13 samples, 0.27%)</title><rect x="1041.4" y="1011.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1044.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (13 samples, 0.27%)</title><rect x="1041.4" y="995.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1044.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (13 samples, 0.27%)</title><rect x="1041.4" y="979.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1044.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (67 samples, 1.41%)</title><rect x="1044.9" y="1027.0" width="16.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1047.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (67 samples, 1.41%)</title><rect x="1044.9" y="1011.0" width="16.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1047.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (67 samples, 1.41%)</title><rect x="1044.9" y="995.0" width="16.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1047.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (67 samples, 1.41%)</title><rect x="1044.9" y="979.0" width="16.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1047.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (67 samples, 1.41%)</title><rect x="1044.9" y="963.0" width="16.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1047.9" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.13%)</title><rect x="1044.9" y="947.0" width="1.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1047.9" y="958.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.04%)</title><rect x="1045.7" y="931.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1048.7" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (59 samples, 1.24%)</title><rect x="1046.4" y="947.0" width="14.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1049.4" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (57 samples, 1.20%)</title><rect x="1046.9" y="931.0" width="14.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1049.9" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (56 samples, 1.18%)</title><rect x="1047.2" y="915.0" width="13.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1050.2" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (54 samples, 1.14%)</title><rect x="1047.7" y="899.0" width="13.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1050.7" y="910.0"></text>
</g>
<g>
<title>do_futex (53 samples, 1.12%)</title><rect x="1047.7" y="883.0" width="13.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1050.7" y="894.0"></text>
</g>
<g>
<title>futex_wake (53 samples, 1.12%)</title><rect x="1047.7" y="867.0" width="13.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1050.7" y="878.0"></text>
</g>
<g>
<title>wake_up_q (42 samples, 0.89%)</title><rect x="1050.4" y="851.0" width="10.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1053.4" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (42 samples, 0.89%)</title><rect x="1050.4" y="835.0" width="10.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1053.4" y="846.0"></text>
</g>
<g>
<title>__lock_text_start (42 samples, 0.89%)</title><rect x="1050.4" y="819.0" width="10.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1053.4" y="830.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="1061.1" y="947.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1064.1" y="958.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (12 samples, 0.25%)</title><rect x="1061.6" y="1107.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1064.6" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.get (12 samples, 0.25%)</title><rect x="1061.6" y="1091.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1064.6" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (11 samples, 0.23%)</title><rect x="1061.8" y="1075.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1064.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (11 samples, 0.23%)</title><rect x="1061.8" y="1059.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.8" y="1070.0"></text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (2 samples, 0.04%)</title><rect x="1061.8" y="1043.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1064.8" y="1054.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.11%)</title><rect x="1062.3" y="1043.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1065.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.08%)</title><rect x="1063.6" y="1043.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1066.6" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (15 samples, 0.32%)</title><rect x="1064.6" y="1139.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1067.6" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.04%)</title><rect x="1064.8" y="1123.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1067.8" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.04%)</title><rect x="1064.8" y="1107.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1067.8" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.04%)</title><rect x="1064.8" y="1091.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1067.8" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="1064.8" y="1075.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1067.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1065.3" y="1123.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1068.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="1065.6" y="1107.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1068.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="1065.6" y="1091.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1068.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="1065.6" y="1075.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1068.6" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.13%)</title><rect x="1066.1" y="1123.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1069.1" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.13%)</title><rect x="1066.1" y="1107.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1069.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.06%)</title><rect x="1067.6" y="1123.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1070.6" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.17%)</title><rect x="1068.6" y="1139.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1071.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.11%)</title><rect x="1069.1" y="1123.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1072.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.08%)</title><rect x="1069.3" y="1107.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1072.3" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 0.59%)</title><rect x="1070.6" y="1139.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1073.6" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.32%)</title><rect x="1073.8" y="1123.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1076.8" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.08%)</title><rect x="1075.5" y="1107.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1078.5" y="1118.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.08%)</title><rect x="1075.5" y="1091.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1078.5" y="1102.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.08%)</title><rect x="1075.5" y="1075.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1078.5" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.06%)</title><rect x="1075.8" y="1059.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1078.8" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="1075.8" y="1043.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1078.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.08%)</title><rect x="1076.5" y="1107.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1079.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.08%)</title><rect x="1076.5" y="1091.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1079.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.08%)</title><rect x="1076.5" y="1075.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1079.5" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.08%)</title><rect x="1076.5" y="1059.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1079.5" y="1070.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.06%)</title><rect x="1076.8" y="1043.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1079.8" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.06%)</title><rect x="1076.8" y="1027.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1079.8" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.06%)</title><rect x="1076.8" y="1011.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1079.8" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.06%)</title><rect x="1076.8" y="995.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1079.8" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (290 samples, 6.12%)</title><rect x="1077.5" y="1155.0" width="72.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1080.5" y="1166.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (288 samples, 6.07%)</title><rect x="1078.0" y="1139.0" width="71.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1081.0" y="1150.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (17 samples, 0.36%)</title><rect x="1078.8" y="1123.0" width="4.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1081.8" y="1134.0"></text>
</g>
<g>
<title>__memmove_ssse3 (3 samples, 0.06%)</title><rect x="1079.5" y="1107.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1082.5" y="1118.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (11 samples, 0.23%)</title><rect x="1080.3" y="1107.0" width="2.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1083.3" y="1118.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.04%)</title><rect x="1080.5" y="1091.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1083.5" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.11%)</title><rect x="1081.0" y="1091.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1084.0" y="1102.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.06%)</title><rect x="1082.3" y="1091.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1085.3" y="1102.0"></text>
</g>
<g>
<title>__GI___recv (263 samples, 5.55%)</title><rect x="1083.0" y="1123.0" width="65.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1086.0" y="1134.0">__GI___..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (260 samples, 5.48%)</title><rect x="1083.7" y="1107.0" width="64.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1086.7" y="1118.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (259 samples, 5.46%)</title><rect x="1084.0" y="1091.0" width="64.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1087.0" y="1102.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_recvfrom (256 samples, 5.40%)</title><rect x="1084.7" y="1075.0" width="63.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1087.7" y="1086.0">__x64_s..</text>
</g>
<g>
<title>__sys_recvfrom (255 samples, 5.38%)</title><rect x="1085.0" y="1059.0" width="63.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1088.0" y="1070.0">__sys_r..</text>
</g>
<g>
<title>sock_recvmsg (247 samples, 5.21%)</title><rect x="1085.5" y="1043.0" width="61.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1088.5" y="1054.0">sock_r..</text>
</g>
<g>
<title>inet6_recvmsg (233 samples, 4.91%)</title><rect x="1086.2" y="1027.0" width="58.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1089.2" y="1038.0">inet6_..</text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="1086.5" y="1011.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1089.5" y="1022.0"></text>
</g>
<g>
<title>tcp_recvmsg (227 samples, 4.79%)</title><rect x="1087.7" y="1011.0" width="56.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1090.7" y="1022.0">tcp_re..</text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.21%)</title><rect x="1091.2" y="995.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1094.2" y="1006.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="1091.2" y="979.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1094.2" y="990.0"></text>
</g>
<g>
<title>skb_release_all (8 samples, 0.17%)</title><rect x="1091.7" y="979.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1094.7" y="990.0"></text>
</g>
<g>
<title>skb_release_head_state (6 samples, 0.13%)</title><rect x="1092.2" y="963.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1095.2" y="974.0"></text>
</g>
<g>
<title>dst_release (5 samples, 0.11%)</title><rect x="1092.2" y="947.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1095.2" y="958.0"></text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.11%)</title><rect x="1094.2" y="995.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1097.2" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.06%)</title><rect x="1094.4" y="979.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1097.4" y="990.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (2 samples, 0.04%)</title><rect x="1094.7" y="963.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1097.7" y="974.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.08%)</title><rect x="1095.4" y="995.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1098.4" y="1006.0"></text>
</g>
<g>
<title>__release_sock (3 samples, 0.06%)</title><rect x="1095.4" y="979.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1098.4" y="990.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.04%)</title><rect x="1095.7" y="963.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1098.7" y="974.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.04%)</title><rect x="1095.7" y="947.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1098.7" y="958.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (19 samples, 0.40%)</title><rect x="1096.4" y="995.0" width="4.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1099.4" y="1006.0"></text>
</g>
<g>
<title>__skb_datagram_iter (15 samples, 0.32%)</title><rect x="1097.2" y="979.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1100.2" y="990.0"></text>
</g>
<g>
<title>simple_copy_to_iter (13 samples, 0.27%)</title><rect x="1097.7" y="963.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1100.7" y="974.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.04%)</title><rect x="1097.7" y="947.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1100.7" y="958.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.04%)</title><rect x="1098.2" y="947.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1101.2" y="958.0"></text>
</g>
<g>
<title>_copy_to_iter (9 samples, 0.19%)</title><rect x="1098.7" y="947.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1101.7" y="958.0"></text>
</g>
<g>
<title>copy_user_generic_string (9 samples, 0.19%)</title><rect x="1098.7" y="931.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1101.7" y="942.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (166 samples, 3.50%)</title><rect x="1101.2" y="995.0" width="41.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1104.2" y="1006.0">tcp..</text>
</g>
<g>
<title>tcp_send_ack (162 samples, 3.42%)</title><rect x="1102.2" y="979.0" width="40.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1105.2" y="990.0">tcp..</text>
</g>
<g>
<title>__tcp_send_ack.part.46 (162 samples, 3.42%)</title><rect x="1102.2" y="963.0" width="40.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1105.2" y="974.0">__t..</text>
</g>
<g>
<title>__alloc_skb (15 samples, 0.32%)</title><rect x="1102.2" y="947.0" width="3.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1105.2" y="958.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (7 samples, 0.15%)</title><rect x="1102.4" y="931.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1105.4" y="942.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.04%)</title><rect x="1102.4" y="915.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1105.4" y="926.0"></text>
</g>
<g>
<title>memset (5 samples, 0.11%)</title><rect x="1102.9" y="915.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1105.9" y="926.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.04%)</title><rect x="1104.2" y="931.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1107.2" y="942.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.11%)</title><rect x="1104.6" y="931.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1107.6" y="942.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (144 samples, 3.04%)</title><rect x="1105.9" y="947.0" width="35.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1108.9" y="958.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (136 samples, 2.87%)</title><rect x="1107.9" y="931.0" width="33.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1110.9" y="942.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (136 samples, 2.87%)</title><rect x="1107.9" y="915.0" width="33.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1110.9" y="926.0">__..</text>
</g>
<g>
<title>ip_local_out (136 samples, 2.87%)</title><rect x="1107.9" y="899.0" width="33.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1110.9" y="910.0">ip..</text>
</g>
<g>
<title>__ip_local_out (29 samples, 0.61%)</title><rect x="1107.9" y="883.0" width="7.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1110.9" y="894.0"></text>
</g>
<g>
<title>nf_hook_slow (24 samples, 0.51%)</title><rect x="1108.9" y="867.0" width="6.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1111.9" y="878.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.06%)</title><rect x="1109.1" y="851.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1112.1" y="862.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.06%)</title><rect x="1109.1" y="835.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1112.1" y="846.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (18 samples, 0.38%)</title><rect x="1109.9" y="851.0" width="4.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1112.9" y="862.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (17 samples, 0.36%)</title><rect x="1110.1" y="835.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1113.1" y="846.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (2 samples, 0.04%)</title><rect x="1111.9" y="819.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1114.9" y="830.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (8 samples, 0.17%)</title><rect x="1112.4" y="819.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1115.4" y="830.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (3 samples, 0.06%)</title><rect x="1113.6" y="803.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1116.6" y="814.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (3 samples, 0.06%)</title><rect x="1113.6" y="787.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1116.6" y="798.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.04%)</title><rect x="1114.4" y="851.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1117.4" y="862.0"></text>
</g>
<g>
<title>ip_output (106 samples, 2.24%)</title><rect x="1115.1" y="883.0" width="26.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1118.1" y="894.0">i..</text>
</g>
<g>
<title>ip_finish_output (100 samples, 2.11%)</title><rect x="1115.1" y="867.0" width="24.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1118.1" y="878.0">i..</text>
</g>
<g>
<title>__ip_finish_output (98 samples, 2.07%)</title><rect x="1115.3" y="851.0" width="24.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1118.3" y="862.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (96 samples, 2.02%)</title><rect x="1115.8" y="835.0" width="23.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1118.8" y="846.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (81 samples, 1.71%)</title><rect x="1116.3" y="819.0" width="20.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1119.3" y="830.0"></text>
</g>
<g>
<title>do_softirq.part.20 (80 samples, 1.69%)</title><rect x="1116.6" y="803.0" width="19.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1119.6" y="814.0"></text>
</g>
<g>
<title>do_softirq_own_stack (79 samples, 1.67%)</title><rect x="1116.8" y="787.0" width="19.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1119.8" y="798.0"></text>
</g>
<g>
<title>__softirqentry_text_start (78 samples, 1.64%)</title><rect x="1116.8" y="771.0" width="19.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1119.8" y="782.0"></text>
</g>
<g>
<title>net_rx_action (72 samples, 1.52%)</title><rect x="1117.8" y="755.0" width="18.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1120.8" y="766.0"></text>
</g>
<g>
<title>process_backlog (71 samples, 1.50%)</title><rect x="1118.1" y="739.0" width="17.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1121.1" y="750.0"></text>
</g>
<g>
<title>__netif_receive_skb (69 samples, 1.46%)</title><rect x="1118.6" y="723.0" width="17.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1121.6" y="734.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (69 samples, 1.46%)</title><rect x="1118.6" y="707.0" width="17.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1121.6" y="718.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.04%)</title><rect x="1118.6" y="691.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1121.6" y="702.0"></text>
</g>
<g>
<title>ip_rcv (67 samples, 1.41%)</title><rect x="1119.1" y="691.0" width="16.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1122.1" y="702.0"></text>
</g>
<g>
<title>ip_rcv_finish (65 samples, 1.37%)</title><rect x="1119.3" y="675.0" width="16.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1122.3" y="686.0"></text>
</g>
<g>
<title>ip_local_deliver (64 samples, 1.35%)</title><rect x="1119.3" y="659.0" width="16.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1122.3" y="670.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (61 samples, 1.29%)</title><rect x="1119.6" y="643.0" width="15.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1122.6" y="654.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (60 samples, 1.27%)</title><rect x="1119.6" y="627.0" width="14.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1122.6" y="638.0"></text>
</g>
<g>
<title>tcp_v4_rcv (58 samples, 1.22%)</title><rect x="1120.1" y="611.0" width="14.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1123.1" y="622.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.11%)</title><rect x="1122.1" y="595.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1125.1" y="606.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (43 samples, 0.91%)</title><rect x="1123.8" y="595.0" width="10.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1126.8" y="606.0"></text>
</g>
<g>
<title>tcp_rcv_established (43 samples, 0.91%)</title><rect x="1123.8" y="579.0" width="10.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1126.8" y="590.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.15%)</title><rect x="1124.3" y="563.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1127.3" y="574.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.08%)</title><rect x="1124.3" y="547.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1127.3" y="558.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.08%)</title><rect x="1124.3" y="531.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1127.3" y="542.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.06%)</title><rect x="1125.3" y="547.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1128.3" y="558.0"></text>
</g>
<g>
<title>tcp_ack (25 samples, 0.53%)</title><rect x="1126.3" y="563.0" width="6.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1129.3" y="574.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (15 samples, 0.32%)</title><rect x="1128.8" y="547.0" width="3.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1131.8" y="558.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.08%)</title><rect x="1130.0" y="531.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1133.0" y="542.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="1130.0" y="515.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1133.0" y="526.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="1130.5" y="515.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1133.5" y="526.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.04%)</title><rect x="1130.5" y="499.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1133.5" y="510.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (3 samples, 0.06%)</title><rect x="1131.5" y="531.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1134.5" y="542.0"></text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.08%)</title><rect x="1132.5" y="563.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1135.5" y="574.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.04%)</title><rect x="1133.5" y="563.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1136.5" y="574.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.04%)</title><rect x="1134.0" y="563.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1137.0" y="574.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="1134.0" y="547.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1137.0" y="558.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.04%)</title><rect x="1135.8" y="755.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1138.8" y="766.0"></text>
</g>
<g>
<title>dev_queue_xmit (13 samples, 0.27%)</title><rect x="1136.5" y="819.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1139.5" y="830.0"></text>
</g>
<g>
<title>__dev_queue_xmit (13 samples, 0.27%)</title><rect x="1136.5" y="803.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1139.5" y="814.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.17%)</title><rect x="1137.0" y="787.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1140.0" y="798.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.11%)</title><rect x="1137.5" y="771.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1140.5" y="782.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.04%)</title><rect x="1138.2" y="755.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1141.2" y="766.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.04%)</title><rect x="1138.2" y="739.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1141.2" y="750.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.04%)</title><rect x="1138.2" y="723.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1141.2" y="734.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.04%)</title><rect x="1139.2" y="787.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1142.2" y="798.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.11%)</title><rect x="1140.2" y="867.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1143.2" y="878.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (3 samples, 0.06%)</title><rect x="1140.5" y="851.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1143.5" y="862.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (7 samples, 0.15%)</title><rect x="1142.5" y="995.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1145.5" y="1006.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.08%)</title><rect x="1143.2" y="979.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1146.2" y="990.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.08%)</title><rect x="1143.2" y="963.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1146.2" y="974.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.06%)</title><rect x="1143.5" y="947.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1146.5" y="958.0"></text>
</g>
<g>
<title>security_socket_recvmsg (11 samples, 0.23%)</title><rect x="1144.2" y="1027.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1147.2" y="1038.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (11 samples, 0.23%)</title><rect x="1144.2" y="1011.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1147.2" y="1022.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (11 samples, 0.23%)</title><rect x="1144.2" y="995.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1147.2" y="1006.0"></text>
</g>
<g>
<title>aa_sk_perm (11 samples, 0.23%)</title><rect x="1144.2" y="979.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1147.2" y="990.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (5 samples, 0.11%)</title><rect x="1145.7" y="963.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1148.7" y="974.0"></text>
</g>
<g>
<title>aa_profile_af_perm (3 samples, 0.06%)</title><rect x="1146.2" y="947.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1149.2" y="958.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.13%)</title><rect x="1147.0" y="1043.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1150.0" y="1054.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.13%)</title><rect x="1147.0" y="1027.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1150.0" y="1038.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.13%)</title><rect x="1147.0" y="1011.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1150.0" y="1022.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.11%)</title><rect x="1147.2" y="995.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1150.2" y="1006.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.04%)</title><rect x="1148.4" y="1123.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1151.4" y="1134.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.06%)</title><rect x="1148.9" y="1123.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1151.9" y="1134.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.06%)</title><rect x="1149.7" y="1187.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.7" y="1198.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="1149.9" y="1171.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1152.9" y="1182.0"></text>
</g>
<g>
<title>start_thread (159 samples, 3.35%)</title><rect x="1150.4" y="1203.0" width="39.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1153.4" y="1214.0">sta..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (159 samples, 3.35%)</title><rect x="1150.4" y="1187.0" width="39.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1153.4" y="1198.0">thr..</text>
</g>
<g>
<title>Thread::call_run() (159 samples, 3.35%)</title><rect x="1150.4" y="1171.0" width="39.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.4" y="1182.0">Thr..</text>
</g>
<g>
<title>GangWorker::loop() (93 samples, 1.96%)</title><rect x="1150.4" y="1155.0" width="23.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1153.4" y="1166.0">G..</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (91 samples, 1.92%)</title><rect x="1150.4" y="1139.0" width="22.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1153.4" y="1150.0">G..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (8 samples, 0.17%)</title><rect x="1150.4" y="1123.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1153.4" y="1134.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (5 samples, 0.11%)</title><rect x="1150.9" y="1107.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1153.9" y="1118.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.04%)</title><rect x="1151.7" y="1091.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1154.7" y="1102.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (81 samples, 1.71%)</title><rect x="1152.4" y="1123.0" width="20.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.4" y="1134.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (81 samples, 1.71%)</title><rect x="1152.4" y="1107.0" width="20.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1155.4" y="1118.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (81 samples, 1.71%)</title><rect x="1152.4" y="1091.0" width="20.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1155.4" y="1102.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (81 samples, 1.71%)</title><rect x="1152.4" y="1075.0" width="20.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1155.4" y="1086.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (80 samples, 1.69%)</title><rect x="1152.7" y="1059.0" width="19.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1155.7" y="1070.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (69 samples, 1.46%)</title><rect x="1152.7" y="1043.0" width="17.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1155.7" y="1054.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (36 samples, 0.76%)</title><rect x="1160.1" y="1027.0" width="9.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.1" y="1038.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="1166.1" y="1011.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1169.1" y="1022.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="1166.1" y="995.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1169.1" y="1006.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="1166.1" y="979.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1169.1" y="990.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.04%)</title><rect x="1166.1" y="963.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1169.1" y="974.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (10 samples, 0.21%)</title><rect x="1166.6" y="1011.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1169.6" y="1022.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (3 samples, 0.06%)</title><rect x="1169.1" y="1027.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1172.1" y="1038.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (11 samples, 0.23%)</title><rect x="1169.8" y="1043.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1172.8" y="1054.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (9 samples, 0.19%)</title><rect x="1169.8" y="1027.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.8" y="1038.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (3 samples, 0.06%)</title><rect x="1170.3" y="1011.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1173.3" y="1022.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (3 samples, 0.06%)</title><rect x="1170.3" y="995.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1173.3" y="1006.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.04%)</title><rect x="1172.6" y="1123.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.6" y="1134.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.04%)</title><rect x="1172.6" y="1107.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1175.6" y="1118.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.04%)</title><rect x="1172.6" y="1091.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.6" y="1102.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.04%)</title><rect x="1172.6" y="1075.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1175.6" y="1086.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (2 samples, 0.04%)</title><rect x="1173.1" y="1139.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1176.1" y="1150.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (2 samples, 0.04%)</title><rect x="1173.1" y="1123.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.1" y="1134.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.68] (2 samples, 0.04%)</title><rect x="1173.1" y="1107.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1176.1" y="1118.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.04%)</title><rect x="1173.1" y="1091.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.1" y="1102.0"></text>
</g>
<g>
<title>JavaThread::run() (65 samples, 1.37%)</title><rect x="1173.6" y="1155.0" width="16.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1176.6" y="1166.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (64 samples, 1.35%)</title><rect x="1173.6" y="1139.0" width="15.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1176.6" y="1150.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (64 samples, 1.35%)</title><rect x="1173.6" y="1123.0" width="15.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.6" y="1134.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (51 samples, 1.08%)</title><rect x="1173.6" y="1107.0" width="12.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1176.6" y="1118.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (51 samples, 1.08%)</title><rect x="1173.6" y="1091.0" width="12.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1176.6" y="1102.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (30 samples, 0.63%)</title><rect x="1173.6" y="1075.0" width="7.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.6" y="1086.0"></text>
</g>
<g>
<title>Matcher::match() (5 samples, 0.11%)</title><rect x="1174.1" y="1059.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1177.1" y="1070.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (5 samples, 0.11%)</title><rect x="1174.1" y="1043.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.1" y="1054.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (4 samples, 0.08%)</title><rect x="1174.3" y="1027.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1177.3" y="1038.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (3 samples, 0.06%)</title><rect x="1174.6" y="1011.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.6" y="1022.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (2 samples, 0.04%)</title><rect x="1174.6" y="995.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1177.6" y="1006.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.04%)</title><rect x="1175.3" y="1059.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1178.3" y="1070.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.04%)</title><rect x="1175.3" y="1043.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.3" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (21 samples, 0.44%)</title><rect x="1175.8" y="1059.0" width="5.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1178.8" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (4 samples, 0.08%)</title><rect x="1176.3" y="1043.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1179.3" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (6 samples, 0.13%)</title><rect x="1177.3" y="1043.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.3" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (2 samples, 0.04%)</title><rect x="1178.3" y="1027.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.3" y="1038.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (2 samples, 0.04%)</title><rect x="1178.3" y="1011.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1181.3" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (3 samples, 0.06%)</title><rect x="1178.8" y="1043.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.8" y="1054.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.04%)</title><rect x="1179.1" y="1027.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.1" y="1038.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (2 samples, 0.04%)</title><rect x="1179.8" y="1043.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.8" y="1054.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (2 samples, 0.04%)</title><rect x="1179.8" y="1027.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.8" y="1038.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.04%)</title><rect x="1180.3" y="1043.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.3" y="1054.0"></text>
</g>
<g>
<title>Compile::Optimize() (12 samples, 0.25%)</title><rect x="1181.0" y="1075.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.0" y="1086.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (5 samples, 0.11%)</title><rect x="1181.0" y="1059.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.0" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (5 samples, 0.11%)</title><rect x="1181.0" y="1043.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.0" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (6 samples, 0.13%)</title><rect x="1182.5" y="1059.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.5" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.04%)</title><rect x="1182.8" y="1043.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.8" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.06%)</title><rect x="1183.3" y="1043.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.3" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (3 samples, 0.06%)</title><rect x="1183.3" y="1027.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.3" y="1038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (3 samples, 0.06%)</title><rect x="1183.3" y="1011.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.3" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (2 samples, 0.04%)</title><rect x="1183.5" y="995.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.5" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (2 samples, 0.04%)</title><rect x="1183.5" y="979.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.5" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.17%)</title><rect x="1184.0" y="1075.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.0" y="1086.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.17%)</title><rect x="1184.0" y="1059.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.0" y="1070.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.17%)</title><rect x="1184.0" y="1043.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.0" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.17%)</title><rect x="1184.0" y="1027.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.0" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.17%)</title><rect x="1184.0" y="1011.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.0" y="1022.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.15%)</title><rect x="1184.0" y="995.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.0" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.11%)</title><rect x="1184.0" y="979.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.0" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.11%)</title><rect x="1184.0" y="963.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.0" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.11%)</title><rect x="1184.0" y="947.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.0" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.11%)</title><rect x="1184.0" y="931.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.0" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.11%)</title><rect x="1184.0" y="915.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.0" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.11%)</title><rect x="1184.0" y="899.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.0" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1184.5" y="883.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.5" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1184.5" y="867.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.5" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1184.5" y="851.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.5" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1184.5" y="835.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.5" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1184.5" y="819.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.5" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1184.5" y="803.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.5" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1184.5" y="787.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.5" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1184.5" y="771.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.5" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1184.5" y="755.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.5" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1184.5" y="739.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.5" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1184.5" y="723.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.5" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1184.8" y="707.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.8" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1184.8" y="691.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.8" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1184.8" y="675.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.8" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1184.8" y="659.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1184.8" y="643.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.8" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1184.8" y="627.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.8" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1184.8" y="611.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.8" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1184.8" y="595.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.8" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1184.8" y="579.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.8" y="590.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1185.3" y="979.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.3" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1185.3" y="963.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.3" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1185.3" y="947.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.3" y="958.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (11 samples, 0.23%)</title><rect x="1186.5" y="1107.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.5" y="1118.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (11 samples, 0.23%)</title><rect x="1186.5" y="1091.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.5" y="1102.0"></text>
</g>
<g>
<title>Compilation::compile_method() (11 samples, 0.23%)</title><rect x="1186.5" y="1075.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.5" y="1086.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (8 samples, 0.17%)</title><rect x="1186.5" y="1059.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.5" y="1070.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (4 samples, 0.08%)</title><rect x="1186.5" y="1043.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.5" y="1054.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (4 samples, 0.08%)</title><rect x="1186.5" y="1027.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.5" y="1038.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (4 samples, 0.08%)</title><rect x="1186.5" y="1011.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.5" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (4 samples, 0.08%)</title><rect x="1186.5" y="995.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.5" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (4 samples, 0.08%)</title><rect x="1186.5" y="979.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.5" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (4 samples, 0.08%)</title><rect x="1186.5" y="963.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.5" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (4 samples, 0.08%)</title><rect x="1186.5" y="947.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.5" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.04%)</title><rect x="1186.5" y="931.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.5" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.04%)</title><rect x="1186.5" y="915.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.5" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.04%)</title><rect x="1186.5" y="899.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.5" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.04%)</title><rect x="1186.5" y="883.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.5" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.04%)</title><rect x="1186.5" y="867.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.5" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.04%)</title><rect x="1186.5" y="851.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.5" y="862.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.04%)</title><rect x="1187.0" y="931.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.0" y="942.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.04%)</title><rect x="1187.0" y="915.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.0" y="926.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.04%)</title><rect x="1187.0" y="899.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.0" y="910.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (3 samples, 0.06%)</title><rect x="1187.8" y="1043.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.8" y="1054.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (2 samples, 0.04%)</title><rect x="1188.0" y="1027.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.0" y="1038.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (2 samples, 0.04%)</title><rect x="1188.8" y="1059.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.8" y="1070.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.04%)</title><rect x="1188.8" y="1043.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.8" y="1054.0"></text>
</g>
</g>
</svg>
