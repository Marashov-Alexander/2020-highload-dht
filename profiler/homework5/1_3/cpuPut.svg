<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1094" onload="init(evt)" viewBox="0 0 1200 1094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1077"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1077"> </text>
<g id="frames">
<g>
<title>all (2,189 samples, 100.00%)</title><rect x="10.0" y="1043.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1054.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.14%)</title><rect x="10.0" y="1027.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="1038.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.14%)</title><rect x="10.0" y="1011.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1022.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (3 samples, 0.14%)</title><rect x="10.0" y="995.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.09%)</title><rect x="10.5" y="979.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.5" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.05%)</title><rect x="10.5" y="963.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.5" y="974.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="11.1" y="963.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="14.1" y="974.0"></text>
</g>
<g>
<title>[not_walkable_Java] (7 samples, 0.32%)</title><rect x="11.6" y="1027.0" width="3.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="14.6" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.23%)</title><rect x="11.6" y="1011.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.6" y="1022.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.05%)</title><rect x="11.6" y="995.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.6" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (4 samples, 0.18%)</title><rect x="12.2" y="995.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.2" y="1006.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.05%)</title><rect x="12.2" y="979.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.2" y="990.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.05%)</title><rect x="12.2" y="963.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.2" y="974.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.14%)</title><rect x="12.7" y="979.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.7" y="990.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.14%)</title><rect x="12.7" y="963.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="15.7" y="974.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="12.7" y="947.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.7" y="958.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.05%)</title><rect x="12.7" y="931.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="15.7" y="942.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.09%)</title><rect x="13.2" y="947.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="16.2" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.09%)</title><rect x="14.3" y="1011.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.14%)</title><rect x="15.4" y="1027.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="18.4" y="1038.0"></text>
</g>
<g>
<title>_IO_vsscanf (1 samples, 0.05%)</title><rect x="15.4" y="1011.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="18.4" y="1022.0"></text>
</g>
<g>
<title>_IO_vfscanf_internal (1 samples, 0.05%)</title><rect x="15.4" y="995.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="18.4" y="1006.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.1 (2 samples, 0.09%)</title><rect x="15.9" y="1011.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="18.9" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="16.5" y="995.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="19.5" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="16.5" y="979.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="19.5" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="16.5" y="963.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="19.5" y="974.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="16.5" y="947.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="19.5" y="958.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.05%)</title><rect x="16.5" y="931.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="19.5" y="942.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.05%)</title><rect x="16.5" y="915.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="19.5" y="926.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.05%)</title><rect x="16.5" y="899.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="19.5" y="910.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.18%)</title><rect x="17.0" y="1027.0" width="2.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="20.0" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="17.0" y="1011.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="20.0" y="1022.0"></text>
</g>
<g>
<title>G1CardTable::is_in_young(oopDesc*) const (1 samples, 0.05%)</title><rect x="17.0" y="995.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="20.0" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.05%)</title><rect x="17.5" y="1011.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="20.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="18.1" y="1011.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="21.1" y="1022.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="18.1" y="995.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="21.1" y="1006.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="18.1" y="979.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="21.1" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.05%)</title><rect x="18.6" y="1011.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="21.6" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="18.6" y="995.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="21.6" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="18.6" y="979.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="21.6" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="18.6" y="963.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="21.6" y="974.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="18.6" y="947.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="21.6" y="958.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="18.6" y="931.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="21.6" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,551 samples, 70.85%)</title><rect x="19.2" y="1027.0" width="836.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.2" y="1038.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,551 samples, 70.85%)</title><rect x="19.2" y="1011.0" width="836.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.2" y="1022.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,551 samples, 70.85%)</title><rect x="19.2" y="995.0" width="836.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.2" y="1006.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.05%)</title><rect x="21.3" y="979.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="24.3" y="990.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.05%)</title><rect x="21.3" y="963.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="24.3" y="974.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.05%)</title><rect x="21.3" y="947.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="24.3" y="958.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_back_branch_event(methodHandle const&amp;, methodHandle const&amp;, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.05%)</title><rect x="21.3" y="931.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="24.3" y="942.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.05%)</title><rect x="21.3" y="915.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="24.3" y="926.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.05%)</title><rect x="21.3" y="899.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="24.3" y="910.0"></text>
</g>
<g>
<title>DirectivesStack::getMatchingDirective(methodHandle const&amp;, AbstractCompiler*) (1 samples, 0.05%)</title><rect x="21.3" y="883.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="24.3" y="894.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.05%)</title><rect x="21.3" y="867.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="24.3" y="878.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.14%)</title><rect x="21.9" y="979.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.9" y="990.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.09%)</title><rect x="22.4" y="963.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="25.4" y="974.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (2 samples, 0.09%)</title><rect x="22.4" y="947.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="25.4" y="958.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.05%)</title><rect x="22.9" y="931.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="25.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.05%)</title><rect x="23.5" y="979.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="26.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.05%)</title><rect x="23.5" y="963.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (15 samples, 0.69%)</title><rect x="24.0" y="979.0" width="8.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="27.0" y="990.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="25.1" y="963.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="28.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.55%)</title><rect x="25.6" y="963.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.55%)</title><rect x="25.6" y="947.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="28.6" y="958.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.09%)</title><rect x="28.3" y="931.0" width="1.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="31.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.05%)</title><rect x="29.4" y="931.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (1 samples, 0.05%)</title><rect x="29.4" y="915.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.4" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$130/77195045.run (1 samples, 0.05%)</title><rect x="29.9" y="931.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.9" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$121/2005965375.run (3 samples, 0.14%)</title><rect x="30.5" y="931.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (288 samples, 13.16%)</title><rect x="32.1" y="979.0" width="155.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="35.1" y="990.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (273 samples, 12.47%)</title><rect x="40.2" y="963.0" width="147.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="43.2" y="974.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (9 samples, 0.41%)</title><rect x="44.0" y="947.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (9 samples, 0.41%)</title><rect x="44.0" y="931.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (144 samples, 6.58%)</title><rect x="48.8" y="947.0" width="77.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.8" y="958.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (1 samples, 0.05%)</title><rect x="55.8" y="931.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.8" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.05%)</title><rect x="55.8" y="915.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (10 samples, 0.46%)</title><rect x="56.4" y="931.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="59.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.05%)</title><rect x="61.2" y="915.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.05%)</title><rect x="61.2" y="899.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="61.2" y="883.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.2" y="894.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.05%)</title><rect x="61.2" y="867.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="64.2" y="878.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.05%)</title><rect x="61.2" y="851.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="64.2" y="862.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.05%)</title><rect x="61.2" y="835.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="64.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (39 samples, 1.78%)</title><rect x="61.7" y="931.0" width="21.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.7" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (39 samples, 1.78%)</title><rect x="61.7" y="915.0" width="21.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.7" y="926.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (34 samples, 1.55%)</title><rect x="63.4" y="899.0" width="18.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="66.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (34 samples, 1.55%)</title><rect x="63.4" y="883.0" width="18.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="66.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (34 samples, 1.55%)</title><rect x="63.4" y="867.0" width="18.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.4" y="878.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.05%)</title><rect x="63.4" y="851.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="66.4" y="862.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.41%)</title><rect x="63.9" y="851.0" width="4.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="66.9" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="63.9" y="835.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="66.9" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.18%)</title><rect x="64.4" y="835.0" width="2.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="67.4" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.05%)</title><rect x="66.6" y="835.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="69.6" y="846.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.05%)</title><rect x="67.1" y="835.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="70.1" y="846.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.05%)</title><rect x="67.7" y="835.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="70.7" y="846.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="68.2" y="835.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="71.2" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (24 samples, 1.10%)</title><rect x="68.8" y="851.0" width="12.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="71.8" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 1.05%)</title><rect x="69.3" y="835.0" width="12.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="72.3" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 1.05%)</title><rect x="69.3" y="819.0" width="12.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="72.3" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (22 samples, 1.01%)</title><rect x="69.3" y="803.0" width="11.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="72.3" y="814.0"></text>
</g>
<g>
<title>do_futex (22 samples, 1.01%)</title><rect x="69.3" y="787.0" width="11.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="72.3" y="798.0"></text>
</g>
<g>
<title>futex_wake (22 samples, 1.01%)</title><rect x="69.3" y="771.0" width="11.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="72.3" y="782.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.05%)</title><rect x="70.4" y="755.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="73.4" y="766.0"></text>
</g>
<g>
<title>wake_up_q (19 samples, 0.87%)</title><rect x="70.9" y="755.0" width="10.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="73.9" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (19 samples, 0.87%)</title><rect x="70.9" y="739.0" width="10.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="73.9" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (19 samples, 0.87%)</title><rect x="70.9" y="723.0" width="10.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="73.9" y="734.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="81.2" y="803.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="84.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.09%)</title><rect x="81.7" y="899.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (81 samples, 3.70%)</title><rect x="82.8" y="931.0" width="43.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.8" y="942.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (81 samples, 3.70%)</title><rect x="82.8" y="915.0" width="43.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.8" y="926.0">jdk/..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="86.0" y="899.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="89.0" y="910.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.05%)</title><rect x="86.5" y="899.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="89.5" y="910.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="87.1" y="899.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="90.1" y="910.0"></text>
</g>
<g>
<title>Unsafe_Park (40 samples, 1.83%)</title><rect x="87.6" y="899.0" width="21.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="90.6" y="910.0">U..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.05%)</title><rect x="89.8" y="883.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="92.8" y="894.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.14%)</title><rect x="90.3" y="883.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="93.3" y="894.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (16 samples, 0.73%)</title><rect x="91.9" y="883.0" width="8.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="94.9" y="894.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (4 samples, 0.18%)</title><rect x="97.3" y="867.0" width="2.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="100.3" y="878.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.09%)</title><rect x="99.5" y="867.0" width="1.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="102.5" y="878.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="100.6" y="883.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="103.6" y="894.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.05%)</title><rect x="101.1" y="883.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="104.1" y="894.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.23%)</title><rect x="101.6" y="883.0" width="2.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="104.6" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.09%)</title><rect x="103.3" y="867.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="106.3" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.09%)</title><rect x="103.3" y="851.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="106.3" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.09%)</title><rect x="103.3" y="835.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="106.3" y="846.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.09%)</title><rect x="103.3" y="819.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="106.3" y="830.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="103.3" y="803.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="106.3" y="814.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.05%)</title><rect x="103.8" y="803.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="106.8" y="814.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="104.3" y="883.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="107.3" y="894.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.05%)</title><rect x="104.9" y="883.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="107.9" y="894.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (3 samples, 0.14%)</title><rect x="105.4" y="883.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="108.4" y="894.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.09%)</title><rect x="107.0" y="883.0" width="1.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="110.0" y="894.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.09%)</title><rect x="108.1" y="883.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="111.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 1.46%)</title><rect x="109.2" y="899.0" width="17.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="112.2" y="910.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.05%)</title><rect x="109.2" y="883.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="112.2" y="894.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="109.7" y="883.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="112.7" y="894.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (30 samples, 1.37%)</title><rect x="110.3" y="883.0" width="16.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="113.3" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 1.32%)</title><rect x="110.8" y="867.0" width="15.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="113.8" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="110.8" y="851.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="113.8" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 1.28%)</title><rect x="111.3" y="851.0" width="15.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="114.3" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (25 samples, 1.14%)</title><rect x="113.0" y="835.0" width="13.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="116.0" y="846.0"></text>
</g>
<g>
<title>do_futex (23 samples, 1.05%)</title><rect x="113.5" y="819.0" width="12.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="116.5" y="830.0"></text>
</g>
<g>
<title>futex_wait (22 samples, 1.01%)</title><rect x="114.0" y="803.0" width="11.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="117.0" y="814.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 0.32%)</title><rect x="115.1" y="787.0" width="3.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="118.1" y="798.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.05%)</title><rect x="116.2" y="771.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="119.2" y="782.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.18%)</title><rect x="116.7" y="771.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="119.7" y="782.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.09%)</title><rect x="117.8" y="755.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="120.8" y="766.0"></text>
</g>
<g>
<title>futex_wait_setup (12 samples, 0.55%)</title><rect x="118.9" y="787.0" width="6.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="121.9" y="798.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="122.7" y="771.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="125.7" y="782.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.09%)</title><rect x="123.2" y="771.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="126.2" y="782.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (1 samples, 0.05%)</title><rect x="123.7" y="755.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="126.7" y="766.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.09%)</title><rect x="124.3" y="771.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="127.3" y="782.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.05%)</title><rect x="125.4" y="787.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="128.4" y="798.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.05%)</title><rect x="125.9" y="819.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="128.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.14%)</title><rect x="126.4" y="947.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.14%)</title><rect x="126.4" y="931.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="129.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.14%)</title><rect x="126.4" y="915.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="129.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.14%)</title><rect x="126.4" y="899.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.14%)</title><rect x="126.4" y="883.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.14%)</title><rect x="126.4" y="867.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="129.4" y="878.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.14%)</title><rect x="126.4" y="851.0" width="1.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="129.4" y="862.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.09%)</title><rect x="126.4" y="835.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="129.4" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.09%)</title><rect x="126.4" y="819.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="129.4" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.09%)</title><rect x="126.4" y="803.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="129.4" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.09%)</title><rect x="126.4" y="787.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="129.4" y="798.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.09%)</title><rect x="126.4" y="771.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="129.4" y="782.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.05%)</title><rect x="127.0" y="755.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="130.0" y="766.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.05%)</title><rect x="127.5" y="835.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="130.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (110 samples, 5.03%)</title><rect x="128.1" y="947.0" width="59.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="131.1" y="958.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (110 samples, 5.03%)</title><rect x="128.1" y="931.0" width="59.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="131.1" y="942.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (110 samples, 5.03%)</title><rect x="128.1" y="915.0" width="59.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="131.1" y="926.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (110 samples, 5.03%)</title><rect x="128.1" y="899.0" width="59.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.1" y="910.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (103 samples, 4.71%)</title><rect x="131.8" y="883.0" width="55.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.8" y="894.0">jdk/i..</text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.05%)</title><rect x="132.4" y="867.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="135.4" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.09%)</title><rect x="132.9" y="867.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="135.9" y="878.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.05%)</title><rect x="134.0" y="867.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="137.0" y="878.0"></text>
</g>
<g>
<title>Unsafe_Unpark (23 samples, 1.05%)</title><rect x="134.5" y="867.0" width="12.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="137.5" y="878.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="134.5" y="851.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="137.5" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="135.1" y="851.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="138.1" y="862.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.14%)</title><rect x="135.6" y="851.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="138.6" y="862.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.27%)</title><rect x="137.2" y="851.0" width="3.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="140.2" y="862.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.05%)</title><rect x="140.5" y="851.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="143.5" y="862.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.05%)</title><rect x="141.0" y="851.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="144.0" y="862.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (4 samples, 0.18%)</title><rect x="141.5" y="851.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="144.5" y="862.0"></text>
</g>
<g>
<title>pthread_mutex_lock (6 samples, 0.27%)</title><rect x="143.7" y="851.0" width="3.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="146.7" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (72 samples, 3.29%)</title><rect x="146.9" y="867.0" width="38.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="149.9" y="878.0">__p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (67 samples, 3.06%)</title><rect x="149.6" y="851.0" width="36.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="152.6" y="862.0">ent..</text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="149.6" y="835.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="152.6" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (66 samples, 3.02%)</title><rect x="150.2" y="835.0" width="35.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="153.2" y="846.0">do_..</text>
</g>
<g>
<title>__x64_sys_futex (59 samples, 2.70%)</title><rect x="153.9" y="819.0" width="31.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="156.9" y="830.0">__..</text>
</g>
<g>
<title>do_futex (59 samples, 2.70%)</title><rect x="153.9" y="803.0" width="31.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="156.9" y="814.0">do..</text>
</g>
<g>
<title>futex_wake (58 samples, 2.65%)</title><rect x="154.5" y="787.0" width="31.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="157.5" y="798.0">fu..</text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="159.9" y="771.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="162.9" y="782.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.18%)</title><rect x="160.4" y="771.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="163.4" y="782.0"></text>
</g>
<g>
<title>wake_q_add_safe (2 samples, 0.09%)</title><rect x="161.5" y="755.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="164.5" y="766.0"></text>
</g>
<g>
<title>wake_up_q (43 samples, 1.96%)</title><rect x="162.6" y="771.0" width="23.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="165.6" y="782.0">w..</text>
</g>
<g>
<title>try_to_wake_up (42 samples, 1.92%)</title><rect x="163.1" y="755.0" width="22.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="166.1" y="766.0">t..</text>
</g>
<g>
<title>__lock_text_start (42 samples, 1.92%)</title><rect x="163.1" y="739.0" width="22.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="166.1" y="750.0">_..</text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.14%)</title><rect x="185.7" y="867.0" width="1.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="188.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.05%)</title><rect x="187.4" y="979.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="190.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$123/775845450.run (78 samples, 3.56%)</title><rect x="187.9" y="979.0" width="42.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="190.9" y="990.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.lambda$put$2 (78 samples, 3.56%)</title><rect x="187.9" y="963.0" width="42.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.9" y="974.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager.put (42 samples, 1.92%)</title><rect x="187.9" y="947.0" width="22.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="190.9" y="958.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (40 samples, 1.83%)</title><rect x="189.0" y="931.0" width="21.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="192.0" y="942.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.05%)</title><rect x="189.5" y="915.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.05%)</title><rect x="189.5" y="899.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="192.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.05%)</title><rect x="189.5" y="883.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="192.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$FairSync.readerShouldBlock (1 samples, 0.05%)</title><rect x="189.5" y="867.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.5" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.upsert (38 samples, 1.74%)</title><rect x="190.0" y="915.0" width="20.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="193.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (38 samples, 1.74%)</title><rect x="190.0" y="899.0" width="20.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (37 samples, 1.69%)</title><rect x="190.6" y="883.0" width="19.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="193.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (1 samples, 0.05%)</title><rect x="191.7" y="867.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="194.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (1 samples, 0.05%)</title><rect x="191.7" y="851.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="194.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (5 samples, 0.23%)</title><rect x="192.2" y="867.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.05%)</title><rect x="192.2" y="851.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="195.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.05%)</title><rect x="192.2" y="835.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="195.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.05%)</title><rect x="192.2" y="819.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="195.2" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="192.2" y="803.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.2" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="192.2" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.2" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="192.2" y="771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="195.2" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="192.2" y="755.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.2" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.05%)</title><rect x="192.2" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="195.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.18%)</title><rect x="192.7" y="851.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="195.7" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="194.4" y="835.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="197.4" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="194.4" y="819.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="197.4" y="830.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="194.4" y="803.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="197.4" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="194.4" y="787.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="197.4" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.05%)</title><rect x="194.4" y="771.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="197.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (29 samples, 1.32%)</title><rect x="194.9" y="867.0" width="15.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="197.9" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (29 samples, 1.32%)</title><rect x="194.9" y="851.0" width="15.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="197.9" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.55%)</title><rect x="204.1" y="835.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="207.1" y="846.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (12 samples, 0.55%)</title><rect x="204.1" y="819.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="207.1" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (11 samples, 0.50%)</title><rect x="204.6" y="803.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="207.6" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (11 samples, 0.50%)</title><rect x="204.6" y="787.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="207.6" y="798.0"></text>
</g>
<g>
<title>vectorizedMismatch (5 samples, 0.23%)</title><rect x="207.8" y="771.0" width="2.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="210.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.accept (36 samples, 1.64%)</title><rect x="210.5" y="947.0" width="19.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="213.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.14%)</title><rect x="210.5" y="931.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="213.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.14%)</title><rect x="210.5" y="915.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="213.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (33 samples, 1.51%)</title><rect x="212.1" y="931.0" width="17.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="215.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (33 samples, 1.51%)</title><rect x="212.1" y="915.0" width="17.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="215.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (33 samples, 1.51%)</title><rect x="212.1" y="899.0" width="17.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="215.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (33 samples, 1.51%)</title><rect x="212.1" y="883.0" width="17.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="215.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (29 samples, 1.32%)</title><rect x="214.3" y="867.0" width="15.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="217.3" y="878.0"></text>
</g>
<g>
<title>Unsafe_Unpark (12 samples, 0.55%)</title><rect x="214.8" y="851.0" width="6.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="217.8" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="217.0" y="835.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="220.0" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.05%)</title><rect x="217.5" y="835.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="220.5" y="846.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.14%)</title><rect x="218.1" y="835.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="221.1" y="846.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.14%)</title><rect x="219.7" y="835.0" width="1.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="222.7" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 0.73%)</title><rect x="221.3" y="851.0" width="8.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="224.3" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.69%)</title><rect x="221.9" y="835.0" width="8.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="224.9" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.69%)</title><rect x="221.9" y="819.0" width="8.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="224.9" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.64%)</title><rect x="222.4" y="803.0" width="7.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="225.4" y="814.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.64%)</title><rect x="222.4" y="787.0" width="7.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="225.4" y="798.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.59%)</title><rect x="222.9" y="771.0" width="7.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="225.9" y="782.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.59%)</title><rect x="222.9" y="755.0" width="7.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="225.9" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.59%)</title><rect x="222.9" y="739.0" width="7.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="225.9" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.59%)</title><rect x="222.9" y="723.0" width="7.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="225.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$130/77195045.run (518 samples, 23.66%)</title><rect x="229.9" y="979.0" width="279.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="232.9" y="990.0">ru/mail/polis/service/alexander/maras..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.lambda$iterateOverNodes$6 (518 samples, 23.66%)</title><rect x="229.9" y="963.0" width="279.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="232.9" y="974.0">ru/mail/polis/service/alexander/maras..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$128/860152352.accept (518 samples, 23.66%)</title><rect x="229.9" y="947.0" width="279.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="232.9" y="958.0">ru/mail/polis/service/alexander/maras..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.lambda$put$3 (518 samples, 23.66%)</title><rect x="229.9" y="931.0" width="279.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="232.9" y="942.0">ru/mail/polis/service/alexander/maras..</text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="229.9" y="915.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="232.9" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="229.9" y="899.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="232.9" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (514 samples, 23.48%)</title><rect x="230.5" y="915.0" width="277.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="233.5" y="926.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (509 samples, 23.25%)</title><rect x="233.2" y="899.0" width="274.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="236.2" y="910.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.05%)</title><rect x="234.2" y="883.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="237.2" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (153 samples, 6.99%)</title><rect x="234.8" y="883.0" width="82.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="237.8" y="894.0">one/nio/h..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (10 samples, 0.46%)</title><rect x="242.3" y="867.0" width="5.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="245.3" y="878.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (10 samples, 0.46%)</title><rect x="242.3" y="851.0" width="5.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="245.3" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (9 samples, 0.41%)</title><rect x="242.9" y="835.0" width="4.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="245.9" y="846.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.05%)</title><rect x="242.9" y="819.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="245.9" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.37%)</title><rect x="243.4" y="819.0" width="4.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="246.4" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (3 samples, 0.14%)</title><rect x="243.4" y="803.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="246.4" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (3 samples, 0.14%)</title><rect x="243.4" y="787.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="246.4" y="798.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (2 samples, 0.09%)</title><rect x="243.4" y="771.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="246.4" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.05%)</title><rect x="243.4" y="755.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="246.4" y="766.0"></text>
</g>
<g>
<title>MasterFreeRegionListMtSafeChecker::check() (1 samples, 0.05%)</title><rect x="243.4" y="739.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="246.4" y="750.0"></text>
</g>
<g>
<title>G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*) (1 samples, 0.05%)</title><rect x="244.0" y="755.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="247.0" y="766.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.05%)</title><rect x="244.5" y="771.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="247.5" y="782.0"></text>
</g>
<g>
<title>G1AllocRegion::fill_up_remaining_space(HeapRegion*) (1 samples, 0.05%)</title><rect x="244.5" y="755.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="247.5" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="245.0" y="803.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="248.0" y="814.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.05%)</title><rect x="245.0" y="787.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="248.0" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::max_tlab_size() const (1 samples, 0.05%)</title><rect x="245.0" y="771.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="248.0" y="782.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (4 samples, 0.18%)</title><rect x="245.6" y="803.0" width="2.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="248.6" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (129 samples, 5.89%)</title><rect x="247.7" y="867.0" width="69.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="250.7" y="878.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (16 samples, 0.73%)</title><rect x="250.4" y="851.0" width="8.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="253.4" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="252.6" y="835.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="255.6" y="846.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.05%)</title><rect x="253.1" y="835.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="256.1" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (10 samples, 0.46%)</title><rect x="253.7" y="835.0" width="5.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="256.7" y="846.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.09%)</title><rect x="254.7" y="819.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="257.7" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.14%)</title><rect x="255.8" y="819.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="258.8" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.14%)</title><rect x="257.4" y="819.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="260.4" y="830.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.05%)</title><rect x="258.5" y="803.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="261.5" y="814.0"></text>
</g>
<g>
<title>__GI___recv (106 samples, 4.84%)</title><rect x="259.0" y="851.0" width="57.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="262.0" y="862.0">__GI__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (97 samples, 4.43%)</title><rect x="263.9" y="835.0" width="52.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="266.9" y="846.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (97 samples, 4.43%)</title><rect x="263.9" y="819.0" width="52.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="266.9" y="830.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_recvfrom (96 samples, 4.39%)</title><rect x="264.4" y="803.0" width="51.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="267.4" y="814.0">__x64..</text>
</g>
<g>
<title>__sys_recvfrom (93 samples, 4.25%)</title><rect x="265.0" y="787.0" width="50.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="268.0" y="798.0">__sys..</text>
</g>
<g>
<title>fput (1 samples, 0.05%)</title><rect x="265.5" y="771.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="268.5" y="782.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.05%)</title><rect x="265.5" y="755.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="268.5" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (90 samples, 4.11%)</title><rect x="266.1" y="771.0" width="48.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="269.1" y="782.0">sock..</text>
</g>
<g>
<title>inet6_recvmsg (86 samples, 3.93%)</title><rect x="267.1" y="755.0" width="46.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="270.1" y="766.0">inet..</text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.05%)</title><rect x="267.7" y="739.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="270.7" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (84 samples, 3.84%)</title><rect x="268.2" y="739.0" width="45.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="271.2" y="750.0">tcp_..</text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.09%)</title><rect x="271.4" y="723.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="274.4" y="734.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.09%)</title><rect x="271.4" y="707.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="274.4" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.09%)</title><rect x="271.4" y="691.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="274.4" y="702.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.09%)</title><rect x="271.4" y="675.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="274.4" y="686.0"></text>
</g>
<g>
<title>sk_wait_data (8 samples, 0.37%)</title><rect x="272.5" y="723.0" width="4.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="275.5" y="734.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.05%)</title><rect x="272.5" y="707.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="275.5" y="718.0"></text>
</g>
<g>
<title>wait_woken (7 samples, 0.32%)</title><rect x="273.1" y="707.0" width="3.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="276.1" y="718.0"></text>
</g>
<g>
<title>schedule_timeout (7 samples, 0.32%)</title><rect x="273.1" y="691.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="276.1" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.27%)</title><rect x="273.6" y="675.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="276.6" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (67 samples, 3.06%)</title><rect x="276.8" y="723.0" width="36.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="279.8" y="734.0">tcp..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.05%)</title><rect x="277.9" y="707.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="280.9" y="718.0"></text>
</g>
<g>
<title>tcp_send_ack (64 samples, 2.92%)</title><rect x="278.5" y="707.0" width="34.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="281.5" y="718.0">tc..</text>
</g>
<g>
<title>__tcp_send_ack.part.46 (64 samples, 2.92%)</title><rect x="278.5" y="691.0" width="34.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="281.5" y="702.0">__..</text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.41%)</title><rect x="278.5" y="675.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="281.5" y="686.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (6 samples, 0.27%)</title><rect x="279.0" y="659.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="282.0" y="670.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.05%)</title><rect x="279.0" y="643.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="282.0" y="654.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.05%)</title><rect x="279.0" y="627.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="282.0" y="638.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.05%)</title><rect x="279.5" y="643.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="282.5" y="654.0"></text>
</g>
<g>
<title>memset (4 samples, 0.18%)</title><rect x="280.1" y="643.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="283.1" y="654.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.05%)</title><rect x="282.2" y="659.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="285.2" y="670.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.05%)</title><rect x="282.8" y="659.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="285.8" y="670.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (54 samples, 2.47%)</title><rect x="283.3" y="675.0" width="29.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="286.3" y="686.0">__..</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.05%)</title><rect x="286.0" y="659.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="289.0" y="670.0"></text>
</g>
<g>
<title>ip_queue_xmit (48 samples, 2.19%)</title><rect x="286.5" y="659.0" width="25.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="289.5" y="670.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (48 samples, 2.19%)</title><rect x="286.5" y="643.0" width="25.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="289.5" y="654.0">_..</text>
</g>
<g>
<title>ip_local_out (47 samples, 2.15%)</title><rect x="287.1" y="627.0" width="25.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="290.1" y="638.0">i..</text>
</g>
<g>
<title>__ip_local_out (17 samples, 0.78%)</title><rect x="287.1" y="611.0" width="9.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="290.1" y="622.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.09%)</title><rect x="287.1" y="595.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="290.1" y="606.0"></text>
</g>
<g>
<title>nf_hook_slow (15 samples, 0.69%)</title><rect x="288.2" y="595.0" width="8.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="291.2" y="606.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.09%)</title><rect x="288.2" y="579.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="291.2" y="590.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.09%)</title><rect x="288.2" y="563.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="291.2" y="574.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (13 samples, 0.59%)</title><rect x="289.2" y="579.0" width="7.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="292.2" y="590.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (1 samples, 0.05%)</title><rect x="289.2" y="563.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="292.2" y="574.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (12 samples, 0.55%)</title><rect x="289.8" y="563.0" width="6.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="292.8" y="574.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (3 samples, 0.14%)</title><rect x="290.3" y="547.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="293.3" y="558.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (1 samples, 0.05%)</title><rect x="291.9" y="547.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="294.9" y="558.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (7 samples, 0.32%)</title><rect x="292.5" y="547.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="295.5" y="558.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.09%)</title><rect x="294.1" y="531.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="297.1" y="542.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.09%)</title><rect x="295.2" y="531.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="298.2" y="542.0"></text>
</g>
<g>
<title>ip_output (30 samples, 1.37%)</title><rect x="296.2" y="611.0" width="16.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="299.2" y="622.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="296.2" y="595.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="299.2" y="606.0"></text>
</g>
<g>
<title>ip_finish_output (28 samples, 1.28%)</title><rect x="296.8" y="595.0" width="15.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="299.8" y="606.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="296.8" y="579.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="299.8" y="590.0"></text>
</g>
<g>
<title>__ip_finish_output (27 samples, 1.23%)</title><rect x="297.3" y="579.0" width="14.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="300.3" y="590.0"></text>
</g>
<g>
<title>ip_finish_output2 (27 samples, 1.23%)</title><rect x="297.3" y="563.0" width="14.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="300.3" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (22 samples, 1.01%)</title><rect x="297.3" y="547.0" width="11.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="300.3" y="558.0"></text>
</g>
<g>
<title>do_softirq.part.20 (22 samples, 1.01%)</title><rect x="297.3" y="531.0" width="11.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="300.3" y="542.0"></text>
</g>
<g>
<title>do_softirq_own_stack (22 samples, 1.01%)</title><rect x="297.3" y="515.0" width="11.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="300.3" y="526.0"></text>
</g>
<g>
<title>__softirqentry_text_start (22 samples, 1.01%)</title><rect x="297.3" y="499.0" width="11.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="300.3" y="510.0"></text>
</g>
<g>
<title>net_rx_action (21 samples, 0.96%)</title><rect x="297.9" y="483.0" width="11.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="300.9" y="494.0"></text>
</g>
<g>
<title>process_backlog (21 samples, 0.96%)</title><rect x="297.9" y="467.0" width="11.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="300.9" y="478.0"></text>
</g>
<g>
<title>__netif_receive_skb (21 samples, 0.96%)</title><rect x="297.9" y="451.0" width="11.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="300.9" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (20 samples, 0.91%)</title><rect x="298.4" y="435.0" width="10.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="301.4" y="446.0"></text>
</g>
<g>
<title>ip_rcv (20 samples, 0.91%)</title><rect x="298.4" y="419.0" width="10.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="301.4" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.05%)</title><rect x="298.4" y="403.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="301.4" y="414.0"></text>
</g>
<g>
<title>ip_rcv_finish (17 samples, 0.78%)</title><rect x="298.9" y="403.0" width="9.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="301.9" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver (17 samples, 0.78%)</title><rect x="298.9" y="387.0" width="9.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="301.9" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (14 samples, 0.64%)</title><rect x="298.9" y="371.0" width="7.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="301.9" y="382.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (14 samples, 0.64%)</title><rect x="298.9" y="355.0" width="7.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="301.9" y="366.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.05%)</title><rect x="298.9" y="339.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="301.9" y="350.0"></text>
</g>
<g>
<title>tcp_v4_rcv (13 samples, 0.59%)</title><rect x="299.5" y="339.0" width="7.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="302.5" y="350.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.05%)</title><rect x="299.5" y="323.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="302.5" y="334.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.05%)</title><rect x="299.5" y="307.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="302.5" y="318.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (11 samples, 0.50%)</title><rect x="300.0" y="323.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="303.0" y="334.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.05%)</title><rect x="300.0" y="307.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="303.0" y="318.0"></text>
</g>
<g>
<title>tcp_rcv_established (10 samples, 0.46%)</title><rect x="300.6" y="307.0" width="5.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="303.6" y="318.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.09%)</title><rect x="300.6" y="291.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="303.6" y="302.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.09%)</title><rect x="300.6" y="275.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="303.6" y="286.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.05%)</title><rect x="301.1" y="259.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="304.1" y="270.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.37%)</title><rect x="301.6" y="291.0" width="4.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="304.6" y="302.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.09%)</title><rect x="303.2" y="275.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="306.2" y="286.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.14%)</title><rect x="304.3" y="275.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="307.3" y="286.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.09%)</title><rect x="304.9" y="259.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="307.9" y="270.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.05%)</title><rect x="304.9" y="243.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="307.9" y="254.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.05%)</title><rect x="304.9" y="227.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="307.9" y="238.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.05%)</title><rect x="305.4" y="243.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="308.4" y="254.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.05%)</title><rect x="305.4" y="227.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="308.4" y="238.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.05%)</title><rect x="305.9" y="323.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="308.9" y="334.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.05%)</title><rect x="305.9" y="307.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="308.9" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.14%)</title><rect x="306.5" y="371.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="309.5" y="382.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="307.0" y="355.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="310.0" y="366.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.05%)</title><rect x="307.0" y="339.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="310.0" y="350.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="307.6" y="355.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="310.6" y="366.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="307.6" y="339.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="310.6" y="350.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.05%)</title><rect x="307.6" y="323.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="310.6" y="334.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (1 samples, 0.05%)</title><rect x="308.1" y="403.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="311.1" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.05%)</title><rect x="308.6" y="403.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="311.6" y="414.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.23%)</title><rect x="309.2" y="547.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="312.2" y="558.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.23%)</title><rect x="309.2" y="531.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="312.2" y="542.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="309.7" y="515.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="312.7" y="526.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.14%)</title><rect x="310.3" y="515.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="313.3" y="526.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="310.3" y="499.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="313.3" y="510.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.09%)</title><rect x="310.8" y="499.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="313.8" y="510.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="310.8" y="483.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="313.8" y="494.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.05%)</title><rect x="311.3" y="483.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="314.3" y="494.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.05%)</title><rect x="311.3" y="467.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="314.3" y="478.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.05%)</title><rect x="311.3" y="451.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="314.3" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="311.9" y="595.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="314.9" y="606.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="311.9" y="579.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="314.9" y="590.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="311.9" y="563.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="314.9" y="574.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.05%)</title><rect x="311.9" y="547.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="314.9" y="558.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.05%)</title><rect x="312.4" y="675.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="315.4" y="686.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.05%)</title><rect x="313.0" y="723.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="316.0" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.09%)</title><rect x="313.5" y="755.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="316.5" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.09%)</title><rect x="313.5" y="739.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="316.5" y="750.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.09%)</title><rect x="313.5" y="723.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="316.5" y="734.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.09%)</title><rect x="313.5" y="707.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="316.5" y="718.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.09%)</title><rect x="313.5" y="691.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="316.5" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.05%)</title><rect x="314.6" y="771.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="317.6" y="782.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="314.6" y="755.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="317.6" y="766.0"></text>
</g>
<g>
<title>fput (1 samples, 0.05%)</title><rect x="315.1" y="787.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="318.1" y="798.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.05%)</title><rect x="315.6" y="787.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="318.6" y="798.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.05%)</title><rect x="316.2" y="851.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="319.2" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.05%)</title><rect x="316.7" y="851.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="319.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (32 samples, 1.46%)</title><rect x="317.3" y="883.0" width="17.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="320.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (2 samples, 0.09%)</title><rect x="318.9" y="867.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="321.9" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.27%)</title><rect x="320.0" y="867.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="323.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.09%)</title><rect x="321.0" y="851.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="324.0" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.09%)</title><rect x="322.1" y="851.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="325.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="322.7" y="835.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="325.7" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="322.7" y="819.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="325.7" y="830.0"></text>
</g>
<g>
<title>java/lang/System.arraycopy (1 samples, 0.05%)</title><rect x="323.2" y="867.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="326.2" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (10 samples, 0.46%)</title><rect x="323.7" y="867.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="326.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="325.3" y="851.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="328.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.27%)</title><rect x="325.9" y="851.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.9" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.27%)</title><rect x="325.9" y="835.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="328.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.05%)</title><rect x="329.1" y="867.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="332.1" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.05%)</title><rect x="329.7" y="867.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.7" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (7 samples, 0.32%)</title><rect x="330.2" y="867.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="333.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.27%)</title><rect x="330.7" y="851.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.7" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.27%)</title><rect x="330.7" y="835.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="333.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (1 samples, 0.05%)</title><rect x="334.0" y="867.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="337.0" y="878.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="334.0" y="851.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="337.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (14 samples, 0.64%)</title><rect x="334.5" y="883.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="337.5" y="894.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.14%)</title><rect x="340.4" y="867.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="343.4" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.14%)</title><rect x="340.4" y="851.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="343.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.14%)</title><rect x="340.4" y="835.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="343.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (10 samples, 0.46%)</title><rect x="342.1" y="883.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="345.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.09%)</title><rect x="345.3" y="867.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="348.3" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.09%)</title><rect x="345.3" y="851.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="348.3" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (2 samples, 0.09%)</title><rect x="346.4" y="867.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="349.4" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (44 samples, 2.01%)</title><rect x="347.5" y="883.0" width="23.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="350.5" y="894.0">o..</text>
</g>
<g>
<title>__GI___setsockopt (44 samples, 2.01%)</title><rect x="347.5" y="867.0" width="23.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="350.5" y="878.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 1.87%)</title><rect x="349.1" y="851.0" width="22.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="352.1" y="862.0">e..</text>
</g>
<g>
<title>__x64_sys_setsockopt (1 samples, 0.05%)</title><rect x="349.1" y="835.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="352.1" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (40 samples, 1.83%)</title><rect x="349.6" y="835.0" width="21.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="352.6" y="846.0">d..</text>
</g>
<g>
<title>__x64_sys_setsockopt (34 samples, 1.55%)</title><rect x="352.8" y="819.0" width="18.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="355.8" y="830.0"></text>
</g>
<g>
<title>__sys_setsockopt (33 samples, 1.51%)</title><rect x="353.4" y="803.0" width="17.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="356.4" y="814.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (3 samples, 0.14%)</title><rect x="355.0" y="787.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="358.0" y="798.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="356.6" y="787.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="359.6" y="798.0"></text>
</g>
<g>
<title>__get_user_4 (2 samples, 0.09%)</title><rect x="357.2" y="787.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="360.2" y="798.0"></text>
</g>
<g>
<title>bpf_prog_array_is_empty (1 samples, 0.05%)</title><rect x="358.2" y="787.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="361.2" y="798.0"></text>
</g>
<g>
<title>security_socket_setsockopt (10 samples, 0.46%)</title><rect x="358.8" y="787.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="361.8" y="798.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (1 samples, 0.05%)</title><rect x="359.3" y="771.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="362.3" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (8 samples, 0.37%)</title><rect x="359.8" y="771.0" width="4.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="362.8" y="782.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (8 samples, 0.37%)</title><rect x="359.8" y="755.0" width="4.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="362.8" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.32%)</title><rect x="360.4" y="739.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="363.4" y="750.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.05%)</title><rect x="360.9" y="723.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="363.9" y="734.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (4 samples, 0.18%)</title><rect x="361.5" y="723.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="364.5" y="734.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (1 samples, 0.05%)</title><rect x="362.0" y="707.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="365.0" y="718.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.05%)</title><rect x="362.5" y="707.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="365.5" y="718.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.05%)</title><rect x="363.1" y="707.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="366.1" y="718.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.05%)</title><rect x="363.6" y="723.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="366.6" y="734.0"></text>
</g>
<g>
<title>sock_setsockopt (9 samples, 0.41%)</title><rect x="364.2" y="787.0" width="4.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="367.2" y="798.0"></text>
</g>
<g>
<title>sock_set_timeout (6 samples, 0.27%)</title><rect x="364.7" y="771.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="367.7" y="782.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.05%)</title><rect x="365.8" y="755.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="368.8" y="766.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.14%)</title><rect x="366.3" y="755.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="369.3" y="766.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.09%)</title><rect x="367.9" y="771.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="370.9" y="782.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.18%)</title><rect x="369.0" y="787.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="372.0" y="798.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.14%)</title><rect x="369.0" y="771.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="372.0" y="782.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.14%)</title><rect x="369.0" y="755.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="372.0" y="766.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.14%)</title><rect x="369.0" y="739.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="372.0" y="750.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="370.6" y="771.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="373.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (244 samples, 11.15%)</title><rect x="371.2" y="883.0" width="131.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="374.2" y="894.0">one/nio/net/Nati..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (6 samples, 0.27%)</title><rect x="372.8" y="867.0" width="3.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="375.8" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.09%)</title><rect x="373.3" y="851.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="376.3" y="862.0"></text>
</g>
<g>
<title>__memmove_ssse3 (1 samples, 0.05%)</title><rect x="374.4" y="851.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="377.4" y="862.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.09%)</title><rect x="374.9" y="851.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="377.9" y="862.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.05%)</title><rect x="374.9" y="835.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="377.9" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="375.5" y="835.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="378.5" y="846.0"></text>
</g>
<g>
<title>__libc_send (235 samples, 10.74%)</title><rect x="376.0" y="867.0" width="126.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="379.0" y="878.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (235 samples, 10.74%)</title><rect x="376.0" y="851.0" width="126.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="379.0" y="862.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.05%)</title><rect x="376.0" y="835.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="379.0" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (234 samples, 10.69%)</title><rect x="376.6" y="835.0" width="126.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="379.6" y="846.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (234 samples, 10.69%)</title><rect x="376.6" y="819.0" width="126.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="379.6" y="830.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (233 samples, 10.64%)</title><rect x="376.6" y="803.0" width="125.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="379.6" y="814.0">__sys_sendto</text>
</g>
<g>
<title>fput (1 samples, 0.05%)</title><rect x="377.6" y="787.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="380.6" y="798.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.05%)</title><rect x="377.6" y="771.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="380.6" y="782.0"></text>
</g>
<g>
<title>sock_sendmsg (230 samples, 10.51%)</title><rect x="378.2" y="787.0" width="124.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="381.2" y="798.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (224 samples, 10.23%)</title><rect x="378.7" y="771.0" width="120.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="381.7" y="782.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (224 samples, 10.23%)</title><rect x="378.7" y="755.0" width="120.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="381.7" y="766.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="379.3" y="739.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="382.3" y="750.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="379.3" y="723.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="382.3" y="734.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="379.3" y="707.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="382.3" y="718.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.05%)</title><rect x="379.8" y="739.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="382.8" y="750.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (221 samples, 10.10%)</title><rect x="380.3" y="739.0" width="119.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="383.3" y="750.0">tcp_sendmsg_loc..</text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.05%)</title><rect x="384.1" y="723.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="387.1" y="734.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.05%)</title><rect x="384.6" y="723.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="387.6" y="734.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.05%)</title><rect x="384.6" y="707.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="387.6" y="718.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.05%)</title><rect x="385.2" y="723.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="388.2" y="734.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.05%)</title><rect x="385.2" y="707.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="388.2" y="718.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (14 samples, 0.64%)</title><rect x="385.7" y="723.0" width="7.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="388.7" y="734.0"></text>
</g>
<g>
<title>__alloc_skb (12 samples, 0.55%)</title><rect x="386.3" y="707.0" width="6.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="389.3" y="718.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (6 samples, 0.27%)</title><rect x="386.8" y="691.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="389.8" y="702.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.05%)</title><rect x="386.8" y="675.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="389.8" y="686.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.05%)</title><rect x="386.8" y="659.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="389.8" y="670.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.05%)</title><rect x="387.3" y="675.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="390.3" y="686.0"></text>
</g>
<g>
<title>memset (4 samples, 0.18%)</title><rect x="387.9" y="675.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="390.9" y="686.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.09%)</title><rect x="390.0" y="691.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="393.0" y="702.0"></text>
</g>
<g>
<title>memset (3 samples, 0.14%)</title><rect x="391.1" y="691.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="394.1" y="702.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.05%)</title><rect x="392.7" y="707.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="395.7" y="718.0"></text>
</g>
<g>
<title>tcp_push (196 samples, 8.95%)</title><rect x="393.3" y="723.0" width="105.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="396.3" y="734.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (195 samples, 8.91%)</title><rect x="393.3" y="707.0" width="105.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="396.3" y="718.0">__tcp_push_pe..</text>
</g>
<g>
<title>ktime_get (1 samples, 0.05%)</title><rect x="393.3" y="691.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="396.3" y="702.0"></text>
</g>
<g>
<title>tcp_write_xmit (194 samples, 8.86%)</title><rect x="393.8" y="691.0" width="104.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="396.8" y="702.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.05%)</title><rect x="396.0" y="675.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="399.0" y="686.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (178 samples, 8.13%)</title><rect x="396.5" y="675.0" width="96.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="399.5" y="686.0">__tcp_trans..</text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.05%)</title><rect x="399.2" y="659.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="402.2" y="670.0"></text>
</g>
<g>
<title>ip_queue_xmit (171 samples, 7.81%)</title><rect x="399.7" y="659.0" width="92.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="402.7" y="670.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (171 samples, 7.81%)</title><rect x="399.7" y="643.0" width="92.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="402.7" y="654.0">__ip_queue_..</text>
</g>
<g>
<title>ip_local_out (167 samples, 7.63%)</title><rect x="400.8" y="627.0" width="90.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="403.8" y="638.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (27 samples, 1.23%)</title><rect x="401.4" y="611.0" width="14.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="404.4" y="622.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.09%)</title><rect x="401.4" y="595.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="404.4" y="606.0"></text>
</g>
<g>
<title>nf_hook_slow (23 samples, 1.05%)</title><rect x="402.4" y="595.0" width="12.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="405.4" y="606.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.05%)</title><rect x="403.0" y="579.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="406.0" y="590.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (5 samples, 0.23%)</title><rect x="403.5" y="579.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="406.5" y="590.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.23%)</title><rect x="403.5" y="563.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="406.5" y="574.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (15 samples, 0.69%)</title><rect x="406.2" y="579.0" width="8.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="409.2" y="590.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (14 samples, 0.64%)</title><rect x="406.7" y="563.0" width="7.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="409.7" y="574.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (4 samples, 0.18%)</title><rect x="407.8" y="547.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="410.8" y="558.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (6 samples, 0.27%)</title><rect x="410.0" y="547.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="413.0" y="558.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.05%)</title><rect x="411.1" y="531.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="414.1" y="542.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (3 samples, 0.14%)</title><rect x="411.6" y="531.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="414.6" y="542.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (2 samples, 0.09%)</title><rect x="413.2" y="547.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="416.2" y="558.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="414.3" y="579.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="417.3" y="590.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (2 samples, 0.09%)</title><rect x="414.8" y="595.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="417.8" y="606.0"></text>
</g>
<g>
<title>ip_output (137 samples, 6.26%)</title><rect x="415.9" y="611.0" width="73.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="418.9" y="622.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.09%)</title><rect x="416.5" y="595.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="419.5" y="606.0"></text>
</g>
<g>
<title>ip_finish_output (131 samples, 5.98%)</title><rect x="417.5" y="595.0" width="70.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="420.5" y="606.0">ip_finis..</text>
</g>
<g>
<title>__ip_finish_output (130 samples, 5.94%)</title><rect x="418.1" y="579.0" width="70.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="421.1" y="590.0">__ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="418.6" y="563.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="421.6" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (128 samples, 5.85%)</title><rect x="419.1" y="563.0" width="69.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="422.1" y="574.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (110 samples, 5.03%)</title><rect x="420.8" y="547.0" width="59.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="423.8" y="558.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.20 (109 samples, 4.98%)</title><rect x="421.3" y="531.0" width="58.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="424.3" y="542.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (109 samples, 4.98%)</title><rect x="421.3" y="515.0" width="58.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="424.3" y="526.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (109 samples, 4.98%)</title><rect x="421.3" y="499.0" width="58.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="424.3" y="510.0">__soft..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.05%)</title><rect x="424.0" y="483.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="427.0" y="494.0"></text>
</g>
<g>
<title>net_rx_action (103 samples, 4.71%)</title><rect x="424.5" y="483.0" width="55.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="427.5" y="494.0">net_r..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.05%)</title><rect x="425.1" y="467.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="428.1" y="478.0"></text>
</g>
<g>
<title>process_backlog (101 samples, 4.61%)</title><rect x="425.6" y="467.0" width="54.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="428.6" y="478.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (95 samples, 4.34%)</title><rect x="428.8" y="451.0" width="51.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="431.8" y="462.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (95 samples, 4.34%)</title><rect x="428.8" y="435.0" width="51.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="431.8" y="446.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.09%)</title><rect x="428.8" y="419.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="431.8" y="430.0"></text>
</g>
<g>
<title>ip_rcv (91 samples, 4.16%)</title><rect x="429.9" y="419.0" width="49.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="432.9" y="430.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.05%)</title><rect x="429.9" y="403.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="432.9" y="414.0"></text>
</g>
<g>
<title>ip_rcv_finish (86 samples, 3.93%)</title><rect x="430.5" y="403.0" width="46.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="433.5" y="414.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (81 samples, 3.70%)</title><rect x="430.5" y="387.0" width="43.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="433.5" y="398.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (78 samples, 3.56%)</title><rect x="430.5" y="371.0" width="42.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="433.5" y="382.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (77 samples, 3.52%)</title><rect x="430.5" y="355.0" width="41.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="433.5" y="366.0">ip_..</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.05%)</title><rect x="431.0" y="339.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="434.0" y="350.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.05%)</title><rect x="431.5" y="339.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="434.5" y="350.0"></text>
</g>
<g>
<title>tcp_v4_rcv (74 samples, 3.38%)</title><rect x="432.1" y="339.0" width="39.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="435.1" y="350.0">tcp..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="433.2" y="323.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="436.2" y="334.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.05%)</title><rect x="433.7" y="323.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="436.7" y="334.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.42 (2 samples, 0.09%)</title><rect x="434.2" y="323.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="437.2" y="334.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.05%)</title><rect x="435.3" y="323.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="438.3" y="334.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.14%)</title><rect x="435.9" y="323.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="438.9" y="334.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="435.9" y="307.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="438.9" y="318.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.05%)</title><rect x="436.4" y="307.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="439.4" y="318.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.05%)</title><rect x="436.9" y="307.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="439.9" y="318.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.05%)</title><rect x="437.5" y="323.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="440.5" y="334.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (62 samples, 2.83%)</title><rect x="438.0" y="323.0" width="33.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="441.0" y="334.0">tc..</text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.05%)</title><rect x="438.0" y="307.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="441.0" y="318.0"></text>
</g>
<g>
<title>tcp_rcv_established (61 samples, 2.79%)</title><rect x="438.6" y="307.0" width="32.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="441.6" y="318.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.14%)</title><rect x="439.1" y="291.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="442.1" y="302.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.09%)</title><rect x="439.6" y="275.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="442.6" y="286.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.09%)</title><rect x="439.6" y="259.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="442.6" y="270.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.09%)</title><rect x="439.6" y="243.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="442.6" y="254.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.09%)</title><rect x="439.6" y="227.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="442.6" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.05%)</title><rect x="440.7" y="291.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="443.7" y="302.0"></text>
</g>
<g>
<title>tcp_ack (19 samples, 0.87%)</title><rect x="441.2" y="291.0" width="10.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="444.2" y="302.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.05%)</title><rect x="443.9" y="275.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="446.9" y="286.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (1 samples, 0.05%)</title><rect x="444.5" y="275.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="447.5" y="286.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (10 samples, 0.46%)</title><rect x="445.0" y="275.0" width="5.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="448.0" y="286.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.27%)</title><rect x="446.6" y="259.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="449.6" y="270.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.27%)</title><rect x="446.6" y="243.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="449.6" y="254.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.23%)</title><rect x="446.6" y="227.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="449.6" y="238.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.14%)</title><rect x="447.7" y="211.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="450.7" y="222.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.14%)</title><rect x="447.7" y="195.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="450.7" y="206.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.05%)</title><rect x="448.8" y="179.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="451.8" y="190.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.05%)</title><rect x="449.3" y="227.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="452.3" y="238.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (1 samples, 0.05%)</title><rect x="449.9" y="259.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="452.9" y="270.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.05%)</title><rect x="450.4" y="275.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="453.4" y="286.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.05%)</title><rect x="451.0" y="275.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="454.0" y="286.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.05%)</title><rect x="451.5" y="291.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="454.5" y="302.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.05%)</title><rect x="452.0" y="291.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="455.0" y="302.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.05%)</title><rect x="452.0" y="275.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="455.0" y="286.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.05%)</title><rect x="452.0" y="259.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="455.0" y="270.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.05%)</title><rect x="452.0" y="243.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="455.0" y="254.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.05%)</title><rect x="452.0" y="227.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="455.0" y="238.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="452.0" y="211.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="455.0" y="222.0"></text>
</g>
<g>
<title>tcp_data_ready (29 samples, 1.32%)</title><rect x="452.6" y="291.0" width="15.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="455.6" y="302.0"></text>
</g>
<g>
<title>sock_def_readable (29 samples, 1.32%)</title><rect x="452.6" y="275.0" width="15.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="455.6" y="286.0"></text>
</g>
<g>
<title>__wake_up_sync_key (29 samples, 1.32%)</title><rect x="452.6" y="259.0" width="15.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="455.6" y="270.0"></text>
</g>
<g>
<title>__wake_up_common_lock (29 samples, 1.32%)</title><rect x="452.6" y="243.0" width="15.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="455.6" y="254.0"></text>
</g>
<g>
<title>__lock_text_start (29 samples, 1.32%)</title><rect x="452.6" y="227.0" width="15.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="455.6" y="238.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.09%)</title><rect x="468.2" y="291.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="471.2" y="302.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.05%)</title><rect x="469.3" y="291.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="472.3" y="302.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.05%)</title><rect x="469.3" y="275.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="472.3" y="286.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.05%)</title><rect x="469.8" y="291.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="472.8" y="302.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.09%)</title><rect x="470.4" y="291.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="473.4" y="302.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.05%)</title><rect x="471.4" y="323.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="474.4" y="334.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.05%)</title><rect x="472.0" y="355.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="475.0" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.14%)</title><rect x="472.5" y="371.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="475.5" y="382.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.14%)</title><rect x="472.5" y="355.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="475.5" y="366.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.14%)</title><rect x="472.5" y="339.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="475.5" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.05%)</title><rect x="474.1" y="387.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="477.1" y="398.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (4 samples, 0.18%)</title><rect x="474.7" y="387.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="477.7" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.18%)</title><rect x="476.8" y="403.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="479.8" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (1 samples, 0.05%)</title><rect x="477.4" y="387.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="480.4" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.05%)</title><rect x="477.4" y="371.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="480.4" y="382.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat] (2 samples, 0.09%)</title><rect x="477.9" y="387.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="480.9" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="478.4" y="371.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="481.4" y="382.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="478.4" y="355.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="481.4" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.09%)</title><rect x="479.0" y="419.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="482.0" y="430.0"></text>
</g>
<g>
<title>dev_queue_xmit (15 samples, 0.69%)</title><rect x="480.1" y="547.0" width="8.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="483.1" y="558.0"></text>
</g>
<g>
<title>__dev_queue_xmit (15 samples, 0.69%)</title><rect x="480.1" y="531.0" width="8.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="483.1" y="542.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 0.46%)</title><rect x="481.7" y="515.0" width="5.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="484.7" y="526.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="483.3" y="499.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="486.3" y="510.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.27%)</title><rect x="483.8" y="499.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="486.8" y="510.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="484.4" y="483.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="487.4" y="494.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.09%)</title><rect x="484.9" y="483.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="487.9" y="494.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.09%)</title><rect x="484.9" y="467.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="487.9" y="478.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.09%)</title><rect x="484.9" y="451.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="487.9" y="462.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.05%)</title><rect x="486.0" y="483.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="489.0" y="494.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.05%)</title><rect x="486.5" y="483.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="489.5" y="494.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.09%)</title><rect x="487.1" y="515.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="490.1" y="526.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.14%)</title><rect x="488.1" y="595.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="491.1" y="606.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="488.7" y="579.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="491.7" y="590.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat] (1 samples, 0.05%)</title><rect x="489.2" y="579.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="492.2" y="590.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.05%)</title><rect x="489.8" y="611.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="492.8" y="622.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="490.3" y="611.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="493.3" y="622.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.09%)</title><rect x="490.8" y="627.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="493.8" y="638.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.05%)</title><rect x="491.9" y="659.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="494.9" y="670.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.05%)</title><rect x="491.9" y="643.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="494.9" y="654.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.14%)</title><rect x="492.5" y="675.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="495.5" y="686.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.05%)</title><rect x="493.5" y="659.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="496.5" y="670.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.09%)</title><rect x="494.1" y="675.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="497.1" y="686.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.14%)</title><rect x="495.2" y="675.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="498.2" y="686.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.05%)</title><rect x="495.2" y="659.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="498.2" y="670.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.09%)</title><rect x="495.7" y="659.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="498.7" y="670.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.09%)</title><rect x="495.7" y="643.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="498.7" y="654.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="496.2" y="627.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="499.2" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="496.2" y="611.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="499.2" y="622.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.05%)</title><rect x="496.8" y="675.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="499.8" y="686.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.05%)</title><rect x="497.3" y="675.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="500.3" y="686.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.05%)</title><rect x="497.3" y="659.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="500.3" y="670.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.05%)</title><rect x="497.8" y="675.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="500.8" y="686.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.05%)</title><rect x="498.4" y="707.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="501.4" y="718.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.05%)</title><rect x="498.9" y="723.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="501.9" y="734.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.05%)</title><rect x="499.5" y="771.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="502.5" y="782.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.18%)</title><rect x="500.0" y="771.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="503.0" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.18%)</title><rect x="500.0" y="755.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="503.0" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.05%)</title><rect x="500.0" y="739.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="503.0" y="750.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.14%)</title><rect x="500.5" y="739.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="503.5" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.09%)</title><rect x="501.1" y="723.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="504.1" y="734.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.09%)</title><rect x="501.1" y="707.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="504.1" y="718.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.09%)</title><rect x="501.1" y="691.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="504.1" y="702.0"></text>
</g>
<g>
<title>fput (1 samples, 0.05%)</title><rect x="502.2" y="803.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="505.2" y="814.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (6 samples, 0.27%)</title><rect x="502.7" y="883.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="505.7" y="894.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (3 samples, 0.14%)</title><rect x="505.9" y="883.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="508.9" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (1 samples, 0.05%)</title><rect x="507.0" y="867.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="510.0" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (1 samples, 0.05%)</title><rect x="507.0" y="851.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="510.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="507.0" y="835.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="510.0" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="507.0" y="819.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="510.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.accept (3 samples, 0.14%)</title><rect x="507.6" y="915.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="510.6" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$121/2005965375.run (629 samples, 28.73%)</title><rect x="509.2" y="979.0" width="339.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="512.2" y="990.0">ru/mail/polis/service/alexander/marashov/Servi..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityPut$3 (629 samples, 28.73%)</title><rect x="509.2" y="963.0" width="339.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.2" y="974.0">ru/mail/polis/service/alexander/marashov/Servi..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="510.8" y="947.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="513.8" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="510.8" y="931.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.8" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.trySendAnswer (1 samples, 0.05%)</title><rect x="510.8" y="915.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="513.8" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.put (143 samples, 6.53%)</title><rect x="511.3" y="947.0" width="77.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="514.3" y="958.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.18%)</title><rect x="511.9" y="931.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="514.9" y="942.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.18%)</title><rect x="511.9" y="915.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.9" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.18%)</title><rect x="511.9" y="899.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="514.9" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager.put (67 samples, 3.06%)</title><rect x="514.0" y="931.0" width="36.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="517.0" y="942.0">ru/..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.05%)</title><rect x="514.0" y="915.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="517.0" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="514.0" y="899.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="517.0" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.05%)</title><rect x="514.0" y="883.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="517.0" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="514.0" y="867.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="517.0" y="878.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="514.0" y="851.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="517.0" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (66 samples, 3.02%)</title><rect x="514.6" y="915.0" width="35.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.6" y="926.0">ru/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="514.6" y="899.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="517.6" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="514.6" y="883.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="517.6" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="514.6" y="867.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="517.6" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="514.6" y="851.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="517.6" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="514.6" y="835.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="517.6" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="514.6" y="819.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="517.6" y="830.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.05%)</title><rect x="514.6" y="803.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="517.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.18%)</title><rect x="515.1" y="899.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="518.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.18%)</title><rect x="515.1" y="883.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="518.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.18%)</title><rect x="515.1" y="867.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="518.1" y="878.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (3 samples, 0.14%)</title><rect x="515.1" y="851.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.1" y="862.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (3 samples, 0.14%)</title><rect x="515.1" y="835.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$FairSync.readerShouldBlock (1 samples, 0.05%)</title><rect x="516.7" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="519.7" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="516.7" y="835.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="519.7" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.upsert (61 samples, 2.79%)</title><rect x="517.3" y="899.0" width="32.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.3" y="910.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (61 samples, 2.79%)</title><rect x="517.3" y="883.0" width="32.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="520.3" y="894.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (55 samples, 2.51%)</title><rect x="519.9" y="867.0" width="29.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.9" y="878.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.09%)</title><rect x="521.6" y="851.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="524.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (2 samples, 0.09%)</title><rect x="522.6" y="851.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (2 samples, 0.09%)</title><rect x="522.6" y="835.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="525.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (6 samples, 0.27%)</title><rect x="523.7" y="851.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="526.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.18%)</title><rect x="524.8" y="835.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="527.8" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.14%)</title><rect x="525.3" y="819.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="528.3" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.14%)</title><rect x="525.3" y="803.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="528.3" y="814.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.14%)</title><rect x="525.3" y="787.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="528.3" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.09%)</title><rect x="525.9" y="771.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="528.9" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.09%)</title><rect x="525.9" y="755.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="528.9" y="766.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.05%)</title><rect x="526.4" y="739.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="529.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (42 samples, 1.92%)</title><rect x="527.0" y="851.0" width="22.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="530.0" y="862.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (42 samples, 1.92%)</title><rect x="527.0" y="835.0" width="22.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.0" y="846.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.50%)</title><rect x="543.7" y="819.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="546.7" y="830.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (11 samples, 0.50%)</title><rect x="543.7" y="803.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="546.7" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (10 samples, 0.46%)</title><rect x="544.2" y="787.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="547.2" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (10 samples, 0.46%)</title><rect x="544.2" y="771.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="547.2" y="782.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.14%)</title><rect x="548.0" y="755.0" width="1.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="551.0" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="549.6" y="867.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="552.6" y="878.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="549.6" y="851.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="552.6" y="862.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="549.6" y="835.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="552.6" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.iterateOverNodes (26 samples, 1.19%)</title><rect x="550.1" y="931.0" width="14.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="553.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (26 samples, 1.19%)</title><rect x="550.1" y="915.0" width="14.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="553.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (26 samples, 1.19%)</title><rect x="550.1" y="899.0" width="14.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (4 samples, 0.18%)</title><rect x="552.3" y="883.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.18%)</title><rect x="552.3" y="867.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.18%)</title><rect x="552.3" y="851.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.18%)</title><rect x="552.3" y="835.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="555.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.14%)</title><rect x="554.4" y="883.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="557.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.14%)</title><rect x="554.4" y="867.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 0.69%)</title><rect x="556.1" y="883.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="559.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.69%)</title><rect x="556.1" y="867.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="559.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 0.69%)</title><rect x="556.1" y="851.0" width="8.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="559.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.69%)</title><rect x="556.1" y="835.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.64%)</title><rect x="556.6" y="819.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="559.6" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.05%)</title><rect x="556.6" y="803.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="559.6" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="556.6" y="787.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="559.6" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.59%)</title><rect x="557.1" y="803.0" width="7.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="560.1" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.55%)</title><rect x="557.7" y="787.0" width="6.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="560.7" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.55%)</title><rect x="557.7" y="771.0" width="6.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="560.7" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.55%)</title><rect x="557.7" y="755.0" width="6.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="560.7" y="766.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.55%)</title><rect x="557.7" y="739.0" width="6.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="560.7" y="750.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.55%)</title><rect x="557.7" y="723.0" width="6.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="560.7" y="734.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.55%)</title><rect x="557.7" y="707.0" width="6.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="560.7" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.55%)</title><rect x="557.7" y="691.0" width="6.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="560.7" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.55%)</title><rect x="557.7" y="675.0" width="6.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="560.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.await (35 samples, 1.60%)</title><rect x="564.2" y="931.0" width="18.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (34 samples, 1.55%)</title><rect x="564.2" y="915.0" width="18.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.14%)</title><rect x="565.8" y="899.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="568.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.14%)</title><rect x="565.8" y="883.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="568.8" y="894.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.09%)</title><rect x="566.3" y="867.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="569.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (28 samples, 1.28%)</title><rect x="567.4" y="899.0" width="15.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (28 samples, 1.28%)</title><rect x="567.4" y="883.0" width="15.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.4" y="894.0"></text>
</g>
<g>
<title>Unsafe_Park (8 samples, 0.37%)</title><rect x="567.9" y="867.0" width="4.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="570.9" y="878.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="567.9" y="851.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="570.9" y="862.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.14%)</title><rect x="568.5" y="851.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="571.5" y="862.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.05%)</title><rect x="569.5" y="835.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="572.5" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.09%)</title><rect x="570.1" y="851.0" width="1.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="573.1" y="862.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.09%)</title><rect x="571.2" y="851.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="574.2" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (18 samples, 0.82%)</title><rect x="572.2" y="867.0" width="9.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="575.2" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.78%)</title><rect x="572.8" y="851.0" width="9.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="575.8" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="572.8" y="835.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="575.8" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.73%)</title><rect x="573.3" y="835.0" width="8.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="576.3" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.59%)</title><rect x="573.9" y="819.0" width="7.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="576.9" y="830.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.50%)</title><rect x="573.9" y="803.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="576.9" y="814.0"></text>
</g>
<g>
<title>futex_wait (10 samples, 0.46%)</title><rect x="573.9" y="787.0" width="5.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="576.9" y="798.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.18%)</title><rect x="574.4" y="771.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="577.4" y="782.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (2 samples, 0.09%)</title><rect x="574.9" y="755.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="577.9" y="766.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.09%)</title><rect x="574.9" y="739.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="577.9" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.09%)</title><rect x="574.9" y="723.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="577.9" y="734.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="576.0" y="755.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="579.0" y="766.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="576.0" y="739.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="579.0" y="750.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.14%)</title><rect x="576.6" y="771.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="579.6" y="782.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.09%)</title><rect x="577.1" y="755.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="580.1" y="766.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.09%)</title><rect x="578.2" y="771.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="581.2" y="782.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (1 samples, 0.05%)</title><rect x="579.2" y="787.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="582.2" y="798.0"></text>
</g>
<g>
<title>get_timespec64 (2 samples, 0.09%)</title><rect x="579.8" y="803.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="582.8" y="814.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.05%)</title><rect x="580.3" y="787.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="583.3" y="798.0"></text>
</g>
<g>
<title>get_timespec64 (2 samples, 0.09%)</title><rect x="580.9" y="819.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="583.9" y="830.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="581.9" y="867.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="584.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.05%)</title><rect x="582.5" y="915.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="585.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.getResult (1 samples, 0.05%)</title><rect x="583.0" y="931.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="586.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.05%)</title><rect x="583.0" y="915.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="586.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.05%)</title><rect x="583.0" y="899.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="586.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.05%)</title><rect x="583.0" y="883.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="586.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.05%)</title><rect x="583.0" y="867.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="586.0" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/SimpleResponseAnalyzer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="583.6" y="931.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="586.6" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="583.6" y="915.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="586.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.&lt;init&gt; (1 samples, 0.05%)</title><rect x="583.6" y="899.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="586.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.&lt;init&gt; (1 samples, 0.05%)</title><rect x="583.6" y="883.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="586.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.&lt;init&gt; (1 samples, 0.05%)</title><rect x="583.6" y="867.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="583.6" y="851.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="586.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="583.6" y="835.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="586.6" y="846.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="583.6" y="819.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="586.6" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primariesFor (8 samples, 0.37%)</title><rect x="584.1" y="931.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="587.1" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primariesFor (8 samples, 0.37%)</title><rect x="584.1" y="915.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="587.1" y="926.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7 samples, 0.32%)</title><rect x="584.6" y="899.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="587.6" y="910.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7 samples, 0.32%)</title><rect x="584.6" y="883.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="587.6" y="894.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7 samples, 0.32%)</title><rect x="584.6" y="867.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="587.6" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpComparable (7 samples, 0.32%)</title><rect x="584.6" y="851.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="587.6" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.trySendAnswer (434 samples, 19.83%)</title><rect x="588.4" y="947.0" width="234.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="591.4" y="958.0">ru/mail/polis/service/alexander..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (434 samples, 19.83%)</title><rect x="588.4" y="931.0" width="234.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="591.4" y="942.0">one/nio/http/HttpSession.sendRe..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="589.5" y="915.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="592.5" y="926.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.05%)</title><rect x="589.5" y="899.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="592.5" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="589.5" y="883.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="592.5" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.05%)</title><rect x="589.5" y="867.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="592.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.05%)</title><rect x="590.0" y="915.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="593.0" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (417 samples, 19.05%)</title><rect x="590.6" y="915.0" width="224.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.6" y="926.0">one/nio/http/HttpSession.write..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.64%)</title><rect x="591.1" y="899.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.1" y="910.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.37%)</title><rect x="594.3" y="883.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="597.3" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (8 samples, 0.37%)</title><rect x="594.3" y="867.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="597.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.charAt (8 samples, 0.37%)</title><rect x="594.3" y="851.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.3" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.09%)</title><rect x="597.6" y="835.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="600.6" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (402 samples, 18.36%)</title><rect x="598.7" y="899.0" width="216.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="601.7" y="910.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (401 samples, 18.32%)</title><rect x="598.7" y="883.0" width="216.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="601.7" y="894.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.05%)</title><rect x="600.8" y="867.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.8" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.09%)</title><rect x="601.3" y="867.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (394 samples, 18.00%)</title><rect x="602.4" y="867.0" width="212.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="605.4" y="878.0">one/nio/net/Session$ArrayQue..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (394 samples, 18.00%)</title><rect x="602.4" y="851.0" width="212.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="605.4" y="862.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.32%)</title><rect x="603.5" y="835.0" width="3.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="606.5" y="846.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="605.7" y="819.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="608.7" y="830.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.09%)</title><rect x="606.2" y="819.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="609.2" y="830.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="606.2" y="803.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="609.2" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.05%)</title><rect x="606.7" y="803.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="609.7" y="814.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.09%)</title><rect x="607.3" y="835.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="610.3" y="846.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.05%)</title><rect x="608.4" y="835.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="611.4" y="846.0"></text>
</g>
<g>
<title>__libc_send (382 samples, 17.45%)</title><rect x="608.9" y="835.0" width="205.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="611.9" y="846.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (379 samples, 17.31%)</title><rect x="610.5" y="819.0" width="204.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="613.5" y="830.0">entry_SYSCALL_64_after_hwfr..</text>
</g>
<g>
<title>do_syscall_64 (379 samples, 17.31%)</title><rect x="610.5" y="803.0" width="204.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="613.5" y="814.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (375 samples, 17.13%)</title><rect x="612.7" y="787.0" width="202.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="615.7" y="798.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (372 samples, 16.99%)</title><rect x="612.7" y="771.0" width="200.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="615.7" y="782.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="613.7" y="755.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="616.7" y="766.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.05%)</title><rect x="614.3" y="755.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="617.3" y="766.0"></text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.05%)</title><rect x="614.8" y="755.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="617.8" y="766.0"></text>
</g>
<g>
<title>sock_sendmsg (358 samples, 16.35%)</title><rect x="615.4" y="755.0" width="192.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="618.4" y="766.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (349 samples, 15.94%)</title><rect x="615.4" y="739.0" width="188.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="618.4" y="750.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (348 samples, 15.90%)</title><rect x="615.9" y="723.0" width="187.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="618.9" y="734.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="616.4" y="707.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="619.4" y="718.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="617.0" y="707.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="620.0" y="718.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.09%)</title><rect x="617.5" y="707.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="620.5" y="718.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="617.5" y="691.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="620.5" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="618.1" y="691.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="621.1" y="702.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.05%)</title><rect x="618.6" y="707.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="621.6" y="718.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.05%)</title><rect x="619.1" y="707.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="622.1" y="718.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (339 samples, 15.49%)</title><rect x="619.7" y="707.0" width="182.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="622.7" y="718.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.05%)</title><rect x="621.8" y="691.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="624.8" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.09%)</title><rect x="622.4" y="691.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="625.4" y="702.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.09%)</title><rect x="623.4" y="691.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="626.4" y="702.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.05%)</title><rect x="624.0" y="675.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="627.0" y="686.0"></text>
</g>
<g>
<title>sk_page_frag_refill (5 samples, 0.23%)</title><rect x="624.5" y="691.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="627.5" y="702.0"></text>
</g>
<g>
<title>skb_page_frag_refill (5 samples, 0.23%)</title><rect x="624.5" y="675.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="627.5" y="686.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (16 samples, 0.73%)</title><rect x="627.2" y="691.0" width="8.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="630.2" y="702.0"></text>
</g>
<g>
<title>__alloc_skb (14 samples, 0.64%)</title><rect x="627.8" y="675.0" width="7.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="630.8" y="686.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.05%)</title><rect x="628.3" y="659.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="631.3" y="670.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (9 samples, 0.41%)</title><rect x="628.8" y="659.0" width="4.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="631.8" y="670.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (7 samples, 0.32%)</title><rect x="629.4" y="643.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="632.4" y="654.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.05%)</title><rect x="631.5" y="627.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="634.5" y="638.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.09%)</title><rect x="632.1" y="627.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="635.1" y="638.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.05%)</title><rect x="633.2" y="643.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="636.2" y="654.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.05%)</title><rect x="633.7" y="659.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="636.7" y="670.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.09%)</title><rect x="634.2" y="659.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="637.2" y="670.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="634.8" y="643.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="637.8" y="654.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="634.8" y="627.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="637.8" y="638.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.05%)</title><rect x="635.3" y="675.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="638.3" y="686.0"></text>
</g>
<g>
<title>tcp_push (307 samples, 14.02%)</title><rect x="635.8" y="691.0" width="165.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="638.8" y="702.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (304 samples, 13.89%)</title><rect x="637.5" y="675.0" width="163.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="640.5" y="686.0">__tcp_push_pending_fr..</text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.05%)</title><rect x="637.5" y="659.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="640.5" y="670.0"></text>
</g>
<g>
<title>tcp_write_xmit (303 samples, 13.84%)</title><rect x="638.0" y="659.0" width="163.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="641.0" y="670.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (285 samples, 13.02%)</title><rect x="640.2" y="643.0" width="153.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="643.2" y="654.0">__tcp_transmit_skb</text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.05%)</title><rect x="641.8" y="627.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="644.8" y="638.0"></text>
</g>
<g>
<title>ip_queue_xmit (278 samples, 12.70%)</title><rect x="642.3" y="627.0" width="149.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="645.3" y="638.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (278 samples, 12.70%)</title><rect x="642.3" y="611.0" width="149.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="645.3" y="622.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (269 samples, 12.29%)</title><rect x="643.9" y="595.0" width="145.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="646.9" y="606.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (40 samples, 1.83%)</title><rect x="645.0" y="579.0" width="21.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="648.0" y="590.0">_..</text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.09%)</title><rect x="646.6" y="563.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="649.6" y="574.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.09%)</title><rect x="647.7" y="563.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="650.7" y="574.0"></text>
</g>
<g>
<title>nf_hook_slow (33 samples, 1.51%)</title><rect x="648.8" y="563.0" width="17.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="651.8" y="574.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (5 samples, 0.23%)</title><rect x="648.8" y="547.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="651.8" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="648.8" y="531.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="651.8" y="542.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (4 samples, 0.18%)</title><rect x="649.3" y="531.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="652.3" y="542.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (27 samples, 1.23%)</title><rect x="651.5" y="547.0" width="14.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="654.5" y="558.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (27 samples, 1.23%)</title><rect x="651.5" y="531.0" width="14.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="654.5" y="542.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.09%)</title><rect x="654.2" y="515.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="657.2" y="526.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (1 samples, 0.05%)</title><rect x="655.3" y="515.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="658.3" y="526.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (2 samples, 0.09%)</title><rect x="655.8" y="515.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="658.8" y="526.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (16 samples, 0.73%)</title><rect x="656.9" y="515.0" width="8.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="659.9" y="526.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.09%)</title><rect x="661.2" y="499.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="664.2" y="510.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (6 samples, 0.27%)</title><rect x="662.3" y="499.0" width="3.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="665.3" y="510.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.09%)</title><rect x="664.4" y="483.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="667.4" y="494.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.05%)</title><rect x="665.5" y="515.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="668.5" y="526.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.05%)</title><rect x="666.0" y="547.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="669.0" y="558.0"></text>
</g>
<g>
<title>ip_output (225 samples, 10.28%)</title><rect x="666.6" y="579.0" width="121.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="669.6" y="590.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="667.1" y="563.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="670.1" y="574.0"></text>
</g>
<g>
<title>ip_finish_output (219 samples, 10.00%)</title><rect x="667.7" y="563.0" width="118.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="670.7" y="574.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.09%)</title><rect x="668.7" y="547.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="671.7" y="558.0"></text>
</g>
<g>
<title>__ip_finish_output (213 samples, 9.73%)</title><rect x="669.8" y="547.0" width="114.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="672.8" y="558.0">__ip_finish_ou..</text>
</g>
<g>
<title>ip_finish_output2 (213 samples, 9.73%)</title><rect x="669.8" y="531.0" width="114.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="672.8" y="542.0">ip_finish_outp..</text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.05%)</title><rect x="672.5" y="515.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="675.5" y="526.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (187 samples, 8.54%)</title><rect x="673.0" y="515.0" width="100.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="676.0" y="526.0">__local_bh_e..</text>
</g>
<g>
<title>do_softirq.part.20 (187 samples, 8.54%)</title><rect x="673.0" y="499.0" width="100.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="676.0" y="510.0">do_softirq.p..</text>
</g>
<g>
<title>do_softirq_own_stack (184 samples, 8.41%)</title><rect x="674.7" y="483.0" width="99.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="677.7" y="494.0">do_softirq_o..</text>
</g>
<g>
<title>__softirqentry_text_start (184 samples, 8.41%)</title><rect x="674.7" y="467.0" width="99.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="677.7" y="478.0">__softirqent..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.09%)</title><rect x="675.2" y="451.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="678.2" y="462.0"></text>
</g>
<g>
<title>net_rx_action (181 samples, 8.27%)</title><rect x="676.3" y="451.0" width="97.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="679.3" y="462.0">net_rx_action</text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.05%)</title><rect x="677.4" y="435.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="680.4" y="446.0"></text>
</g>
<g>
<title>process_backlog (178 samples, 8.13%)</title><rect x="677.9" y="435.0" width="95.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="680.9" y="446.0">process_bac..</text>
</g>
<g>
<title>__netif_receive_skb (176 samples, 8.04%)</title><rect x="679.0" y="419.0" width="94.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="682.0" y="430.0">__netif_rec..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.05%)</title><rect x="679.5" y="403.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="682.5" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (173 samples, 7.90%)</title><rect x="680.1" y="403.0" width="93.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="683.1" y="414.0">__netif_rec..</text>
</g>
<g>
<title>ip_rcv (173 samples, 7.90%)</title><rect x="680.1" y="387.0" width="93.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="683.1" y="398.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.09%)</title><rect x="680.1" y="371.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="683.1" y="382.0"></text>
</g>
<g>
<title>ip_rcv_finish (166 samples, 7.58%)</title><rect x="681.1" y="371.0" width="89.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="684.1" y="382.0">ip_rcv_fin..</text>
</g>
<g>
<title>ip_local_deliver (163 samples, 7.45%)</title><rect x="681.7" y="355.0" width="87.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="684.7" y="366.0">ip_local_d..</text>
</g>
<g>
<title>ip_local_deliver_finish (158 samples, 7.22%)</title><rect x="681.7" y="339.0" width="85.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="684.7" y="350.0">ip_local_d..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (158 samples, 7.22%)</title><rect x="681.7" y="323.0" width="85.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="684.7" y="334.0">ip_protoco..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.09%)</title><rect x="682.2" y="307.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="685.2" y="318.0"></text>
</g>
<g>
<title>tcp_v4_rcv (155 samples, 7.08%)</title><rect x="683.3" y="307.0" width="83.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="686.3" y="318.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.14%)</title><rect x="686.0" y="291.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="689.0" y="302.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.23%)</title><rect x="687.6" y="291.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="690.6" y="302.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="687.6" y="275.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="690.6" y="286.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.05%)</title><rect x="688.1" y="275.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="691.1" y="286.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.14%)</title><rect x="688.7" y="275.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="691.7" y="286.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (141 samples, 6.44%)</title><rect x="690.3" y="291.0" width="76.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="693.3" y="302.0">tcp_v4_d..</text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.05%)</title><rect x="690.3" y="275.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="693.3" y="286.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.05%)</title><rect x="690.8" y="275.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="693.8" y="286.0"></text>
</g>
<g>
<title>tcp_data_ready (3 samples, 0.14%)</title><rect x="691.4" y="275.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="694.4" y="286.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.05%)</title><rect x="693.0" y="275.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="696.0" y="286.0"></text>
</g>
<g>
<title>tcp_rcv_established (135 samples, 6.17%)</title><rect x="693.5" y="275.0" width="72.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="696.5" y="286.0">tcp_rcv_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.14%)</title><rect x="695.1" y="259.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="698.1" y="270.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.09%)</title><rect x="695.7" y="243.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="698.7" y="254.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.09%)</title><rect x="695.7" y="227.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="698.7" y="238.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.09%)</title><rect x="695.7" y="211.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="698.7" y="222.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.09%)</title><rect x="695.7" y="195.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="698.7" y="206.0"></text>
</g>
<g>
<title>tcp_ack (37 samples, 1.69%)</title><rect x="696.8" y="259.0" width="19.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="699.8" y="270.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (25 samples, 1.14%)</title><rect x="701.1" y="243.0" width="13.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="704.1" y="254.0"></text>
</g>
<g>
<title>__kfree_skb (16 samples, 0.73%)</title><rect x="703.2" y="227.0" width="8.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="706.2" y="238.0"></text>
</g>
<g>
<title>kfree_skbmem (6 samples, 0.27%)</title><rect x="703.2" y="211.0" width="3.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="706.2" y="222.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.23%)</title><rect x="703.8" y="195.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="706.8" y="206.0"></text>
</g>
<g>
<title>skb_release_all (10 samples, 0.46%)</title><rect x="706.5" y="211.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="709.5" y="222.0"></text>
</g>
<g>
<title>skb_release_data (10 samples, 0.46%)</title><rect x="706.5" y="195.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="709.5" y="206.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.18%)</title><rect x="709.7" y="179.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="712.7" y="190.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.18%)</title><rect x="709.7" y="163.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="712.7" y="174.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.09%)</title><rect x="710.8" y="147.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="713.8" y="158.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.09%)</title><rect x="711.9" y="227.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="714.9" y="238.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.05%)</title><rect x="712.9" y="227.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="715.9" y="238.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (2 samples, 0.09%)</title><rect x="713.5" y="227.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="716.5" y="238.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.05%)</title><rect x="714.6" y="243.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="717.6" y="254.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.05%)</title><rect x="715.1" y="243.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="718.1" y="254.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.09%)</title><rect x="715.6" y="243.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="718.6" y="254.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.14%)</title><rect x="716.7" y="259.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="719.7" y="270.0"></text>
</g>
<g>
<title>tcp_data_ready (79 samples, 3.61%)</title><rect x="718.3" y="259.0" width="42.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="721.3" y="270.0">tcp_..</text>
</g>
<g>
<title>sock_def_readable (79 samples, 3.61%)</title><rect x="718.3" y="243.0" width="42.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="721.3" y="254.0">sock..</text>
</g>
<g>
<title>__wake_up_sync_key (78 samples, 3.56%)</title><rect x="718.9" y="227.0" width="42.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="721.9" y="238.0">__wa..</text>
</g>
<g>
<title>__wake_up_common_lock (78 samples, 3.56%)</title><rect x="718.9" y="211.0" width="42.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="721.9" y="222.0">__wa..</text>
</g>
<g>
<title>__lock_text_start (78 samples, 3.56%)</title><rect x="718.9" y="195.0" width="42.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="721.9" y="206.0">__lo..</text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.18%)</title><rect x="760.9" y="259.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="763.9" y="270.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.05%)</title><rect x="763.1" y="259.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="766.1" y="270.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.05%)</title><rect x="763.1" y="243.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="766.1" y="254.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.05%)</title><rect x="763.1" y="227.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="766.1" y="238.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.05%)</title><rect x="763.6" y="259.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="766.6" y="270.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.05%)</title><rect x="764.1" y="259.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="767.1" y="270.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.09%)</title><rect x="764.7" y="259.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="767.7" y="270.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.05%)</title><rect x="765.8" y="259.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="768.8" y="270.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.05%)</title><rect x="766.3" y="291.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="769.3" y="302.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="766.8" y="339.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="769.8" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.18%)</title><rect x="767.4" y="339.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="770.4" y="350.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.09%)</title><rect x="767.9" y="323.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="770.9" y="334.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.09%)</title><rect x="767.9" y="307.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="770.9" y="318.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="769.0" y="323.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="772.0" y="334.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="769.0" y="307.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="772.0" y="318.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.05%)</title><rect x="769.0" y="291.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="772.0" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.05%)</title><rect x="769.5" y="355.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="772.5" y="366.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.05%)</title><rect x="770.1" y="355.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="773.1" y="366.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.05%)</title><rect x="770.6" y="371.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="773.6" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (2 samples, 0.09%)</title><rect x="771.2" y="371.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="774.2" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.09%)</title><rect x="772.2" y="371.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="775.2" y="382.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat] (2 samples, 0.09%)</title><rect x="772.2" y="355.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="775.2" y="366.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="772.8" y="339.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="775.8" y="350.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="772.8" y="323.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="775.8" y="334.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.05%)</title><rect x="773.3" y="403.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="776.3" y="414.0"></text>
</g>
<g>
<title>dev_queue_xmit (20 samples, 0.91%)</title><rect x="773.8" y="515.0" width="10.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="776.8" y="526.0"></text>
</g>
<g>
<title>__dev_queue_xmit (20 samples, 0.91%)</title><rect x="773.8" y="499.0" width="10.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="776.8" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="776.5" y="483.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="779.5" y="494.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 0.46%)</title><rect x="777.1" y="483.0" width="5.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="780.1" y="494.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="777.6" y="467.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="780.6" y="478.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.23%)</title><rect x="778.2" y="467.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="781.2" y="478.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.09%)</title><rect x="778.2" y="451.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="781.2" y="462.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.09%)</title><rect x="779.2" y="451.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="782.2" y="462.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.05%)</title><rect x="780.3" y="451.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="783.3" y="462.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.05%)</title><rect x="780.9" y="467.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="783.9" y="478.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.05%)</title><rect x="781.4" y="467.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="784.4" y="478.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.05%)</title><rect x="781.9" y="467.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="784.9" y="478.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.05%)</title><rect x="782.5" y="483.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="785.5" y="494.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.05%)</title><rect x="783.0" y="483.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="786.0" y="494.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.05%)</title><rect x="783.5" y="483.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="786.5" y="494.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.05%)</title><rect x="784.1" y="483.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="787.1" y="494.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.05%)</title><rect x="784.6" y="547.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="787.6" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="785.2" y="547.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="788.2" y="558.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="785.7" y="563.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="788.7" y="574.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.09%)</title><rect x="786.2" y="563.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="789.2" y="574.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.09%)</title><rect x="786.2" y="547.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="789.2" y="558.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="786.2" y="531.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="789.2" y="542.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.05%)</title><rect x="786.8" y="531.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="789.8" y="542.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat] (1 samples, 0.05%)</title><rect x="787.3" y="563.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="790.3" y="574.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.09%)</title><rect x="787.9" y="579.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="790.9" y="590.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.05%)</title><rect x="788.9" y="595.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="791.9" y="606.0"></text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 0.23%)</title><rect x="789.5" y="595.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="792.5" y="606.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.09%)</title><rect x="792.2" y="627.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="795.2" y="638.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.05%)</title><rect x="793.3" y="627.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="796.3" y="638.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.05%)</title><rect x="793.3" y="611.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="796.3" y="622.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.14%)</title><rect x="793.8" y="643.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="796.8" y="654.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.05%)</title><rect x="794.9" y="627.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="797.9" y="638.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.09%)</title><rect x="795.4" y="643.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="798.4" y="654.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (8 samples, 0.37%)</title><rect x="796.5" y="643.0" width="4.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="799.5" y="654.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.05%)</title><rect x="797.6" y="627.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="800.6" y="638.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.05%)</title><rect x="798.1" y="627.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="801.1" y="638.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.05%)</title><rect x="798.1" y="611.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="801.1" y="622.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.18%)</title><rect x="798.6" y="627.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="801.6" y="638.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.18%)</title><rect x="798.6" y="611.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="801.6" y="622.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.18%)</title><rect x="798.6" y="595.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="801.6" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.14%)</title><rect x="799.2" y="579.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="802.2" y="590.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.05%)</title><rect x="800.8" y="643.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="803.8" y="654.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.09%)</title><rect x="801.3" y="691.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="804.3" y="702.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.09%)</title><rect x="801.3" y="675.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="804.3" y="686.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="801.9" y="659.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="804.9" y="670.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.09%)</title><rect x="802.4" y="707.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="805.4" y="718.0"></text>
</g>
<g>
<title>security_socket_sendmsg (9 samples, 0.41%)</title><rect x="803.5" y="739.0" width="4.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="806.5" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (8 samples, 0.37%)</title><rect x="804.0" y="723.0" width="4.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="807.0" y="734.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (8 samples, 0.37%)</title><rect x="804.0" y="707.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="807.0" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.23%)</title><rect x="805.7" y="691.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="808.7" y="702.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (4 samples, 0.18%)</title><rect x="805.7" y="675.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="808.7" y="686.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.05%)</title><rect x="806.2" y="659.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="809.2" y="670.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.09%)</title><rect x="806.7" y="659.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="809.7" y="670.0"></text>
</g>
<g>
<title>aa_check_perms (1 samples, 0.05%)</title><rect x="807.3" y="643.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="810.3" y="654.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.05%)</title><rect x="807.8" y="675.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="810.8" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.41%)</title><rect x="808.3" y="755.0" width="4.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="811.3" y="766.0"></text>
</g>
<g>
<title>__fdget (8 samples, 0.37%)</title><rect x="808.3" y="739.0" width="4.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="811.3" y="750.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.37%)</title><rect x="808.3" y="723.0" width="4.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="811.3" y="734.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.32%)</title><rect x="808.9" y="707.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="811.9" y="718.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="812.7" y="739.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="815.7" y="750.0"></text>
</g>
<g>
<title>fput (3 samples, 0.14%)</title><rect x="813.2" y="771.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="816.2" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="814.8" y="883.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="817.8" y="894.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="814.8" y="867.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="817.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (13 samples, 0.59%)</title><rect x="815.4" y="915.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="818.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.23%)</title><rect x="819.7" y="899.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="822.7" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.23%)</title><rect x="819.7" y="883.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.7" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValidatedParameters.validateParameters (48 samples, 2.19%)</title><rect x="822.4" y="947.0" width="25.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="825.4" y="958.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValidatedParameters.unpackReplicasParameter (48 samples, 2.19%)</title><rect x="822.4" y="931.0" width="25.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="825.4" y="942.0">r..</text>
</g>
<g>
<title>com/google/common/base/Splitter.on (7 samples, 0.32%)</title><rect x="824.5" y="915.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="827.5" y="926.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (7 samples, 0.32%)</title><rect x="824.5" y="899.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="827.5" y="910.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1 samples, 0.05%)</title><rect x="826.7" y="883.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="829.7" y="894.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.09%)</title><rect x="827.2" y="883.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="830.2" y="894.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (37 samples, 1.69%)</title><rect x="828.3" y="915.0" width="19.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="831.3" y="926.0"></text>
</g>
<g>
<title>_new_instance_Java (1 samples, 0.05%)</title><rect x="828.3" y="899.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="831.3" y="910.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (19 samples, 0.87%)</title><rect x="828.8" y="899.0" width="10.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.8" y="910.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (16 samples, 0.73%)</title><rect x="830.4" y="883.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="833.4" y="894.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (16 samples, 0.73%)</title><rect x="830.4" y="867.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="833.4" y="878.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (16 samples, 0.73%)</title><rect x="830.4" y="851.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (16 samples, 0.73%)</title><rect x="830.4" y="835.0" width="8.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="833.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.73%)</title><rect x="830.4" y="819.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="833.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.73%)</title><rect x="830.4" y="803.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="833.4" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="838.5" y="787.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="841.5" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="838.5" y="771.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="841.5" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="838.5" y="755.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="841.5" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="838.5" y="739.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="841.5" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="838.5" y="723.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="841.5" y="734.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.05%)</title><rect x="838.5" y="707.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="841.5" y="718.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.next (4 samples, 0.18%)</title><rect x="839.1" y="899.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="842.1" y="910.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (1 samples, 0.05%)</title><rect x="841.2" y="899.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="844.2" y="910.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1 samples, 0.05%)</title><rect x="841.2" y="883.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="844.2" y="894.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1 samples, 0.05%)</title><rect x="841.2" y="867.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="844.2" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.50%)</title><rect x="841.8" y="899.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="844.8" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.50%)</title><rect x="841.8" y="883.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="844.8" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.50%)</title><rect x="841.8" y="867.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="844.8" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.50%)</title><rect x="841.8" y="851.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="844.8" y="862.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.50%)</title><rect x="841.8" y="835.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="844.8" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="847.2" y="819.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="850.2" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.05%)</title><rect x="847.2" y="803.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="850.2" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="847.2" y="787.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="850.2" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="847.2" y="771.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="850.2" y="782.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (1 samples, 0.05%)</title><rect x="847.7" y="899.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.7" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="847.7" y="883.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="850.7" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="847.7" y="867.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="850.7" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="847.7" y="851.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="850.7" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="847.7" y="835.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="850.7" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="847.7" y="819.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="850.7" y="830.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.05%)</title><rect x="847.7" y="803.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="850.7" y="814.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (13 samples, 0.59%)</title><rect x="848.2" y="979.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="851.2" y="990.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (13 samples, 0.59%)</title><rect x="848.2" y="963.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="851.2" y="974.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$108/785376788.run (13 samples, 0.59%)</title><rect x="848.2" y="947.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="851.2" y="958.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (13 samples, 0.59%)</title><rect x="848.2" y="931.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="851.2" y="942.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (13 samples, 0.59%)</title><rect x="848.2" y="915.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="851.2" y="926.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (13 samples, 0.59%)</title><rect x="848.2" y="899.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.2" y="910.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (12 samples, 0.55%)</title><rect x="848.2" y="883.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="851.2" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (11 samples, 0.50%)</title><rect x="848.2" y="867.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="851.2" y="878.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (11 samples, 0.50%)</title><rect x="848.2" y="851.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="851.2" y="862.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (11 samples, 0.50%)</title><rect x="848.2" y="835.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="851.2" y="846.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (11 samples, 0.50%)</title><rect x="848.2" y="819.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="851.2" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.23%)</title><rect x="848.2" y="803.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="851.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.23%)</title><rect x="848.2" y="787.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="851.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (4 samples, 0.18%)</title><rect x="848.2" y="771.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="851.2" y="782.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (4 samples, 0.18%)</title><rect x="848.2" y="755.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="851.2" y="766.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (4 samples, 0.18%)</title><rect x="848.2" y="739.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="851.2" y="750.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (4 samples, 0.18%)</title><rect x="848.2" y="723.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="851.2" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (4 samples, 0.18%)</title><rect x="848.2" y="707.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="851.2" y="718.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (4 samples, 0.18%)</title><rect x="848.2" y="691.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="851.2" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (4 samples, 0.18%)</title><rect x="848.2" y="675.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="851.2" y="686.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (4 samples, 0.18%)</title><rect x="848.2" y="659.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="851.2" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (4 samples, 0.18%)</title><rect x="848.2" y="643.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.2" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (4 samples, 0.18%)</title><rect x="848.2" y="627.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="851.2" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (4 samples, 0.18%)</title><rect x="848.2" y="611.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="851.2" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (4 samples, 0.18%)</title><rect x="848.2" y="595.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="851.2" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (4 samples, 0.18%)</title><rect x="848.2" y="579.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="851.2" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (4 samples, 0.18%)</title><rect x="848.2" y="563.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="851.2" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (4 samples, 0.18%)</title><rect x="848.2" y="547.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="851.2" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.05%)</title><rect x="848.2" y="531.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="851.2" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (1 samples, 0.05%)</title><rect x="848.2" y="515.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.2" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.05%)</title><rect x="848.2" y="499.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="851.2" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (1 samples, 0.05%)</title><rect x="848.2" y="483.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="851.2" y="494.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.05%)</title><rect x="848.2" y="467.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="851.2" y="478.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.05%)</title><rect x="848.2" y="451.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="851.2" y="462.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeType.getType (1 samples, 0.05%)</title><rect x="848.2" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="851.2" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.05%)</title><rect x="848.2" y="419.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.2" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.05%)</title><rect x="848.2" y="403.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="851.2" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.05%)</title><rect x="848.2" y="387.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="851.2" y="398.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (3 samples, 0.14%)</title><rect x="848.8" y="531.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="851.8" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.14%)</title><rect x="848.8" y="515.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="851.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.14%)</title><rect x="848.8" y="499.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="851.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (3 samples, 0.14%)</title><rect x="848.8" y="483.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="851.8" y="494.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (3 samples, 0.14%)</title><rect x="848.8" y="467.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.8" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.14%)</title><rect x="848.8" y="451.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="851.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.14%)</title><rect x="848.8" y="435.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="851.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (3 samples, 0.14%)</title><rect x="848.8" y="419.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="851.8" y="430.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (3 samples, 0.14%)</title><rect x="848.8" y="403.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="851.8" y="414.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (3 samples, 0.14%)</title><rect x="848.8" y="387.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="851.8" y="398.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.&lt;init&gt; (2 samples, 0.09%)</title><rect x="848.8" y="371.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="851.8" y="382.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.initialize (2 samples, 0.09%)</title><rect x="848.8" y="355.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="851.8" y="366.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (1 samples, 0.05%)</title><rect x="848.8" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="851.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="849.3" y="339.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="852.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.05%)</title><rect x="849.3" y="323.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="852.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/662822946.invoke (1 samples, 0.05%)</title><rect x="849.3" y="307.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="852.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="849.3" y="291.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="852.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.05%)</title><rect x="849.3" y="275.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="852.3" y="286.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="849.3" y="259.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="852.3" y="270.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="849.3" y="243.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="852.3" y="254.0"></text>
</g>
<g>
<title>jmm_GetThreadInfo (1 samples, 0.05%)</title><rect x="849.9" y="371.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="852.9" y="382.0"></text>
</g>
<g>
<title>Management::create_thread_info_instance(ThreadSnapshot*, Thread*) (1 samples, 0.05%)</title><rect x="849.9" y="355.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="852.9" y="366.0"></text>
</g>
<g>
<title>initialize_ThreadInfo_constructor_arguments(JavaCallArguments*, ThreadSnapshot*, Thread*) (1 samples, 0.05%)</title><rect x="849.9" y="339.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="852.9" y="350.0"></text>
</g>
<g>
<title>ThreadStackTrace::allocate_fill_stack_trace_element_array(Thread*) (1 samples, 0.05%)</title><rect x="849.9" y="323.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="852.9" y="334.0"></text>
</g>
<g>
<title>java_lang_StackTraceElement::create(methodHandle const&amp;, int, Thread*) (1 samples, 0.05%)</title><rect x="849.9" y="307.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="852.9" y="318.0"></text>
</g>
<g>
<title>java_lang_StackTraceElement::fill_in(Handle, InstanceKlass*, methodHandle const&amp;, int, int, Symbol*, Thread*) (1 samples, 0.05%)</title><rect x="849.9" y="291.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="852.9" y="302.0"></text>
</g>
<g>
<title>StringTable::intern(Symbol*, Thread*) (1 samples, 0.05%)</title><rect x="849.9" y="275.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="852.9" y="286.0"></text>
</g>
<g>
<title>StringTable::intern(Handle, unsigned short*, int, Thread*) (1 samples, 0.05%)</title><rect x="849.9" y="259.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="852.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor38.invoke (1 samples, 0.05%)</title><rect x="850.4" y="771.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="853.4" y="782.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttributes (1 samples, 0.05%)</title><rect x="850.4" y="755.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="853.4" y="766.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 0.05%)</title><rect x="850.4" y="739.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.4" y="750.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (1 samples, 0.05%)</title><rect x="850.4" y="723.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="853.4" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (1 samples, 0.05%)</title><rect x="850.4" y="707.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.4" y="718.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttributes (1 samples, 0.05%)</title><rect x="850.4" y="691.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="853.4" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttributes (1 samples, 0.05%)</title><rect x="850.4" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="853.4" y="686.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.getAttributes (1 samples, 0.05%)</title><rect x="850.4" y="659.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.4" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttributes (1 samples, 0.05%)</title><rect x="850.4" y="643.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="853.4" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttribute (1 samples, 0.05%)</title><rect x="850.4" y="627.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.4" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.getAttribute (1 samples, 0.05%)</title><rect x="850.4" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="853.4" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (1 samples, 0.05%)</title><rect x="850.4" y="595.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="853.4" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.05%)</title><rect x="850.4" y="579.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="853.4" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.05%)</title><rect x="850.4" y="563.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="853.4" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.05%)</title><rect x="850.4" y="547.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.4" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.05%)</title><rect x="850.4" y="531.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="853.4" y="542.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 0.05%)</title><rect x="850.4" y="515.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="853.4" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.05%)</title><rect x="850.4" y="499.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.05%)</title><rect x="850.4" y="483.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="853.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (1 samples, 0.05%)</title><rect x="850.4" y="467.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="853.4" y="478.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 0.05%)</title><rect x="850.4" y="451.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="853.4" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.05%)</title><rect x="850.4" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="853.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.05%)</title><rect x="850.4" y="419.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="853.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor44.invoke (1 samples, 0.05%)</title><rect x="850.4" y="403.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.4" y="414.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getAllThreadIds (1 samples, 0.05%)</title><rect x="850.4" y="387.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="853.4" y="398.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreads (1 samples, 0.05%)</title><rect x="850.4" y="371.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="853.4" y="382.0"></text>
</g>
<g>
<title>JVM_GetAllThreads (1 samples, 0.05%)</title><rect x="850.4" y="355.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="853.4" y="366.0"></text>
</g>
<g>
<title>ThreadsListEnumerator::ThreadsListEnumerator(Thread*, bool, bool) (1 samples, 0.05%)</title><rect x="850.4" y="339.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="853.4" y="350.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (3 samples, 0.14%)</title><rect x="850.9" y="803.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.9" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (3 samples, 0.14%)</title><rect x="850.9" y="787.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.9" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.14%)</title><rect x="850.9" y="771.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.9" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (3 samples, 0.14%)</title><rect x="850.9" y="755.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.9" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.14%)</title><rect x="850.9" y="739.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.9" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.14%)</title><rect x="850.9" y="723.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="853.9" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.14%)</title><rect x="850.9" y="707.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="853.9" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.14%)</title><rect x="850.9" y="691.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="853.9" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.14%)</title><rect x="850.9" y="675.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.9" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.14%)</title><rect x="850.9" y="659.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="853.9" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.14%)</title><rect x="850.9" y="643.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="853.9" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (3 samples, 0.14%)</title><rect x="850.9" y="627.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.9" y="638.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.14%)</title><rect x="850.9" y="611.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="853.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.14%)</title><rect x="850.9" y="595.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="853.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (3 samples, 0.14%)</title><rect x="850.9" y="579.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="853.9" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (3 samples, 0.14%)</title><rect x="850.9" y="563.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.9" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (3 samples, 0.14%)</title><rect x="850.9" y="547.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="853.9" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.14%)</title><rect x="850.9" y="531.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="853.9" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.lookup (1 samples, 0.05%)</title><rect x="850.9" y="515.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.9" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.hash (1 samples, 0.05%)</title><rect x="850.9" y="499.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="853.9" y="510.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (1 samples, 0.05%)</title><rect x="850.9" y="483.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="853.9" y="494.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.05%)</title><rect x="850.9" y="467.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="853.9" y="478.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="850.9" y="451.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="853.9" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (2 samples, 0.09%)</title><rect x="851.5" y="515.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="854.5" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.05%)</title><rect x="851.5" y="499.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="854.5" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (1 samples, 0.05%)</title><rect x="851.5" y="483.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="854.5" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.insert (1 samples, 0.05%)</title><rect x="851.5" y="467.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="854.5" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.hash (1 samples, 0.05%)</title><rect x="851.5" y="451.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="854.5" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.05%)</title><rect x="852.0" y="499.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="855.0" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.05%)</title><rect x="852.0" y="483.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.0" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.05%)</title><rect x="852.0" y="467.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.0" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.05%)</title><rect x="852.0" y="451.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="855.0" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.05%)</title><rect x="852.0" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="855.0" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.05%)</title><rect x="852.0" y="419.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="855.0" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.05%)</title><rect x="852.0" y="403.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.0" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.05%)</title><rect x="852.0" y="387.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="855.0" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.05%)</title><rect x="852.0" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="855.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.05%)</title><rect x="852.0" y="355.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (1 samples, 0.05%)</title><rect x="852.0" y="339.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="855.0" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.05%)</title><rect x="852.0" y="323.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.0" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.05%)</title><rect x="852.0" y="307.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="855.0" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.05%)</title><rect x="852.0" y="291.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.0" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.lookup (1 samples, 0.05%)</title><rect x="852.0" y="275.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.0" y="286.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (2 samples, 0.09%)</title><rect x="852.5" y="803.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="855.5" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.09%)</title><rect x="852.5" y="787.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="855.5" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.09%)</title><rect x="852.5" y="771.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="855.5" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.09%)</title><rect x="852.5" y="755.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="855.5" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (2 samples, 0.09%)</title><rect x="852.5" y="739.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.5" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (1 samples, 0.05%)</title><rect x="853.1" y="723.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="856.1" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (1 samples, 0.05%)</title><rect x="853.1" y="707.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.1" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (1 samples, 0.05%)</title><rect x="853.1" y="691.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.1" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getVariantFor (1 samples, 0.05%)</title><rect x="853.1" y="675.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="856.1" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.releaseOutputStream (1 samples, 0.05%)</title><rect x="853.6" y="803.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="856.6" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.flush (1 samples, 0.05%)</title><rect x="853.6" y="787.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="856.6" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.flush (1 samples, 0.05%)</title><rect x="853.6" y="771.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="856.6" y="782.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.05%)</title><rect x="853.6" y="755.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="856.6" y="766.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.05%)</title><rect x="853.6" y="739.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.6" y="750.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.write (1 samples, 0.05%)</title><rect x="853.6" y="723.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.6" y="734.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite (1 samples, 0.05%)</title><rect x="853.6" y="707.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.6" y="718.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite0 (1 samples, 0.05%)</title><rect x="853.6" y="691.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="856.6" y="702.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.05%)</title><rect x="853.6" y="675.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="856.6" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="853.6" y="659.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="856.6" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="853.6" y="643.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="856.6" y="654.0"></text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.05%)</title><rect x="853.6" y="627.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="856.6" y="638.0"></text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.05%)</title><rect x="853.6" y="611.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="856.6" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.05%)</title><rect x="853.6" y="595.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="856.6" y="606.0"></text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.05%)</title><rect x="853.6" y="579.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="856.6" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.05%)</title><rect x="853.6" y="563.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="856.6" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.05%)</title><rect x="853.6" y="547.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="856.6" y="558.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.05%)</title><rect x="853.6" y="531.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="856.6" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.05%)</title><rect x="853.6" y="515.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="856.6" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.05%)</title><rect x="853.6" y="499.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="856.6" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.05%)</title><rect x="853.6" y="483.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="856.6" y="494.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.setContextClassLoader (1 samples, 0.05%)</title><rect x="854.2" y="867.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="857.2" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="854.2" y="851.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="857.2" y="862.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.05%)</title><rect x="854.2" y="835.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="857.2" y="846.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="854.2" y="819.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="857.2" y="830.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.05%)</title><rect x="854.2" y="803.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="857.2" y="814.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="854.2" y="787.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="857.2" y="798.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPConnection.releaseOutputStream (1 samples, 0.05%)</title><rect x="854.7" y="883.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="857.7" y="894.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.05%)</title><rect x="854.7" y="867.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="857.7" y="878.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.05%)</title><rect x="854.7" y="851.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="857.7" y="862.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.write (1 samples, 0.05%)</title><rect x="854.7" y="835.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="857.7" y="846.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite (1 samples, 0.05%)</title><rect x="854.7" y="819.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="857.7" y="830.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite0 (1 samples, 0.05%)</title><rect x="854.7" y="803.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="857.7" y="814.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.05%)</title><rect x="854.7" y="787.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="857.7" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="854.7" y="771.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="857.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="854.7" y="755.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="857.7" y="766.0"></text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.05%)</title><rect x="854.7" y="739.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="857.7" y="750.0"></text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.05%)</title><rect x="854.7" y="723.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="857.7" y="734.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.05%)</title><rect x="854.7" y="707.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="857.7" y="718.0"></text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.05%)</title><rect x="854.7" y="691.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="857.7" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.05%)</title><rect x="854.7" y="675.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="857.7" y="686.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="854.7" y="659.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="857.7" y="670.0"></text>
</g>
<g>
<title>__release_sock (1 samples, 0.05%)</title><rect x="854.7" y="643.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="857.7" y="654.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.05%)</title><rect x="854.7" y="627.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="857.7" y="638.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.05%)</title><rect x="854.7" y="611.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="857.7" y="622.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.05%)</title><rect x="854.7" y="595.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="857.7" y="606.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.05%)</title><rect x="854.7" y="579.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="857.7" y="590.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.05%)</title><rect x="854.7" y="563.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="857.7" y="574.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.05%)</title><rect x="854.7" y="547.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="857.7" y="558.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.05%)</title><rect x="854.7" y="531.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="857.7" y="542.0"></text>
</g>
<g>
<title>msort_with_tmp.part.0 (1 samples, 0.05%)</title><rect x="855.2" y="1027.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="858.2" y="1038.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (351 samples, 16.03%)</title><rect x="855.8" y="1027.0" width="189.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="858.8" y="1038.0">one/nio/server/SelectorTh..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.05%)</title><rect x="860.6" y="1011.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="863.6" y="1022.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="861.2" y="1011.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="864.2" y="1022.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (1 samples, 0.05%)</title><rect x="861.2" y="995.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="864.2" y="1006.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="861.7" y="1011.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="864.7" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.14%)</title><rect x="862.3" y="1011.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="865.3" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.14%)</title><rect x="862.3" y="995.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="865.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.14%)</title><rect x="862.3" y="979.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="865.3" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (2 samples, 0.09%)</title><rect x="863.9" y="1011.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="866.9" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (63 samples, 2.88%)</title><rect x="864.9" y="1011.0" width="34.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="867.9" y="1022.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (58 samples, 2.65%)</title><rect x="867.6" y="995.0" width="31.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="870.6" y="1006.0">on..</text>
</g>
<g>
<title>JVM_IHashCode (3 samples, 0.14%)</title><rect x="872.0" y="979.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="875.0" y="990.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.14%)</title><rect x="872.0" y="963.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="875.0" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.09%)</title><rect x="872.5" y="947.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="875.5" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.09%)</title><rect x="872.5" y="931.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="875.5" y="942.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.05%)</title><rect x="873.0" y="915.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="876.0" y="926.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.05%)</title><rect x="873.0" y="899.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="876.0" y="910.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.05%)</title><rect x="873.0" y="883.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="876.0" y="894.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (1 samples, 0.05%)</title><rect x="873.0" y="867.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="876.0" y="878.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.05%)</title><rect x="873.0" y="851.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="876.0" y="862.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.05%)</title><rect x="873.0" y="835.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="876.0" y="846.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.05%)</title><rect x="873.0" y="819.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="876.0" y="830.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.05%)</title><rect x="873.0" y="803.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="876.0" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (6 samples, 0.27%)</title><rect x="873.6" y="979.0" width="3.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="876.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.64%)</title><rect x="876.8" y="979.0" width="19.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="879.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.18%)</title><rect x="876.8" y="963.0" width="2.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="879.8" y="974.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.18%)</title><rect x="876.8" y="947.0" width="2.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="879.8" y="958.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="878.4" y="931.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="881.4" y="942.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="878.4" y="915.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="881.4" y="926.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.05%)</title><rect x="879.0" y="963.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="882.0" y="974.0"></text>
</g>
<g>
<title>epoll_wait (31 samples, 1.42%)</title><rect x="879.5" y="963.0" width="16.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="882.5" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.82%)</title><rect x="886.5" y="947.0" width="9.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="889.5" y="958.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.05%)</title><rect x="886.5" y="931.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="889.5" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.78%)</title><rect x="887.0" y="931.0" width="9.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="890.0" y="942.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (15 samples, 0.69%)</title><rect x="888.1" y="915.0" width="8.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="891.1" y="926.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="888.1" y="899.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="891.1" y="910.0"></text>
</g>
<g>
<title>do_epoll_wait (14 samples, 0.64%)</title><rect x="888.7" y="899.0" width="7.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="891.7" y="910.0"></text>
</g>
<g>
<title>ep_poll (14 samples, 0.64%)</title><rect x="888.7" y="883.0" width="7.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="891.7" y="894.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (10 samples, 0.46%)</title><rect x="888.7" y="867.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="891.7" y="878.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.23%)</title><rect x="890.3" y="851.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="893.3" y="862.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (4 samples, 0.18%)</title><rect x="890.8" y="835.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="893.8" y="846.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.14%)</title><rect x="891.4" y="819.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="894.4" y="830.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.05%)</title><rect x="892.4" y="803.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="895.4" y="814.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.05%)</title><rect x="893.0" y="851.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="896.0" y="862.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="893.0" y="835.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="896.0" y="846.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="893.0" y="819.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="896.0" y="830.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.05%)</title><rect x="893.5" y="851.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="896.5" y="862.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.05%)</title><rect x="894.1" y="867.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="897.1" y="878.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (3 samples, 0.14%)</title><rect x="894.6" y="867.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="897.6" y="878.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.14%)</title><rect x="894.6" y="851.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="897.6" y="862.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.14%)</title><rect x="894.6" y="835.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="897.6" y="846.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.14%)</title><rect x="894.6" y="819.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="897.6" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="895.7" y="803.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="898.7" y="814.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.09%)</title><rect x="896.2" y="979.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="899.2" y="990.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.14%)</title><rect x="897.3" y="979.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="900.3" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (270 samples, 12.33%)</title><rect x="898.9" y="1011.0" width="145.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="901.9" y="1022.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (263 samples, 12.01%)</title><rect x="902.7" y="995.0" width="141.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="905.7" y="1006.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (192 samples, 8.77%)</title><rect x="902.7" y="979.0" width="103.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="905.7" y="990.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.05%)</title><rect x="904.8" y="963.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="907.8" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (160 samples, 7.31%)</title><rect x="905.4" y="963.0" width="86.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="908.4" y="974.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (158 samples, 7.22%)</title><rect x="906.5" y="947.0" width="85.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="909.5" y="958.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (144 samples, 6.58%)</title><rect x="906.5" y="931.0" width="77.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.5" y="942.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.27%)</title><rect x="907.0" y="915.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="910.0" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="908.1" y="899.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="911.1" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="908.1" y="883.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="911.1" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.09%)</title><rect x="908.6" y="899.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="911.6" y="910.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.05%)</title><rect x="909.7" y="899.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="912.7" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (7 samples, 0.32%)</title><rect x="910.2" y="915.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="913.2" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.32%)</title><rect x="910.2" y="899.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="913.2" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.09%)</title><rect x="910.8" y="883.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="913.8" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.09%)</title><rect x="910.8" y="867.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="913.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="911.8" y="883.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="914.8" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="911.8" y="867.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="914.8" y="878.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="912.4" y="883.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="915.4" y="894.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.09%)</title><rect x="912.9" y="883.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="915.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="913.5" y="867.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="916.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="913.5" y="851.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="916.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="913.5" y="835.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="916.5" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut (130 samples, 5.94%)</title><rect x="914.0" y="915.0" width="70.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="917.0" y="926.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.executeOrSendError (130 samples, 5.94%)</title><rect x="914.0" y="899.0" width="70.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="917.0" y="910.0">ru/mail/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (130 samples, 5.94%)</title><rect x="914.0" y="883.0" width="70.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="917.0" y="894.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (130 samples, 5.94%)</title><rect x="914.0" y="867.0" width="70.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="917.0" y="878.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (9 samples, 0.41%)</title><rect x="916.2" y="851.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="919.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (9 samples, 0.41%)</title><rect x="916.2" y="835.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="919.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (9 samples, 0.41%)</title><rect x="916.2" y="819.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (9 samples, 0.41%)</title><rect x="916.2" y="803.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="919.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.05%)</title><rect x="921.0" y="851.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="924.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.05%)</title><rect x="921.0" y="835.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="924.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (116 samples, 5.30%)</title><rect x="921.5" y="851.0" width="62.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="924.5" y="862.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (116 samples, 5.30%)</title><rect x="921.5" y="835.0" width="62.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="924.5" y="846.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (116 samples, 5.30%)</title><rect x="921.5" y="819.0" width="62.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="924.5" y="830.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (115 samples, 5.25%)</title><rect x="921.5" y="803.0" width="62.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="924.5" y="814.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (115 samples, 5.25%)</title><rect x="921.5" y="787.0" width="62.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="924.5" y="798.0">jdk/in..</text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.64%)</title><rect x="922.1" y="771.0" width="7.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="925.1" y="782.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.09%)</title><rect x="923.7" y="755.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="926.7" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.05%)</title><rect x="924.8" y="755.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="927.8" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.23%)</title><rect x="925.3" y="755.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="928.3" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.05%)</title><rect x="928.0" y="755.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="931.0" y="766.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.05%)</title><rect x="928.6" y="755.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="931.6" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="929.1" y="755.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="932.1" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (99 samples, 4.52%)</title><rect x="929.6" y="771.0" width="53.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="932.6" y="782.0">__pth..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (92 samples, 4.20%)</title><rect x="933.4" y="755.0" width="49.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="936.4" y="766.0">entry..</text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.09%)</title><rect x="933.4" y="739.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="936.4" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (90 samples, 4.11%)</title><rect x="934.5" y="739.0" width="48.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="937.5" y="750.0">do_s..</text>
</g>
<g>
<title>__x64_sys_futex (88 samples, 4.02%)</title><rect x="935.6" y="723.0" width="47.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="938.6" y="734.0">__x6..</text>
</g>
<g>
<title>do_futex (87 samples, 3.97%)</title><rect x="936.1" y="707.0" width="46.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="939.1" y="718.0">do_f..</text>
</g>
<g>
<title>futex_wake (81 samples, 3.70%)</title><rect x="938.8" y="691.0" width="43.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="941.8" y="702.0">fute..</text>
</g>
<g>
<title>get_futex_key (4 samples, 0.18%)</title><rect x="942.6" y="675.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="945.6" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.18%)</title><rect x="944.7" y="675.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="947.7" y="686.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.05%)</title><rect x="946.3" y="659.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="949.3" y="670.0"></text>
</g>
<g>
<title>wake_up_q (66 samples, 3.02%)</title><rect x="946.9" y="675.0" width="35.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="949.9" y="686.0">wak..</text>
</g>
<g>
<title>try_to_wake_up (66 samples, 3.02%)</title><rect x="946.9" y="659.0" width="35.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="949.9" y="670.0">try..</text>
</g>
<g>
<title>__lock_text_start (66 samples, 3.02%)</title><rect x="946.9" y="643.0" width="35.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="949.9" y="654.0">__l..</text>
</g>
<g>
<title>wake_up_q (1 samples, 0.05%)</title><rect x="982.5" y="691.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="985.5" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="983.0" y="771.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="986.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="983.5" y="803.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="986.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (14 samples, 0.64%)</title><rect x="984.1" y="931.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="987.1" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.get (14 samples, 0.64%)</title><rect x="984.1" y="915.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="987.1" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.27%)</title><rect x="984.1" y="899.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="987.1" y="910.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="986.8" y="883.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="989.8" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (8 samples, 0.37%)</title><rect x="987.3" y="899.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="990.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (8 samples, 0.37%)</title><rect x="987.3" y="883.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="990.3" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (8 samples, 0.37%)</title><rect x="987.3" y="867.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="990.3" y="878.0"></text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (4 samples, 0.18%)</title><rect x="987.9" y="851.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="990.9" y="862.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.14%)</title><rect x="990.0" y="851.0" width="1.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="993.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.32%)</title><rect x="991.6" y="963.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="994.6" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.05%)</title><rect x="991.6" y="947.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="994.6" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="991.6" y="931.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="994.6" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="991.6" y="915.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="994.6" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="991.6" y="899.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="994.6" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.27%)</title><rect x="992.2" y="947.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="995.2" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.27%)</title><rect x="992.2" y="931.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="995.2" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.05%)</title><rect x="995.4" y="963.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="998.4" y="974.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="995.4" y="947.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="998.4" y="958.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="995.4" y="931.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="998.4" y="942.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="995.4" y="915.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="998.4" y="926.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="995.4" y="899.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="998.4" y="910.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.05%)</title><rect x="995.4" y="883.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="998.4" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.55%)</title><rect x="995.9" y="963.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="998.9" y="974.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.32%)</title><rect x="998.1" y="947.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1001.1" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.27%)</title><rect x="998.6" y="931.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1001.6" y="942.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="1001.9" y="947.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1004.9" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.32%)</title><rect x="1002.4" y="963.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1005.4" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.32%)</title><rect x="1002.4" y="947.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1005.4" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="1003.5" y="931.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1006.5" y="942.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1003.5" y="915.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1006.5" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1003.5" y="899.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1006.5" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="1003.5" y="883.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1006.5" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="1003.5" y="867.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1006.5" y="878.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.05%)</title><rect x="1003.5" y="851.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1006.5" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.09%)</title><rect x="1004.0" y="931.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1007.0" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.09%)</title><rect x="1004.0" y="915.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1007.0" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.09%)</title><rect x="1004.0" y="899.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1007.0" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.09%)</title><rect x="1004.0" y="883.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1007.0" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="1004.6" y="867.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1007.6" y="878.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.05%)</title><rect x="1004.6" y="851.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1007.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.09%)</title><rect x="1005.1" y="931.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1008.1" y="942.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.09%)</title><rect x="1005.1" y="915.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1008.1" y="926.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.09%)</title><rect x="1005.1" y="899.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1008.1" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.09%)</title><rect x="1005.1" y="883.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1008.1" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1005.1" y="867.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1008.1" y="878.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1005.6" y="867.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1008.6" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1005.6" y="851.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1008.6" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="1005.6" y="835.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1008.6" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="1005.6" y="819.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1008.6" y="830.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.05%)</title><rect x="1005.6" y="803.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1008.6" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (71 samples, 3.24%)</title><rect x="1006.2" y="979.0" width="38.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1009.2" y="990.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (65 samples, 2.97%)</title><rect x="1009.4" y="963.0" width="35.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1012.4" y="974.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (11 samples, 0.50%)</title><rect x="1010.5" y="947.0" width="5.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1013.5" y="958.0"></text>
</g>
<g>
<title>__memmove_ssse3 (2 samples, 0.09%)</title><rect x="1012.1" y="931.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1015.1" y="942.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.27%)</title><rect x="1013.2" y="931.0" width="3.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1016.2" y="942.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.05%)</title><rect x="1014.3" y="915.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1017.3" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.09%)</title><rect x="1014.8" y="915.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1017.8" y="926.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.05%)</title><rect x="1015.9" y="915.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1018.9" y="926.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.05%)</title><rect x="1015.9" y="899.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1018.9" y="910.0"></text>
</g>
<g>
<title>__GI___recv (52 samples, 2.38%)</title><rect x="1016.4" y="947.0" width="28.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1019.4" y="958.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 2.15%)</title><rect x="1019.1" y="931.0" width="25.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1022.1" y="942.0">e..</text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.05%)</title><rect x="1019.1" y="915.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1022.1" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (46 samples, 2.10%)</title><rect x="1019.7" y="915.0" width="24.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1022.7" y="926.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (44 samples, 2.01%)</title><rect x="1020.7" y="899.0" width="23.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1023.7" y="910.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (40 samples, 1.83%)</title><rect x="1021.3" y="883.0" width="21.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1024.3" y="894.0">_..</text>
</g>
<g>
<title>sock_recvmsg (34 samples, 1.55%)</title><rect x="1022.4" y="867.0" width="18.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1025.4" y="878.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.05%)</title><rect x="1022.4" y="851.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1025.4" y="862.0"></text>
</g>
<g>
<title>inet6_recvmsg (27 samples, 1.23%)</title><rect x="1022.9" y="851.0" width="14.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1025.9" y="862.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="1024.0" y="835.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1027.0" y="846.0"></text>
</g>
<g>
<title>tcp_recvmsg (24 samples, 1.10%)</title><rect x="1024.5" y="835.0" width="12.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1027.5" y="846.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.14%)</title><rect x="1027.7" y="819.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1030.7" y="830.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.09%)</title><rect x="1027.7" y="803.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1030.7" y="814.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.05%)</title><rect x="1027.7" y="787.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1030.7" y="798.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.05%)</title><rect x="1027.7" y="771.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1030.7" y="782.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.05%)</title><rect x="1028.3" y="787.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1031.3" y="798.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.05%)</title><rect x="1028.8" y="803.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1031.8" y="814.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="1029.4" y="819.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1032.4" y="830.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.05%)</title><rect x="1029.9" y="819.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1032.9" y="830.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="1030.4" y="819.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1033.4" y="830.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="1030.4" y="803.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1033.4" y="814.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="1030.4" y="787.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1033.4" y="798.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="1031.0" y="819.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1034.0" y="830.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="1031.0" y="803.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1034.0" y="814.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.37%)</title><rect x="1031.5" y="819.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1034.5" y="830.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 0.37%)</title><rect x="1031.5" y="803.0" width="4.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1034.5" y="814.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.32%)</title><rect x="1032.1" y="787.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1035.1" y="798.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.18%)</title><rect x="1032.1" y="771.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1035.1" y="782.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.14%)</title><rect x="1034.2" y="771.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1037.2" y="782.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.09%)</title><rect x="1034.8" y="755.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1037.8" y="766.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.14%)</title><rect x="1035.8" y="819.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1038.8" y="830.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.14%)</title><rect x="1035.8" y="803.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1038.8" y="814.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.09%)</title><rect x="1036.4" y="787.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1039.4" y="798.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.05%)</title><rect x="1036.9" y="771.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1039.9" y="782.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.27%)</title><rect x="1037.4" y="851.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1040.4" y="862.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (6 samples, 0.27%)</title><rect x="1037.4" y="835.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1040.4" y="846.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.27%)</title><rect x="1037.4" y="819.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1040.4" y="830.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.23%)</title><rect x="1038.0" y="803.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1041.0" y="814.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.09%)</title><rect x="1039.6" y="787.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1042.6" y="798.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.05%)</title><rect x="1040.1" y="771.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1043.1" y="782.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.18%)</title><rect x="1040.7" y="867.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1043.7" y="878.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.09%)</title><rect x="1040.7" y="851.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1043.7" y="862.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="1040.7" y="835.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1043.7" y="846.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="1041.2" y="835.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1044.2" y="846.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="1041.2" y="819.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1044.2" y="830.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.09%)</title><rect x="1041.8" y="851.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1044.8" y="862.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.05%)</title><rect x="1042.8" y="883.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1045.8" y="894.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.09%)</title><rect x="1043.4" y="883.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1046.4" y="894.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="1044.5" y="1011.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1047.5" y="1022.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="1044.5" y="995.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1047.5" y="1006.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="1044.5" y="979.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1047.5" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Flusher.run (167 samples, 7.63%)</title><rect x="1045.0" y="1027.0" width="90.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1048.0" y="1038.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.serialize (167 samples, 7.63%)</title><rect x="1045.0" y="1011.0" width="90.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1048.0" y="1022.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/Iterator.forEachRemaining (167 samples, 7.63%)</title><rect x="1045.0" y="995.0" width="90.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1048.0" y="1006.0">java/util/..</text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (5 samples, 0.23%)</title><rect x="1046.1" y="979.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1049.1" y="990.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (5 samples, 0.23%)</title><rect x="1046.1" y="963.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1049.1" y="974.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (5 samples, 0.23%)</title><rect x="1046.1" y="947.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1049.1" y="958.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (5 samples, 0.23%)</title><rect x="1046.1" y="931.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1049.1" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractSpinedBuffer.count (1 samples, 0.05%)</title><rect x="1046.1" y="915.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1049.1" y="926.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$149/80324228.getAsBoolean (4 samples, 0.18%)</title><rect x="1046.6" y="915.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1049.6" y="926.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.18%)</title><rect x="1046.6" y="899.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1049.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.18%)</title><rect x="1046.6" y="883.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1049.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.14%)</title><rect x="1046.6" y="867.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1049.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.14%)</title><rect x="1046.6" y="851.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1049.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2 samples, 0.09%)</title><rect x="1047.1" y="835.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1050.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (2 samples, 0.09%)</title><rect x="1047.1" y="819.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1050.1" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.05%)</title><rect x="1048.2" y="867.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1051.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$136/1546050714.apply (1 samples, 0.05%)</title><rect x="1048.2" y="851.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1051.2" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (1 samples, 0.05%)</title><rect x="1048.2" y="835.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1051.2" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$$Lambda$141/1896505867.accept (160 samples, 7.31%)</title><rect x="1048.8" y="979.0" width="86.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1051.8" y="990.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.lambda$serialize$0 (160 samples, 7.31%)</title><rect x="1048.8" y="963.0" width="86.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1051.8" y="974.0">ru/mail/po..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (160 samples, 7.31%)</title><rect x="1048.8" y="947.0" width="86.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1051.8" y="958.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.05%)</title><rect x="1049.3" y="931.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1052.3" y="942.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.05%)</title><rect x="1049.3" y="915.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1052.3" y="926.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.05%)</title><rect x="1049.3" y="899.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1052.3" y="910.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.05%)</title><rect x="1049.3" y="883.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1052.3" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.05%)</title><rect x="1049.3" y="867.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1052.3" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (154 samples, 7.04%)</title><rect x="1049.8" y="931.0" width="83.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1052.8" y="942.0">sun/nio/c..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.09%)</title><rect x="1049.8" y="915.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1052.8" y="926.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.05%)</title><rect x="1050.4" y="899.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1053.4" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (1 samples, 0.05%)</title><rect x="1050.4" y="883.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1053.4" y="894.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.05%)</title><rect x="1050.4" y="867.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1053.4" y="878.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (1 samples, 0.05%)</title><rect x="1050.4" y="851.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1053.4" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (148 samples, 6.76%)</title><rect x="1050.9" y="915.0" width="79.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1053.9" y="926.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (148 samples, 6.76%)</title><rect x="1050.9" y="899.0" width="79.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1053.9" y="910.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (148 samples, 6.76%)</title><rect x="1050.9" y="883.0" width="79.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1053.9" y="894.0">sun/nio/c..</text>
</g>
<g>
<title>[unknown] (148 samples, 6.76%)</title><rect x="1050.9" y="867.0" width="79.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1053.9" y="878.0">[unknown]</text>
</g>
<g>
<title>__GI_write (148 samples, 6.76%)</title><rect x="1050.9" y="851.0" width="79.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1053.9" y="862.0">__GI_write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (146 samples, 6.67%)</title><rect x="1052.0" y="835.0" width="78.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1055.0" y="846.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (146 samples, 6.67%)</title><rect x="1052.0" y="819.0" width="78.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1055.0" y="830.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_write (141 samples, 6.44%)</title><rect x="1054.7" y="803.0" width="76.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1057.7" y="814.0">__x64_sy..</text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.05%)</title><rect x="1054.7" y="787.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1057.7" y="798.0"></text>
</g>
<g>
<title>ksys_write (140 samples, 6.40%)</title><rect x="1055.2" y="787.0" width="75.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1058.2" y="798.0">ksys_write</text>
</g>
<g>
<title>__fdget_pos (6 samples, 0.27%)</title><rect x="1055.2" y="771.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1058.2" y="782.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.23%)</title><rect x="1055.2" y="755.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1058.2" y="766.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.14%)</title><rect x="1056.3" y="739.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1059.3" y="750.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.05%)</title><rect x="1057.9" y="755.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1060.9" y="766.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.05%)</title><rect x="1058.5" y="771.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1061.5" y="782.0"></text>
</g>
<g>
<title>vfs_write (133 samples, 6.08%)</title><rect x="1059.0" y="771.0" width="71.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1062.0" y="782.0">vfs_write</text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.05%)</title><rect x="1059.0" y="755.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1062.0" y="766.0"></text>
</g>
<g>
<title>__vfs_write (128 samples, 5.85%)</title><rect x="1059.5" y="755.0" width="69.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1062.5" y="766.0">__vfs_w..</text>
</g>
<g>
<title>new_sync_write (128 samples, 5.85%)</title><rect x="1059.5" y="739.0" width="69.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1062.5" y="750.0">new_syn..</text>
</g>
<g>
<title>ext4_file_write_iter (128 samples, 5.85%)</title><rect x="1059.5" y="723.0" width="69.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1062.5" y="734.0">ext4_fi..</text>
</g>
<g>
<title>__generic_file_write_iter (126 samples, 5.76%)</title><rect x="1060.1" y="707.0" width="67.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1063.1" y="718.0">__gener..</text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.05%)</title><rect x="1060.6" y="691.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1063.6" y="702.0"></text>
</g>
<g>
<title>generic_perform_write (124 samples, 5.66%)</title><rect x="1061.2" y="691.0" width="66.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1064.2" y="702.0">generic..</text>
</g>
<g>
<title>ext4_da_write_begin (39 samples, 1.78%)</title><rect x="1061.7" y="675.0" width="21.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1064.7" y="686.0">e..</text>
</g>
<g>
<title>__ext4_journal_start_sb (36 samples, 1.64%)</title><rect x="1061.7" y="659.0" width="19.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1064.7" y="670.0"></text>
</g>
<g>
<title>ext4_journal_check_start (11 samples, 0.50%)</title><rect x="1061.7" y="643.0" width="5.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1064.7" y="654.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="1067.1" y="627.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1070.1" y="638.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="1067.1" y="611.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1070.1" y="622.0"></text>
</g>
<g>
<title>jbd2__journal_start (25 samples, 1.14%)</title><rect x="1067.6" y="643.0" width="13.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1070.6" y="654.0"></text>
</g>
<g>
<title>start_this_handle (25 samples, 1.14%)</title><rect x="1067.6" y="627.0" width="13.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1070.6" y="638.0"></text>
</g>
<g>
<title>_raw_read_lock (13 samples, 0.59%)</title><rect x="1071.4" y="611.0" width="7.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1074.4" y="622.0"></text>
</g>
<g>
<title>add_transaction_credits (5 samples, 0.23%)</title><rect x="1078.4" y="611.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1081.4" y="622.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (3 samples, 0.14%)</title><rect x="1081.1" y="659.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1084.1" y="670.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.09%)</title><rect x="1081.1" y="643.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1084.1" y="654.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.09%)</title><rect x="1081.1" y="627.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1084.1" y="638.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.05%)</title><rect x="1081.6" y="611.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1084.6" y="622.0"></text>
</g>
<g>
<title>wait_for_stable_page (1 samples, 0.05%)</title><rect x="1082.2" y="643.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1085.2" y="654.0"></text>
</g>
<g>
<title>ext4_da_write_end (74 samples, 3.38%)</title><rect x="1082.7" y="675.0" width="39.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1085.7" y="686.0">ext..</text>
</g>
<g>
<title>__ext4_journal_stop (12 samples, 0.55%)</title><rect x="1082.7" y="659.0" width="6.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1085.7" y="670.0"></text>
</g>
<g>
<title>jbd2_journal_stop (12 samples, 0.55%)</title><rect x="1082.7" y="643.0" width="6.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1085.7" y="654.0"></text>
</g>
<g>
<title>__wake_up (3 samples, 0.14%)</title><rect x="1087.0" y="627.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1090.0" y="638.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.14%)</title><rect x="1087.0" y="611.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1090.0" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.14%)</title><rect x="1087.0" y="595.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1090.0" y="606.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.05%)</title><rect x="1088.7" y="627.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1091.7" y="638.0"></text>
</g>
<g>
<title>generic_write_end (62 samples, 2.83%)</title><rect x="1089.2" y="659.0" width="33.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1092.2" y="670.0">ge..</text>
</g>
<g>
<title>__mark_inode_dirty (58 samples, 2.65%)</title><rect x="1089.2" y="643.0" width="31.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1092.2" y="654.0">__..</text>
</g>
<g>
<title>ext4_dirty_inode (58 samples, 2.65%)</title><rect x="1089.2" y="627.0" width="31.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1092.2" y="638.0">ex..</text>
</g>
<g>
<title>__ext4_journal_start_sb (11 samples, 0.50%)</title><rect x="1089.7" y="611.0" width="6.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1092.7" y="622.0"></text>
</g>
<g>
<title>ext4_journal_check_start (11 samples, 0.50%)</title><rect x="1089.7" y="595.0" width="6.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1092.7" y="606.0"></text>
</g>
<g>
<title>__ext4_journal_stop (4 samples, 0.18%)</title><rect x="1095.7" y="611.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1098.7" y="622.0"></text>
</g>
<g>
<title>jbd2_journal_stop (4 samples, 0.18%)</title><rect x="1095.7" y="595.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1098.7" y="606.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (42 samples, 1.92%)</title><rect x="1097.8" y="611.0" width="22.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1100.8" y="622.0">e..</text>
</g>
<g>
<title>ext4_mark_iloc_dirty (27 samples, 1.23%)</title><rect x="1097.8" y="595.0" width="14.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1100.8" y="606.0"></text>
</g>
<g>
<title>ext4_do_update_inode (24 samples, 1.10%)</title><rect x="1099.4" y="579.0" width="13.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1102.4" y="590.0"></text>
</g>
<g>
<title>__brelse (2 samples, 0.09%)</title><rect x="1100.0" y="563.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1103.0" y="574.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (10 samples, 0.46%)</title><rect x="1101.1" y="563.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1104.1" y="574.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (9 samples, 0.41%)</title><rect x="1101.6" y="547.0" width="4.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1104.6" y="558.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (10 samples, 0.46%)</title><rect x="1106.4" y="563.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1109.4" y="574.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.05%)</title><rect x="1107.0" y="547.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1110.0" y="558.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.62 (8 samples, 0.37%)</title><rect x="1107.5" y="547.0" width="4.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1110.5" y="558.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.05%)</title><rect x="1108.1" y="531.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1111.1" y="542.0"></text>
</g>
<g>
<title>crypto_shash_update (6 samples, 0.27%)</title><rect x="1108.6" y="531.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1111.6" y="542.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (4 samples, 0.18%)</title><rect x="1109.7" y="515.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1112.7" y="526.0"></text>
</g>
<g>
<title>from_kgid (1 samples, 0.05%)</title><rect x="1111.8" y="563.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1114.8" y="574.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.05%)</title><rect x="1111.8" y="547.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1114.8" y="558.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (15 samples, 0.69%)</title><rect x="1112.4" y="595.0" width="8.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1115.4" y="606.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (14 samples, 0.64%)</title><rect x="1112.4" y="579.0" width="7.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1115.4" y="590.0"></text>
</g>
<g>
<title>__getblk_gfp (12 samples, 0.55%)</title><rect x="1113.5" y="563.0" width="6.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1116.5" y="574.0"></text>
</g>
<g>
<title>__find_get_block (12 samples, 0.55%)</title><rect x="1113.5" y="547.0" width="6.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1116.5" y="558.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.05%)</title><rect x="1119.4" y="531.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1122.4" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.05%)</title><rect x="1119.9" y="579.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1122.9" y="590.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.05%)</title><rect x="1119.9" y="563.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1122.9" y="574.0"></text>
</g>
<g>
<title>block_write_end (4 samples, 0.18%)</title><rect x="1120.5" y="643.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1123.5" y="654.0"></text>
</g>
<g>
<title>__block_commit_write.isra.41 (4 samples, 0.18%)</title><rect x="1120.5" y="627.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1123.5" y="638.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.09%)</title><rect x="1122.6" y="675.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1125.6" y="686.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (7 samples, 0.32%)</title><rect x="1123.7" y="675.0" width="3.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1126.7" y="686.0"></text>
</g>
<g>
<title>copy_user_generic_string (5 samples, 0.23%)</title><rect x="1124.8" y="659.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1127.8" y="670.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.05%)</title><rect x="1127.5" y="675.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1130.5" y="686.0"></text>
</g>
<g>
<title>up_write (1 samples, 0.05%)</title><rect x="1128.0" y="707.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1131.0" y="718.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.05%)</title><rect x="1128.5" y="755.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1131.5" y="766.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.14%)</title><rect x="1129.1" y="755.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1132.1" y="766.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.14%)</title><rect x="1129.1" y="739.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1132.1" y="750.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.05%)</title><rect x="1129.6" y="723.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1132.6" y="734.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.05%)</title><rect x="1129.6" y="707.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1132.6" y="718.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.05%)</title><rect x="1130.2" y="723.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1133.2" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.18%)</title><rect x="1130.7" y="915.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1133.7" y="926.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="1130.7" y="899.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1133.7" y="910.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.05%)</title><rect x="1130.7" y="883.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1133.7" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.14%)</title><rect x="1131.2" y="899.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1134.2" y="910.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.05%)</title><rect x="1132.3" y="883.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1135.3" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.18%)</title><rect x="1132.9" y="931.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1135.9" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.09%)</title><rect x="1133.9" y="915.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1136.9" y="926.0"></text>
</g>
<g>
<title>start_thread (102 samples, 4.66%)</title><rect x="1135.0" y="1027.0" width="55.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1138.0" y="1038.0">start..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (102 samples, 4.66%)</title><rect x="1135.0" y="1011.0" width="55.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1138.0" y="1022.0">threa..</text>
</g>
<g>
<title>Thread::call_run() (102 samples, 4.66%)</title><rect x="1135.0" y="995.0" width="55.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1138.0" y="1006.0">Threa..</text>
</g>
<g>
<title>GangWorker::loop() (64 samples, 2.92%)</title><rect x="1135.0" y="979.0" width="34.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1138.0" y="990.0">Ga..</text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (1 samples, 0.05%)</title><rect x="1135.0" y="963.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1138.0" y="974.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.05%)</title><rect x="1135.0" y="947.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1138.0" y="958.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::G1SerialFreeCollectionSetClosure::do_heap_region(HeapRegion*) (1 samples, 0.05%)</title><rect x="1135.0" y="931.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1138.0" y="942.0"></text>
</g>
<g>
<title>SurvRateGroup::record_surviving_words(int, unsigned long) (1 samples, 0.05%)</title><rect x="1135.0" y="915.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1138.0" y="926.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (57 samples, 2.60%)</title><rect x="1135.6" y="963.0" width="30.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1138.6" y="974.0">G1..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (53 samples, 2.42%)</title><rect x="1135.6" y="947.0" width="28.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1138.6" y="958.0">G1..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.05%)</title><rect x="1136.6" y="931.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1139.6" y="942.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (50 samples, 2.28%)</title><rect x="1137.2" y="931.0" width="26.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1140.2" y="942.0">G..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (27 samples, 1.23%)</title><rect x="1149.0" y="915.0" width="14.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.0" y="926.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (1 samples, 0.05%)</title><rect x="1159.3" y="899.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.3" y="910.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (7 samples, 0.32%)</title><rect x="1159.8" y="899.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.8" y="910.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;TypeArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.05%)</title><rect x="1163.6" y="915.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1166.6" y="926.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.09%)</title><rect x="1164.1" y="947.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1167.1" y="958.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.09%)</title><rect x="1164.1" y="931.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1167.1" y="942.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.09%)</title><rect x="1164.1" y="915.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1167.1" y="926.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (2 samples, 0.09%)</title><rect x="1164.1" y="899.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1167.1" y="910.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.05%)</title><rect x="1164.1" y="883.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1167.1" y="894.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (1 samples, 0.05%)</title><rect x="1164.1" y="867.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1167.1" y="878.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.05%)</title><rect x="1164.1" y="851.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1167.1" y="862.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.05%)</title><rect x="1164.1" y="835.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1167.1" y="846.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.05%)</title><rect x="1164.7" y="883.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1167.7" y="894.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.09%)</title><rect x="1165.2" y="947.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1168.2" y="958.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.09%)</title><rect x="1165.2" y="931.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1168.2" y="942.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.09%)</title><rect x="1165.2" y="915.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.2" y="926.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (6 samples, 0.27%)</title><rect x="1166.3" y="963.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.3" y="974.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (6 samples, 0.27%)</title><rect x="1166.3" y="947.0" width="3.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1169.3" y="958.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.68] (5 samples, 0.23%)</title><rect x="1166.3" y="931.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.3" y="942.0"></text>
</g>
<g>
<title>StackFrameStream::StackFrameStream(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="1166.8" y="915.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.8" y="926.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.05%)</title><rect x="1166.8" y="899.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1169.8" y="910.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.05%)</title><rect x="1166.8" y="883.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.8" y="894.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.14%)</title><rect x="1167.4" y="915.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1170.4" y="926.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (1 samples, 0.05%)</title><rect x="1167.9" y="899.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1170.9" y="910.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.05%)</title><rect x="1168.4" y="899.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.4" y="910.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.05%)</title><rect x="1168.4" y="883.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.4" y="894.0"></text>
</g>
<g>
<title>ParallelSPCleanupThreadClosure::do_thread(Thread*) (1 samples, 0.05%)</title><rect x="1169.0" y="931.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.0" y="942.0"></text>
</g>
<g>
<title>ObjectSynchronizer::deflate_thread_local_monitors(Thread*, DeflateMonitorCounters*) (1 samples, 0.05%)</title><rect x="1169.0" y="915.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1172.0" y="926.0"></text>
</g>
<g>
<title>Thread::muxAcquire(long volatile*, char const*) (1 samples, 0.05%)</title><rect x="1169.0" y="899.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.0" y="910.0"></text>
</g>
<g>
<title>JavaThread::run() (36 samples, 1.64%)</title><rect x="1169.5" y="979.0" width="19.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1172.5" y="990.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (36 samples, 1.64%)</title><rect x="1169.5" y="963.0" width="19.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.5" y="974.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (36 samples, 1.64%)</title><rect x="1169.5" y="947.0" width="19.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1172.5" y="958.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (33 samples, 1.51%)</title><rect x="1170.1" y="931.0" width="17.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.1" y="942.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (33 samples, 1.51%)</title><rect x="1170.1" y="915.0" width="17.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.1" y="926.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (18 samples, 0.82%)</title><rect x="1170.1" y="899.0" width="9.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.1" y="910.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.05%)</title><rect x="1170.1" y="883.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1173.1" y="894.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (1 samples, 0.05%)</title><rect x="1170.1" y="867.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.1" y="878.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.05%)</title><rect x="1170.1" y="851.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1173.1" y="862.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.05%)</title><rect x="1170.1" y="835.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1173.1" y="846.0"></text>
</g>
<g>
<title>Matcher::match() (2 samples, 0.09%)</title><rect x="1170.6" y="883.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1173.6" y="894.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (2 samples, 0.09%)</title><rect x="1170.6" y="867.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1173.6" y="878.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.09%)</title><rect x="1170.6" y="851.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1173.6" y="862.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (1 samples, 0.05%)</title><rect x="1170.6" y="835.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.6" y="846.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (1 samples, 0.05%)</title><rect x="1170.6" y="819.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.6" y="830.0"></text>
</g>
<g>
<title>Type::singleton() const (1 samples, 0.05%)</title><rect x="1171.1" y="835.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1174.1" y="846.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.05%)</title><rect x="1171.7" y="883.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.7" y="894.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.05%)</title><rect x="1171.7" y="867.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1174.7" y="878.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.05%)</title><rect x="1171.7" y="851.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1174.7" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (14 samples, 0.64%)</title><rect x="1172.2" y="883.0" width="7.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1175.2" y="894.0"></text>
</g>
<g>
<title>LiveRangeMap::compress_uf_map_for_nodes() (1 samples, 0.05%)</title><rect x="1172.2" y="867.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.2" y="878.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (2 samples, 0.09%)</title><rect x="1172.8" y="867.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.8" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (2 samples, 0.09%)</title><rect x="1173.8" y="867.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.8" y="878.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="1173.8" y="851.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.8" y="862.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (1 samples, 0.05%)</title><rect x="1174.4" y="851.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.4" y="862.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="1174.4" y="835.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1177.4" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.05%)</title><rect x="1174.9" y="867.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1177.9" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (3 samples, 0.14%)</title><rect x="1175.4" y="867.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1178.4" y="878.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (1 samples, 0.05%)</title><rect x="1176.0" y="851.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1179.0" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.05%)</title><rect x="1176.5" y="851.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.5" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (1 samples, 0.05%)</title><rect x="1177.1" y="867.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.1" y="878.0"></text>
</g>
<g>
<title>find_hihghest_bit(unsigned int) (1 samples, 0.05%)</title><rect x="1177.1" y="851.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1180.1" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.05%)</title><rect x="1177.6" y="867.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1180.6" y="878.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.05%)</title><rect x="1178.1" y="867.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.1" y="878.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="1178.1" y="851.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.1" y="862.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.05%)</title><rect x="1178.7" y="867.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.7" y="878.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.05%)</title><rect x="1178.7" y="851.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.7" y="862.0"></text>
</g>
<g>
<title>jmpDirNode::is_block_proj() const (1 samples, 0.05%)</title><rect x="1179.2" y="867.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.2" y="878.0"></text>
</g>
<g>
<title>Compile::Optimize() (9 samples, 0.41%)</title><rect x="1179.8" y="899.0" width="4.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.8" y="910.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (3 samples, 0.14%)</title><rect x="1179.8" y="883.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.8" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.14%)</title><rect x="1179.8" y="867.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.8" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.14%)</title><rect x="1179.8" y="851.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.8" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (2 samples, 0.09%)</title><rect x="1180.3" y="835.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.3" y="846.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.05%)</title><rect x="1180.3" y="819.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.3" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.05%)</title><rect x="1180.8" y="819.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.8" y="830.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.05%)</title><rect x="1181.4" y="883.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.4" y="894.0"></text>
</g>
<g>
<title>AddPNode::bottom_type() const (1 samples, 0.05%)</title><rect x="1181.4" y="867.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.4" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (4 samples, 0.18%)</title><rect x="1181.9" y="883.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.9" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.05%)</title><rect x="1181.9" y="867.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.9" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.05%)</title><rect x="1182.5" y="867.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.5" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.05%)</title><rect x="1182.5" y="851.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.5" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.05%)</title><rect x="1183.0" y="867.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.0" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (1 samples, 0.05%)</title><rect x="1183.0" y="851.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.0" y="862.0"></text>
</g>
<g>
<title>PhaseTransform::makecon(Type const*) (1 samples, 0.05%)</title><rect x="1183.0" y="835.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.0" y="846.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.05%)</title><rect x="1183.5" y="867.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.5" y="878.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.05%)</title><rect x="1183.5" y="851.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.5" y="862.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.05%)</title><rect x="1183.5" y="835.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.5" y="846.0"></text>
</g>
<g>
<title>CmpPNode::Opcode() const (1 samples, 0.05%)</title><rect x="1183.5" y="819.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.5" y="830.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.05%)</title><rect x="1184.1" y="883.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.1" y="894.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.05%)</title><rect x="1184.1" y="867.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.1" y="878.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="1184.1" y="851.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.1" y="862.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (1 samples, 0.05%)</title><rect x="1184.1" y="835.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.1" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.23%)</title><rect x="1184.6" y="899.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.6" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.23%)</title><rect x="1184.6" y="883.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.6" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.23%)</title><rect x="1184.6" y="867.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.6" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.23%)</title><rect x="1184.6" y="851.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.6" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.23%)</title><rect x="1184.6" y="835.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.6" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.18%)</title><rect x="1184.6" y="819.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.6" y="830.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1184.6" y="803.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.6" y="814.0"></text>
</g>
<g>
<title>GraphKit::set_results_for_java_call(CallJavaNode*, bool, bool) (1 samples, 0.05%)</title><rect x="1184.6" y="787.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.6" y="798.0"></text>
</g>
<g>
<title>GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool) [clone .part.179] (1 samples, 0.05%)</title><rect x="1184.6" y="771.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.6" y="782.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1184.6" y="755.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.6" y="766.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.05%)</title><rect x="1184.6" y="739.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.6" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1185.1" y="803.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.1" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1185.1" y="787.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.1" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1185.1" y="771.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.1" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1185.1" y="755.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.1" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1185.1" y="739.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.1" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1185.1" y="723.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.1" y="734.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1185.1" y="707.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.1" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1185.1" y="691.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.1" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1185.1" y="675.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.1" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1185.1" y="659.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.1" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1185.1" y="643.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.1" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1185.1" y="627.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.1" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1185.1" y="611.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.1" y="622.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1185.1" y="595.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.1" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1185.1" y="579.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.1" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1185.1" y="563.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.1" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1185.1" y="547.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.1" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1185.1" y="531.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.1" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1185.1" y="515.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.1" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1185.1" y="499.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.1" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1185.1" y="483.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.1" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1185.1" y="467.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.1" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1185.1" y="451.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.1" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1185.1" y="435.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.1" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1185.1" y="419.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.1" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1185.1" y="403.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.1" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1185.1" y="387.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.1" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1185.1" y="371.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.1" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1185.1" y="355.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.1" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1185.1" y="339.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.1" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1185.1" y="323.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.1" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1185.1" y="307.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.1" y="318.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1185.1" y="291.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.1" y="302.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.05%)</title><rect x="1185.1" y="275.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.1" y="286.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.05%)</title><rect x="1185.1" y="259.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.1" y="270.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.05%)</title><rect x="1185.1" y="243.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.1" y="254.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.05%)</title><rect x="1185.1" y="227.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.1" y="238.0"></text>
</g>
<g>
<title>Type::operator new(unsigned long) (1 samples, 0.05%)</title><rect x="1185.1" y="211.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.1" y="222.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.09%)</title><rect x="1185.7" y="803.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.7" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.09%)</title><rect x="1185.7" y="787.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.7" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.09%)</title><rect x="1185.7" y="771.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.7" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.09%)</title><rect x="1185.7" y="755.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.7" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.09%)</title><rect x="1185.7" y="739.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.7" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.09%)</title><rect x="1185.7" y="723.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.7" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.09%)</title><rect x="1185.7" y="707.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.7" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.09%)</title><rect x="1185.7" y="691.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.7" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.09%)</title><rect x="1185.7" y="675.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.7" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.09%)</title><rect x="1185.7" y="659.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.7" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.09%)</title><rect x="1185.7" y="643.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.7" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.09%)</title><rect x="1185.7" y="627.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.7" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.09%)</title><rect x="1185.7" y="611.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.7" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1185.7" y="595.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.7" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1185.7" y="579.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.7" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1185.7" y="563.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.7" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1185.7" y="547.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.7" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1185.7" y="531.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.7" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1185.7" y="515.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.7" y="526.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.05%)</title><rect x="1185.7" y="499.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.7" y="510.0"></text>
</g>
<g>
<title>ciBytecodeStream::has_method_type() (1 samples, 0.05%)</title><rect x="1185.7" y="483.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.7" y="494.0"></text>
</g>
<g>
<title>ConstantPool::has_method_type_at_if_loaded(constantPoolHandle const&amp;, int) (1 samples, 0.05%)</title><rect x="1185.7" y="467.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.7" y="478.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1186.2" y="595.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.2" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1186.2" y="579.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.2" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1186.2" y="563.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.2" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1186.2" y="547.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.2" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1186.2" y="531.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.2" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1186.2" y="515.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.2" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1186.2" y="499.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.2" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1186.2" y="483.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.2" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1186.2" y="467.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.2" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1186.2" y="451.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.2" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1186.2" y="435.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.2" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1186.2" y="419.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.2" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1186.2" y="403.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.2" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1186.2" y="387.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.2" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1186.2" y="371.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.2" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1186.2" y="355.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.2" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1186.2" y="339.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.2" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1186.2" y="323.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.2" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1186.2" y="307.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.2" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1186.2" y="291.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.2" y="302.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1186.2" y="275.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.2" y="286.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1186.2" y="259.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.2" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1186.2" y="243.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.2" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1186.2" y="227.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.2" y="238.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1186.2" y="211.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.2" y="222.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1186.2" y="195.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.2" y="206.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1186.2" y="179.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.2" y="190.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1186.2" y="163.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.2" y="174.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1186.2" y="147.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.2" y="158.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1186.2" y="131.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.2" y="142.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1186.2" y="115.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.2" y="126.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1186.2" y="99.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.2" y="110.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1186.2" y="83.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.2" y="94.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.05%)</title><rect x="1186.2" y="67.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.2" y="78.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1186.2" y="51.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.2" y="62.0"></text>
</g>
<g>
<title>RegionNode::Value(PhaseGVN*) const (1 samples, 0.05%)</title><rect x="1186.2" y="35.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.2" y="46.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.05%)</title><rect x="1186.8" y="819.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.8" y="830.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.05%)</title><rect x="1186.8" y="803.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.8" y="814.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.05%)</title><rect x="1186.8" y="787.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.8" y="798.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.05%)</title><rect x="1186.8" y="771.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.8" y="782.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.05%)</title><rect x="1186.8" y="755.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.8" y="766.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.05%)</title><rect x="1186.8" y="739.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.8" y="750.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.05%)</title><rect x="1187.3" y="899.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.3" y="910.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.05%)</title><rect x="1187.3" y="883.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.3" y="894.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.09%)</title><rect x="1187.8" y="931.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.8" y="942.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (2 samples, 0.09%)</title><rect x="1187.8" y="915.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.8" y="926.0"></text>
</g>
<g>
<title>Compilation::compile_method() (2 samples, 0.09%)</title><rect x="1187.8" y="899.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.8" y="910.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (2 samples, 0.09%)</title><rect x="1187.8" y="883.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.8" y="894.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (1 samples, 0.05%)</title><rect x="1187.8" y="867.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.8" y="878.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.05%)</title><rect x="1187.8" y="851.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.8" y="862.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.05%)</title><rect x="1187.8" y="835.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.8" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.05%)</title><rect x="1187.8" y="819.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.8" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.05%)</title><rect x="1187.8" y="803.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.8" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.05%)</title><rect x="1187.8" y="787.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.8" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1187.8" y="771.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.8" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1187.8" y="755.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.8" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1187.8" y="739.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.8" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.05%)</title><rect x="1187.8" y="723.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.8" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.05%)</title><rect x="1187.8" y="707.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.8" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1187.8" y="691.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.8" y="702.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1187.8" y="675.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.8" y="686.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1187.8" y="659.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.8" y="670.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.05%)</title><rect x="1187.8" y="643.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.8" y="654.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.05%)</title><rect x="1187.8" y="627.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.8" y="638.0"></text>
</g>
<g>
<title>GraphBuilder::check_cast(int) (1 samples, 0.05%)</title><rect x="1187.8" y="611.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.8" y="622.0"></text>
</g>
<g>
<title>CheckCast::visit(InstructionVisitor*) (1 samples, 0.05%)</title><rect x="1187.8" y="595.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.8" y="606.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.05%)</title><rect x="1188.4" y="867.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.4" y="878.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (1 samples, 0.05%)</title><rect x="1188.4" y="851.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.4" y="862.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (1 samples, 0.05%)</title><rect x="1188.4" y="835.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.4" y="846.0"></text>
</g>
<g>
<title>LIRGenerator::do_Invoke(Invoke*) (1 samples, 0.05%)</title><rect x="1188.4" y="819.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.4" y="830.0"></text>
</g>
<g>
<title>LIRGenerator::invoke_load_arguments(Invoke*, GrowableArray&lt;LIRItem*&gt;*, GrowableArray&lt;LIR_OprDesc*&gt; const*) (1 samples, 0.05%)</title><rect x="1188.4" y="803.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.4" y="814.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.05%)</title><rect x="1188.9" y="979.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.9" y="990.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.05%)</title><rect x="1189.5" y="979.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.5" y="990.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.05%)</title><rect x="1189.5" y="963.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.5" y="974.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (1 samples, 0.05%)</title><rect x="1189.5" y="947.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.5" y="958.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.05%)</title><rect x="1189.5" y="931.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.5" y="942.0"></text>
</g>
<g>
<title>VM_ThreadDump::doit() (1 samples, 0.05%)</title><rect x="1189.5" y="915.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.5" y="926.0"></text>
</g>
<g>
<title>ThreadStackTrace::dump_stack_at_safepoint(int) (1 samples, 0.05%)</title><rect x="1189.5" y="899.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.5" y="910.0"></text>
</g>
<g>
<title>vframe::sender() const (1 samples, 0.05%)</title><rect x="1189.5" y="883.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.5" y="894.0"></text>
</g>
</g>
</svg>
