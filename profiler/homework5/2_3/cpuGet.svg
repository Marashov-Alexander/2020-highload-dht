<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (9,408 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.05%)</title><rect x="10.0" y="915.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.05%)</title><rect x="10.0" y="899.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (4 samples, 0.04%)</title><rect x="10.1" y="883.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.1" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.02%)</title><rect x="10.4" y="867.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.4" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.02%)</title><rect x="10.4" y="851.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.4" y="862.0"></text>
</g>
<g>
<title>[no_Java_frame] (3 samples, 0.03%)</title><rect x="10.6" y="915.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="13.6" y="926.0"></text>
</g>
<g>
<title>[not_walkable_Java] (18 samples, 0.19%)</title><rect x="11.0" y="915.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="14.0" y="926.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (2 samples, 0.02%)</title><rect x="11.0" y="899.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="14.0" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (9 samples, 0.10%)</title><rect x="11.3" y="899.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="14.3" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (7 samples, 0.07%)</title><rect x="11.5" y="883.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="14.5" y="894.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.04%)</title><rect x="11.5" y="867.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="14.5" y="878.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (2 samples, 0.02%)</title><rect x="11.6" y="851.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="14.6" y="862.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.03%)</title><rect x="12.0" y="867.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.0" y="878.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.02%)</title><rect x="12.1" y="851.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="15.1" y="862.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.02%)</title><rect x="12.1" y="835.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="15.1" y="846.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.02%)</title><rect x="12.1" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="15.1" y="830.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.03%)</title><rect x="12.4" y="899.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="15.4" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (4 samples, 0.04%)</title><rect x="12.8" y="899.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.8" y="910.0"></text>
</g>
<g>
<title>[unknown_Java] (133 samples, 1.41%)</title><rect x="13.4" y="915.0" width="16.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="16.4" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (131 samples, 1.39%)</title><rect x="13.4" y="899.0" width="16.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="16.4" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (131 samples, 1.39%)</title><rect x="13.4" y="883.0" width="16.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="16.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="29.8" y="899.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="32.8" y="910.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.02%)</title><rect x="29.8" y="883.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="32.8" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.02%)</title><rect x="30.1" y="915.0" width="0.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="33.1" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="30.1" y="899.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="33.1" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="30.1" y="883.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="33.1" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="30.1" y="867.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="33.1" y="878.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.02%)</title><rect x="30.1" y="851.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="33.1" y="862.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.02%)</title><rect x="30.1" y="835.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="33.1" y="846.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.02%)</title><rect x="30.1" y="819.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="33.1" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.02%)</title><rect x="30.1" y="803.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="33.1" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.02%)</title><rect x="30.1" y="787.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="33.1" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.run (8,884 samples, 94.43%)</title><rect x="30.3" y="915.0" width="1114.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.3" y="926.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (8,884 samples, 94.43%)</title><rect x="30.3" y="899.0" width="1114.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="33.3" y="910.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (8,884 samples, 94.43%)</title><rect x="30.3" y="883.0" width="1114.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.3" y="894.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (21 samples, 0.22%)</title><rect x="31.2" y="867.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (21 samples, 0.22%)</title><rect x="31.2" y="851.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (21 samples, 0.22%)</title><rect x="31.2" y="835.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.2" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$86/914604914.run (2 samples, 0.02%)</title><rect x="33.2" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="36.2" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$151/1948971226.run (3 samples, 0.03%)</title><rect x="33.5" y="819.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="36.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (259 samples, 2.75%)</title><rect x="33.8" y="867.0" width="32.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.8" y="878.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (241 samples, 2.56%)</title><rect x="36.0" y="851.0" width="30.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="39.0" y="862.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (120 samples, 1.28%)</title><rect x="36.6" y="835.0" width="15.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.6" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.03%)</title><rect x="37.2" y="819.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (5 samples, 0.05%)</title><rect x="37.6" y="819.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (10 samples, 0.11%)</title><rect x="38.2" y="819.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="41.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (8 samples, 0.09%)</title><rect x="38.5" y="803.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (8 samples, 0.09%)</title><rect x="38.5" y="787.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.getExclusiveOwnerThread (2 samples, 0.02%)</title><rect x="39.1" y="771.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="42.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (6 samples, 0.06%)</title><rect x="39.5" y="819.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.06%)</title><rect x="39.5" y="803.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.04%)</title><rect x="39.7" y="787.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.04%)</title><rect x="39.7" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.04%)</title><rect x="39.7" y="755.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.7" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.03%)</title><rect x="39.9" y="739.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="42.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (90 samples, 0.96%)</title><rect x="40.4" y="819.0" width="11.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (90 samples, 0.96%)</title><rect x="40.4" y="803.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.4" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.02%)</title><rect x="41.5" y="787.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="44.5" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (40 samples, 0.43%)</title><rect x="41.7" y="787.0" width="5.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="44.7" y="798.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (3 samples, 0.03%)</title><rect x="42.4" y="771.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="45.4" y="782.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (5 samples, 0.05%)</title><rect x="42.7" y="771.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="45.7" y="782.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 0.11%)</title><rect x="43.5" y="771.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="46.5" y="782.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (4 samples, 0.04%)</title><rect x="43.9" y="755.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="46.9" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="44.4" y="755.0" width="0.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="47.4" y="766.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.02%)</title><rect x="44.9" y="771.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="47.9" y="782.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.04%)</title><rect x="45.1" y="771.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="48.1" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.04%)</title><rect x="45.1" y="755.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="48.1" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.03%)</title><rect x="45.2" y="739.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="48.2" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.03%)</title><rect x="45.2" y="723.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="48.2" y="734.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.03%)</title><rect x="45.2" y="707.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="48.2" y="718.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.02%)</title><rect x="45.2" y="691.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="48.2" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.04%)</title><rect x="45.6" y="771.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="48.6" y="782.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (3 samples, 0.03%)</title><rect x="46.4" y="771.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="49.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.41%)</title><rect x="46.7" y="787.0" width="4.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="49.7" y="798.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (5 samples, 0.05%)</title><rect x="46.7" y="771.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="49.7" y="782.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (32 samples, 0.34%)</title><rect x="47.6" y="771.0" width="4.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="50.6" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.32%)</title><rect x="47.9" y="755.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="50.9" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 0.32%)</title><rect x="47.9" y="739.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="50.9" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (26 samples, 0.28%)</title><rect x="48.4" y="723.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="51.4" y="734.0"></text>
</g>
<g>
<title>do_futex (26 samples, 0.28%)</title><rect x="48.4" y="707.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="51.4" y="718.0"></text>
</g>
<g>
<title>futex_wait (23 samples, 0.24%)</title><rect x="48.6" y="691.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="51.6" y="702.0"></text>
</g>
<g>
<title>futex_wait_queue_me (9 samples, 0.10%)</title><rect x="48.8" y="675.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="51.8" y="686.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.06%)</title><rect x="49.1" y="659.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="52.1" y="670.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.06%)</title><rect x="49.1" y="643.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="52.1" y="654.0"></text>
</g>
<g>
<title>futex_wait_setup (11 samples, 0.12%)</title><rect x="49.9" y="675.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="52.9" y="686.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.02%)</title><rect x="51.0" y="659.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="54.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.02%)</title><rect x="51.6" y="835.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="54.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.02%)</title><rect x="51.6" y="819.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="54.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.02%)</title><rect x="51.6" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="54.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.02%)</title><rect x="51.6" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (113 samples, 1.20%)</title><rect x="51.9" y="835.0" width="14.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (112 samples, 1.19%)</title><rect x="52.0" y="819.0" width="14.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="55.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (112 samples, 1.19%)</title><rect x="52.0" y="803.0" width="14.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="55.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (108 samples, 1.15%)</title><rect x="52.5" y="787.0" width="13.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="55.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (108 samples, 1.15%)</title><rect x="52.5" y="771.0" width="13.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="55.5" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (24 samples, 0.26%)</title><rect x="53.0" y="755.0" width="3.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="56.0" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.02%)</title><rect x="53.5" y="739.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="56.5" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.04%)</title><rect x="53.9" y="739.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="56.9" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.06%)</title><rect x="54.4" y="739.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="57.4" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_lock (7 samples, 0.07%)</title><rect x="55.2" y="739.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="58.2" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (78 samples, 0.83%)</title><rect x="56.0" y="755.0" width="9.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="59.0" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (73 samples, 0.78%)</title><rect x="56.7" y="739.0" width="9.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="59.7" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="56.7" y="723.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="59.7" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (71 samples, 0.75%)</title><rect x="56.9" y="723.0" width="8.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="59.9" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (67 samples, 0.71%)</title><rect x="57.4" y="707.0" width="8.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="60.4" y="718.0"></text>
</g>
<g>
<title>do_futex (67 samples, 0.71%)</title><rect x="57.4" y="691.0" width="8.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="60.4" y="702.0"></text>
</g>
<g>
<title>futex_wake (66 samples, 0.70%)</title><rect x="57.4" y="675.0" width="8.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="60.4" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.04%)</title><rect x="59.2" y="659.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="62.2" y="670.0"></text>
</g>
<g>
<title>wake_up_q (48 samples, 0.51%)</title><rect x="59.7" y="659.0" width="6.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="62.7" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (48 samples, 0.51%)</title><rect x="59.7" y="643.0" width="6.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="62.7" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (48 samples, 0.51%)</title><rect x="59.7" y="627.0" width="6.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="62.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$152/1332248785.run (2,549 samples, 27.09%)</title><rect x="66.4" y="867.0" width="319.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.4" y="878.0">ru/mail/polis/service/alexander/marashov/Re..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.lambda$get$0 (2,549 samples, 27.09%)</title><rect x="66.4" y="851.0" width="319.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.4" y="862.0">ru/mail/polis/service/alexander/marashov/Re..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager.rowGet (2,530 samples, 26.89%)</title><rect x="66.4" y="835.0" width="317.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.4" y="846.0">ru/mail/polis/service/alexander/marashov/Da..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.rowGet (2,521 samples, 26.80%)</title><rect x="66.6" y="819.0" width="316.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="69.6" y="830.0">ru/mail/polis/dao/DAO.rowGet</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (46 samples, 0.49%)</title><rect x="66.7" y="803.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="69.7" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (46 samples, 0.49%)</title><rect x="66.7" y="787.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.7" y="798.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (44 samples, 0.47%)</title><rect x="66.9" y="771.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.9" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (44 samples, 0.47%)</title><rect x="66.9" y="755.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.9" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (44 samples, 0.47%)</title><rect x="66.9" y="739.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.9" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (44 samples, 0.47%)</title><rect x="66.9" y="723.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.9" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (44 samples, 0.47%)</title><rect x="66.9" y="707.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.9" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (44 samples, 0.47%)</title><rect x="66.9" y="691.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="69.9" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (44 samples, 0.47%)</title><rect x="66.9" y="675.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (44 samples, 0.47%)</title><rect x="66.9" y="659.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (44 samples, 0.47%)</title><rect x="66.9" y="643.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (23 samples, 0.24%)</title><rect x="66.9" y="627.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (6 samples, 0.06%)</title><rect x="66.9" y="611.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.9" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.06%)</title><rect x="66.9" y="595.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.06%)</title><rect x="66.9" y="579.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.05%)</title><rect x="67.1" y="563.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="70.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.05%)</title><rect x="67.1" y="547.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="70.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.05%)</title><rect x="67.1" y="531.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="70.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.05%)</title><rect x="67.1" y="515.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.1" y="526.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="67.1" y="499.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="70.1" y="510.0"></text>
</g>
<g>
<title>pread64 (5 samples, 0.05%)</title><rect x="67.1" y="483.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="70.1" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.05%)</title><rect x="67.1" y="467.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="70.1" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.04%)</title><rect x="67.2" y="451.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="70.2" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.04%)</title><rect x="67.2" y="435.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="70.2" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.04%)</title><rect x="67.2" y="419.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="70.2" y="430.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.04%)</title><rect x="67.2" y="403.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="70.2" y="414.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="67.2" y="387.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="70.2" y="398.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="67.2" y="371.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="70.2" y="382.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.02%)</title><rect x="67.2" y="355.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="70.2" y="366.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.02%)</title><rect x="67.2" y="339.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="70.2" y="350.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="67.4" y="387.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="70.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (4 samples, 0.04%)</title><rect x="67.7" y="611.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="70.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.04%)</title><rect x="67.7" y="595.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="70.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.04%)</title><rect x="67.7" y="579.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="70.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.04%)</title><rect x="67.7" y="563.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.03%)</title><rect x="67.7" y="547.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.03%)</title><rect x="67.7" y="531.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="70.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.03%)</title><rect x="67.7" y="515.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="67.7" y="499.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="70.7" y="510.0"></text>
</g>
<g>
<title>pread64 (3 samples, 0.03%)</title><rect x="67.7" y="483.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="70.7" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="67.7" y="467.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="70.7" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.03%)</title><rect x="67.7" y="451.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="70.7" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.03%)</title><rect x="67.7" y="435.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="70.7" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.03%)</title><rect x="67.7" y="419.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="70.7" y="430.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.03%)</title><rect x="67.7" y="403.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="70.7" y="414.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.03%)</title><rect x="67.7" y="387.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="70.7" y="398.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.03%)</title><rect x="67.7" y="371.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="70.7" y="382.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.02%)</title><rect x="67.7" y="355.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="70.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (13 samples, 0.14%)</title><rect x="68.2" y="611.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (13 samples, 0.14%)</title><rect x="68.2" y="595.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="71.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (13 samples, 0.14%)</title><rect x="68.2" y="579.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="71.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.10%)</title><rect x="68.4" y="563.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.06%)</title><rect x="68.7" y="547.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.06%)</title><rect x="68.7" y="531.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="71.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.06%)</title><rect x="68.7" y="515.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="71.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="68.7" y="499.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="71.7" y="510.0"></text>
</g>
<g>
<title>pread64 (6 samples, 0.06%)</title><rect x="68.7" y="483.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="71.7" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.06%)</title><rect x="68.7" y="467.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="71.7" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.06%)</title><rect x="68.7" y="451.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="71.7" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (6 samples, 0.06%)</title><rect x="68.7" y="435.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="71.7" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (6 samples, 0.06%)</title><rect x="68.7" y="419.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="71.7" y="430.0"></text>
</g>
<g>
<title>vfs_read (6 samples, 0.06%)</title><rect x="68.7" y="403.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="71.7" y="414.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.04%)</title><rect x="68.8" y="387.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="71.8" y="398.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.03%)</title><rect x="68.9" y="371.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="71.9" y="382.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.03%)</title><rect x="68.9" y="355.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="71.9" y="366.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.03%)</title><rect x="68.9" y="339.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="71.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.value (21 samples, 0.22%)</title><rect x="69.8" y="627.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="72.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (4 samples, 0.04%)</title><rect x="69.8" y="611.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="72.8" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.04%)</title><rect x="69.8" y="595.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="72.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.04%)</title><rect x="69.8" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="72.8" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.04%)</title><rect x="69.8" y="563.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.04%)</title><rect x="69.8" y="547.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.04%)</title><rect x="69.8" y="531.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.04%)</title><rect x="69.8" y="515.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.8" y="526.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="69.8" y="499.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="72.8" y="510.0"></text>
</g>
<g>
<title>pread64 (4 samples, 0.04%)</title><rect x="69.8" y="483.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="72.8" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.04%)</title><rect x="69.8" y="467.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="72.8" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.04%)</title><rect x="69.8" y="451.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="72.8" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.04%)</title><rect x="69.8" y="435.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="72.8" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.04%)</title><rect x="69.8" y="419.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="72.8" y="430.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.04%)</title><rect x="69.8" y="403.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="72.8" y="414.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.04%)</title><rect x="69.8" y="387.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="72.8" y="398.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.04%)</title><rect x="69.8" y="371.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="72.8" y="382.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.03%)</title><rect x="70.0" y="355.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="73.0" y="366.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.03%)</title><rect x="70.0" y="339.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="73.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (7 samples, 0.07%)</title><rect x="70.3" y="611.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.07%)</title><rect x="70.3" y="595.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.07%)</title><rect x="70.3" y="579.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.07%)</title><rect x="70.3" y="563.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.3" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="70.3" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.04%)</title><rect x="70.6" y="547.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.04%)</title><rect x="70.6" y="531.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.04%)</title><rect x="70.6" y="515.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.6" y="526.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="70.6" y="499.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="73.6" y="510.0"></text>
</g>
<g>
<title>pread64 (3 samples, 0.03%)</title><rect x="70.7" y="483.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="73.7" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="70.7" y="467.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="73.7" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.03%)</title><rect x="70.7" y="451.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="73.7" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.03%)</title><rect x="70.7" y="435.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="73.7" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.03%)</title><rect x="70.7" y="419.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="73.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getLongFrom (4 samples, 0.04%)</title><rect x="71.2" y="611.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.04%)</title><rect x="71.2" y="595.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="74.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.04%)</title><rect x="71.2" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.03%)</title><rect x="71.3" y="563.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="74.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.03%)</title><rect x="71.3" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="74.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.03%)</title><rect x="71.3" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.03%)</title><rect x="71.3" y="515.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="71.3" y="499.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="74.3" y="510.0"></text>
</g>
<g>
<title>pread64 (3 samples, 0.03%)</title><rect x="71.3" y="483.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="74.3" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="71.3" y="467.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="74.3" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.03%)</title><rect x="71.3" y="451.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="74.3" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.03%)</title><rect x="71.3" y="435.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="74.3" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.03%)</title><rect x="71.3" y="419.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="74.3" y="430.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.03%)</title><rect x="71.3" y="403.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="74.3" y="414.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.03%)</title><rect x="71.3" y="387.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="74.3" y="398.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="71.5" y="371.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="74.5" y="382.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="71.5" y="355.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="74.5" y="366.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="71.5" y="339.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="74.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (6 samples, 0.06%)</title><rect x="71.7" y="611.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.06%)</title><rect x="71.7" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.06%)</title><rect x="71.7" y="579.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.05%)</title><rect x="71.8" y="563.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="74.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.02%)</title><rect x="72.0" y="547.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="75.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.02%)</title><rect x="72.0" y="531.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="75.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.02%)</title><rect x="72.0" y="515.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="72.0" y="499.0" width="0.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="75.0" y="510.0"></text>
</g>
<g>
<title>pread64 (2 samples, 0.02%)</title><rect x="72.0" y="483.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="75.0" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="72.0" y="467.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="75.0" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="72.0" y="451.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="75.0" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.02%)</title><rect x="72.0" y="435.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="75.0" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (2 samples, 0.02%)</title><rect x="72.0" y="419.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="75.0" y="430.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.02%)</title><rect x="72.0" y="403.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="75.0" y="414.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="72.0" y="387.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="75.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.rowIterator (2,474 samples, 26.30%)</title><rect x="72.5" y="803.0" width="310.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.5" y="814.0">ru/mail/polis/dao/alexander/marashov/DAOIm..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (157 samples, 1.67%)</title><rect x="72.5" y="787.0" width="19.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="75.5" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (157 samples, 1.67%)</title><rect x="72.5" y="771.0" width="19.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="75.5" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (152 samples, 1.62%)</title><rect x="72.8" y="755.0" width="19.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="75.8" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (152 samples, 1.62%)</title><rect x="72.8" y="739.0" width="19.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="75.8" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (152 samples, 1.62%)</title><rect x="72.8" y="723.0" width="19.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.8" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (152 samples, 1.62%)</title><rect x="72.8" y="707.0" width="19.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.8" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (150 samples, 1.59%)</title><rect x="73.1" y="691.0" width="18.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="76.1" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (150 samples, 1.59%)</title><rect x="73.1" y="675.0" width="18.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="76.1" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (149 samples, 1.58%)</title><rect x="73.2" y="659.0" width="18.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (149 samples, 1.58%)</title><rect x="73.2" y="643.0" width="18.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (149 samples, 1.58%)</title><rect x="73.2" y="627.0" width="18.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="76.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (67 samples, 0.71%)</title><rect x="73.3" y="611.0" width="8.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (24 samples, 0.26%)</title><rect x="73.5" y="595.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (23 samples, 0.24%)</title><rect x="73.6" y="579.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (23 samples, 0.24%)</title><rect x="73.6" y="563.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.04%)</title><rect x="73.6" y="547.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="76.6" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.04%)</title><rect x="73.6" y="531.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="76.6" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.02%)</title><rect x="73.8" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.8" y="526.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.02%)</title><rect x="73.8" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.8" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.02%)</title><rect x="73.8" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.8" y="494.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="73.8" y="467.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="76.8" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (18 samples, 0.19%)</title><rect x="74.1" y="547.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.1" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="74.2" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.2" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.02%)</title><rect x="74.2" y="515.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.2" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (2 samples, 0.02%)</title><rect x="74.2" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="77.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (15 samples, 0.16%)</title><rect x="74.5" y="531.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (14 samples, 0.15%)</title><rect x="74.6" y="515.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (14 samples, 0.15%)</title><rect x="74.6" y="499.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.6" y="510.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.15%)</title><rect x="74.6" y="483.0" width="1.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="77.6" y="494.0"></text>
</g>
<g>
<title>pread64 (13 samples, 0.14%)</title><rect x="74.7" y="467.0" width="1.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="77.7" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.11%)</title><rect x="75.1" y="451.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="78.1" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.11%)</title><rect x="75.1" y="435.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="78.1" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (8 samples, 0.09%)</title><rect x="75.3" y="419.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="78.3" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (8 samples, 0.09%)</title><rect x="75.3" y="403.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="78.3" y="414.0"></text>
</g>
<g>
<title>vfs_read (8 samples, 0.09%)</title><rect x="75.3" y="387.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="78.3" y="398.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.04%)</title><rect x="75.3" y="371.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="78.3" y="382.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.04%)</title><rect x="75.3" y="355.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="78.3" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (4 samples, 0.04%)</title><rect x="75.3" y="339.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="78.3" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.03%)</title><rect x="75.5" y="323.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="78.5" y="334.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="75.6" y="307.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="78.6" y="318.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.04%)</title><rect x="75.8" y="371.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="78.8" y="382.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.04%)</title><rect x="75.8" y="355.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="78.8" y="366.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="75.8" y="339.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="78.8" y="350.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="75.8" y="323.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="78.8" y="334.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="76.1" y="339.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="79.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (13 samples, 0.14%)</title><rect x="76.5" y="595.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="79.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (12 samples, 0.13%)</title><rect x="76.6" y="579.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="79.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (12 samples, 0.13%)</title><rect x="76.6" y="563.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 0.13%)</title><rect x="76.6" y="547.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.10%)</title><rect x="76.7" y="531.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (9 samples, 0.10%)</title><rect x="76.7" y="515.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.10%)</title><rect x="76.7" y="499.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="77.1" y="483.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="80.1" y="494.0"></text>
</g>
<g>
<title>pread64 (5 samples, 0.05%)</title><rect x="77.1" y="467.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="80.1" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.04%)</title><rect x="77.2" y="451.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="80.2" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.04%)</title><rect x="77.2" y="435.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="80.2" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.03%)</title><rect x="77.4" y="419.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="80.4" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.03%)</title><rect x="77.4" y="403.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="80.4" y="414.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.02%)</title><rect x="77.5" y="387.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="80.5" y="398.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="77.5" y="371.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="80.5" y="382.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="77.5" y="355.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="80.5" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.02%)</title><rect x="77.5" y="339.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="80.5" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.02%)</title><rect x="77.5" y="323.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="80.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.02%)</title><rect x="77.9" y="531.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.9" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.02%)</title><rect x="77.9" y="515.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (29 samples, 0.31%)</title><rect x="78.1" y="595.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="81.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (29 samples, 0.31%)</title><rect x="78.1" y="579.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="81.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (28 samples, 0.30%)</title><rect x="78.2" y="563.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="81.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (23 samples, 0.24%)</title><rect x="78.5" y="547.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="81.5" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.03%)</title><rect x="78.5" y="531.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.5" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="78.5" y="515.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="81.5" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.03%)</title><rect x="78.5" y="499.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (19 samples, 0.20%)</title><rect x="78.9" y="531.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="81.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (19 samples, 0.20%)</title><rect x="78.9" y="515.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="81.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (19 samples, 0.20%)</title><rect x="78.9" y="499.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="81.9" y="510.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.19%)</title><rect x="79.0" y="483.0" width="2.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="82.0" y="494.0"></text>
</g>
<g>
<title>pread64 (17 samples, 0.18%)</title><rect x="79.1" y="467.0" width="2.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="82.1" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.18%)</title><rect x="79.1" y="451.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="82.1" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.02%)</title><rect x="79.1" y="435.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="82.1" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.16%)</title><rect x="79.4" y="435.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="82.4" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (14 samples, 0.15%)</title><rect x="79.5" y="419.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="82.5" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (14 samples, 0.15%)</title><rect x="79.5" y="403.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="82.5" y="414.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.03%)</title><rect x="79.5" y="387.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="82.5" y="398.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="79.5" y="371.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="82.5" y="382.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.03%)</title><rect x="79.5" y="355.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="82.5" y="366.0"></text>
</g>
<g>
<title>vfs_read (10 samples, 0.11%)</title><rect x="80.0" y="387.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="83.0" y="398.0"></text>
</g>
<g>
<title>__vfs_read (9 samples, 0.10%)</title><rect x="80.1" y="371.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="83.1" y="382.0"></text>
</g>
<g>
<title>new_sync_read (9 samples, 0.10%)</title><rect x="80.1" y="355.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="83.1" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (9 samples, 0.10%)</title><rect x="80.1" y="339.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="83.1" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (7 samples, 0.07%)</title><rect x="80.4" y="323.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="83.4" y="334.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.04%)</title><rect x="80.4" y="307.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="83.4" y="318.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.03%)</title><rect x="80.5" y="291.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="83.5" y="302.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="81.0" y="307.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="84.0" y="318.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.02%)</title><rect x="81.0" y="291.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="84.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.03%)</title><rect x="81.4" y="547.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="84.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.value (81 samples, 0.86%)</title><rect x="81.7" y="611.0" width="10.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="84.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (17 samples, 0.18%)</title><rect x="81.7" y="595.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="84.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (17 samples, 0.18%)</title><rect x="81.7" y="579.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (17 samples, 0.18%)</title><rect x="81.7" y="563.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (6 samples, 0.06%)</title><rect x="81.7" y="547.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.7" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (6 samples, 0.06%)</title><rect x="81.7" y="531.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.7" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.04%)</title><rect x="82.0" y="515.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.0" y="526.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.04%)</title><rect x="82.0" y="499.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.0" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.04%)</title><rect x="82.0" y="483.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.11%)</title><rect x="82.5" y="547.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.5" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="82.5" y="531.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="85.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (8 samples, 0.09%)</title><rect x="82.7" y="531.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="85.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.06%)</title><rect x="83.0" y="515.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.06%)</title><rect x="83.0" y="499.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="83.0" y="483.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="86.0" y="494.0"></text>
</g>
<g>
<title>pread64 (6 samples, 0.06%)</title><rect x="83.0" y="467.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="86.0" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.05%)</title><rect x="83.1" y="451.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="86.1" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.05%)</title><rect x="83.1" y="435.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="86.1" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.05%)</title><rect x="83.1" y="419.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="86.1" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.05%)</title><rect x="83.1" y="403.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="86.1" y="414.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.04%)</title><rect x="83.2" y="387.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="86.2" y="398.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.03%)</title><rect x="83.2" y="371.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="86.2" y="382.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="83.4" y="355.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="86.4" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.02%)</title><rect x="83.4" y="339.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="86.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (35 samples, 0.37%)</title><rect x="83.9" y="595.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (35 samples, 0.37%)</title><rect x="83.9" y="579.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="86.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (35 samples, 0.37%)</title><rect x="83.9" y="563.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="86.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.04%)</title><rect x="83.9" y="547.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="86.9" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.04%)</title><rect x="83.9" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="86.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (31 samples, 0.33%)</title><rect x="84.4" y="547.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.4" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.04%)</title><rect x="84.4" y="531.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.4" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.02%)</title><rect x="84.6" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.6" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (2 samples, 0.02%)</title><rect x="84.6" y="499.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (26 samples, 0.28%)</title><rect x="84.9" y="531.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (25 samples, 0.27%)</title><rect x="85.0" y="515.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="88.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (25 samples, 0.27%)</title><rect x="85.0" y="499.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="88.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.24%)</title><rect x="85.3" y="483.0" width="2.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="88.3" y="494.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.02%)</title><rect x="85.3" y="467.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="88.3" y="478.0"></text>
</g>
<g>
<title>pread64 (21 samples, 0.22%)</title><rect x="85.5" y="467.0" width="2.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="88.5" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.22%)</title><rect x="85.5" y="451.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="88.5" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.22%)</title><rect x="85.5" y="435.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="88.5" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (21 samples, 0.22%)</title><rect x="85.5" y="419.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="88.5" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (21 samples, 0.22%)</title><rect x="85.5" y="403.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="88.5" y="414.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="85.6" y="387.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="88.6" y="398.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="85.6" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="88.6" y="382.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="85.6" y="355.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="88.6" y="366.0"></text>
</g>
<g>
<title>vfs_read (17 samples, 0.18%)</title><rect x="86.0" y="387.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="89.0" y="398.0"></text>
</g>
<g>
<title>__vfs_read (14 samples, 0.15%)</title><rect x="86.1" y="371.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="89.1" y="382.0"></text>
</g>
<g>
<title>new_sync_read (14 samples, 0.15%)</title><rect x="86.1" y="355.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="89.1" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (13 samples, 0.14%)</title><rect x="86.3" y="339.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="89.3" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (11 samples, 0.12%)</title><rect x="86.5" y="323.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="89.5" y="334.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.03%)</title><rect x="86.8" y="307.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="89.8" y="318.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="86.9" y="291.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="89.9" y="302.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.03%)</title><rect x="87.3" y="307.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="90.3" y="318.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.03%)</title><rect x="87.3" y="291.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="90.3" y="302.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.02%)</title><rect x="87.4" y="275.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="90.4" y="286.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.02%)</title><rect x="87.6" y="307.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="90.6" y="318.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="87.9" y="371.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="90.9" y="382.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="87.9" y="355.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="90.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getLongFrom (16 samples, 0.17%)</title><rect x="88.3" y="595.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (16 samples, 0.17%)</title><rect x="88.3" y="579.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (16 samples, 0.17%)</title><rect x="88.3" y="563.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="91.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (16 samples, 0.17%)</title><rect x="88.3" y="547.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="91.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (14 samples, 0.15%)</title><rect x="88.4" y="531.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (13 samples, 0.14%)</title><rect x="88.5" y="515.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="91.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (13 samples, 0.14%)</title><rect x="88.5" y="499.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="91.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.13%)</title><rect x="88.6" y="483.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="91.6" y="494.0"></text>
</g>
<g>
<title>pread64 (12 samples, 0.13%)</title><rect x="88.6" y="467.0" width="1.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="91.6" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.12%)</title><rect x="88.8" y="451.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="91.8" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.12%)</title><rect x="88.8" y="435.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="91.8" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (9 samples, 0.10%)</title><rect x="89.0" y="419.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="92.0" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (9 samples, 0.10%)</title><rect x="89.0" y="403.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="92.0" y="414.0"></text>
</g>
<g>
<title>vfs_read (8 samples, 0.09%)</title><rect x="89.1" y="387.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="92.1" y="398.0"></text>
</g>
<g>
<title>__vfs_read (6 samples, 0.06%)</title><rect x="89.1" y="371.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="92.1" y="382.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.04%)</title><rect x="89.4" y="355.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="92.4" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (4 samples, 0.04%)</title><rect x="89.4" y="339.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="92.4" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (4 samples, 0.04%)</title><rect x="89.4" y="323.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="92.4" y="334.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="89.5" y="307.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="92.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (13 samples, 0.14%)</title><rect x="90.3" y="595.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (13 samples, 0.14%)</title><rect x="90.3" y="579.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="93.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (13 samples, 0.14%)</title><rect x="90.3" y="563.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="93.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.02%)</title><rect x="90.4" y="547.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.4" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.02%)</title><rect x="90.4" y="531.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.4" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.02%)</title><rect x="90.4" y="515.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="93.4" y="526.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.02%)</title><rect x="90.4" y="499.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="93.4" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.02%)</title><rect x="90.4" y="483.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.4" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (8 samples, 0.09%)</title><rect x="90.6" y="547.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="93.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.07%)</title><rect x="90.8" y="531.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.07%)</title><rect x="90.8" y="515.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.07%)</title><rect x="90.8" y="499.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="93.8" y="510.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="90.9" y="483.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="93.9" y="494.0"></text>
</g>
<g>
<title>pread64 (6 samples, 0.06%)</title><rect x="90.9" y="467.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="93.9" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.06%)</title><rect x="90.9" y="451.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="93.9" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.06%)</title><rect x="90.9" y="435.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="93.9" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.05%)</title><rect x="91.0" y="419.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="94.0" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.05%)</title><rect x="91.0" y="403.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="94.0" y="414.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.05%)</title><rect x="91.0" y="387.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="94.0" y="398.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="91.2" y="371.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="94.2" y="382.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="91.2" y="355.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="94.2" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2 samples, 0.02%)</title><rect x="91.9" y="755.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="94.9" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2 samples, 0.02%)</title><rect x="91.9" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="94.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2 samples, 0.02%)</title><rect x="91.9" y="723.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (2 samples, 0.02%)</title><rect x="92.2" y="787.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2 samples, 0.02%)</title><rect x="92.2" y="771.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (2 samples, 0.02%)</title><rect x="92.2" y="755.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="95.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (2 samples, 0.02%)</title><rect x="92.2" y="739.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="95.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (9 samples, 0.10%)</title><rect x="92.4" y="787.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (9 samples, 0.10%)</title><rect x="92.4" y="771.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="95.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (7 samples, 0.07%)</title><rect x="92.4" y="755.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 0.02%)</title><rect x="93.3" y="755.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (71 samples, 0.75%)</title><rect x="93.5" y="787.0" width="8.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="96.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (71 samples, 0.75%)</title><rect x="93.5" y="771.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="96.5" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (71 samples, 0.75%)</title><rect x="93.5" y="755.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.5" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.02%)</title><rect x="93.5" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.5" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.02%)</title><rect x="93.5" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.5" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (69 samples, 0.73%)</title><rect x="93.8" y="739.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="96.8" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (69 samples, 0.73%)</title><rect x="93.8" y="723.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="96.8" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (69 samples, 0.73%)</title><rect x="93.8" y="707.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="96.8" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (69 samples, 0.73%)</title><rect x="93.8" y="691.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.8" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (69 samples, 0.73%)</title><rect x="93.8" y="675.0" width="8.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="96.8" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (69 samples, 0.73%)</title><rect x="93.8" y="659.0" width="8.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="96.8" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (69 samples, 0.73%)</title><rect x="93.8" y="643.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (69 samples, 0.73%)</title><rect x="93.8" y="627.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (69 samples, 0.73%)</title><rect x="93.8" y="611.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="96.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (27 samples, 0.29%)</title><rect x="93.9" y="595.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (10 samples, 0.11%)</title><rect x="93.9" y="579.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="96.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (9 samples, 0.10%)</title><rect x="94.0" y="563.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="97.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (9 samples, 0.10%)</title><rect x="94.0" y="547.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.02%)</title><rect x="94.0" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.0" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.02%)</title><rect x="94.0" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.05%)</title><rect x="94.3" y="531.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="97.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.04%)</title><rect x="94.3" y="515.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="97.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.04%)</title><rect x="94.3" y="499.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.04%)</title><rect x="94.3" y="483.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.3" y="494.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="94.3" y="467.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="97.3" y="478.0"></text>
</g>
<g>
<title>pread64 (4 samples, 0.04%)</title><rect x="94.3" y="451.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="97.3" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="94.4" y="435.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="97.4" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.03%)</title><rect x="94.4" y="419.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="97.4" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.03%)</title><rect x="94.4" y="403.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="97.4" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.03%)</title><rect x="94.4" y="387.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="97.4" y="398.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.03%)</title><rect x="94.4" y="371.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="97.4" y="382.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="94.4" y="355.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="97.4" y="366.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="94.4" y="339.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="97.4" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.02%)</title><rect x="94.4" y="323.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="97.4" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.02%)</title><rect x="94.4" y="307.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="97.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.02%)</title><rect x="94.9" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="97.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (11 samples, 0.12%)</title><rect x="95.2" y="579.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="98.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (10 samples, 0.11%)</title><rect x="95.3" y="563.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="98.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (10 samples, 0.11%)</title><rect x="95.3" y="547.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="98.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.05%)</title><rect x="95.5" y="531.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="98.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.05%)</title><rect x="95.5" y="515.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="98.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.03%)</title><rect x="95.8" y="499.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="98.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.03%)</title><rect x="95.8" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="98.8" y="494.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="95.9" y="467.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="98.9" y="478.0"></text>
</g>
<g>
<title>pread64 (2 samples, 0.02%)</title><rect x="95.9" y="451.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="98.9" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="95.9" y="435.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="98.9" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="95.9" y="419.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="98.9" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.02%)</title><rect x="95.9" y="403.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="98.9" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (2 samples, 0.02%)</title><rect x="95.9" y="387.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="98.9" y="398.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.02%)</title><rect x="95.9" y="371.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="98.9" y="382.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="95.9" y="355.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="98.9" y="366.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="95.9" y="339.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="98.9" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.02%)</title><rect x="95.9" y="323.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="98.9" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.02%)</title><rect x="95.9" y="307.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="98.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.03%)</title><rect x="96.2" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (6 samples, 0.06%)</title><rect x="96.5" y="579.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.5" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.06%)</title><rect x="96.5" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.06%)</title><rect x="96.5" y="547.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.06%)</title><rect x="96.5" y="531.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.04%)</title><rect x="96.5" y="515.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="99.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.04%)</title><rect x="96.5" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.04%)</title><rect x="96.5" y="483.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="96.7" y="467.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="99.7" y="478.0"></text>
</g>
<g>
<title>pread64 (3 samples, 0.03%)</title><rect x="96.7" y="451.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="99.7" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="96.7" y="435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="99.7" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.03%)</title><rect x="96.7" y="419.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="99.7" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.02%)</title><rect x="96.8" y="403.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="99.8" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (2 samples, 0.02%)</title><rect x="96.8" y="387.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="99.8" y="398.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.02%)</title><rect x="96.8" y="371.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="99.8" y="382.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="96.8" y="355.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="99.8" y="366.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="96.8" y="339.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="99.8" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.02%)</title><rect x="96.8" y="323.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="99.8" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.02%)</title><rect x="96.8" y="307.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="99.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.value (41 samples, 0.44%)</title><rect x="97.3" y="595.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="100.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (7 samples, 0.07%)</title><rect x="97.3" y="579.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="100.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.07%)</title><rect x="97.3" y="563.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.07%)</title><rect x="97.3" y="547.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.06%)</title><rect x="97.4" y="531.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.4" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="97.4" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.04%)</title><rect x="97.7" y="515.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.03%)</title><rect x="97.8" y="499.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="100.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.03%)</title><rect x="97.8" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.8" y="494.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="97.8" y="467.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="100.8" y="478.0"></text>
</g>
<g>
<title>pread64 (2 samples, 0.02%)</title><rect x="97.9" y="451.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="100.9" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="97.9" y="435.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="100.9" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="97.9" y="419.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="100.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (12 samples, 0.13%)</title><rect x="98.2" y="579.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (12 samples, 0.13%)</title><rect x="98.2" y="563.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="101.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (12 samples, 0.13%)</title><rect x="98.2" y="547.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="101.2" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.11%)</title><rect x="98.3" y="531.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="101.3" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="98.4" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.05%)</title><rect x="98.7" y="515.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.05%)</title><rect x="98.7" y="499.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.05%)</title><rect x="98.7" y="483.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.7" y="494.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="98.7" y="467.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="101.7" y="478.0"></text>
</g>
<g>
<title>pread64 (5 samples, 0.05%)</title><rect x="98.7" y="451.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="101.7" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.05%)</title><rect x="98.7" y="435.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="101.7" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.05%)</title><rect x="98.7" y="419.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="101.7" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.05%)</title><rect x="98.7" y="403.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="101.7" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.05%)</title><rect x="98.7" y="387.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="101.7" y="398.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.05%)</title><rect x="98.7" y="371.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="101.7" y="382.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="99.1" y="355.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="102.1" y="366.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="99.1" y="339.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="102.1" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.02%)</title><rect x="99.3" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="102.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getLongFrom (12 samples, 0.13%)</title><rect x="99.7" y="579.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (12 samples, 0.13%)</title><rect x="99.7" y="563.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="102.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (12 samples, 0.13%)</title><rect x="99.7" y="547.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.02%)</title><rect x="99.7" y="531.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="102.7" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.02%)</title><rect x="99.7" y="515.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="102.7" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.02%)</title><rect x="99.7" y="499.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.11%)</title><rect x="99.9" y="531.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="102.9" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.03%)</title><rect x="99.9" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.06%)</title><rect x="100.3" y="515.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="103.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.06%)</title><rect x="100.3" y="499.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="103.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.06%)</title><rect x="100.3" y="483.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.3" y="494.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="100.4" y="467.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="103.4" y="478.0"></text>
</g>
<g>
<title>pread64 (5 samples, 0.05%)</title><rect x="100.4" y="451.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="103.4" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.05%)</title><rect x="100.4" y="435.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="103.4" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.05%)</title><rect x="100.4" y="419.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="103.4" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.05%)</title><rect x="100.4" y="403.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="103.4" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.05%)</title><rect x="100.4" y="387.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="103.4" y="398.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.05%)</title><rect x="100.4" y="371.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="103.4" y="382.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.04%)</title><rect x="100.4" y="355.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="103.4" y="366.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.04%)</title><rect x="100.4" y="339.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="103.4" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (4 samples, 0.04%)</title><rect x="100.4" y="323.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="103.4" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.03%)</title><rect x="100.6" y="307.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="103.6" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="100.6" y="291.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="103.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (10 samples, 0.11%)</title><rect x="101.2" y="579.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.02%)</title><rect x="101.2" y="563.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="104.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (8 samples, 0.09%)</title><rect x="101.4" y="563.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (8 samples, 0.09%)</title><rect x="101.4" y="547.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (8 samples, 0.09%)</title><rect x="101.4" y="531.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.07%)</title><rect x="101.6" y="515.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.06%)</title><rect x="101.7" y="499.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="104.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.06%)</title><rect x="101.7" y="483.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.7" y="494.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="101.7" y="467.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="104.7" y="478.0"></text>
</g>
<g>
<title>pread64 (5 samples, 0.05%)</title><rect x="101.8" y="451.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="104.8" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.05%)</title><rect x="101.8" y="435.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="104.8" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.05%)</title><rect x="101.8" y="419.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="104.8" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.05%)</title><rect x="101.8" y="403.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="104.8" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.05%)</title><rect x="101.8" y="387.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="104.8" y="398.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.05%)</title><rect x="101.8" y="371.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="104.8" y="382.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.05%)</title><rect x="101.8" y="355.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="104.8" y="366.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.05%)</title><rect x="101.8" y="339.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="104.8" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.03%)</title><rect x="102.1" y="323.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="105.1" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.03%)</title><rect x="102.1" y="307.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="105.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.iterator (14 samples, 0.15%)</title><rect x="102.4" y="787.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="105.4" y="798.0"></text>
</g>
<g>
<title>java/util/Collection.stream (13 samples, 0.14%)</title><rect x="102.4" y="771.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (13 samples, 0.14%)</title><rect x="102.4" y="755.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="105.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (13 samples, 0.14%)</title><rect x="102.4" y="739.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="105.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (13 samples, 0.14%)</title><rect x="102.4" y="723.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (10 samples, 0.11%)</title><rect x="102.8" y="707.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (9 samples, 0.10%)</title><rect x="102.9" y="691.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.02%)</title><rect x="102.9" y="675.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="105.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="102.9" y="659.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="105.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (7 samples, 0.07%)</title><rect x="103.2" y="675.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="106.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.05%)</title><rect x="103.4" y="659.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="106.4" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.05%)</title><rect x="103.4" y="643.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.4" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="103.8" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="106.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.iterator (2,221 samples, 23.61%)</title><rect x="104.2" y="787.0" width="278.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="107.2" y="798.0">ru/mail/polis/dao/alexander/marashov/..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.&lt;init&gt; (2,220 samples, 23.60%)</title><rect x="104.3" y="771.0" width="278.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="107.3" y="782.0">ru/mail/polis/dao/alexander/marashov/..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.binarySearch (2,220 samples, 23.60%)</title><rect x="104.3" y="755.0" width="278.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="107.3" y="766.0">ru/mail/polis/dao/alexander/marashov/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (30 samples, 0.32%)</title><rect x="104.7" y="739.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="107.7" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (19 samples, 0.20%)</title><rect x="105.4" y="723.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.4" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.03%)</title><rect x="105.7" y="707.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.7" y="718.0"></text>
</g>
<g>
<title>vectorizedMismatch (14 samples, 0.15%)</title><rect x="106.1" y="707.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="109.1" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.05%)</title><rect x="107.8" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="110.8" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.02%)</title><rect x="108.2" y="707.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="111.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (2,187 samples, 23.25%)</title><rect x="108.5" y="739.0" width="274.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="111.5" y="750.0">ru/mail/polis/dao/alexander/marashov/..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (707 samples, 7.51%)</title><rect x="108.5" y="723.0" width="88.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="111.5" y="734.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (21 samples, 0.22%)</title><rect x="108.5" y="707.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.5" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (19 samples, 0.20%)</title><rect x="108.7" y="691.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.7" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (15 samples, 0.16%)</title><rect x="109.2" y="675.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.2" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.09%)</title><rect x="110.0" y="659.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.0" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.09%)</title><rect x="110.0" y="643.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="113.0" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.09%)</title><rect x="110.0" y="627.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.0" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.02%)</title><rect x="110.5" y="611.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="113.5" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.02%)</title><rect x="110.7" y="611.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (685 samples, 7.28%)</title><rect x="111.2" y="707.0" width="85.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.2" y="718.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (685 samples, 7.28%)</title><rect x="111.2" y="691.0" width="85.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="114.2" y="702.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (48 samples, 0.51%)</title><rect x="112.8" y="675.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="115.8" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (48 samples, 0.51%)</title><rect x="112.8" y="659.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="115.8" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (6 samples, 0.06%)</title><rect x="115.5" y="643.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.02%)</title><rect x="116.0" y="627.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="119.0" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (21 samples, 0.22%)</title><rect x="116.2" y="643.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="119.2" y="654.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (20 samples, 0.21%)</title><rect x="116.4" y="627.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="119.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (20 samples, 0.21%)</title><rect x="116.4" y="611.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="119.4" y="622.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.04%)</title><rect x="118.1" y="595.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="121.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (587 samples, 6.24%)</title><rect x="118.9" y="675.0" width="73.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.9" y="686.0">sun/nio/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (51 samples, 0.54%)</title><rect x="119.7" y="659.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.7" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (8 samples, 0.09%)</title><rect x="122.0" y="643.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.0" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (25 samples, 0.27%)</title><rect x="123.0" y="643.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="126.0" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (16 samples, 0.17%)</title><rect x="124.1" y="627.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.1" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (3 samples, 0.03%)</title><rect x="126.1" y="659.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (482 samples, 5.12%)</title><rect x="126.5" y="659.0" width="60.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="129.5" y="670.0">sun/ni..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (39 samples, 0.41%)</title><rect x="127.1" y="643.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="130.1" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (27 samples, 0.29%)</title><rect x="128.7" y="627.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.7" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (26 samples, 0.28%)</title><rect x="128.8" y="611.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.8" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (26 samples, 0.28%)</title><rect x="128.8" y="595.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="131.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (438 samples, 4.66%)</title><rect x="132.0" y="643.0" width="55.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="135.0" y="654.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (436 samples, 4.63%)</title><rect x="132.3" y="627.0" width="54.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="135.3" y="638.0">sun/n..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (7 samples, 0.07%)</title><rect x="134.9" y="611.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="137.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (402 samples, 4.27%)</title><rect x="135.8" y="611.0" width="50.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="138.8" y="622.0">[unkn..</text>
</g>
<g>
<title>__libc_disable_asynccancel (6 samples, 0.06%)</title><rect x="135.8" y="595.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="138.8" y="606.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (7 samples, 0.07%)</title><rect x="136.6" y="595.0" width="0.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="139.6" y="606.0"></text>
</g>
<g>
<title>pread64 (389 samples, 4.13%)</title><rect x="137.4" y="595.0" width="48.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="140.4" y="606.0">prea..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (354 samples, 3.76%)</title><rect x="141.8" y="579.0" width="44.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="144.8" y="590.0">entr..</text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.05%)</title><rect x="141.8" y="563.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="144.8" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (349 samples, 3.71%)</title><rect x="142.4" y="563.0" width="43.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="145.4" y="574.0">do_s..</text>
</g>
<g>
<title>__x64_sys_pread64 (306 samples, 3.25%)</title><rect x="147.8" y="547.0" width="38.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="150.8" y="558.0">__x..</text>
</g>
<g>
<title>fput (2 samples, 0.02%)</title><rect x="147.8" y="531.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="150.8" y="542.0"></text>
</g>
<g>
<title>ksys_pread64 (303 samples, 3.22%)</title><rect x="148.1" y="531.0" width="38.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="151.1" y="542.0">ksy..</text>
</g>
<g>
<title>__fdget (24 samples, 0.26%)</title><rect x="148.7" y="515.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="151.7" y="526.0"></text>
</g>
<g>
<title>__fget_light (24 samples, 0.26%)</title><rect x="148.7" y="499.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="151.7" y="510.0"></text>
</g>
<g>
<title>__fget (23 samples, 0.24%)</title><rect x="148.8" y="483.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="151.8" y="494.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="151.7" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="154.7" y="526.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="152.0" y="515.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="155.0" y="526.0"></text>
</g>
<g>
<title>fput (4 samples, 0.04%)</title><rect x="152.2" y="515.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="155.2" y="526.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.04%)</title><rect x="152.2" y="499.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="155.2" y="510.0"></text>
</g>
<g>
<title>vfs_read (264 samples, 2.81%)</title><rect x="153.0" y="515.0" width="33.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="156.0" y="526.0">vf..</text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.03%)</title><rect x="154.9" y="499.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="157.9" y="510.0"></text>
</g>
<g>
<title>__vfs_read (177 samples, 1.88%)</title><rect x="155.2" y="499.0" width="22.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="158.2" y="510.0">_..</text>
</g>
<g>
<title>ext4_file_read_iter (8 samples, 0.09%)</title><rect x="155.2" y="483.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="158.2" y="494.0"></text>
</g>
<g>
<title>new_sync_read (168 samples, 1.79%)</title><rect x="156.4" y="483.0" width="21.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="159.4" y="494.0">n..</text>
</g>
<g>
<title>ext4_file_read_iter (152 samples, 1.62%)</title><rect x="158.3" y="467.0" width="19.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="161.3" y="478.0"></text>
</g>
<g>
<title>generic_file_read_iter (139 samples, 1.48%)</title><rect x="159.8" y="451.0" width="17.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="162.8" y="462.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="165.0" y="435.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="168.0" y="446.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.02%)</title><rect x="165.0" y="419.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="168.0" y="430.0"></text>
</g>
<g>
<title>atime_needs_update (3 samples, 0.03%)</title><rect x="165.3" y="435.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="168.3" y="446.0"></text>
</g>
<g>
<title>copy_page_to_iter (50 samples, 0.53%)</title><rect x="165.7" y="435.0" width="6.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="168.7" y="446.0"></text>
</g>
<g>
<title>copy_user_generic_string (37 samples, 0.39%)</title><rect x="166.9" y="419.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="169.9" y="430.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.02%)</title><rect x="171.5" y="419.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="174.5" y="430.0"></text>
</g>
<g>
<title>pagecache_get_page (23 samples, 0.24%)</title><rect x="172.0" y="435.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="175.0" y="446.0"></text>
</g>
<g>
<title>find_get_entry (17 samples, 0.18%)</title><rect x="172.8" y="419.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="175.8" y="430.0"></text>
</g>
<g>
<title>xas_load (8 samples, 0.09%)</title><rect x="173.8" y="403.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="176.8" y="414.0"></text>
</g>
<g>
<title>xas_start (3 samples, 0.03%)</title><rect x="174.4" y="387.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="177.4" y="398.0"></text>
</g>
<g>
<title>touch_atime (18 samples, 0.19%)</title><rect x="174.9" y="435.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="177.9" y="446.0"></text>
</g>
<g>
<title>atime_needs_update (5 samples, 0.05%)</title><rect x="176.6" y="419.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="179.6" y="430.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.03%)</title><rect x="176.7" y="403.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="179.7" y="414.0"></text>
</g>
<g>
<title>fsnotify (9 samples, 0.10%)</title><rect x="177.4" y="499.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="180.4" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (60 samples, 0.64%)</title><rect x="178.6" y="499.0" width="7.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="181.6" y="510.0"></text>
</g>
<g>
<title>apparmor_file_permission (8 samples, 0.09%)</title><rect x="178.7" y="483.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="181.7" y="494.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="179.7" y="483.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="182.7" y="494.0"></text>
</g>
<g>
<title>security_file_permission (49 samples, 0.52%)</title><rect x="180.0" y="483.0" width="6.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="183.0" y="494.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.02%)</title><rect x="181.1" y="467.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="184.1" y="478.0"></text>
</g>
<g>
<title>apparmor_file_permission (22 samples, 0.23%)</title><rect x="181.3" y="467.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="184.3" y="478.0"></text>
</g>
<g>
<title>common_file_perm (22 samples, 0.23%)</title><rect x="181.3" y="451.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="184.3" y="462.0"></text>
</g>
<g>
<title>aa_file_perm (3 samples, 0.03%)</title><rect x="183.6" y="435.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="186.6" y="446.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.03%)</title><rect x="184.1" y="467.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="187.1" y="478.0"></text>
</g>
<g>
<title>fsnotify (13 samples, 0.14%)</title><rect x="184.5" y="467.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="187.5" y="478.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.03%)</title><rect x="186.2" y="611.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="189.2" y="622.0"></text>
</g>
<g>
<title>pread64 (2 samples, 0.02%)</title><rect x="186.6" y="611.0" width="0.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="189.6" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (23 samples, 0.24%)</title><rect x="187.0" y="659.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="190.0" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (18 samples, 0.19%)</title><rect x="187.1" y="643.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="190.1" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.02%)</title><rect x="187.7" y="627.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="190.7" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (5 samples, 0.05%)</title><rect x="188.0" y="627.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.0" y="638.0"></text>
</g>
<g>
<title>vtable stub (5 samples, 0.05%)</title><rect x="188.7" y="627.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="191.7" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.04%)</title><rect x="189.4" y="643.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (21 samples, 0.22%)</title><rect x="189.9" y="659.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="192.9" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (14 samples, 0.15%)</title><rect x="190.1" y="643.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="193.1" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (8 samples, 0.09%)</title><rect x="190.9" y="627.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.9" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (5 samples, 0.05%)</title><rect x="191.9" y="643.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="194.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (34 samples, 0.36%)</title><rect x="192.5" y="675.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="195.5" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.05%)</title><rect x="194.4" y="659.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="197.4" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.05%)</title><rect x="194.4" y="643.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="197.4" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.03%)</title><rect x="194.6" y="627.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="197.6" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (14 samples, 0.15%)</title><rect x="195.0" y="659.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.03%)</title><rect x="196.8" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="199.8" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.03%)</title><rect x="196.8" y="659.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="199.8" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.03%)</title><rect x="196.8" y="643.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="199.8" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.03%)</title><rect x="196.8" y="627.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="199.8" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.02%)</title><rect x="196.9" y="611.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="199.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (706 samples, 7.50%)</title><rect x="197.1" y="723.0" width="88.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="200.1" y="734.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (22 samples, 0.23%)</title><rect x="197.1" y="707.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="200.1" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (21 samples, 0.22%)</title><rect x="197.3" y="691.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="200.3" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (20 samples, 0.21%)</title><rect x="197.4" y="675.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="200.4" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (9 samples, 0.10%)</title><rect x="198.4" y="659.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="201.4" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (9 samples, 0.10%)</title><rect x="198.4" y="643.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="201.4" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (9 samples, 0.10%)</title><rect x="198.4" y="627.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="201.4" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.02%)</title><rect x="199.1" y="611.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="202.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (2 samples, 0.02%)</title><rect x="199.6" y="659.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="202.6" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (683 samples, 7.26%)</title><rect x="200.0" y="707.0" width="85.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="203.0" y="718.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (683 samples, 7.26%)</title><rect x="200.0" y="691.0" width="85.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="203.0" y="702.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (44 samples, 0.47%)</title><rect x="201.4" y="675.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.4" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (44 samples, 0.47%)</title><rect x="201.4" y="659.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="204.4" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (5 samples, 0.05%)</title><rect x="204.4" y="643.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="207.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.02%)</title><rect x="204.8" y="627.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="207.8" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (15 samples, 0.16%)</title><rect x="205.0" y="643.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.0" y="654.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (12 samples, 0.13%)</title><rect x="205.4" y="627.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (12 samples, 0.13%)</title><rect x="205.4" y="611.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="208.4" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.02%)</title><rect x="206.7" y="595.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (596 samples, 6.34%)</title><rect x="206.9" y="675.0" width="74.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="209.9" y="686.0">sun/nio/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (54 samples, 0.57%)</title><rect x="207.5" y="659.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="210.5" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (9 samples, 0.10%)</title><rect x="209.7" y="643.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="212.7" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (28 samples, 0.30%)</title><rect x="210.8" y="643.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="213.8" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (18 samples, 0.19%)</title><rect x="212.1" y="627.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="215.1" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (474 samples, 5.04%)</title><rect x="214.4" y="659.0" width="59.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="217.4" y="670.0">sun/ni..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (36 samples, 0.38%)</title><rect x="215.2" y="643.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="218.2" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (27 samples, 0.29%)</title><rect x="216.3" y="627.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="219.3" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (26 samples, 0.28%)</title><rect x="216.4" y="611.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.4" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (26 samples, 0.28%)</title><rect x="216.4" y="595.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="219.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (432 samples, 4.59%)</title><rect x="219.7" y="643.0" width="54.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.7" y="654.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (432 samples, 4.59%)</title><rect x="219.7" y="627.0" width="54.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="222.7" y="638.0">sun/n..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (4 samples, 0.04%)</title><rect x="221.7" y="611.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="224.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (405 samples, 4.30%)</title><rect x="222.2" y="611.0" width="50.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="225.2" y="622.0">[unkn..</text>
</g>
<g>
<title>__libc_disable_asynccancel (6 samples, 0.06%)</title><rect x="222.2" y="595.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="225.2" y="606.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (4 samples, 0.04%)</title><rect x="223.0" y="595.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="226.0" y="606.0"></text>
</g>
<g>
<title>pread64 (395 samples, 4.20%)</title><rect x="223.5" y="595.0" width="49.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="226.5" y="606.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (362 samples, 3.85%)</title><rect x="227.6" y="579.0" width="45.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="230.6" y="590.0">entr..</text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.04%)</title><rect x="227.6" y="563.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="230.6" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (358 samples, 3.81%)</title><rect x="228.1" y="563.0" width="44.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="231.1" y="574.0">do_s..</text>
</g>
<g>
<title>__x64_sys_pread64 (319 samples, 3.39%)</title><rect x="232.8" y="547.0" width="40.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="235.8" y="558.0">__x..</text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="232.8" y="531.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="235.8" y="542.0"></text>
</g>
<g>
<title>ksys_pread64 (316 samples, 3.36%)</title><rect x="233.1" y="531.0" width="39.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="236.1" y="542.0">ksy..</text>
</g>
<g>
<title>__fdget (26 samples, 0.28%)</title><rect x="233.3" y="515.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="236.3" y="526.0"></text>
</g>
<g>
<title>__fget_light (26 samples, 0.28%)</title><rect x="233.3" y="499.0" width="3.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="236.3" y="510.0"></text>
</g>
<g>
<title>__fget (23 samples, 0.24%)</title><rect x="233.6" y="483.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="236.6" y="494.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="236.5" y="515.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="239.5" y="526.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.02%)</title><rect x="236.8" y="515.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="239.8" y="526.0"></text>
</g>
<g>
<title>fput (7 samples, 0.07%)</title><rect x="237.1" y="515.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="240.1" y="526.0"></text>
</g>
<g>
<title>fput_many (7 samples, 0.07%)</title><rect x="237.1" y="499.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="240.1" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="238.3" y="515.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="241.3" y="526.0"></text>
</g>
<g>
<title>vfs_read (273 samples, 2.90%)</title><rect x="238.5" y="515.0" width="34.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="241.5" y="526.0">vf..</text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.03%)</title><rect x="238.9" y="499.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="241.9" y="510.0"></text>
</g>
<g>
<title>__vfs_read (211 samples, 2.24%)</title><rect x="239.3" y="499.0" width="26.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="242.3" y="510.0">_..</text>
</g>
<g>
<title>ext4_file_read_iter (11 samples, 0.12%)</title><rect x="239.5" y="483.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="242.5" y="494.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.02%)</title><rect x="240.9" y="483.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="243.9" y="494.0"></text>
</g>
<g>
<title>new_sync_read (196 samples, 2.08%)</title><rect x="241.2" y="483.0" width="24.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="244.2" y="494.0">n..</text>
</g>
<g>
<title>ext4_file_read_iter (186 samples, 1.98%)</title><rect x="242.3" y="467.0" width="23.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="245.3" y="478.0">e..</text>
</g>
<g>
<title>generic_file_read_iter (171 samples, 1.82%)</title><rect x="243.8" y="451.0" width="21.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="246.8" y="462.0">g..</text>
</g>
<g>
<title>_cond_resched (4 samples, 0.04%)</title><rect x="247.4" y="435.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="250.4" y="446.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.03%)</title><rect x="247.6" y="419.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="250.6" y="430.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.02%)</title><rect x="247.9" y="435.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="250.9" y="446.0"></text>
</g>
<g>
<title>copy_page_to_iter (57 samples, 0.61%)</title><rect x="248.2" y="435.0" width="7.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="251.2" y="446.0"></text>
</g>
<g>
<title>_cond_resched (5 samples, 0.05%)</title><rect x="249.9" y="419.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="252.9" y="430.0"></text>
</g>
<g>
<title>rcu_all_qs (4 samples, 0.04%)</title><rect x="250.1" y="403.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="253.1" y="414.0"></text>
</g>
<g>
<title>copy_user_generic_string (38 samples, 0.40%)</title><rect x="250.6" y="419.0" width="4.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="253.6" y="430.0"></text>
</g>
<g>
<title>mark_page_accessed (5 samples, 0.05%)</title><rect x="255.6" y="435.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="258.6" y="446.0"></text>
</g>
<g>
<title>pagecache_get_page (50 samples, 0.53%)</title><rect x="256.2" y="435.0" width="6.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="259.2" y="446.0"></text>
</g>
<g>
<title>find_get_entry (47 samples, 0.50%)</title><rect x="256.6" y="419.0" width="5.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="259.6" y="430.0"></text>
</g>
<g>
<title>xas_load (11 samples, 0.12%)</title><rect x="260.7" y="403.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="263.7" y="414.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.02%)</title><rect x="261.9" y="387.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="264.9" y="398.0"></text>
</g>
<g>
<title>xas_start (3 samples, 0.03%)</title><rect x="262.1" y="403.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="265.1" y="414.0"></text>
</g>
<g>
<title>touch_atime (22 samples, 0.23%)</title><rect x="262.5" y="435.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="265.5" y="446.0"></text>
</g>
<g>
<title>atime_needs_update (13 samples, 0.14%)</title><rect x="263.6" y="419.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="266.6" y="430.0"></text>
</g>
<g>
<title>current_time (6 samples, 0.06%)</title><rect x="264.2" y="403.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="267.2" y="414.0"></text>
</g>
<g>
<title>timestamp_truncate (2 samples, 0.02%)</title><rect x="265.0" y="403.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="268.0" y="414.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="265.4" y="451.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="268.4" y="462.0"></text>
</g>
<g>
<title>fsnotify (13 samples, 0.14%)</title><rect x="265.7" y="499.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="268.7" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (43 samples, 0.46%)</title><rect x="267.4" y="499.0" width="5.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="270.4" y="510.0"></text>
</g>
<g>
<title>apparmor_file_permission (9 samples, 0.10%)</title><rect x="267.6" y="483.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="270.6" y="494.0"></text>
</g>
<g>
<title>security_file_permission (31 samples, 0.33%)</title><rect x="268.9" y="483.0" width="3.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="271.9" y="494.0"></text>
</g>
<g>
<title>apparmor_file_permission (10 samples, 0.11%)</title><rect x="269.8" y="467.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="272.8" y="478.0"></text>
</g>
<g>
<title>common_file_perm (10 samples, 0.11%)</title><rect x="269.8" y="451.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="272.8" y="462.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.02%)</title><rect x="270.8" y="435.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="273.8" y="446.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.03%)</title><rect x="271.0" y="467.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="274.0" y="478.0"></text>
</g>
<g>
<title>fsnotify (11 samples, 0.12%)</title><rect x="271.4" y="467.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="274.4" y="478.0"></text>
</g>
<g>
<title>ksys_pread64 (2 samples, 0.02%)</title><rect x="272.8" y="547.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="275.8" y="558.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.03%)</title><rect x="273.1" y="611.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="276.1" y="622.0"></text>
</g>
<g>
<title>pread64 (2 samples, 0.02%)</title><rect x="273.5" y="611.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="276.5" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (40 samples, 0.43%)</title><rect x="273.9" y="659.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="276.9" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (24 samples, 0.26%)</title><rect x="274.5" y="643.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="277.5" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (8 samples, 0.09%)</title><rect x="276.2" y="627.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="279.2" y="638.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.03%)</title><rect x="277.2" y="627.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="280.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (11 samples, 0.12%)</title><rect x="277.5" y="643.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="280.5" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.03%)</title><rect x="278.4" y="627.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="281.4" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (22 samples, 0.23%)</title><rect x="278.9" y="659.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="281.9" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (15 samples, 0.16%)</title><rect x="279.0" y="643.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="282.0" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (6 samples, 0.06%)</title><rect x="280.2" y="627.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="283.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (6 samples, 0.06%)</title><rect x="280.9" y="643.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (27 samples, 0.29%)</title><rect x="281.7" y="675.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="284.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.05%)</title><rect x="284.4" y="659.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="287.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (5 samples, 0.05%)</title><rect x="285.1" y="675.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="288.1" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.04%)</title><rect x="285.2" y="659.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="288.2" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.04%)</title><rect x="285.2" y="643.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="288.2" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.03%)</title><rect x="285.3" y="627.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="288.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (773 samples, 8.22%)</title><rect x="285.7" y="723.0" width="96.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.7" y="734.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (50 samples, 0.53%)</title><rect x="286.2" y="707.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.2" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (50 samples, 0.53%)</title><rect x="286.2" y="691.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (47 samples, 0.50%)</title><rect x="286.6" y="675.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="289.6" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (719 samples, 7.64%)</title><rect x="292.5" y="707.0" width="90.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="295.5" y="718.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (718 samples, 7.63%)</title><rect x="292.6" y="691.0" width="90.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.6" y="702.0">sun/nio/ch..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (3 samples, 0.03%)</title><rect x="295.6" y="675.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.6" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (13 samples, 0.14%)</title><rect x="296.0" y="675.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="299.0" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (13 samples, 0.14%)</title><rect x="296.0" y="659.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="299.0" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (13 samples, 0.14%)</title><rect x="296.0" y="643.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="299.0" y="654.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (13 samples, 0.14%)</title><rect x="296.0" y="627.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="299.0" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (13 samples, 0.14%)</title><rect x="296.0" y="611.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="299.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (26 samples, 0.28%)</title><rect x="297.6" y="675.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="300.6" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (26 samples, 0.28%)</title><rect x="297.6" y="659.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="300.6" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (14 samples, 0.15%)</title><rect x="299.1" y="643.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="302.1" y="654.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (14 samples, 0.15%)</title><rect x="299.1" y="627.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="302.1" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (14 samples, 0.15%)</title><rect x="299.1" y="611.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="302.1" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (579 samples, 6.15%)</title><rect x="300.9" y="675.0" width="72.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="303.9" y="686.0">sun/nio/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (21 samples, 0.22%)</title><rect x="303.2" y="659.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="306.2" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (19 samples, 0.20%)</title><rect x="303.5" y="643.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="306.5" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (19 samples, 0.20%)</title><rect x="303.5" y="627.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="306.5" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (4 samples, 0.04%)</title><rect x="304.5" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="307.5" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (6 samples, 0.06%)</title><rect x="305.0" y="611.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="308.0" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (4 samples, 0.04%)</title><rect x="305.0" y="595.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (2 samples, 0.02%)</title><rect x="305.5" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (493 samples, 5.24%)</title><rect x="306.0" y="659.0" width="61.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="309.0" y="670.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (483 samples, 5.13%)</title><rect x="307.3" y="643.0" width="60.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="310.3" y="654.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (482 samples, 5.12%)</title><rect x="307.4" y="627.0" width="60.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.4" y="638.0">sun/ni..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (7 samples, 0.07%)</title><rect x="310.6" y="611.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="313.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (440 samples, 4.68%)</title><rect x="311.5" y="611.0" width="55.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="314.5" y="622.0">[unkn..</text>
</g>
<g>
<title>__libc_disable_asynccancel (6 samples, 0.06%)</title><rect x="311.5" y="595.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="314.5" y="606.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.02%)</title><rect x="312.3" y="595.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="315.3" y="606.0"></text>
</g>
<g>
<title>pread64 (432 samples, 4.59%)</title><rect x="312.5" y="595.0" width="54.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="315.5" y="606.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (410 samples, 4.36%)</title><rect x="315.3" y="579.0" width="51.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="318.3" y="590.0">entry..</text>
</g>
<g>
<title>__x64_sys_pread64 (9 samples, 0.10%)</title><rect x="315.3" y="563.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="318.3" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (401 samples, 4.26%)</title><rect x="316.4" y="563.0" width="50.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="319.4" y="574.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_pread64 (359 samples, 3.82%)</title><rect x="321.4" y="547.0" width="45.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="324.4" y="558.0">__x6..</text>
</g>
<g>
<title>fput (2 samples, 0.02%)</title><rect x="321.6" y="531.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="324.6" y="542.0"></text>
</g>
<g>
<title>ksys_pread64 (356 samples, 3.78%)</title><rect x="321.8" y="531.0" width="44.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="324.8" y="542.0">ksys..</text>
</g>
<g>
<title>__fdget (39 samples, 0.41%)</title><rect x="322.1" y="515.0" width="4.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="325.1" y="526.0"></text>
</g>
<g>
<title>__fget_light (39 samples, 0.41%)</title><rect x="322.1" y="499.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="325.1" y="510.0"></text>
</g>
<g>
<title>__fget (36 samples, 0.38%)</title><rect x="322.4" y="483.0" width="4.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="325.4" y="494.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="326.9" y="515.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="329.9" y="526.0"></text>
</g>
<g>
<title>__fsnotify_parent (6 samples, 0.06%)</title><rect x="327.3" y="515.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="330.3" y="526.0"></text>
</g>
<g>
<title>fput (6 samples, 0.06%)</title><rect x="328.1" y="515.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="331.1" y="526.0"></text>
</g>
<g>
<title>fput_many (6 samples, 0.06%)</title><rect x="328.1" y="499.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="331.1" y="510.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.03%)</title><rect x="328.8" y="515.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="331.8" y="526.0"></text>
</g>
<g>
<title>vfs_read (296 samples, 3.15%)</title><rect x="329.3" y="515.0" width="37.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="332.3" y="526.0">vfs..</text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.03%)</title><rect x="330.3" y="499.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="333.3" y="510.0"></text>
</g>
<g>
<title>__vfs_read (218 samples, 2.32%)</title><rect x="330.7" y="499.0" width="27.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="333.7" y="510.0">_..</text>
</g>
<g>
<title>ext4_file_read_iter (7 samples, 0.07%)</title><rect x="331.1" y="483.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="334.1" y="494.0"></text>
</g>
<g>
<title>new_sync_read (208 samples, 2.21%)</title><rect x="332.0" y="483.0" width="26.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="335.0" y="494.0">n..</text>
</g>
<g>
<title>ext4_file_read_iter (190 samples, 2.02%)</title><rect x="334.0" y="467.0" width="23.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="337.0" y="478.0">e..</text>
</g>
<g>
<title>generic_file_read_iter (174 samples, 1.85%)</title><rect x="336.0" y="451.0" width="21.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="339.0" y="462.0">g..</text>
</g>
<g>
<title>_cond_resched (3 samples, 0.03%)</title><rect x="341.5" y="435.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="344.5" y="446.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.02%)</title><rect x="341.6" y="419.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="344.6" y="430.0"></text>
</g>
<g>
<title>atime_needs_update (5 samples, 0.05%)</title><rect x="341.9" y="435.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="344.9" y="446.0"></text>
</g>
<g>
<title>copy_page_to_iter (45 samples, 0.48%)</title><rect x="342.5" y="435.0" width="5.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="345.5" y="446.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="343.6" y="419.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="346.6" y="430.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.02%)</title><rect x="343.6" y="403.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="346.6" y="414.0"></text>
</g>
<g>
<title>copy_user_generic_string (33 samples, 0.35%)</title><rect x="343.9" y="419.0" width="4.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="346.9" y="430.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.02%)</title><rect x="348.3" y="435.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="351.3" y="446.0"></text>
</g>
<g>
<title>pagecache_get_page (59 samples, 0.63%)</title><rect x="348.5" y="435.0" width="7.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="351.5" y="446.0"></text>
</g>
<g>
<title>find_get_entry (54 samples, 0.57%)</title><rect x="348.9" y="419.0" width="6.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="351.9" y="430.0"></text>
</g>
<g>
<title>xas_load (18 samples, 0.19%)</title><rect x="353.3" y="403.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="356.3" y="414.0"></text>
</g>
<g>
<title>xas_start (9 samples, 0.10%)</title><rect x="354.4" y="387.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="357.4" y="398.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.02%)</title><rect x="355.7" y="419.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="358.7" y="430.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.02%)</title><rect x="355.9" y="435.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="358.9" y="446.0"></text>
</g>
<g>
<title>touch_atime (13 samples, 0.14%)</title><rect x="356.2" y="435.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="359.2" y="446.0"></text>
</g>
<g>
<title>atime_needs_update (7 samples, 0.07%)</title><rect x="356.9" y="419.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="359.9" y="430.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.02%)</title><rect x="357.3" y="403.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="360.3" y="414.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.02%)</title><rect x="357.8" y="467.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="360.8" y="478.0"></text>
</g>
<g>
<title>fsnotify (13 samples, 0.14%)</title><rect x="358.1" y="499.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="361.1" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (54 samples, 0.57%)</title><rect x="359.7" y="499.0" width="6.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="362.7" y="510.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="360.3" y="483.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="363.3" y="494.0"></text>
</g>
<g>
<title>security_file_permission (47 samples, 0.50%)</title><rect x="360.6" y="483.0" width="5.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="363.6" y="494.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.02%)</title><rect x="361.1" y="467.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="364.1" y="478.0"></text>
</g>
<g>
<title>apparmor_file_permission (21 samples, 0.22%)</title><rect x="361.3" y="467.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="364.3" y="478.0"></text>
</g>
<g>
<title>common_file_perm (21 samples, 0.22%)</title><rect x="361.3" y="451.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="364.3" y="462.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.02%)</title><rect x="363.7" y="435.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="366.7" y="446.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.04%)</title><rect x="363.9" y="467.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="366.9" y="478.0"></text>
</g>
<g>
<title>fsnotify (16 samples, 0.17%)</title><rect x="364.5" y="467.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="367.5" y="478.0"></text>
</g>
<g>
<title>ksys_pread64 (2 samples, 0.02%)</title><rect x="366.5" y="547.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="369.5" y="558.0"></text>
</g>
<g>
<title>fdval (6 samples, 0.06%)</title><rect x="366.8" y="611.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="369.8" y="622.0"></text>
</g>
<g>
<title>pread64 (2 samples, 0.02%)</title><rect x="367.6" y="611.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="370.6" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (30 samples, 0.32%)</title><rect x="367.8" y="659.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="370.8" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (21 samples, 0.22%)</title><rect x="368.0" y="643.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="371.0" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (4 samples, 0.04%)</title><rect x="369.6" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="372.6" y="638.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.03%)</title><rect x="370.2" y="627.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="373.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (8 samples, 0.09%)</title><rect x="370.6" y="643.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="373.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (6 samples, 0.06%)</title><rect x="370.8" y="627.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="373.8" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (15 samples, 0.16%)</title><rect x="371.6" y="659.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="374.6" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.09%)</title><rect x="371.7" y="643.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="374.7" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.04%)</title><rect x="372.2" y="627.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="375.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (6 samples, 0.06%)</title><rect x="372.7" y="643.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="375.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (42 samples, 0.45%)</title><rect x="373.5" y="675.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="376.5" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.07%)</title><rect x="376.6" y="659.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="379.6" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.07%)</title><rect x="376.6" y="643.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="379.6" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.07%)</title><rect x="376.6" y="627.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="379.6" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (5 samples, 0.05%)</title><rect x="376.9" y="611.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="379.9" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (10 samples, 0.11%)</title><rect x="377.5" y="659.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="380.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (31 samples, 0.33%)</title><rect x="378.7" y="675.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="381.7" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.04%)</title><rect x="382.1" y="659.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="385.1" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.04%)</title><rect x="382.1" y="643.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="385.1" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.03%)</title><rect x="382.3" y="627.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="385.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValueSerializer.serialize (8 samples, 0.09%)</title><rect x="382.8" y="819.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="385.8" y="830.0"></text>
</g>
<g>
<title>one/nio/serial/CalcSizeStream.writeObject (6 samples, 0.06%)</title><rect x="382.8" y="803.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="385.8" y="814.0"></text>
</g>
<g>
<title>one/nio/serial/GeneratedSerializer.calcSize (4 samples, 0.04%)</title><rect x="382.9" y="787.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="385.9" y="798.0"></text>
</g>
<g>
<title>sun/reflect/Delegate0_SerializableValue.calcSize (4 samples, 0.04%)</title><rect x="382.9" y="771.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="385.9" y="782.0"></text>
</g>
<g>
<title>one/nio/serial/CalcSizeStream.writeObject (3 samples, 0.03%)</title><rect x="383.0" y="755.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.0" y="766.0"></text>
</g>
<g>
<title>one/nio/serial/SerializationContext.put (3 samples, 0.03%)</title><rect x="383.0" y="739.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="386.0" y="750.0"></text>
</g>
<g>
<title>one/nio/serial/SerializationContext.init (2 samples, 0.02%)</title><rect x="383.1" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="386.1" y="734.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (2 samples, 0.02%)</title><rect x="383.1" y="707.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.1" y="718.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.02%)</title><rect x="383.1" y="691.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="386.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.accept (19 samples, 0.20%)</title><rect x="383.8" y="835.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.15%)</title><rect x="383.9" y="819.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="386.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.15%)</title><rect x="383.9" y="803.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.15%)</title><rect x="383.9" y="787.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.15%)</title><rect x="383.9" y="771.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.15%)</title><rect x="383.9" y="755.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.9" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.12%)</title><rect x="384.1" y="739.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="387.1" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.11%)</title><rect x="384.3" y="723.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="387.3" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.11%)</title><rect x="384.3" y="707.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="387.3" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.10%)</title><rect x="384.4" y="691.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="387.4" y="702.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.10%)</title><rect x="384.4" y="675.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="387.4" y="686.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.09%)</title><rect x="384.4" y="659.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="387.4" y="670.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.06%)</title><rect x="384.6" y="643.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="387.6" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.06%)</title><rect x="384.6" y="627.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="387.6" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.06%)</title><rect x="384.6" y="611.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="387.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzerGet.privateAccept (3 samples, 0.03%)</title><rect x="385.6" y="819.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="388.6" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzerGet.privateAccept (2 samples, 0.02%)</title><rect x="385.8" y="803.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="388.8" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.compute (2 samples, 0.02%)</title><rect x="385.8" y="787.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="388.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$86/914604914.run (473 samples, 5.03%)</title><rect x="386.2" y="867.0" width="59.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="389.2" y="878.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.lambda$iterateOverNodes$6 (473 samples, 5.03%)</title><rect x="386.2" y="851.0" width="59.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="389.2" y="862.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$153/1263996388.accept (473 samples, 5.03%)</title><rect x="386.2" y="835.0" width="59.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="389.2" y="846.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.lambda$get$1 (473 samples, 5.03%)</title><rect x="386.2" y="819.0" width="59.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.2" y="830.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (454 samples, 4.83%)</title><rect x="386.4" y="803.0" width="56.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="389.4" y="814.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (453 samples, 4.82%)</title><rect x="386.4" y="787.0" width="56.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="389.4" y="798.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (95 samples, 1.01%)</title><rect x="386.5" y="771.0" width="11.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="389.5" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (8 samples, 0.09%)</title><rect x="388.5" y="755.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="391.5" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.09%)</title><rect x="388.5" y="739.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="391.5" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (8 samples, 0.09%)</title><rect x="388.5" y="723.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="391.5" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.09%)</title><rect x="388.5" y="707.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="391.5" y="718.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (6 samples, 0.06%)</title><rect x="388.8" y="691.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="391.8" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (70 samples, 0.74%)</title><rect x="389.7" y="755.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="392.7" y="766.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (11 samples, 0.12%)</title><rect x="389.8" y="739.0" width="1.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="392.8" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.07%)</title><rect x="390.3" y="723.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="393.3" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.02%)</title><rect x="390.5" y="707.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="393.5" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.02%)</title><rect x="390.9" y="707.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="393.9" y="718.0"></text>
</g>
<g>
<title>__GI___recv (57 samples, 0.61%)</title><rect x="391.2" y="739.0" width="7.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="394.2" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (46 samples, 0.49%)</title><rect x="392.5" y="723.0" width="5.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="395.5" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (45 samples, 0.48%)</title><rect x="392.7" y="707.0" width="5.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="395.7" y="718.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (39 samples, 0.41%)</title><rect x="393.4" y="691.0" width="4.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="396.4" y="702.0"></text>
</g>
<g>
<title>__sys_recvfrom (39 samples, 0.41%)</title><rect x="393.4" y="675.0" width="4.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="396.4" y="686.0"></text>
</g>
<g>
<title>fput (4 samples, 0.04%)</title><rect x="393.4" y="659.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="396.4" y="670.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.04%)</title><rect x="393.4" y="643.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="396.4" y="654.0"></text>
</g>
<g>
<title>sock_recvmsg (34 samples, 0.36%)</title><rect x="393.9" y="659.0" width="4.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="396.9" y="670.0"></text>
</g>
<g>
<title>inet6_recvmsg (29 samples, 0.31%)</title><rect x="394.3" y="643.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="397.3" y="654.0"></text>
</g>
<g>
<title>tcp_recvmsg (28 samples, 0.30%)</title><rect x="394.4" y="627.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="397.4" y="638.0"></text>
</g>
<g>
<title>sk_wait_data (8 samples, 0.09%)</title><rect x="395.2" y="611.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="398.2" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="395.3" y="595.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="398.3" y="606.0"></text>
</g>
<g>
<title>wait_woken (5 samples, 0.05%)</title><rect x="395.6" y="595.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="398.6" y="606.0"></text>
</g>
<g>
<title>schedule_timeout (4 samples, 0.04%)</title><rect x="395.7" y="579.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="398.7" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.04%)</title><rect x="395.7" y="563.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="398.7" y="574.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.02%)</title><rect x="396.2" y="611.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="399.2" y="622.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.02%)</title><rect x="396.2" y="595.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="399.2" y="606.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.02%)</title><rect x="396.2" y="579.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="399.2" y="590.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.02%)</title><rect x="396.2" y="563.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="399.2" y="574.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (12 samples, 0.13%)</title><rect x="396.4" y="611.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="399.4" y="622.0"></text>
</g>
<g>
<title>tcp_send_ack (11 samples, 0.12%)</title><rect x="396.6" y="595.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="399.6" y="606.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (10 samples, 0.11%)</title><rect x="396.7" y="579.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="399.7" y="590.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (10 samples, 0.11%)</title><rect x="396.7" y="563.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="399.7" y="574.0"></text>
</g>
<g>
<title>ip_queue_xmit (9 samples, 0.10%)</title><rect x="396.8" y="547.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="399.8" y="558.0"></text>
</g>
<g>
<title>__ip_queue_xmit (9 samples, 0.10%)</title><rect x="396.8" y="531.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="399.8" y="542.0"></text>
</g>
<g>
<title>ip_local_out (9 samples, 0.10%)</title><rect x="396.8" y="515.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="399.8" y="526.0"></text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.03%)</title><rect x="396.8" y="499.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="399.8" y="510.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.03%)</title><rect x="396.8" y="483.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="399.8" y="494.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (3 samples, 0.03%)</title><rect x="396.8" y="467.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="399.8" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.03%)</title><rect x="396.8" y="451.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="399.8" y="462.0"></text>
</g>
<g>
<title>ip_output (6 samples, 0.06%)</title><rect x="397.2" y="499.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="400.2" y="510.0"></text>
</g>
<g>
<title>ip_finish_output (6 samples, 0.06%)</title><rect x="397.2" y="483.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="400.2" y="494.0"></text>
</g>
<g>
<title>__ip_finish_output (6 samples, 0.06%)</title><rect x="397.2" y="467.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="400.2" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (6 samples, 0.06%)</title><rect x="397.2" y="451.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="400.2" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (5 samples, 0.05%)</title><rect x="397.2" y="435.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="400.2" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.20 (5 samples, 0.05%)</title><rect x="397.2" y="419.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="400.2" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (5 samples, 0.05%)</title><rect x="397.2" y="403.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="400.2" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 0.05%)</title><rect x="397.2" y="387.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="400.2" y="398.0"></text>
</g>
<g>
<title>net_rx_action (5 samples, 0.05%)</title><rect x="397.2" y="371.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="400.2" y="382.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 0.05%)</title><rect x="397.2" y="355.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="400.2" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb (5 samples, 0.05%)</title><rect x="397.2" y="339.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="400.2" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (5 samples, 0.05%)</title><rect x="397.2" y="323.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="400.2" y="334.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 0.05%)</title><rect x="397.2" y="307.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="400.2" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (5 samples, 0.05%)</title><rect x="397.2" y="291.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="400.2" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (5 samples, 0.05%)</title><rect x="397.2" y="275.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="400.2" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (5 samples, 0.05%)</title><rect x="397.2" y="259.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="400.2" y="270.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (5 samples, 0.05%)</title><rect x="397.2" y="243.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="400.2" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 0.05%)</title><rect x="397.2" y="227.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="400.2" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.04%)</title><rect x="397.3" y="211.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="400.3" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 0.04%)</title><rect x="397.3" y="195.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="400.3" y="206.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.02%)</title><rect x="397.9" y="643.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="400.9" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.02%)</title><rect x="397.9" y="627.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="400.9" y="638.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.02%)</title><rect x="397.9" y="611.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="400.9" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.02%)</title><rect x="397.9" y="595.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="400.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (26 samples, 0.28%)</title><rect x="398.4" y="771.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="401.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.03%)</title><rect x="398.6" y="755.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="398.7" y="739.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="401.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (12 samples, 0.13%)</title><rect x="398.9" y="755.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="401.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.09%)</title><rect x="399.4" y="739.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="402.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.09%)</title><rect x="399.4" y="723.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="402.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.02%)</title><rect x="400.4" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="403.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (7 samples, 0.07%)</title><rect x="400.8" y="755.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="403.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.06%)</title><rect x="400.8" y="739.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="403.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.06%)</title><rect x="400.8" y="723.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="403.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (9 samples, 0.10%)</title><rect x="401.7" y="771.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="404.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.02%)</title><rect x="402.0" y="755.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="405.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.05%)</title><rect x="402.2" y="755.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="405.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.02%)</title><rect x="402.8" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="405.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.03%)</title><rect x="403.1" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="406.1" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (44 samples, 0.47%)</title><rect x="403.5" y="771.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="406.5" y="782.0"></text>
</g>
<g>
<title>__GI___setsockopt (42 samples, 0.45%)</title><rect x="403.7" y="755.0" width="5.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="406.7" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 0.41%)</title><rect x="404.1" y="739.0" width="4.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="407.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (39 samples, 0.41%)</title><rect x="404.1" y="723.0" width="4.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="407.1" y="734.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (36 samples, 0.38%)</title><rect x="404.5" y="707.0" width="4.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="407.5" y="718.0"></text>
</g>
<g>
<title>__sys_setsockopt (36 samples, 0.38%)</title><rect x="404.5" y="691.0" width="4.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="407.5" y="702.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (2 samples, 0.02%)</title><rect x="404.7" y="675.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="407.7" y="686.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (2 samples, 0.02%)</title><rect x="405.0" y="675.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="408.0" y="686.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.02%)</title><rect x="405.5" y="675.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="408.5" y="686.0"></text>
</g>
<g>
<title>security_socket_setsockopt (10 samples, 0.11%)</title><rect x="405.7" y="675.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="408.7" y="686.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (2 samples, 0.02%)</title><rect x="405.7" y="659.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="408.7" y="670.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (8 samples, 0.09%)</title><rect x="406.0" y="659.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="409.0" y="670.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (8 samples, 0.09%)</title><rect x="406.0" y="643.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="409.0" y="654.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.05%)</title><rect x="406.3" y="627.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="409.3" y="638.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (4 samples, 0.04%)</title><rect x="406.5" y="611.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="409.5" y="622.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.02%)</title><rect x="406.7" y="595.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="409.7" y="606.0"></text>
</g>
<g>
<title>sock_setsockopt (10 samples, 0.11%)</title><rect x="407.1" y="675.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="410.1" y="686.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.02%)</title><rect x="407.3" y="659.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="410.3" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.02%)</title><rect x="407.3" y="643.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="410.3" y="654.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.02%)</title><rect x="407.6" y="659.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="410.6" y="670.0"></text>
</g>
<g>
<title>sock_set_timeout (3 samples, 0.03%)</title><rect x="407.8" y="659.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="410.8" y="670.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="408.0" y="643.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="411.0" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.05%)</title><rect x="408.4" y="675.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="411.4" y="686.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.05%)</title><rect x="408.4" y="659.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="411.4" y="670.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.05%)</title><rect x="408.4" y="643.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="411.4" y="654.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.05%)</title><rect x="408.4" y="627.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="411.4" y="638.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (264 samples, 2.81%)</title><rect x="409.0" y="771.0" width="33.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="412.0" y="782.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (9 samples, 0.10%)</title><rect x="409.2" y="755.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="412.2" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.03%)</title><rect x="410.0" y="739.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="413.0" y="750.0"></text>
</g>
<g>
<title>__libc_send (253 samples, 2.69%)</title><rect x="410.4" y="755.0" width="31.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="413.4" y="766.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (251 samples, 2.67%)</title><rect x="410.6" y="739.0" width="31.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="413.6" y="750.0">en..</text>
</g>
<g>
<title>do_syscall_64 (251 samples, 2.67%)</title><rect x="410.6" y="723.0" width="31.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="413.6" y="734.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (251 samples, 2.67%)</title><rect x="410.6" y="707.0" width="31.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="413.6" y="718.0">__..</text>
</g>
<g>
<title>__sys_sendto (250 samples, 2.66%)</title><rect x="410.6" y="691.0" width="31.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="413.6" y="702.0">__..</text>
</g>
<g>
<title>sock_sendmsg (246 samples, 2.61%)</title><rect x="411.0" y="675.0" width="30.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="414.0" y="686.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (239 samples, 2.54%)</title><rect x="411.4" y="659.0" width="29.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="414.4" y="670.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (238 samples, 2.53%)</title><rect x="411.5" y="643.0" width="29.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="414.5" y="654.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (236 samples, 2.51%)</title><rect x="411.7" y="627.0" width="29.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="414.7" y="638.0">tc..</text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.02%)</title><rect x="412.9" y="611.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="415.9" y="622.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.03%)</title><rect x="413.1" y="611.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="416.1" y="622.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="413.1" y="595.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="416.1" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (19 samples, 0.20%)</title><rect x="413.6" y="611.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="416.6" y="622.0"></text>
</g>
<g>
<title>__alloc_skb (18 samples, 0.19%)</title><rect x="413.7" y="595.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="416.7" y="606.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (7 samples, 0.07%)</title><rect x="414.0" y="579.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="417.0" y="590.0"></text>
</g>
<g>
<title>memset (6 samples, 0.06%)</title><rect x="414.1" y="563.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="417.1" y="574.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.03%)</title><rect x="414.9" y="579.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="417.9" y="590.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.03%)</title><rect x="415.2" y="579.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="418.2" y="590.0"></text>
</g>
<g>
<title>memset (3 samples, 0.03%)</title><rect x="415.6" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="418.6" y="590.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.03%)</title><rect x="416.0" y="611.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="419.0" y="622.0"></text>
</g>
<g>
<title>tcp_push (195 samples, 2.07%)</title><rect x="416.5" y="611.0" width="24.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="419.5" y="622.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (193 samples, 2.05%)</title><rect x="416.6" y="595.0" width="24.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="419.6" y="606.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (192 samples, 2.04%)</title><rect x="416.8" y="579.0" width="24.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="419.8" y="590.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (177 samples, 1.88%)</title><rect x="417.8" y="563.0" width="22.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="420.8" y="574.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (167 samples, 1.78%)</title><rect x="418.8" y="547.0" width="20.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="421.8" y="558.0"></text>
</g>
<g>
<title>__ip_queue_xmit (167 samples, 1.78%)</title><rect x="418.8" y="531.0" width="20.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="421.8" y="542.0"></text>
</g>
<g>
<title>ip_local_out (163 samples, 1.73%)</title><rect x="419.1" y="515.0" width="20.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="422.1" y="526.0"></text>
</g>
<g>
<title>__ip_local_out (29 samples, 0.31%)</title><rect x="419.3" y="499.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="422.3" y="510.0"></text>
</g>
<g>
<title>nf_hook_slow (27 samples, 0.29%)</title><rect x="419.5" y="483.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="422.5" y="494.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.04%)</title><rect x="419.5" y="467.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="422.5" y="478.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (4 samples, 0.04%)</title><rect x="419.5" y="451.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="422.5" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (18 samples, 0.19%)</title><rect x="420.0" y="467.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="423.0" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (17 samples, 0.18%)</title><rect x="420.1" y="451.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="423.1" y="462.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (3 samples, 0.03%)</title><rect x="420.5" y="435.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="423.5" y="446.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (2 samples, 0.02%)</title><rect x="421.0" y="435.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="424.0" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (8 samples, 0.09%)</title><rect x="421.3" y="435.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="424.3" y="446.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (3 samples, 0.03%)</title><rect x="421.9" y="419.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="424.9" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (5 samples, 0.05%)</title><rect x="422.3" y="467.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="425.3" y="478.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (3 samples, 0.03%)</title><rect x="422.5" y="451.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="425.5" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.02%)</title><rect x="422.9" y="499.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="425.9" y="510.0"></text>
</g>
<g>
<title>ip_output (129 samples, 1.37%)</title><rect x="423.2" y="499.0" width="16.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="426.2" y="510.0"></text>
</g>
<g>
<title>ip_finish_output (128 samples, 1.36%)</title><rect x="423.2" y="483.0" width="16.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="426.2" y="494.0"></text>
</g>
<g>
<title>__ip_finish_output (127 samples, 1.35%)</title><rect x="423.3" y="467.0" width="15.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="426.3" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (126 samples, 1.34%)</title><rect x="423.4" y="451.0" width="15.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="426.4" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (107 samples, 1.14%)</title><rect x="424.4" y="435.0" width="13.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="427.4" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.20 (107 samples, 1.14%)</title><rect x="424.4" y="419.0" width="13.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="427.4" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (106 samples, 1.13%)</title><rect x="424.5" y="403.0" width="13.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="427.5" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (106 samples, 1.13%)</title><rect x="424.5" y="387.0" width="13.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="427.5" y="398.0"></text>
</g>
<g>
<title>net_rx_action (105 samples, 1.12%)</title><rect x="424.5" y="371.0" width="13.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="427.5" y="382.0"></text>
</g>
<g>
<title>process_backlog (103 samples, 1.09%)</title><rect x="424.8" y="355.0" width="12.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="427.8" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb (102 samples, 1.08%)</title><rect x="424.9" y="339.0" width="12.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="427.9" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (102 samples, 1.08%)</title><rect x="424.9" y="323.0" width="12.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="427.9" y="334.0"></text>
</g>
<g>
<title>ip_rcv (101 samples, 1.07%)</title><rect x="424.9" y="307.0" width="12.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="427.9" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (96 samples, 1.02%)</title><rect x="425.0" y="291.0" width="12.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="428.0" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (96 samples, 1.02%)</title><rect x="425.0" y="275.0" width="12.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="428.0" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (95 samples, 1.01%)</title><rect x="425.0" y="259.0" width="11.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="428.0" y="270.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (94 samples, 1.00%)</title><rect x="425.0" y="243.0" width="11.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="428.0" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (92 samples, 0.98%)</title><rect x="425.3" y="227.0" width="11.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="428.3" y="238.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.02%)</title><rect x="426.0" y="211.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="429.0" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (81 samples, 0.86%)</title><rect x="426.7" y="211.0" width="10.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="429.7" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (79 samples, 0.84%)</title><rect x="426.9" y="195.0" width="9.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="429.9" y="206.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.05%)</title><rect x="427.2" y="179.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="430.2" y="190.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.05%)</title><rect x="427.2" y="163.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="430.2" y="174.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.05%)</title><rect x="427.2" y="147.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="430.2" y="158.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.05%)</title><rect x="427.2" y="131.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="430.2" y="142.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.05%)</title><rect x="427.2" y="115.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="430.2" y="126.0"></text>
</g>
<g>
<title>tcp_ack (13 samples, 0.14%)</title><rect x="428.0" y="179.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="431.0" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.06%)</title><rect x="428.7" y="163.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="431.7" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.05%)</title><rect x="428.7" y="147.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="431.7" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.02%)</title><rect x="428.7" y="131.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="431.7" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.02%)</title><rect x="428.7" y="115.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="431.7" y="126.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.03%)</title><rect x="428.9" y="131.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="431.9" y="142.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.03%)</title><rect x="428.9" y="115.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="431.9" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.02%)</title><rect x="429.7" y="179.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="432.7" y="190.0"></text>
</g>
<g>
<title>tcp_data_ready (53 samples, 0.56%)</title><rect x="429.9" y="179.0" width="6.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="432.9" y="190.0"></text>
</g>
<g>
<title>sock_def_readable (52 samples, 0.55%)</title><rect x="430.0" y="163.0" width="6.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="433.0" y="174.0"></text>
</g>
<g>
<title>__wake_up_sync_key (51 samples, 0.54%)</title><rect x="430.2" y="147.0" width="6.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="433.2" y="158.0"></text>
</g>
<g>
<title>__wake_up_common_lock (51 samples, 0.54%)</title><rect x="430.2" y="131.0" width="6.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="433.2" y="142.0"></text>
</g>
<g>
<title>__lock_text_start (51 samples, 0.54%)</title><rect x="430.2" y="115.0" width="6.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="433.2" y="126.0"></text>
</g>
<g>
<title>dev_queue_xmit (11 samples, 0.12%)</title><rect x="437.8" y="435.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="440.8" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (11 samples, 0.12%)</title><rect x="437.8" y="419.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="440.8" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.06%)</title><rect x="438.3" y="403.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="441.3" y="414.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.03%)</title><rect x="438.3" y="387.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="441.3" y="398.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.02%)</title><rect x="438.8" y="387.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="441.8" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.02%)</title><rect x="439.3" y="499.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="442.3" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.03%)</title><rect x="440.3" y="563.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="443.3" y="574.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.03%)</title><rect x="440.3" y="547.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="443.3" y="558.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.03%)</title><rect x="440.3" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="443.3" y="542.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.03%)</title><rect x="440.3" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="443.3" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.02%)</title><rect x="440.5" y="499.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="443.5" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.03%)</title><rect x="441.0" y="611.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="444.0" y="622.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.03%)</title><rect x="441.0" y="595.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="444.0" y="606.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.02%)</title><rect x="441.1" y="579.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="444.1" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.03%)</title><rect x="441.5" y="659.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="444.5" y="670.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.02%)</title><rect x="441.6" y="643.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="444.6" y="654.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.02%)</title><rect x="441.6" y="627.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="444.6" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.02%)</title><rect x="441.6" y="611.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="444.6" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.02%)</title><rect x="441.6" y="595.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="444.6" y="606.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (8 samples, 0.09%)</title><rect x="442.1" y="771.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="445.1" y="782.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (5 samples, 0.05%)</title><rect x="442.5" y="755.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="445.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.accept (17 samples, 0.18%)</title><rect x="443.3" y="803.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="446.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.02%)</title><rect x="443.3" y="787.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="446.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.02%)</title><rect x="443.3" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="446.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.06%)</title><rect x="443.6" y="787.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.06%)</title><rect x="443.6" y="771.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.06%)</title><rect x="443.6" y="755.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="446.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.06%)</title><rect x="443.6" y="739.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="446.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.06%)</title><rect x="443.6" y="723.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="446.6" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.04%)</title><rect x="443.7" y="707.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="446.7" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.04%)</title><rect x="443.7" y="691.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="446.7" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.04%)</title><rect x="443.7" y="675.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="446.7" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.04%)</title><rect x="443.7" y="659.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="446.7" y="670.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.04%)</title><rect x="443.7" y="643.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="446.7" y="654.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.04%)</title><rect x="443.7" y="627.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="446.7" y="638.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.04%)</title><rect x="443.7" y="611.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="446.7" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.04%)</title><rect x="443.7" y="595.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="446.7" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.04%)</title><rect x="443.7" y="579.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="446.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzerGet.privateAccept (7 samples, 0.07%)</title><rect x="444.5" y="787.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="447.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValueSerializer.deserialize (2 samples, 0.02%)</title><rect x="444.6" y="771.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="447.6" y="782.0"></text>
</g>
<g>
<title>one/nio/serial/DeserializeStream.readObject (2 samples, 0.02%)</title><rect x="444.6" y="755.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="447.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzerGet.privateAccept (4 samples, 0.04%)</title><rect x="444.8" y="771.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="447.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.compute (4 samples, 0.04%)</title><rect x="444.8" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="447.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$151/1948971226.run (5,564 samples, 59.14%)</title><rect x="445.5" y="867.0" width="697.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="448.5" y="878.0">ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$151/1948971226.run</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityGet$2 (5,564 samples, 59.14%)</title><rect x="445.5" y="851.0" width="697.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="448.5" y="862.0">ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityGet$2</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.get (5,123 samples, 54.45%)</title><rect x="445.7" y="835.0" width="642.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="448.7" y="846.0">ru/mail/polis/service/alexander/marashov/ResponseManager.get</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.11%)</title><rect x="446.0" y="819.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="449.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.04%)</title><rect x="446.2" y="803.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.04%)</title><rect x="446.2" y="787.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.04%)</title><rect x="446.7" y="803.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="449.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.04%)</title><rect x="446.7" y="787.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="449.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.03%)</title><rect x="446.7" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="449.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager.rowGet (5,036 samples, 53.53%)</title><rect x="447.2" y="819.0" width="631.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="450.2" y="830.0">ru/mail/polis/service/alexander/marashov/DaoManager.rowGet</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.rowGet (5,015 samples, 53.31%)</title><rect x="447.4" y="803.0" width="629.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="450.4" y="814.0">ru/mail/polis/dao/DAO.rowGet</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (107 samples, 1.14%)</title><rect x="447.9" y="787.0" width="13.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="450.9" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (102 samples, 1.08%)</title><rect x="448.2" y="771.0" width="12.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="451.2" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (101 samples, 1.07%)</title><rect x="448.4" y="755.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="451.4" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (101 samples, 1.07%)</title><rect x="448.4" y="739.0" width="12.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="451.4" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (101 samples, 1.07%)</title><rect x="448.4" y="723.0" width="12.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="451.4" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (101 samples, 1.07%)</title><rect x="448.4" y="707.0" width="12.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="451.4" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (101 samples, 1.07%)</title><rect x="448.4" y="691.0" width="12.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="451.4" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (101 samples, 1.07%)</title><rect x="448.4" y="675.0" width="12.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="451.4" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (101 samples, 1.07%)</title><rect x="448.4" y="659.0" width="12.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="451.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (101 samples, 1.07%)</title><rect x="448.4" y="643.0" width="12.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="451.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (101 samples, 1.07%)</title><rect x="448.4" y="627.0" width="12.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="451.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (37 samples, 0.39%)</title><rect x="448.5" y="611.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="451.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (14 samples, 0.15%)</title><rect x="448.5" y="595.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="451.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (13 samples, 0.14%)</title><rect x="448.6" y="579.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="451.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (13 samples, 0.14%)</title><rect x="448.6" y="563.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="451.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (13 samples, 0.14%)</title><rect x="448.6" y="547.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (12 samples, 0.13%)</title><rect x="448.6" y="531.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (12 samples, 0.13%)</title><rect x="448.6" y="515.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="451.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (12 samples, 0.13%)</title><rect x="448.6" y="499.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="451.6" y="510.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.12%)</title><rect x="448.7" y="483.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="451.7" y="494.0"></text>
</g>
<g>
<title>pread64 (11 samples, 0.12%)</title><rect x="448.7" y="467.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="451.7" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.12%)</title><rect x="448.7" y="451.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="451.7" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.11%)</title><rect x="448.9" y="435.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="451.9" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (10 samples, 0.11%)</title><rect x="448.9" y="419.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="451.9" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (10 samples, 0.11%)</title><rect x="448.9" y="403.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="451.9" y="414.0"></text>
</g>
<g>
<title>vfs_read (8 samples, 0.09%)</title><rect x="449.1" y="387.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="452.1" y="398.0"></text>
</g>
<g>
<title>__vfs_read (6 samples, 0.06%)</title><rect x="449.1" y="371.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="452.1" y="382.0"></text>
</g>
<g>
<title>new_sync_read (6 samples, 0.06%)</title><rect x="449.1" y="355.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="452.1" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (6 samples, 0.06%)</title><rect x="449.1" y="339.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="452.1" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (6 samples, 0.06%)</title><rect x="449.1" y="323.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="452.1" y="334.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="449.4" y="307.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="452.4" y="318.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="449.4" y="291.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="452.4" y="302.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="449.9" y="371.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="452.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (9 samples, 0.10%)</title><rect x="450.2" y="595.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="453.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (8 samples, 0.09%)</title><rect x="450.4" y="579.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="453.4" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (8 samples, 0.09%)</title><rect x="450.4" y="563.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.07%)</title><rect x="450.4" y="547.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="453.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.06%)</title><rect x="450.5" y="531.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.06%)</title><rect x="450.5" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.06%)</title><rect x="450.5" y="499.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="453.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="450.5" y="483.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="453.5" y="494.0"></text>
</g>
<g>
<title>pread64 (6 samples, 0.06%)</title><rect x="450.5" y="467.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="453.5" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.06%)</title><rect x="450.5" y="451.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="453.5" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.06%)</title><rect x="450.5" y="435.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="453.5" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.05%)</title><rect x="450.6" y="419.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="453.6" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.05%)</title><rect x="450.6" y="403.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="453.6" y="414.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.03%)</title><rect x="450.9" y="387.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="453.9" y="398.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="450.9" y="371.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="453.9" y="382.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="450.9" y="355.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="453.9" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.02%)</title><rect x="450.9" y="339.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="453.9" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.02%)</title><rect x="450.9" y="323.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="453.9" y="334.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="450.9" y="307.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="453.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (14 samples, 0.15%)</title><rect x="451.4" y="595.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="454.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (13 samples, 0.14%)</title><rect x="451.5" y="579.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="454.5" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (13 samples, 0.14%)</title><rect x="451.5" y="563.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="454.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (11 samples, 0.12%)</title><rect x="451.6" y="547.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="454.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (10 samples, 0.11%)</title><rect x="451.6" y="531.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="454.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (10 samples, 0.11%)</title><rect x="451.6" y="515.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="454.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (10 samples, 0.11%)</title><rect x="451.6" y="499.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="454.6" y="510.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.10%)</title><rect x="451.7" y="483.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="454.7" y="494.0"></text>
</g>
<g>
<title>pread64 (9 samples, 0.10%)</title><rect x="451.7" y="467.0" width="1.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="454.7" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.09%)</title><rect x="451.9" y="451.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="454.9" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.07%)</title><rect x="452.0" y="435.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="455.0" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (7 samples, 0.07%)</title><rect x="452.0" y="419.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="455.0" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (7 samples, 0.07%)</title><rect x="452.0" y="403.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="455.0" y="414.0"></text>
</g>
<g>
<title>vfs_read (6 samples, 0.06%)</title><rect x="452.1" y="387.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="455.1" y="398.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.05%)</title><rect x="452.1" y="371.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="455.1" y="382.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.05%)</title><rect x="452.1" y="355.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="455.1" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (5 samples, 0.05%)</title><rect x="452.1" y="339.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="455.1" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (5 samples, 0.05%)</title><rect x="452.1" y="323.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="455.1" y="334.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.02%)</title><rect x="452.5" y="307.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="455.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.value (63 samples, 0.67%)</title><rect x="453.1" y="611.0" width="7.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="456.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (6 samples, 0.06%)</title><rect x="453.1" y="595.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="456.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.06%)</title><rect x="453.1" y="579.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="456.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.06%)</title><rect x="453.1" y="563.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="456.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.03%)</title><rect x="453.1" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="456.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.02%)</title><rect x="453.5" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="456.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (29 samples, 0.31%)</title><rect x="453.9" y="595.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="456.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (29 samples, 0.31%)</title><rect x="453.9" y="579.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="456.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (29 samples, 0.31%)</title><rect x="453.9" y="563.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.02%)</title><rect x="454.0" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="457.0" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.02%)</title><rect x="454.0" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="457.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (24 samples, 0.26%)</title><rect x="454.3" y="547.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.3" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="454.3" y="531.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (21 samples, 0.22%)</title><rect x="454.5" y="531.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.5" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (6 samples, 0.06%)</title><rect x="454.5" y="515.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="457.5" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.04%)</title><rect x="454.8" y="499.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="457.8" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.03%)</title><rect x="454.9" y="483.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="457.9" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.03%)</title><rect x="454.9" y="467.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="457.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (15 samples, 0.16%)</title><rect x="455.3" y="515.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="458.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (15 samples, 0.16%)</title><rect x="455.3" y="499.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="458.3" y="510.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.15%)</title><rect x="455.4" y="483.0" width="1.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="458.4" y="494.0"></text>
</g>
<g>
<title>pread64 (14 samples, 0.15%)</title><rect x="455.4" y="467.0" width="1.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="458.4" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.13%)</title><rect x="455.6" y="451.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="458.6" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.13%)</title><rect x="455.6" y="435.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="458.6" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (12 samples, 0.13%)</title><rect x="455.6" y="419.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="458.6" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (12 samples, 0.13%)</title><rect x="455.6" y="403.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="458.6" y="414.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.04%)</title><rect x="455.6" y="387.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="458.6" y="398.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.04%)</title><rect x="455.6" y="371.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="458.6" y="382.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.03%)</title><rect x="455.8" y="355.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="458.8" y="366.0"></text>
</g>
<g>
<title>vfs_read (8 samples, 0.09%)</title><rect x="456.1" y="387.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="459.1" y="398.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.05%)</title><rect x="456.1" y="371.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="459.1" y="382.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.05%)</title><rect x="456.1" y="355.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="459.1" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (5 samples, 0.05%)</title><rect x="456.1" y="339.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="459.1" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (4 samples, 0.04%)</title><rect x="456.3" y="323.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="459.3" y="334.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.03%)</title><rect x="456.8" y="371.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="459.8" y="382.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.03%)</title><rect x="456.8" y="355.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="459.8" y="366.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="456.8" y="339.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="459.8" y="350.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="456.8" y="323.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="459.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.02%)</title><rect x="457.3" y="547.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="460.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.02%)</title><rect x="457.3" y="531.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getLongFrom (18 samples, 0.19%)</title><rect x="457.5" y="595.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="460.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (18 samples, 0.19%)</title><rect x="457.5" y="579.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="460.5" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (18 samples, 0.19%)</title><rect x="457.5" y="563.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="460.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.03%)</title><rect x="457.6" y="547.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="460.6" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.03%)</title><rect x="457.6" y="531.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="460.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 0.13%)</title><rect x="458.0" y="547.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="461.0" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="458.0" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="461.0" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.02%)</title><rect x="458.0" y="515.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.0" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (2 samples, 0.02%)</title><rect x="458.0" y="499.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (10 samples, 0.11%)</title><rect x="458.3" y="531.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.3" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="458.4" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.4" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.02%)</title><rect x="458.5" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="461.5" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.02%)</title><rect x="458.5" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.5" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.02%)</title><rect x="458.5" y="467.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.06%)</title><rect x="458.8" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="461.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.06%)</title><rect x="458.8" y="499.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.8" y="510.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="458.9" y="483.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="461.9" y="494.0"></text>
</g>
<g>
<title>pread64 (5 samples, 0.05%)</title><rect x="458.9" y="467.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="461.9" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.05%)</title><rect x="458.9" y="451.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="461.9" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.05%)</title><rect x="458.9" y="435.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="461.9" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.05%)</title><rect x="458.9" y="419.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="461.9" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.05%)</title><rect x="458.9" y="403.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="461.9" y="414.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.05%)</title><rect x="458.9" y="387.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="461.9" y="398.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.03%)</title><rect x="459.0" y="371.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="462.0" y="382.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.03%)</title><rect x="459.0" y="355.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="462.0" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.02%)</title><rect x="459.1" y="339.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="462.1" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.02%)</title><rect x="459.1" y="323.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="462.1" y="334.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="459.1" y="307.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="462.1" y="318.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="459.1" y="291.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="462.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.02%)</title><rect x="459.5" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="462.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (10 samples, 0.11%)</title><rect x="459.8" y="595.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="462.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (9 samples, 0.10%)</title><rect x="459.9" y="579.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="462.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (9 samples, 0.10%)</title><rect x="459.9" y="563.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="462.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.07%)</title><rect x="459.9" y="547.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="462.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.07%)</title><rect x="459.9" y="531.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="462.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.07%)</title><rect x="459.9" y="515.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="462.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.07%)</title><rect x="459.9" y="499.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="462.9" y="510.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.06%)</title><rect x="459.9" y="483.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="462.9" y="494.0"></text>
</g>
<g>
<title>pread64 (6 samples, 0.06%)</title><rect x="459.9" y="467.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="462.9" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.05%)</title><rect x="460.0" y="451.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="463.0" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.05%)</title><rect x="460.0" y="435.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="463.0" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.04%)</title><rect x="460.2" y="419.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="463.2" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.04%)</title><rect x="460.2" y="403.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="463.2" y="414.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.02%)</title><rect x="460.4" y="387.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="463.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.rowIterator (4,904 samples, 52.13%)</title><rect x="461.3" y="787.0" width="615.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="464.3" y="798.0">ru/mail/polis/dao/alexander/marashov/DAOImpl.rowIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (299 samples, 3.18%)</title><rect x="461.5" y="771.0" width="37.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="464.5" y="782.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (299 samples, 3.18%)</title><rect x="461.5" y="755.0" width="37.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="464.5" y="766.0">com..</text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.03%)</title><rect x="462.0" y="739.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="465.0" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (284 samples, 3.02%)</title><rect x="462.4" y="739.0" width="35.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.4" y="750.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (284 samples, 3.02%)</title><rect x="462.4" y="723.0" width="35.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="465.4" y="734.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (284 samples, 3.02%)</title><rect x="462.4" y="707.0" width="35.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="465.4" y="718.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (284 samples, 3.02%)</title><rect x="462.4" y="691.0" width="35.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.4" y="702.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (281 samples, 2.99%)</title><rect x="462.8" y="675.0" width="35.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="465.8" y="686.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (279 samples, 2.97%)</title><rect x="463.0" y="659.0" width="35.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="466.0" y="670.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (279 samples, 2.97%)</title><rect x="463.0" y="643.0" width="35.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.0" y="654.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (278 samples, 2.95%)</title><rect x="463.2" y="627.0" width="34.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.2" y="638.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (278 samples, 2.95%)</title><rect x="463.2" y="611.0" width="34.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.2" y="622.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (112 samples, 1.19%)</title><rect x="463.3" y="595.0" width="14.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (35 samples, 0.37%)</title><rect x="463.3" y="579.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="466.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.05%)</title><rect x="463.3" y="563.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.3" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="463.4" y="547.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="466.4" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="463.4" y="531.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (30 samples, 0.32%)</title><rect x="463.9" y="563.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (30 samples, 0.32%)</title><rect x="463.9" y="547.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="466.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.03%)</title><rect x="464.0" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="467.0" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.03%)</title><rect x="464.0" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="467.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (24 samples, 0.26%)</title><rect x="464.4" y="531.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="467.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (24 samples, 0.26%)</title><rect x="464.4" y="515.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="467.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (23 samples, 0.24%)</title><rect x="464.5" y="499.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="467.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (23 samples, 0.24%)</title><rect x="464.5" y="483.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="467.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.22%)</title><rect x="464.8" y="467.0" width="2.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="467.8" y="478.0"></text>
</g>
<g>
<title>pread64 (21 samples, 0.22%)</title><rect x="464.8" y="451.0" width="2.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="467.8" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.21%)</title><rect x="464.9" y="435.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="467.9" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.21%)</title><rect x="464.9" y="419.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="467.9" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (17 samples, 0.18%)</title><rect x="465.3" y="403.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="468.3" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (16 samples, 0.17%)</title><rect x="465.4" y="387.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="468.4" y="398.0"></text>
</g>
<g>
<title>vfs_read (15 samples, 0.16%)</title><rect x="465.5" y="371.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="468.5" y="382.0"></text>
</g>
<g>
<title>__vfs_read (11 samples, 0.12%)</title><rect x="465.5" y="355.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="468.5" y="366.0"></text>
</g>
<g>
<title>new_sync_read (9 samples, 0.10%)</title><rect x="465.8" y="339.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="468.8" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (9 samples, 0.10%)</title><rect x="465.8" y="323.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="468.8" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (8 samples, 0.09%)</title><rect x="465.9" y="307.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="468.9" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.03%)</title><rect x="466.0" y="291.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="469.0" y="302.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="466.2" y="275.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="469.2" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="466.4" y="291.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="469.4" y="302.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.02%)</title><rect x="466.4" y="275.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="469.4" y="286.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.02%)</title><rect x="466.7" y="291.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="469.7" y="302.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.02%)</title><rect x="466.7" y="275.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="469.7" y="286.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.02%)</title><rect x="466.7" y="259.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="469.7" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.03%)</title><rect x="467.0" y="355.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="470.0" y="366.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="467.2" y="339.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="470.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.02%)</title><rect x="467.4" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="470.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (38 samples, 0.40%)</title><rect x="467.7" y="579.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="470.7" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.02%)</title><rect x="467.7" y="563.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="470.7" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="467.7" y="547.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="470.7" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="467.7" y="531.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="470.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (36 samples, 0.38%)</title><rect x="467.9" y="563.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="470.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (36 samples, 0.38%)</title><rect x="467.9" y="547.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="470.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.02%)</title><rect x="467.9" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="470.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (32 samples, 0.34%)</title><rect x="468.2" y="531.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.2" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (2 samples, 0.02%)</title><rect x="468.2" y="515.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="471.2" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (26 samples, 0.28%)</title><rect x="468.4" y="515.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="471.4" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="468.4" y="499.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="471.4" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.02%)</title><rect x="468.6" y="483.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="471.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (23 samples, 0.24%)</title><rect x="468.8" y="499.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (23 samples, 0.24%)</title><rect x="468.8" y="483.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.8" y="494.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.23%)</title><rect x="468.9" y="467.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="471.9" y="478.0"></text>
</g>
<g>
<title>pread64 (22 samples, 0.23%)</title><rect x="468.9" y="451.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="471.9" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.22%)</title><rect x="469.1" y="435.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="472.1" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.22%)</title><rect x="469.1" y="419.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="472.1" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (17 samples, 0.18%)</title><rect x="469.6" y="403.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="472.6" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (17 samples, 0.18%)</title><rect x="469.6" y="387.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="472.6" y="398.0"></text>
</g>
<g>
<title>vfs_read (15 samples, 0.16%)</title><rect x="469.8" y="371.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="472.8" y="382.0"></text>
</g>
<g>
<title>__vfs_read (12 samples, 0.13%)</title><rect x="469.8" y="355.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="472.8" y="366.0"></text>
</g>
<g>
<title>new_sync_read (12 samples, 0.13%)</title><rect x="469.8" y="339.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="472.8" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (12 samples, 0.13%)</title><rect x="469.8" y="323.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="472.8" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (11 samples, 0.12%)</title><rect x="469.8" y="307.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="472.8" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.03%)</title><rect x="470.2" y="291.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="473.2" y="302.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="470.3" y="275.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="473.3" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (4 samples, 0.04%)</title><rect x="470.6" y="291.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="473.6" y="302.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.04%)</title><rect x="470.6" y="275.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="473.6" y="286.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.02%)</title><rect x="470.8" y="259.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="473.8" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="471.4" y="355.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="474.4" y="366.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="471.4" y="339.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="474.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.02%)</title><rect x="471.7" y="515.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="474.7" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.02%)</title><rect x="471.7" y="499.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="474.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.02%)</title><rect x="471.9" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="474.9" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.02%)</title><rect x="471.9" y="499.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="474.9" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.02%)</title><rect x="471.9" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="474.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.02%)</title><rect x="472.2" y="531.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="475.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (39 samples, 0.41%)</title><rect x="472.4" y="579.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="475.4" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.04%)</title><rect x="472.4" y="563.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="475.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="472.4" y="547.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="475.4" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="472.4" y="531.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="475.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (35 samples, 0.37%)</title><rect x="472.9" y="563.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (34 samples, 0.36%)</title><rect x="473.1" y="547.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (33 samples, 0.35%)</title><rect x="473.1" y="531.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="476.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (26 samples, 0.28%)</title><rect x="473.3" y="515.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="476.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (26 samples, 0.28%)</title><rect x="473.3" y="499.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (26 samples, 0.28%)</title><rect x="473.3" y="483.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.3" y="494.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.26%)</title><rect x="473.4" y="467.0" width="3.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="476.4" y="478.0"></text>
</g>
<g>
<title>pread64 (23 samples, 0.24%)</title><rect x="473.6" y="451.0" width="2.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="476.6" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.24%)</title><rect x="473.6" y="435.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="476.6" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.23%)</title><rect x="473.7" y="419.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="476.7" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (20 samples, 0.21%)</title><rect x="473.9" y="403.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="476.9" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (20 samples, 0.21%)</title><rect x="473.9" y="387.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="476.9" y="398.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.04%)</title><rect x="473.9" y="371.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="476.9" y="382.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.04%)</title><rect x="473.9" y="355.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="476.9" y="366.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.04%)</title><rect x="473.9" y="339.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="476.9" y="350.0"></text>
</g>
<g>
<title>vfs_read (16 samples, 0.17%)</title><rect x="474.4" y="371.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="477.4" y="382.0"></text>
</g>
<g>
<title>__vfs_read (14 samples, 0.15%)</title><rect x="474.4" y="355.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="477.4" y="366.0"></text>
</g>
<g>
<title>new_sync_read (12 samples, 0.13%)</title><rect x="474.7" y="339.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="477.7" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (11 samples, 0.12%)</title><rect x="474.8" y="323.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="477.8" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (11 samples, 0.12%)</title><rect x="474.8" y="307.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="477.8" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.04%)</title><rect x="475.0" y="291.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="478.0" y="302.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.04%)</title><rect x="475.0" y="275.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="478.0" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (6 samples, 0.06%)</title><rect x="475.5" y="291.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="478.5" y="302.0"></text>
</g>
<g>
<title>find_get_entry (6 samples, 0.06%)</title><rect x="475.5" y="275.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="478.5" y="286.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.02%)</title><rect x="476.0" y="259.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="479.0" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="476.2" y="355.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="479.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.03%)</title><rect x="476.6" y="515.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="479.6" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.02%)</title><rect x="476.7" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="479.7" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (2 samples, 0.02%)</title><rect x="476.7" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="479.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.02%)</title><rect x="477.0" y="515.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.value (165 samples, 1.75%)</title><rect x="477.3" y="595.0" width="20.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (37 samples, 0.39%)</title><rect x="477.3" y="579.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (37 samples, 0.39%)</title><rect x="477.3" y="563.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (37 samples, 0.39%)</title><rect x="477.3" y="547.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (7 samples, 0.07%)</title><rect x="477.6" y="531.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="480.6" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (7 samples, 0.07%)</title><rect x="477.6" y="515.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="480.6" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.05%)</title><rect x="477.8" y="499.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="480.8" y="510.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.05%)</title><rect x="477.8" y="483.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="480.8" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.05%)</title><rect x="477.8" y="467.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="480.8" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="478.0" y="451.0" width="0.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="481.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (25 samples, 0.27%)</title><rect x="478.5" y="531.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="481.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (22 samples, 0.23%)</title><rect x="478.5" y="515.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="481.5" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.02%)</title><rect x="478.5" y="499.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (20 samples, 0.21%)</title><rect x="478.7" y="499.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="481.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (20 samples, 0.21%)</title><rect x="478.7" y="483.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.7" y="494.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.02%)</title><rect x="478.8" y="467.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="481.8" y="478.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.18%)</title><rect x="479.1" y="467.0" width="2.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="482.1" y="478.0"></text>
</g>
<g>
<title>pread64 (16 samples, 0.17%)</title><rect x="479.2" y="451.0" width="2.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="482.2" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.17%)</title><rect x="479.2" y="435.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="482.2" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.17%)</title><rect x="479.2" y="419.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="482.2" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (14 samples, 0.15%)</title><rect x="479.5" y="403.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="482.5" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (14 samples, 0.15%)</title><rect x="479.5" y="387.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="482.5" y="398.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="479.5" y="371.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="482.5" y="382.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="479.5" y="355.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="482.5" y="366.0"></text>
</g>
<g>
<title>vfs_read (10 samples, 0.11%)</title><rect x="480.0" y="371.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="483.0" y="382.0"></text>
</g>
<g>
<title>__vfs_read (7 samples, 0.07%)</title><rect x="480.1" y="355.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="483.1" y="366.0"></text>
</g>
<g>
<title>new_sync_read (7 samples, 0.07%)</title><rect x="480.1" y="339.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="483.1" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (7 samples, 0.07%)</title><rect x="480.1" y="323.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="483.1" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (7 samples, 0.07%)</title><rect x="480.1" y="307.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="483.1" y="318.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.03%)</title><rect x="480.5" y="291.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="483.5" y="302.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.03%)</title><rect x="480.5" y="275.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="483.5" y="286.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.02%)</title><rect x="480.6" y="259.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="483.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.03%)</title><rect x="481.2" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.2" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.02%)</title><rect x="481.2" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="484.2" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.02%)</title><rect x="481.2" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="484.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.03%)</title><rect x="481.6" y="531.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.02%)</title><rect x="481.7" y="515.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="484.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (53 samples, 0.56%)</title><rect x="482.0" y="579.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.0" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (53 samples, 0.56%)</title><rect x="482.0" y="563.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (53 samples, 0.56%)</title><rect x="482.0" y="547.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.03%)</title><rect x="482.5" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="485.5" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.03%)</title><rect x="482.5" y="515.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="485.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (46 samples, 0.49%)</title><rect x="482.9" y="531.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="485.9" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.03%)</title><rect x="482.9" y="515.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (38 samples, 0.40%)</title><rect x="483.2" y="515.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.2" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.02%)</title><rect x="483.2" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="486.2" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.02%)</title><rect x="483.2" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="486.2" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.02%)</title><rect x="483.2" y="467.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="486.2" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.02%)</title><rect x="483.2" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="486.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (36 samples, 0.38%)</title><rect x="483.5" y="499.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="486.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (36 samples, 0.38%)</title><rect x="483.5" y="483.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="486.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.35%)</title><rect x="483.6" y="467.0" width="4.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="486.6" y="478.0"></text>
</g>
<g>
<title>pread64 (33 samples, 0.35%)</title><rect x="483.6" y="451.0" width="4.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="486.6" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.33%)</title><rect x="483.9" y="435.0" width="3.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="486.9" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.02%)</title><rect x="483.9" y="419.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="486.9" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.31%)</title><rect x="484.1" y="419.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="487.1" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (25 samples, 0.27%)</title><rect x="484.6" y="403.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="487.6" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (25 samples, 0.27%)</title><rect x="484.6" y="387.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="487.6" y="398.0"></text>
</g>
<g>
<title>vfs_read (22 samples, 0.23%)</title><rect x="485.0" y="371.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="488.0" y="382.0"></text>
</g>
<g>
<title>__vfs_read (16 samples, 0.17%)</title><rect x="485.4" y="355.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="488.4" y="366.0"></text>
</g>
<g>
<title>new_sync_read (16 samples, 0.17%)</title><rect x="485.4" y="339.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="488.4" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (15 samples, 0.16%)</title><rect x="485.5" y="323.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="488.5" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (14 samples, 0.15%)</title><rect x="485.6" y="307.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="488.6" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.04%)</title><rect x="485.9" y="291.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="488.9" y="302.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.04%)</title><rect x="485.9" y="275.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="488.9" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (7 samples, 0.07%)</title><rect x="486.4" y="291.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="489.4" y="302.0"></text>
</g>
<g>
<title>find_get_entry (6 samples, 0.06%)</title><rect x="486.5" y="275.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="489.5" y="286.0"></text>
</g>
<g>
<title>xas_load (4 samples, 0.04%)</title><rect x="486.7" y="259.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="489.7" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="487.5" y="355.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="490.5" y="366.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="487.5" y="339.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="490.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.05%)</title><rect x="488.0" y="515.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="491.0" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.02%)</title><rect x="488.1" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="491.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.02%)</title><rect x="488.4" y="499.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getLongFrom (35 samples, 0.37%)</title><rect x="488.6" y="579.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="491.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (35 samples, 0.37%)</title><rect x="488.6" y="563.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="491.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (35 samples, 0.37%)</title><rect x="488.6" y="547.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="491.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.05%)</title><rect x="488.7" y="531.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="491.7" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (5 samples, 0.05%)</title><rect x="488.7" y="515.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="491.7" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.03%)</title><rect x="489.0" y="499.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="492.0" y="510.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.03%)</title><rect x="489.0" y="483.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="492.0" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.03%)</title><rect x="489.0" y="467.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="492.0" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (25 samples, 0.27%)</title><rect x="489.4" y="531.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="492.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (22 samples, 0.23%)</title><rect x="489.5" y="515.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="492.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (21 samples, 0.22%)</title><rect x="489.6" y="499.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="492.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (21 samples, 0.22%)</title><rect x="489.6" y="483.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="492.6" y="494.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.19%)</title><rect x="489.9" y="467.0" width="2.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="492.9" y="478.0"></text>
</g>
<g>
<title>pread64 (17 samples, 0.18%)</title><rect x="490.0" y="451.0" width="2.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="493.0" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.18%)</title><rect x="490.0" y="435.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="493.0" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.18%)</title><rect x="490.0" y="419.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="493.0" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (16 samples, 0.17%)</title><rect x="490.1" y="403.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="493.1" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (16 samples, 0.17%)</title><rect x="490.1" y="387.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="493.1" y="398.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.03%)</title><rect x="490.1" y="371.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="493.1" y="382.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="490.1" y="355.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="493.1" y="366.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.03%)</title><rect x="490.1" y="339.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="493.1" y="350.0"></text>
</g>
<g>
<title>vfs_read (12 samples, 0.13%)</title><rect x="490.6" y="371.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="493.6" y="382.0"></text>
</g>
<g>
<title>__vfs_read (7 samples, 0.07%)</title><rect x="490.6" y="355.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="493.6" y="366.0"></text>
</g>
<g>
<title>new_sync_read (7 samples, 0.07%)</title><rect x="490.6" y="339.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="493.6" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (7 samples, 0.07%)</title><rect x="490.6" y="323.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="493.6" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (7 samples, 0.07%)</title><rect x="490.6" y="307.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="493.6" y="318.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.02%)</title><rect x="491.3" y="291.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="494.3" y="302.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="491.5" y="355.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="494.5" y="366.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.03%)</title><rect x="491.8" y="355.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="494.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.04%)</title><rect x="492.5" y="531.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="495.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.02%)</title><rect x="492.8" y="515.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="495.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (40 samples, 0.43%)</title><rect x="493.0" y="579.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="496.0" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.02%)</title><rect x="493.0" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="496.0" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="493.0" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="496.0" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="493.0" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="496.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (38 samples, 0.40%)</title><rect x="493.3" y="563.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="496.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (38 samples, 0.40%)</title><rect x="493.3" y="547.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="496.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (30 samples, 0.32%)</title><rect x="493.6" y="531.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="496.6" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="493.6" y="515.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="496.6" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.02%)</title><rect x="493.6" y="499.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="496.6" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.02%)</title><rect x="493.6" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="496.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (27 samples, 0.29%)</title><rect x="493.9" y="515.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="496.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (27 samples, 0.29%)</title><rect x="493.9" y="499.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="496.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (27 samples, 0.29%)</title><rect x="493.9" y="483.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="496.9" y="494.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.27%)</title><rect x="494.0" y="467.0" width="3.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="497.0" y="478.0"></text>
</g>
<g>
<title>pread64 (24 samples, 0.26%)</title><rect x="494.1" y="451.0" width="3.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="497.1" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.23%)</title><rect x="494.4" y="435.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="497.4" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.23%)</title><rect x="494.4" y="419.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="497.4" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (19 samples, 0.20%)</title><rect x="494.8" y="403.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="497.8" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (19 samples, 0.20%)</title><rect x="494.8" y="387.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="497.8" y="398.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.03%)</title><rect x="494.8" y="371.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="497.8" y="382.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="494.8" y="355.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="497.8" y="366.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.03%)</title><rect x="494.8" y="339.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="497.8" y="350.0"></text>
</g>
<g>
<title>vfs_read (15 samples, 0.16%)</title><rect x="495.3" y="371.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="498.3" y="382.0"></text>
</g>
<g>
<title>__vfs_read (10 samples, 0.11%)</title><rect x="495.4" y="355.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="498.4" y="366.0"></text>
</g>
<g>
<title>new_sync_read (9 samples, 0.10%)</title><rect x="495.5" y="339.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="498.5" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (9 samples, 0.10%)</title><rect x="495.5" y="323.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="498.5" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (9 samples, 0.10%)</title><rect x="495.5" y="307.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="498.5" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.05%)</title><rect x="495.8" y="291.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="498.8" y="302.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.03%)</title><rect x="496.0" y="275.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="499.0" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="496.4" y="291.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="499.4" y="302.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.02%)</title><rect x="496.4" y="275.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="499.4" y="286.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.03%)</title><rect x="496.8" y="355.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="499.8" y="366.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.03%)</title><rect x="496.8" y="339.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="499.8" y="350.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.03%)</title><rect x="496.8" y="323.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="499.8" y="334.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.03%)</title><rect x="496.8" y="307.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="499.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.03%)</title><rect x="497.4" y="531.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="500.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.02%)</title><rect x="497.5" y="515.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="500.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.02%)</title><rect x="497.8" y="531.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="500.8" y="542.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.07%)</title><rect x="498.0" y="739.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.0" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.07%)</title><rect x="498.0" y="723.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="501.0" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.07%)</title><rect x="498.0" y="707.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.0" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (3 samples, 0.03%)</title><rect x="498.0" y="691.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.0" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$146/202599129.getAsBoolean (3 samples, 0.03%)</title><rect x="498.0" y="675.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="501.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3 samples, 0.03%)</title><rect x="498.0" y="659.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="501.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3 samples, 0.03%)</title><rect x="498.0" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="501.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.03%)</title><rect x="498.0" y="627.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="501.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.03%)</title><rect x="498.0" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (3 samples, 0.03%)</title><rect x="498.0" y="595.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="501.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (4 samples, 0.04%)</title><rect x="498.4" y="691.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="501.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="498.7" y="675.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="501.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="498.7" y="659.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="501.7" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$143/2013896526.get$Lambda (2 samples, 0.02%)</title><rect x="498.7" y="643.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="501.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (11 samples, 0.12%)</title><rect x="499.2" y="771.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="502.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (11 samples, 0.12%)</title><rect x="499.2" y="755.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="502.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (11 samples, 0.12%)</title><rect x="499.2" y="739.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="502.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (4 samples, 0.04%)</title><rect x="499.3" y="723.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="502.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.04%)</title><rect x="499.3" y="707.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="502.3" y="718.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (2 samples, 0.02%)</title><rect x="499.5" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="502.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (6 samples, 0.06%)</title><rect x="499.8" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="502.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.03%)</title><rect x="499.9" y="707.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="502.9" y="718.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (3 samples, 0.03%)</title><rect x="499.9" y="691.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="502.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (2 samples, 0.02%)</title><rect x="500.3" y="707.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="503.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.03%)</title><rect x="500.5" y="771.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="503.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (2 samples, 0.02%)</title><rect x="500.7" y="755.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="503.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (2 samples, 0.02%)</title><rect x="500.7" y="739.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="503.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (2 samples, 0.02%)</title><rect x="500.7" y="723.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (15 samples, 0.16%)</title><rect x="501.0" y="771.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="504.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (15 samples, 0.16%)</title><rect x="501.0" y="755.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="504.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (6 samples, 0.06%)</title><rect x="501.2" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="504.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (3 samples, 0.03%)</title><rect x="501.4" y="723.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="504.4" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.03%)</title><rect x="501.4" y="707.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="504.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (8 samples, 0.09%)</title><rect x="501.9" y="739.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="504.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.03%)</title><rect x="502.3" y="723.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="505.3" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.03%)</title><rect x="502.3" y="707.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="505.3" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.02%)</title><rect x="502.4" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="505.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (2 samples, 0.02%)</title><rect x="502.4" y="675.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="505.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (117 samples, 1.24%)</title><rect x="502.9" y="771.0" width="14.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="505.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (117 samples, 1.24%)</title><rect x="502.9" y="755.0" width="14.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.9" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (117 samples, 1.24%)</title><rect x="502.9" y="739.0" width="14.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="505.9" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (116 samples, 1.23%)</title><rect x="503.0" y="723.0" width="14.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="506.0" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (116 samples, 1.23%)</title><rect x="503.0" y="707.0" width="14.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="506.0" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (116 samples, 1.23%)</title><rect x="503.0" y="691.0" width="14.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="506.0" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (116 samples, 1.23%)</title><rect x="503.0" y="675.0" width="14.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="506.0" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (116 samples, 1.23%)</title><rect x="503.0" y="659.0" width="14.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="506.0" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (115 samples, 1.22%)</title><rect x="503.2" y="643.0" width="14.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="506.2" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (115 samples, 1.22%)</title><rect x="503.2" y="627.0" width="14.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="506.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (114 samples, 1.21%)</title><rect x="503.3" y="611.0" width="14.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="506.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (114 samples, 1.21%)</title><rect x="503.3" y="595.0" width="14.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="506.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (49 samples, 0.52%)</title><rect x="503.3" y="579.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (22 samples, 0.23%)</title><rect x="503.3" y="563.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="506.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (21 samples, 0.22%)</title><rect x="503.4" y="547.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="506.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (21 samples, 0.22%)</title><rect x="503.4" y="531.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (18 samples, 0.19%)</title><rect x="503.4" y="515.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="506.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="503.4" y="499.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (13 samples, 0.14%)</title><rect x="503.8" y="499.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="506.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (13 samples, 0.14%)</title><rect x="503.8" y="483.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="506.8" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (13 samples, 0.14%)</title><rect x="503.8" y="467.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="506.8" y="478.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.14%)</title><rect x="503.8" y="451.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="506.8" y="462.0"></text>
</g>
<g>
<title>pread64 (13 samples, 0.14%)</title><rect x="503.8" y="435.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="506.8" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.13%)</title><rect x="503.9" y="419.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="506.9" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.13%)</title><rect x="503.9" y="403.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="506.9" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (12 samples, 0.13%)</title><rect x="503.9" y="387.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="506.9" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (12 samples, 0.13%)</title><rect x="503.9" y="371.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="506.9" y="382.0"></text>
</g>
<g>
<title>vfs_read (11 samples, 0.12%)</title><rect x="504.0" y="355.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="507.0" y="366.0"></text>
</g>
<g>
<title>__vfs_read (10 samples, 0.11%)</title><rect x="504.0" y="339.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="507.0" y="350.0"></text>
</g>
<g>
<title>new_sync_read (10 samples, 0.11%)</title><rect x="504.0" y="323.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="507.0" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (10 samples, 0.11%)</title><rect x="504.0" y="307.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="507.0" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (9 samples, 0.10%)</title><rect x="504.2" y="291.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="507.2" y="302.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.03%)</title><rect x="504.6" y="275.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="507.6" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="504.9" y="275.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="507.9" y="286.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.02%)</title><rect x="504.9" y="259.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="507.9" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.02%)</title><rect x="505.4" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="508.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.02%)</title><rect x="505.4" y="483.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.4" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.03%)</title><rect x="505.7" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.7" y="526.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="505.8" y="499.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="508.8" y="510.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.02%)</title><rect x="505.8" y="483.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="508.8" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.02%)</title><rect x="505.8" y="467.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="508.8" y="478.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.02%)</title><rect x="505.8" y="451.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="508.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (14 samples, 0.15%)</title><rect x="506.1" y="563.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (13 samples, 0.14%)</title><rect x="506.2" y="547.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="509.2" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (13 samples, 0.14%)</title><rect x="506.2" y="531.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="509.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (13 samples, 0.14%)</title><rect x="506.2" y="515.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="509.2" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (11 samples, 0.12%)</title><rect x="506.4" y="499.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="509.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (9 samples, 0.10%)</title><rect x="506.7" y="483.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="509.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.10%)</title><rect x="506.7" y="467.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="509.7" y="478.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.09%)</title><rect x="506.8" y="451.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="509.8" y="462.0"></text>
</g>
<g>
<title>pread64 (8 samples, 0.09%)</title><rect x="506.8" y="435.0" width="1.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="509.8" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.09%)</title><rect x="506.8" y="419.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="509.8" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.09%)</title><rect x="506.8" y="403.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="509.8" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.05%)</title><rect x="507.2" y="387.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="510.2" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.05%)</title><rect x="507.2" y="371.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="510.2" y="382.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.04%)</title><rect x="507.3" y="355.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="510.3" y="366.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.03%)</title><rect x="507.3" y="339.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="510.3" y="350.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="507.4" y="323.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="510.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (13 samples, 0.14%)</title><rect x="507.8" y="563.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (13 samples, 0.14%)</title><rect x="507.8" y="547.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (13 samples, 0.14%)</title><rect x="507.8" y="531.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="510.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (11 samples, 0.12%)</title><rect x="507.9" y="515.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="510.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.10%)</title><rect x="508.2" y="499.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="511.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (9 samples, 0.10%)</title><rect x="508.2" y="483.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="511.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.10%)</title><rect x="508.2" y="467.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="511.2" y="478.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.09%)</title><rect x="508.3" y="451.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="511.3" y="462.0"></text>
</g>
<g>
<title>pread64 (8 samples, 0.09%)</title><rect x="508.3" y="435.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="511.3" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.09%)</title><rect x="508.3" y="419.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="511.3" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.09%)</title><rect x="508.3" y="403.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="511.3" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (7 samples, 0.07%)</title><rect x="508.4" y="387.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="511.4" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (7 samples, 0.07%)</title><rect x="508.4" y="371.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="511.4" y="382.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.07%)</title><rect x="508.4" y="355.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="511.4" y="366.0"></text>
</g>
<g>
<title>__vfs_read (7 samples, 0.07%)</title><rect x="508.4" y="339.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="511.4" y="350.0"></text>
</g>
<g>
<title>new_sync_read (7 samples, 0.07%)</title><rect x="508.4" y="323.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="511.4" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (7 samples, 0.07%)</title><rect x="508.4" y="307.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="511.4" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (6 samples, 0.06%)</title><rect x="508.4" y="291.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="511.4" y="302.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="508.6" y="275.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="511.6" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="508.8" y="275.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="511.8" y="286.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.02%)</title><rect x="508.8" y="259.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="511.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.value (65 samples, 0.69%)</title><rect x="509.4" y="579.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="512.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (12 samples, 0.13%)</title><rect x="509.4" y="563.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="512.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (12 samples, 0.13%)</title><rect x="509.4" y="547.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="512.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (12 samples, 0.13%)</title><rect x="509.4" y="531.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="512.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.11%)</title><rect x="509.6" y="515.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="512.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (10 samples, 0.11%)</title><rect x="509.6" y="499.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="512.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (9 samples, 0.10%)</title><rect x="509.7" y="483.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="512.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.10%)</title><rect x="509.7" y="467.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="512.7" y="478.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.10%)</title><rect x="509.7" y="451.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="512.7" y="462.0"></text>
</g>
<g>
<title>pread64 (9 samples, 0.10%)</title><rect x="509.7" y="435.0" width="1.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="512.7" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.10%)</title><rect x="509.7" y="419.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="512.7" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.09%)</title><rect x="509.8" y="403.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="512.8" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (7 samples, 0.07%)</title><rect x="509.9" y="387.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="512.9" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (7 samples, 0.07%)</title><rect x="509.9" y="371.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="512.9" y="382.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="509.9" y="355.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="512.9" y="366.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="509.9" y="339.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="512.9" y="350.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="509.9" y="323.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="512.9" y="334.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.05%)</title><rect x="510.2" y="355.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="513.2" y="366.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.05%)</title><rect x="510.2" y="339.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="513.2" y="350.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.05%)</title><rect x="510.2" y="323.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="513.2" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (5 samples, 0.05%)</title><rect x="510.2" y="307.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="513.2" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (5 samples, 0.05%)</title><rect x="510.2" y="291.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="513.2" y="302.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="510.4" y="275.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="513.4" y="286.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="510.4" y="259.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="513.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (22 samples, 0.23%)</title><rect x="510.9" y="563.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="513.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (22 samples, 0.23%)</title><rect x="510.9" y="547.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="513.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (22 samples, 0.23%)</title><rect x="510.9" y="531.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="513.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (20 samples, 0.21%)</title><rect x="511.1" y="515.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="514.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (15 samples, 0.16%)</title><rect x="511.3" y="499.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="514.3" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="511.3" y="483.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="514.3" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.02%)</title><rect x="511.4" y="467.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="514.4" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.02%)</title><rect x="511.4" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="514.4" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.02%)</title><rect x="511.4" y="435.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (12 samples, 0.13%)</title><rect x="511.7" y="483.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (12 samples, 0.13%)</title><rect x="511.7" y="467.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.7" y="478.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.13%)</title><rect x="511.7" y="451.0" width="1.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="514.7" y="462.0"></text>
</g>
<g>
<title>pread64 (12 samples, 0.13%)</title><rect x="511.7" y="435.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="514.7" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.13%)</title><rect x="511.7" y="419.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="514.7" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.13%)</title><rect x="511.7" y="403.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="514.7" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (11 samples, 0.12%)</title><rect x="511.8" y="387.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="514.8" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (11 samples, 0.12%)</title><rect x="511.8" y="371.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="514.8" y="382.0"></text>
</g>
<g>
<title>vfs_read (11 samples, 0.12%)</title><rect x="511.8" y="355.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="514.8" y="366.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.05%)</title><rect x="511.8" y="339.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="514.8" y="350.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.05%)</title><rect x="511.8" y="323.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="514.8" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (5 samples, 0.05%)</title><rect x="511.8" y="307.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="514.8" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (5 samples, 0.05%)</title><rect x="511.8" y="291.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="514.8" y="302.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="512.1" y="275.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="515.1" y="286.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.05%)</title><rect x="512.6" y="339.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="515.6" y="350.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.05%)</title><rect x="512.6" y="323.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="515.6" y="334.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.03%)</title><rect x="512.8" y="307.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="515.8" y="318.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.03%)</title><rect x="512.8" y="291.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="515.8" y="302.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.02%)</title><rect x="513.0" y="275.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="516.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.02%)</title><rect x="513.3" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="516.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (2 samples, 0.02%)</title><rect x="513.3" y="483.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="516.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getLongFrom (11 samples, 0.12%)</title><rect x="513.7" y="563.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="516.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (11 samples, 0.12%)</title><rect x="513.7" y="547.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="516.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (11 samples, 0.12%)</title><rect x="513.7" y="531.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="516.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.02%)</title><rect x="513.7" y="515.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="516.7" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.02%)</title><rect x="513.7" y="499.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="516.7" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.02%)</title><rect x="513.7" y="483.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="516.7" y="494.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.02%)</title><rect x="513.7" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.7" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.02%)</title><rect x="513.7" y="451.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="516.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.10%)</title><rect x="514.0" y="515.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="517.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (8 samples, 0.09%)</title><rect x="514.0" y="499.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="517.0" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.02%)</title><rect x="514.0" y="483.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="517.0" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.02%)</title><rect x="514.0" y="467.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="517.0" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.02%)</title><rect x="514.0" y="451.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="517.0" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.02%)</title><rect x="514.0" y="435.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="517.0" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.06%)</title><rect x="514.2" y="483.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="517.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.06%)</title><rect x="514.2" y="467.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="517.2" y="478.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="514.3" y="451.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="517.3" y="462.0"></text>
</g>
<g>
<title>pread64 (5 samples, 0.05%)</title><rect x="514.3" y="435.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="517.3" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.05%)</title><rect x="514.3" y="419.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="517.3" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.05%)</title><rect x="514.3" y="403.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="517.3" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.05%)</title><rect x="514.3" y="387.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="517.3" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.05%)</title><rect x="514.3" y="371.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="517.3" y="382.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.04%)</title><rect x="514.5" y="355.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="517.5" y="366.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="514.7" y="339.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="517.7" y="350.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="514.7" y="323.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="517.7" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.02%)</title><rect x="514.7" y="307.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="517.7" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.02%)</title><rect x="514.7" y="291.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="517.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (20 samples, 0.21%)</title><rect x="515.1" y="563.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.1" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.04%)</title><rect x="515.2" y="547.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="518.2" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="515.2" y="531.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="518.2" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="515.5" y="515.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="518.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (15 samples, 0.16%)</title><rect x="515.7" y="547.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="518.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (15 samples, 0.16%)</title><rect x="515.7" y="531.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="518.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 0.13%)</title><rect x="515.8" y="515.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="518.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (11 samples, 0.12%)</title><rect x="515.8" y="499.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="518.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (11 samples, 0.12%)</title><rect x="515.8" y="483.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="518.8" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (11 samples, 0.12%)</title><rect x="515.8" y="467.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.8" y="478.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.12%)</title><rect x="515.8" y="451.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="518.8" y="462.0"></text>
</g>
<g>
<title>pread64 (10 samples, 0.11%)</title><rect x="516.0" y="435.0" width="1.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="519.0" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.10%)</title><rect x="516.1" y="419.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="519.1" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.09%)</title><rect x="516.2" y="403.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="519.2" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (8 samples, 0.09%)</title><rect x="516.2" y="387.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="519.2" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (8 samples, 0.09%)</title><rect x="516.2" y="371.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="519.2" y="382.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.07%)</title><rect x="516.3" y="355.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="519.3" y="366.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.05%)</title><rect x="516.5" y="339.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="519.5" y="350.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.05%)</title><rect x="516.5" y="323.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="519.5" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (4 samples, 0.04%)</title><rect x="516.6" y="307.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="519.6" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.03%)</title><rect x="516.7" y="291.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="519.7" y="302.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="516.8" y="275.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="519.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.iterator (24 samples, 0.26%)</title><rect x="517.6" y="771.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.6" y="782.0"></text>
</g>
<g>
<title>java/util/Collection.stream (20 samples, 0.21%)</title><rect x="517.6" y="755.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="520.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (20 samples, 0.21%)</title><rect x="517.6" y="739.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="520.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (20 samples, 0.21%)</title><rect x="517.6" y="723.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="520.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (20 samples, 0.21%)</title><rect x="517.6" y="707.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="520.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (19 samples, 0.20%)</title><rect x="517.7" y="691.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="520.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (19 samples, 0.20%)</title><rect x="517.7" y="675.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.02%)</title><rect x="517.7" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="520.7" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="517.7" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="520.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (17 samples, 0.18%)</title><rect x="518.0" y="659.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="521.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (10 samples, 0.11%)</title><rect x="518.8" y="643.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="521.8" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.11%)</title><rect x="518.8" y="627.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.8" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.07%)</title><rect x="519.2" y="611.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="522.2" y="622.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.05%)</title><rect x="519.4" y="595.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="522.4" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.02%)</title><rect x="519.6" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="522.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.02%)</title><rect x="520.1" y="755.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="523.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.02%)</title><rect x="520.1" y="739.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="523.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.02%)</title><rect x="520.1" y="723.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="523.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.iterator (4,431 samples, 47.10%)</title><rect x="520.6" y="771.0" width="555.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="523.6" y="782.0">ru/mail/polis/dao/alexander/marashov/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.&lt;init&gt; (4,429 samples, 47.08%)</title><rect x="520.9" y="755.0" width="555.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="523.9" y="766.0">ru/mail/polis/dao/alexander/marashov/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.binarySearch (4,429 samples, 47.08%)</title><rect x="520.9" y="739.0" width="555.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="523.9" y="750.0">ru/mail/polis/dao/alexander/marashov/SSTable.binarySearch</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (42 samples, 0.45%)</title><rect x="522.0" y="723.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="525.0" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.03%)</title><rect x="522.6" y="707.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="525.6" y="718.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (31 samples, 0.33%)</title><rect x="523.0" y="707.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="526.0" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.04%)</title><rect x="523.5" y="691.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.5" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.03%)</title><rect x="523.6" y="675.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="526.6" y="686.0"></text>
</g>
<g>
<title>vectorizedMismatch (23 samples, 0.24%)</title><rect x="524.0" y="691.0" width="2.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="527.0" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.03%)</title><rect x="526.9" y="707.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.9" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.02%)</title><rect x="526.9" y="691.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="529.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (4,378 samples, 46.53%)</title><rect x="527.3" y="723.0" width="549.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="530.3" y="734.0">ru/mail/polis/dao/alexander/marashov/SSTable.key</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (1,421 samples, 15.10%)</title><rect x="527.4" y="707.0" width="178.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="530.4" y="718.0">ru/mail/polis/dao/alexa..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (47 samples, 0.50%)</title><rect x="527.5" y="691.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="530.5" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="527.8" y="675.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="530.8" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.02%)</title><rect x="527.8" y="659.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="530.8" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.02%)</title><rect x="527.8" y="643.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="530.8" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="527.8" y="627.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="530.8" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (43 samples, 0.46%)</title><rect x="528.0" y="675.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (40 samples, 0.43%)</title><rect x="528.4" y="659.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="531.4" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (29 samples, 0.31%)</title><rect x="529.8" y="643.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.8" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.04%)</title><rect x="530.0" y="627.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="533.0" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.04%)</title><rect x="530.0" y="611.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.0" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.03%)</title><rect x="530.1" y="595.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="533.1" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (23 samples, 0.24%)</title><rect x="530.5" y="627.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="533.5" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (23 samples, 0.24%)</title><rect x="530.5" y="611.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="533.5" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.02%)</title><rect x="532.8" y="595.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="535.8" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.03%)</title><rect x="533.0" y="595.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="536.0" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (3 samples, 0.03%)</title><rect x="533.4" y="691.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="536.4" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.flip (3 samples, 0.03%)</title><rect x="533.4" y="675.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="536.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.02%)</title><rect x="533.5" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="536.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,370 samples, 14.56%)</title><rect x="533.8" y="691.0" width="171.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="536.8" y="702.0">sun/nio/ch/FileChannel..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,370 samples, 14.56%)</title><rect x="533.8" y="675.0" width="171.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="536.8" y="686.0">sun/nio/ch/FileChannel..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (86 samples, 0.91%)</title><rect x="535.8" y="659.0" width="10.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.8" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (85 samples, 0.90%)</title><rect x="535.9" y="643.0" width="10.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="538.9" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (8 samples, 0.09%)</title><rect x="540.4" y="627.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.4" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (6 samples, 0.06%)</title><rect x="540.7" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.7" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.03%)</title><rect x="541.4" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="544.4" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (38 samples, 0.40%)</title><rect x="541.8" y="627.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="544.8" y="638.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (35 samples, 0.37%)</title><rect x="542.2" y="611.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="545.2" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (35 samples, 0.37%)</title><rect x="542.2" y="595.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="545.2" y="606.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.02%)</title><rect x="544.6" y="579.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="547.6" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.09%)</title><rect x="544.8" y="579.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="547.8" y="590.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="545.8" y="579.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="548.8" y="590.0"></text>
</g>
<g>
<title>unsafe_arraycopy (3 samples, 0.03%)</title><rect x="546.2" y="579.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="549.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1,175 samples, 12.49%)</title><rect x="546.6" y="659.0" width="147.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="549.6" y="670.0">sun/nio/ch/IOUtil.r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (88 samples, 0.94%)</title><rect x="547.8" y="643.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.8" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="552.1" y="627.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="555.1" y="638.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (2 samples, 0.02%)</title><rect x="552.3" y="627.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="555.3" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (7 samples, 0.07%)</title><rect x="552.6" y="627.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.6" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (43 samples, 0.46%)</title><rect x="553.5" y="627.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="556.5" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (19 samples, 0.20%)</title><rect x="556.5" y="611.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="559.5" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (6 samples, 0.06%)</title><rect x="558.9" y="643.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="561.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (977 samples, 10.38%)</title><rect x="559.6" y="643.0" width="122.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="562.6" y="654.0">sun/nio/ch/IOUt..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (82 samples, 0.87%)</title><rect x="560.5" y="627.0" width="10.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="563.5" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (66 samples, 0.70%)</title><rect x="562.5" y="611.0" width="8.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.5" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (60 samples, 0.64%)</title><rect x="563.3" y="595.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="566.3" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (60 samples, 0.64%)</title><rect x="563.3" y="579.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="566.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (888 samples, 9.44%)</title><rect x="570.8" y="627.0" width="111.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="573.8" y="638.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (888 samples, 9.44%)</title><rect x="570.8" y="611.0" width="111.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="573.8" y="622.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (11 samples, 0.12%)</title><rect x="575.7" y="595.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="578.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (822 samples, 8.74%)</title><rect x="577.0" y="595.0" width="103.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="580.0" y="606.0">[unknown]</text>
</g>
<g>
<title>__libc_disable_asynccancel (14 samples, 0.15%)</title><rect x="577.0" y="579.0" width="1.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="580.0" y="590.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (9 samples, 0.10%)</title><rect x="578.8" y="579.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="581.8" y="590.0"></text>
</g>
<g>
<title>pread64 (799 samples, 8.49%)</title><rect x="579.9" y="579.0" width="100.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="582.9" y="590.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (728 samples, 7.74%)</title><rect x="588.8" y="563.0" width="91.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="591.8" y="574.0">entry_SYSCA..</text>
</g>
<g>
<title>__x64_sys_pread64 (22 samples, 0.23%)</title><rect x="588.8" y="547.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="591.8" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (706 samples, 7.50%)</title><rect x="591.6" y="547.0" width="88.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="594.6" y="558.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_pread64 (616 samples, 6.55%)</title><rect x="602.8" y="531.0" width="77.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="605.8" y="542.0">__x64_sys..</text>
</g>
<g>
<title>ksys_pread64 (616 samples, 6.55%)</title><rect x="602.8" y="515.0" width="77.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="605.8" y="526.0">ksys_prea..</text>
</g>
<g>
<title>__fdget (63 samples, 0.67%)</title><rect x="604.0" y="499.0" width="7.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="607.0" y="510.0"></text>
</g>
<g>
<title>__fget_light (63 samples, 0.67%)</title><rect x="604.0" y="483.0" width="7.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="607.0" y="494.0"></text>
</g>
<g>
<title>__fget (57 samples, 0.61%)</title><rect x="604.8" y="467.0" width="7.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="607.8" y="478.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.05%)</title><rect x="611.9" y="499.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="614.9" y="510.0"></text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.05%)</title><rect x="612.5" y="499.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="615.5" y="510.0"></text>
</g>
<g>
<title>fput (17 samples, 0.18%)</title><rect x="613.2" y="499.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="616.2" y="510.0"></text>
</g>
<g>
<title>fput_many (17 samples, 0.18%)</title><rect x="613.2" y="483.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="616.2" y="494.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.02%)</title><rect x="615.3" y="499.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="618.3" y="510.0"></text>
</g>
<g>
<title>vfs_read (512 samples, 5.44%)</title><rect x="615.8" y="499.0" width="64.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="618.8" y="510.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.04%)</title><rect x="617.4" y="483.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="620.4" y="494.0"></text>
</g>
<g>
<title>__vfs_read (388 samples, 4.12%)</title><rect x="617.9" y="483.0" width="48.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="620.9" y="494.0">__vf..</text>
</g>
<g>
<title>ext4_file_read_iter (19 samples, 0.20%)</title><rect x="618.1" y="467.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="621.1" y="478.0"></text>
</g>
<g>
<title>new_sync_read (368 samples, 3.91%)</title><rect x="620.4" y="467.0" width="46.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="623.4" y="478.0">new_..</text>
</g>
<g>
<title>ext4_file_read_iter (335 samples, 3.56%)</title><rect x="624.1" y="451.0" width="42.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="627.1" y="462.0">ext4..</text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="626.7" y="435.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="629.7" y="446.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="627.0" y="435.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="630.0" y="446.0"></text>
</g>
<g>
<title>generic_file_read_iter (310 samples, 3.30%)</title><rect x="627.2" y="435.0" width="38.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="630.2" y="446.0">gen..</text>
</g>
<g>
<title>_cond_resched (5 samples, 0.05%)</title><rect x="638.1" y="419.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="641.1" y="430.0"></text>
</g>
<g>
<title>rcu_all_qs (4 samples, 0.04%)</title><rect x="638.3" y="403.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="641.3" y="414.0"></text>
</g>
<g>
<title>atime_needs_update (5 samples, 0.05%)</title><rect x="638.8" y="419.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="641.8" y="430.0"></text>
</g>
<g>
<title>copy_page_to_iter (103 samples, 1.09%)</title><rect x="639.4" y="419.0" width="12.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="642.4" y="430.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="643.1" y="403.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="646.1" y="414.0"></text>
</g>
<g>
<title>copy_user_generic_string (67 samples, 0.71%)</title><rect x="643.4" y="403.0" width="8.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="646.4" y="414.0"></text>
</g>
<g>
<title>copyout (3 samples, 0.03%)</title><rect x="651.8" y="403.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="654.8" y="414.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.02%)</title><rect x="652.3" y="419.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="655.3" y="430.0"></text>
</g>
<g>
<title>mark_page_accessed (3 samples, 0.03%)</title><rect x="652.7" y="419.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="655.7" y="430.0"></text>
</g>
<g>
<title>pagecache_get_page (55 samples, 0.58%)</title><rect x="653.1" y="419.0" width="6.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="656.1" y="430.0"></text>
</g>
<g>
<title>find_get_entry (52 samples, 0.55%)</title><rect x="653.3" y="403.0" width="6.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="656.3" y="414.0"></text>
</g>
<g>
<title>xas_load (29 samples, 0.31%)</title><rect x="655.9" y="387.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="658.9" y="398.0"></text>
</g>
<g>
<title>xas_start (8 samples, 0.09%)</title><rect x="658.6" y="371.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="661.6" y="382.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.02%)</title><rect x="659.6" y="387.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="662.6" y="398.0"></text>
</g>
<g>
<title>touch_atime (48 samples, 0.51%)</title><rect x="660.1" y="419.0" width="6.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="663.1" y="430.0"></text>
</g>
<g>
<title>atime_needs_update (21 samples, 0.22%)</title><rect x="663.3" y="403.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="666.3" y="414.0"></text>
</g>
<g>
<title>current_time (15 samples, 0.16%)</title><rect x="663.7" y="387.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="666.7" y="398.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (4 samples, 0.04%)</title><rect x="664.5" y="371.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="667.5" y="382.0"></text>
</g>
<g>
<title>timestamp_truncate (5 samples, 0.05%)</title><rect x="665.0" y="371.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="668.0" y="382.0"></text>
</g>
<g>
<title>timestamp_truncate (2 samples, 0.02%)</title><rect x="665.7" y="387.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="668.7" y="398.0"></text>
</g>
<g>
<title>iov_iter_init (3 samples, 0.03%)</title><rect x="666.2" y="451.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="669.2" y="462.0"></text>
</g>
<g>
<title>fsnotify (21 samples, 0.22%)</title><rect x="666.6" y="483.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="669.6" y="494.0"></text>
</g>
<g>
<title>rw_verify_area (85 samples, 0.90%)</title><rect x="669.4" y="483.0" width="10.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="672.4" y="494.0"></text>
</g>
<g>
<title>apparmor_file_permission (9 samples, 0.10%)</title><rect x="670.1" y="467.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="673.1" y="478.0"></text>
</g>
<g>
<title>security_file_permission (70 samples, 0.74%)</title><rect x="671.2" y="467.0" width="8.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="674.2" y="478.0"></text>
</g>
<g>
<title>__fsnotify_parent (8 samples, 0.09%)</title><rect x="672.4" y="451.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="675.4" y="462.0"></text>
</g>
<g>
<title>apparmor_file_permission (27 samples, 0.29%)</title><rect x="673.4" y="451.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="676.4" y="462.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.02%)</title><rect x="673.4" y="435.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="676.4" y="446.0"></text>
</g>
<g>
<title>common_file_perm (25 samples, 0.27%)</title><rect x="673.6" y="435.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="676.6" y="446.0"></text>
</g>
<g>
<title>aa_file_perm (7 samples, 0.07%)</title><rect x="675.9" y="419.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="678.9" y="430.0"></text>
</g>
<g>
<title>common_file_perm (6 samples, 0.06%)</title><rect x="676.8" y="451.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="679.8" y="462.0"></text>
</g>
<g>
<title>fsnotify (20 samples, 0.21%)</title><rect x="677.5" y="451.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="680.5" y="462.0"></text>
</g>
<g>
<title>fdval (9 samples, 0.10%)</title><rect x="680.3" y="595.0" width="1.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="683.3" y="606.0"></text>
</g>
<g>
<title>pread64 (5 samples, 0.05%)</title><rect x="681.4" y="595.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="684.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (47 samples, 0.50%)</title><rect x="682.2" y="643.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.2" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (30 samples, 0.32%)</title><rect x="682.3" y="627.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.3" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.02%)</title><rect x="683.5" y="611.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="686.5" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (4 samples, 0.04%)</title><rect x="683.8" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="686.8" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.03%)</title><rect x="684.3" y="611.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.3" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (3 samples, 0.03%)</title><rect x="684.3" y="595.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.3" y="606.0"></text>
</g>
<g>
<title>vtable stub (11 samples, 0.12%)</title><rect x="684.7" y="611.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="687.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.04%)</title><rect x="686.0" y="627.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.0" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (4 samples, 0.04%)</title><rect x="686.0" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="689.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (12 samples, 0.13%)</title><rect x="686.5" y="627.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="689.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (47 samples, 0.50%)</title><rect x="688.0" y="643.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.0" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (32 samples, 0.34%)</title><rect x="688.4" y="627.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.4" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (14 samples, 0.15%)</title><rect x="690.7" y="611.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="693.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (12 samples, 0.13%)</title><rect x="692.4" y="627.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.4" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (80 samples, 0.85%)</title><rect x="693.9" y="659.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="696.9" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (13 samples, 0.14%)</title><rect x="699.1" y="643.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="702.1" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (12 samples, 0.13%)</title><rect x="699.2" y="627.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="702.2" y="638.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (2 samples, 0.02%)</title><rect x="699.2" y="611.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="702.2" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (10 samples, 0.11%)</title><rect x="699.5" y="611.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="702.5" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (7 samples, 0.07%)</title><rect x="699.6" y="595.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="702.6" y="606.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.02%)</title><rect x="700.5" y="595.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="703.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (26 samples, 0.28%)</title><rect x="700.7" y="643.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="703.7" y="654.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (2 samples, 0.02%)</title><rect x="703.6" y="627.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="706.6" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (13 samples, 0.14%)</title><rect x="704.0" y="659.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="707.0" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (12 samples, 0.13%)</title><rect x="704.1" y="643.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="707.1" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (10 samples, 0.11%)</title><rect x="704.4" y="627.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="707.4" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (8 samples, 0.09%)</title><rect x="704.5" y="611.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="707.5" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (5 samples, 0.05%)</title><rect x="704.5" y="595.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="707.5" y="606.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.03%)</title><rect x="705.1" y="595.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="708.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (1,460 samples, 15.52%)</title><rect x="705.6" y="707.0" width="183.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.6" y="718.0">ru/mail/polis/dao/alexan..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (53 samples, 0.56%)</title><rect x="705.6" y="691.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="708.6" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (51 samples, 0.54%)</title><rect x="705.9" y="675.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="708.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (48 samples, 0.51%)</title><rect x="706.2" y="659.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="709.2" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (24 samples, 0.26%)</title><rect x="708.7" y="643.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="711.7" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.04%)</title><rect x="708.9" y="627.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="711.9" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.04%)</title><rect x="708.9" y="611.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="711.9" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.04%)</title><rect x="708.9" y="595.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.9" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (19 samples, 0.20%)</title><rect x="709.4" y="627.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="712.4" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (19 samples, 0.20%)</title><rect x="709.4" y="611.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="712.4" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.04%)</title><rect x="711.0" y="595.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="714.0" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.02%)</title><rect x="711.5" y="595.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.5" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.03%)</title><rect x="711.8" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="714.8" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (6 samples, 0.06%)</title><rect x="712.3" y="691.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="715.3" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.rewind (6 samples, 0.06%)</title><rect x="712.3" y="675.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="715.3" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.05%)</title><rect x="712.4" y="659.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="715.4" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (3 samples, 0.03%)</title><rect x="713.0" y="691.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="716.0" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,398 samples, 14.86%)</title><rect x="713.4" y="691.0" width="175.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="716.4" y="702.0">sun/nio/ch/FileChannelI..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,398 samples, 14.86%)</title><rect x="713.4" y="675.0" width="175.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="716.4" y="686.0">sun/nio/ch/FileChannelI..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (108 samples, 1.15%)</title><rect x="715.0" y="659.0" width="13.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="718.0" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (107 samples, 1.14%)</title><rect x="715.1" y="643.0" width="13.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="718.1" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (12 samples, 0.13%)</title><rect x="722.2" y="627.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="725.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (4 samples, 0.04%)</title><rect x="723.2" y="611.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="726.2" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (38 samples, 0.40%)</title><rect x="723.8" y="627.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="726.8" y="638.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (33 samples, 0.35%)</title><rect x="724.4" y="611.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="727.4" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (31 samples, 0.33%)</title><rect x="724.7" y="595.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="727.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.02%)</title><rect x="728.3" y="579.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1,177 samples, 12.51%)</title><rect x="728.6" y="659.0" width="147.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.6" y="670.0">sun/nio/ch/IOUtil.r..</text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.02%)</title><rect x="729.4" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="732.4" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (93 samples, 0.99%)</title><rect x="729.7" y="643.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="732.7" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (6 samples, 0.06%)</title><rect x="734.7" y="627.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.7" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (47 samples, 0.50%)</title><rect x="735.5" y="627.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="738.5" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (27 samples, 0.29%)</title><rect x="738.0" y="611.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.0" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (5 samples, 0.05%)</title><rect x="741.4" y="643.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="744.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (971 samples, 10.32%)</title><rect x="742.0" y="643.0" width="121.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.0" y="654.0">sun/nio/ch/IOUt..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (64 samples, 0.68%)</title><rect x="743.4" y="627.0" width="8.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="746.4" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (50 samples, 0.53%)</title><rect x="745.1" y="611.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="748.1" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (41 samples, 0.44%)</title><rect x="746.2" y="595.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.2" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (41 samples, 0.44%)</title><rect x="746.2" y="579.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (896 samples, 9.52%)</title><rect x="751.4" y="627.0" width="112.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.4" y="638.0">sun/nio/ch/Fil..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (896 samples, 9.52%)</title><rect x="751.4" y="611.0" width="112.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="754.4" y="622.0">sun/nio/ch/Fil..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (12 samples, 0.13%)</title><rect x="756.9" y="595.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="759.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (821 samples, 8.73%)</title><rect x="758.4" y="595.0" width="103.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="761.4" y="606.0">[unknown]</text>
</g>
<g>
<title>__libc_disable_asynccancel (8 samples, 0.09%)</title><rect x="758.4" y="579.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="761.4" y="590.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (7 samples, 0.07%)</title><rect x="759.4" y="579.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="762.4" y="590.0"></text>
</g>
<g>
<title>pread64 (806 samples, 8.57%)</title><rect x="760.3" y="579.0" width="101.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="763.3" y="590.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (731 samples, 7.77%)</title><rect x="769.7" y="563.0" width="91.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="772.7" y="574.0">entry_SYSCA..</text>
</g>
<g>
<title>__x64_sys_pread64 (13 samples, 0.14%)</title><rect x="769.7" y="547.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="772.7" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (718 samples, 7.63%)</title><rect x="771.3" y="547.0" width="90.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="774.3" y="558.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_pread64 (645 samples, 6.86%)</title><rect x="780.1" y="531.0" width="80.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="783.1" y="542.0">__x64_sys..</text>
</g>
<g>
<title>fput (5 samples, 0.05%)</title><rect x="780.2" y="515.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="783.2" y="526.0"></text>
</g>
<g>
<title>ksys_pread64 (639 samples, 6.79%)</title><rect x="780.9" y="515.0" width="80.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="783.9" y="526.0">ksys_prea..</text>
</g>
<g>
<title>__fdget (71 samples, 0.75%)</title><rect x="781.9" y="499.0" width="8.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="784.9" y="510.0"></text>
</g>
<g>
<title>__fget_light (71 samples, 0.75%)</title><rect x="781.9" y="483.0" width="8.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="784.9" y="494.0"></text>
</g>
<g>
<title>__fget (65 samples, 0.69%)</title><rect x="782.6" y="467.0" width="8.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="785.6" y="478.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="790.8" y="499.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="793.8" y="510.0"></text>
</g>
<g>
<title>__fsnotify_parent (6 samples, 0.06%)</title><rect x="791.1" y="499.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="794.1" y="510.0"></text>
</g>
<g>
<title>fput (17 samples, 0.18%)</title><rect x="792.0" y="499.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="795.0" y="510.0"></text>
</g>
<g>
<title>fput_many (17 samples, 0.18%)</title><rect x="792.0" y="483.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="795.0" y="494.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="794.3" y="499.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="797.3" y="510.0"></text>
</g>
<g>
<title>vfs_read (529 samples, 5.62%)</title><rect x="794.7" y="499.0" width="66.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="797.7" y="510.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.02%)</title><rect x="797.4" y="483.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="800.4" y="494.0"></text>
</g>
<g>
<title>__vfs_read (383 samples, 4.07%)</title><rect x="797.7" y="483.0" width="48.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="800.7" y="494.0">__vf..</text>
</g>
<g>
<title>ext4_file_read_iter (22 samples, 0.23%)</title><rect x="798.2" y="467.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="801.2" y="478.0"></text>
</g>
<g>
<title>new_sync_read (357 samples, 3.79%)</title><rect x="800.9" y="467.0" width="44.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="803.9" y="478.0">new_..</text>
</g>
<g>
<title>ext4_file_read_iter (325 samples, 3.45%)</title><rect x="804.3" y="451.0" width="40.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="807.3" y="462.0">ext..</text>
</g>
<g>
<title>generic_file_read_iter (309 samples, 3.28%)</title><rect x="806.2" y="435.0" width="38.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="809.2" y="446.0">gen..</text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="814.4" y="419.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="817.4" y="430.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.02%)</title><rect x="814.4" y="403.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="817.4" y="414.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.02%)</title><rect x="814.6" y="419.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="817.6" y="430.0"></text>
</g>
<g>
<title>copy_page_to_iter (91 samples, 0.97%)</title><rect x="814.9" y="419.0" width="11.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="817.9" y="430.0"></text>
</g>
<g>
<title>_cond_resched (4 samples, 0.04%)</title><rect x="817.1" y="403.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="820.1" y="414.0"></text>
</g>
<g>
<title>rcu_all_qs (4 samples, 0.04%)</title><rect x="817.1" y="387.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="820.1" y="398.0"></text>
</g>
<g>
<title>copy_user_generic_string (65 samples, 0.69%)</title><rect x="817.6" y="403.0" width="8.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="820.6" y="414.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.02%)</title><rect x="825.8" y="403.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="828.8" y="414.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.02%)</title><rect x="826.0" y="403.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="829.0" y="414.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.02%)</title><rect x="826.4" y="419.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="829.4" y="430.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.02%)</title><rect x="826.6" y="419.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="829.6" y="430.0"></text>
</g>
<g>
<title>pagecache_get_page (107 samples, 1.14%)</title><rect x="826.9" y="419.0" width="13.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="829.9" y="430.0"></text>
</g>
<g>
<title>PageHuge (2 samples, 0.02%)</title><rect x="827.0" y="403.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="830.0" y="414.0"></text>
</g>
<g>
<title>find_get_entry (102 samples, 1.08%)</title><rect x="827.3" y="403.0" width="12.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="830.3" y="414.0"></text>
</g>
<g>
<title>xas_load (34 samples, 0.36%)</title><rect x="835.5" y="387.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="838.5" y="398.0"></text>
</g>
<g>
<title>xas_start (5 samples, 0.05%)</title><rect x="839.2" y="371.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="842.2" y="382.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.02%)</title><rect x="839.8" y="387.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="842.8" y="398.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.02%)</title><rect x="840.1" y="403.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="843.1" y="414.0"></text>
</g>
<g>
<title>rcu_all_qs (4 samples, 0.04%)</title><rect x="840.3" y="419.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="843.3" y="430.0"></text>
</g>
<g>
<title>touch_atime (33 samples, 0.35%)</title><rect x="840.8" y="419.0" width="4.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="843.8" y="430.0"></text>
</g>
<g>
<title>atime_needs_update (16 samples, 0.17%)</title><rect x="842.8" y="403.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="845.8" y="414.0"></text>
</g>
<g>
<title>current_time (11 samples, 0.12%)</title><rect x="843.1" y="387.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="846.1" y="398.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (3 samples, 0.03%)</title><rect x="843.6" y="371.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="846.6" y="382.0"></text>
</g>
<g>
<title>timestamp_truncate (4 samples, 0.04%)</title><rect x="844.0" y="371.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="847.0" y="382.0"></text>
</g>
<g>
<title>timestamp_truncate (3 samples, 0.03%)</title><rect x="844.5" y="387.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="847.5" y="398.0"></text>
</g>
<g>
<title>iov_iter_init (5 samples, 0.05%)</title><rect x="845.1" y="451.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="848.1" y="462.0"></text>
</g>
<g>
<title>fsnotify (21 samples, 0.22%)</title><rect x="845.7" y="483.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="848.7" y="494.0"></text>
</g>
<g>
<title>rw_verify_area (101 samples, 1.07%)</title><rect x="848.3" y="483.0" width="12.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="851.3" y="494.0"></text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.04%)</title><rect x="849.1" y="467.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="852.1" y="478.0"></text>
</g>
<g>
<title>apparmor_file_permission (13 samples, 0.14%)</title><rect x="849.6" y="467.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="852.6" y="478.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="851.2" y="467.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="854.2" y="478.0"></text>
</g>
<g>
<title>security_file_permission (76 samples, 0.81%)</title><rect x="851.5" y="467.0" width="9.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="854.5" y="478.0"></text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.04%)</title><rect x="853.2" y="451.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="856.2" y="462.0"></text>
</g>
<g>
<title>apparmor_file_permission (24 samples, 0.26%)</title><rect x="853.7" y="451.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="856.7" y="462.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.02%)</title><rect x="853.7" y="435.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="856.7" y="446.0"></text>
</g>
<g>
<title>common_file_perm (22 samples, 0.23%)</title><rect x="854.0" y="435.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="857.0" y="446.0"></text>
</g>
<g>
<title>aa_file_perm (3 samples, 0.03%)</title><rect x="856.4" y="419.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="859.4" y="430.0"></text>
</g>
<g>
<title>common_file_perm (6 samples, 0.06%)</title><rect x="856.7" y="451.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="859.7" y="462.0"></text>
</g>
<g>
<title>fsnotify (28 samples, 0.30%)</title><rect x="857.5" y="451.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="860.5" y="462.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.03%)</title><rect x="861.0" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="864.0" y="542.0"></text>
</g>
<g>
<title>convertReturnVal (3 samples, 0.03%)</title><rect x="861.4" y="595.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="864.4" y="606.0"></text>
</g>
<g>
<title>fdval (9 samples, 0.10%)</title><rect x="861.8" y="595.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="864.8" y="606.0"></text>
</g>
<g>
<title>pread64 (6 samples, 0.06%)</title><rect x="862.9" y="595.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="865.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (61 samples, 0.65%)</title><rect x="863.8" y="643.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="866.8" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (31 samples, 0.33%)</title><rect x="864.4" y="627.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="867.4" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.04%)</title><rect x="865.8" y="611.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="868.8" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (7 samples, 0.07%)</title><rect x="866.3" y="611.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="869.3" y="622.0"></text>
</g>
<g>
<title>vtable stub (8 samples, 0.09%)</title><rect x="867.3" y="611.0" width="1.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="870.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (25 samples, 0.27%)</title><rect x="868.3" y="627.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="871.3" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (15 samples, 0.16%)</title><rect x="869.5" y="611.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="872.5" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (11 samples, 0.12%)</title><rect x="870.0" y="595.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="873.0" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (11 samples, 0.12%)</title><rect x="870.0" y="579.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="873.0" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (9 samples, 0.10%)</title><rect x="870.3" y="563.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="873.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (38 samples, 0.40%)</title><rect x="871.4" y="643.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="874.4" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (23 samples, 0.24%)</title><rect x="871.4" y="627.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="874.4" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (10 samples, 0.11%)</title><rect x="873.1" y="611.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="876.1" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (15 samples, 0.16%)</title><rect x="874.3" y="627.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="877.3" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (89 samples, 0.95%)</title><rect x="876.2" y="659.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="879.2" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (22 samples, 0.23%)</title><rect x="882.6" y="643.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="885.6" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (21 samples, 0.22%)</title><rect x="882.7" y="627.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="885.7" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (20 samples, 0.21%)</title><rect x="882.8" y="611.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="885.8" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (14 samples, 0.15%)</title><rect x="883.3" y="595.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="886.3" y="606.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.02%)</title><rect x="885.1" y="595.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="888.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (16 samples, 0.17%)</title><rect x="885.3" y="643.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="888.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (11 samples, 0.12%)</title><rect x="887.3" y="659.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="890.3" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.09%)</title><rect x="887.7" y="643.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="890.7" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.07%)</title><rect x="887.9" y="627.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="890.9" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.07%)</title><rect x="887.9" y="611.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="890.9" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (7 samples, 0.07%)</title><rect x="887.9" y="595.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="890.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (1,496 samples, 15.90%)</title><rect x="888.7" y="707.0" width="187.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="891.7" y="718.0">ru/mail/polis/dao/alexan..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (82 samples, 0.87%)</title><rect x="889.5" y="691.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="892.5" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="890.4" y="675.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="893.4" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.02%)</title><rect x="890.4" y="659.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="893.4" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.02%)</title><rect x="890.4" y="643.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="893.4" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="890.4" y="627.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="893.4" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="890.4" y="611.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="893.4" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (73 samples, 0.78%)</title><rect x="890.6" y="675.0" width="9.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="893.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="891.5" y="659.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="894.5" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="891.5" y="643.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="894.5" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (64 samples, 0.68%)</title><rect x="891.7" y="659.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="894.7" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="899.5" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="902.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,406 samples, 14.94%)</title><rect x="900.0" y="691.0" width="176.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="903.0" y="702.0">sun/nio/ch/FileChannelI..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,404 samples, 14.92%)</title><rect x="900.3" y="675.0" width="176.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="903.3" y="686.0">sun/nio/ch/FileChannelI..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (3 samples, 0.03%)</title><rect x="904.4" y="659.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="907.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (22 samples, 0.23%)</title><rect x="904.8" y="659.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="907.8" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (22 samples, 0.23%)</title><rect x="904.8" y="643.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="907.8" y="654.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (22 samples, 0.23%)</title><rect x="904.8" y="627.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="907.8" y="638.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (22 samples, 0.23%)</title><rect x="904.8" y="611.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.8" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (22 samples, 0.23%)</title><rect x="904.8" y="595.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (33 samples, 0.35%)</title><rect x="907.5" y="659.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="910.5" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (33 samples, 0.35%)</title><rect x="907.5" y="643.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="910.5" y="654.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (17 samples, 0.18%)</title><rect x="909.5" y="627.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="912.5" y="638.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (17 samples, 0.18%)</title><rect x="909.5" y="611.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="912.5" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (17 samples, 0.18%)</title><rect x="909.5" y="595.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="912.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1,156 samples, 12.29%)</title><rect x="911.7" y="659.0" width="145.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="914.7" y="670.0">sun/nio/ch/IOUtil...</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (28 samples, 0.30%)</title><rect x="915.7" y="643.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="918.7" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (25 samples, 0.27%)</title><rect x="916.1" y="627.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="919.1" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (25 samples, 0.27%)</title><rect x="916.1" y="611.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="919.1" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.05%)</title><rect x="918.2" y="595.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="921.2" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (2 samples, 0.02%)</title><rect x="918.2" y="579.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="921.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (3 samples, 0.03%)</title><rect x="918.5" y="579.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="921.5" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.03%)</title><rect x="918.8" y="595.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="921.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (986 samples, 10.48%)</title><rect x="919.2" y="643.0" width="123.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="922.2" y="654.0">sun/nio/ch/IOUt..</text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.02%)</title><rect x="920.8" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="923.8" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (969 samples, 10.30%)</title><rect x="921.2" y="627.0" width="121.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="924.2" y="638.0">sun/nio/ch/File..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (969 samples, 10.30%)</title><rect x="921.2" y="611.0" width="121.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="924.2" y="622.0">sun/nio/ch/File..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (13 samples, 0.14%)</title><rect x="925.9" y="595.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="928.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (904 samples, 9.61%)</title><rect x="927.5" y="595.0" width="113.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="930.5" y="606.0">[unknown]</text>
</g>
<g>
<title>__libc_disable_asynccancel (15 samples, 0.16%)</title><rect x="927.5" y="579.0" width="1.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="930.5" y="590.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (4 samples, 0.04%)</title><rect x="929.4" y="579.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="932.4" y="590.0"></text>
</g>
<g>
<title>pread64 (885 samples, 9.41%)</title><rect x="929.9" y="579.0" width="111.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="932.9" y="590.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (825 samples, 8.77%)</title><rect x="937.4" y="563.0" width="103.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="940.4" y="574.0">entry_SYSCAL..</text>
</g>
<g>
<title>__x64_sys_pread64 (17 samples, 0.18%)</title><rect x="937.4" y="547.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="940.4" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (807 samples, 8.58%)</title><rect x="939.7" y="547.0" width="101.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="942.7" y="558.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (714 samples, 7.59%)</title><rect x="951.1" y="531.0" width="89.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="954.1" y="542.0">__x64_sys_..</text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="951.3" y="515.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="954.3" y="526.0"></text>
</g>
<g>
<title>ksys_pread64 (709 samples, 7.54%)</title><rect x="951.6" y="515.0" width="88.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="954.6" y="526.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (77 samples, 0.82%)</title><rect x="952.2" y="499.0" width="9.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="955.2" y="510.0"></text>
</g>
<g>
<title>__fget_light (77 samples, 0.82%)</title><rect x="952.2" y="483.0" width="9.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="955.2" y="494.0"></text>
</g>
<g>
<title>__fget (67 samples, 0.71%)</title><rect x="953.4" y="467.0" width="8.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="956.4" y="478.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.06%)</title><rect x="961.9" y="499.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="964.9" y="510.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.03%)</title><rect x="962.6" y="499.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="965.6" y="510.0"></text>
</g>
<g>
<title>fput (16 samples, 0.17%)</title><rect x="963.1" y="499.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="966.1" y="510.0"></text>
</g>
<g>
<title>fput_many (16 samples, 0.17%)</title><rect x="963.1" y="483.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="966.1" y="494.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.03%)</title><rect x="965.1" y="499.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="968.1" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="965.5" y="499.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="968.5" y="510.0"></text>
</g>
<g>
<title>vfs_read (596 samples, 6.34%)</title><rect x="965.7" y="499.0" width="74.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="968.7" y="510.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (7 samples, 0.07%)</title><rect x="968.4" y="483.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="971.4" y="494.0"></text>
</g>
<g>
<title>__vfs_read (417 samples, 4.43%)</title><rect x="969.3" y="483.0" width="52.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="972.3" y="494.0">__vfs..</text>
</g>
<g>
<title>ext4_file_read_iter (13 samples, 0.14%)</title><rect x="969.8" y="467.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="972.8" y="478.0"></text>
</g>
<g>
<title>new_sync_read (400 samples, 4.25%)</title><rect x="971.4" y="467.0" width="50.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="974.4" y="478.0">new_s..</text>
</g>
<g>
<title>ext4_file_read_iter (374 samples, 3.98%)</title><rect x="973.9" y="451.0" width="46.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="976.9" y="462.0">ext4..</text>
</g>
<g>
<title>generic_file_read_iter (348 samples, 3.70%)</title><rect x="977.2" y="435.0" width="43.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="980.2" y="446.0">gene..</text>
</g>
<g>
<title>atime_needs_update (10 samples, 0.11%)</title><rect x="986.6" y="419.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="989.6" y="430.0"></text>
</g>
<g>
<title>copy_page_to_iter (95 samples, 1.01%)</title><rect x="987.8" y="419.0" width="11.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="990.8" y="430.0"></text>
</g>
<g>
<title>_cond_resched (7 samples, 0.07%)</title><rect x="990.3" y="403.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="993.3" y="414.0"></text>
</g>
<g>
<title>rcu_all_qs (6 samples, 0.06%)</title><rect x="990.4" y="387.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="993.4" y="398.0"></text>
</g>
<g>
<title>copy_user_generic_string (67 samples, 0.71%)</title><rect x="991.2" y="403.0" width="8.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="994.2" y="414.0"></text>
</g>
<g>
<title>mark_page_accessed (8 samples, 0.09%)</title><rect x="999.9" y="419.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1002.9" y="430.0"></text>
</g>
<g>
<title>pagecache_get_page (113 samples, 1.20%)</title><rect x="1000.9" y="419.0" width="14.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1003.9" y="430.0"></text>
</g>
<g>
<title>find_get_entry (108 samples, 1.15%)</title><rect x="1001.5" y="403.0" width="13.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1004.5" y="414.0"></text>
</g>
<g>
<title>xas_load (37 samples, 0.39%)</title><rect x="1010.4" y="387.0" width="4.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1013.4" y="398.0"></text>
</g>
<g>
<title>xas_start (9 samples, 0.10%)</title><rect x="1013.9" y="371.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1016.9" y="382.0"></text>
</g>
<g>
<title>touch_atime (46 samples, 0.49%)</title><rect x="1015.0" y="419.0" width="5.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1018.0" y="430.0"></text>
</g>
<g>
<title>atime_needs_update (24 samples, 0.26%)</title><rect x="1017.8" y="403.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1020.8" y="414.0"></text>
</g>
<g>
<title>current_time (16 samples, 0.17%)</title><rect x="1018.3" y="387.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1021.3" y="398.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (4 samples, 0.04%)</title><rect x="1019.2" y="371.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1022.2" y="382.0"></text>
</g>
<g>
<title>timestamp_truncate (5 samples, 0.05%)</title><rect x="1019.7" y="371.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1022.7" y="382.0"></text>
</g>
<g>
<title>timestamp_truncate (3 samples, 0.03%)</title><rect x="1020.4" y="387.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1023.4" y="398.0"></text>
</g>
<g>
<title>iov_iter_init (6 samples, 0.06%)</title><rect x="1020.8" y="451.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1023.8" y="462.0"></text>
</g>
<g>
<title>fsnotify (19 samples, 0.20%)</title><rect x="1021.6" y="483.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1024.6" y="494.0"></text>
</g>
<g>
<title>rw_verify_area (131 samples, 1.39%)</title><rect x="1024.1" y="483.0" width="16.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1027.1" y="494.0"></text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.05%)</title><rect x="1024.9" y="467.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1027.9" y="478.0"></text>
</g>
<g>
<title>apparmor_file_permission (25 samples, 0.27%)</title><rect x="1025.6" y="467.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1028.6" y="478.0"></text>
</g>
<g>
<title>security_file_permission (94 samples, 1.00%)</title><rect x="1028.7" y="467.0" width="11.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1031.7" y="478.0"></text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.05%)</title><rect x="1031.1" y="451.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1034.1" y="462.0"></text>
</g>
<g>
<title>apparmor_file_permission (39 samples, 0.41%)</title><rect x="1031.7" y="451.0" width="4.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1034.7" y="462.0"></text>
</g>
<g>
<title>common_file_perm (39 samples, 0.41%)</title><rect x="1031.7" y="435.0" width="4.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1034.7" y="446.0"></text>
</g>
<g>
<title>aa_file_perm (7 samples, 0.07%)</title><rect x="1035.6" y="419.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1038.6" y="430.0"></text>
</g>
<g>
<title>common_file_perm (10 samples, 0.11%)</title><rect x="1036.6" y="451.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1039.6" y="462.0"></text>
</g>
<g>
<title>fsnotify (21 samples, 0.22%)</title><rect x="1037.9" y="451.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1040.9" y="462.0"></text>
</g>
<g>
<title>ksys_pread64 (2 samples, 0.02%)</title><rect x="1040.6" y="531.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1043.6" y="542.0"></text>
</g>
<g>
<title>fdval (7 samples, 0.07%)</title><rect x="1041.0" y="595.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1044.0" y="606.0"></text>
</g>
<g>
<title>pread64 (7 samples, 0.07%)</title><rect x="1041.9" y="595.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1044.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (64 samples, 0.68%)</title><rect x="1042.9" y="643.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1045.9" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (48 samples, 0.51%)</title><rect x="1043.0" y="627.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1046.0" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.04%)</title><rect x="1045.6" y="611.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1048.6" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (12 samples, 0.13%)</title><rect x="1046.1" y="611.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1049.1" y="622.0"></text>
</g>
<g>
<title>vtable stub (10 samples, 0.11%)</title><rect x="1047.8" y="611.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1050.8" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (15 samples, 0.16%)</title><rect x="1049.0" y="627.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1052.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (7 samples, 0.07%)</title><rect x="1050.0" y="611.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1053.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (46 samples, 0.49%)</title><rect x="1050.9" y="643.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1053.9" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (33 samples, 0.35%)</title><rect x="1051.0" y="627.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1054.0" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (14 samples, 0.15%)</title><rect x="1053.3" y="611.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1056.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (12 samples, 0.13%)</title><rect x="1055.2" y="627.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1058.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (98 samples, 1.04%)</title><rect x="1056.7" y="659.0" width="12.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1059.7" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (14 samples, 0.15%)</title><rect x="1064.6" y="643.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1067.6" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (14 samples, 0.15%)</title><rect x="1064.6" y="627.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1067.6" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (12 samples, 0.13%)</title><rect x="1064.8" y="611.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1067.8" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (8 samples, 0.09%)</title><rect x="1065.2" y="595.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1068.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (21 samples, 0.22%)</title><rect x="1066.3" y="643.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1069.3" y="654.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (2 samples, 0.02%)</title><rect x="1068.5" y="627.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1071.5" y="638.0"></text>
</g>
<g>
<title>pthread_self (2 samples, 0.02%)</title><rect x="1068.7" y="627.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1071.7" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (59 samples, 0.63%)</title><rect x="1069.0" y="659.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1072.0" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.05%)</title><rect x="1075.7" y="643.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1078.7" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.05%)</title><rect x="1075.7" y="627.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1078.7" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.04%)</title><rect x="1075.9" y="611.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1078.9" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (4 samples, 0.04%)</title><rect x="1075.9" y="595.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1078.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValueSerializer.serialize (20 samples, 0.21%)</title><rect x="1076.4" y="803.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1079.4" y="814.0"></text>
</g>
<g>
<title>one/nio/serial/CalcSizeStream.writeObject (11 samples, 0.12%)</title><rect x="1076.4" y="787.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1079.4" y="798.0"></text>
</g>
<g>
<title>one/nio/serial/GeneratedSerializer.calcSize (11 samples, 0.12%)</title><rect x="1076.4" y="771.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1079.4" y="782.0"></text>
</g>
<g>
<title>sun/reflect/Delegate0_SerializableValue.calcSize (11 samples, 0.12%)</title><rect x="1076.4" y="755.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1079.4" y="766.0"></text>
</g>
<g>
<title>one/nio/serial/CalcSizeStream.writeObject (11 samples, 0.12%)</title><rect x="1076.4" y="739.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1079.4" y="750.0"></text>
</g>
<g>
<title>one/nio/serial/SerializationContext.put (11 samples, 0.12%)</title><rect x="1076.4" y="723.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1079.4" y="734.0"></text>
</g>
<g>
<title>one/nio/serial/SerializationContext.init (10 samples, 0.11%)</title><rect x="1076.5" y="707.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1079.5" y="718.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (9 samples, 0.10%)</title><rect x="1076.6" y="691.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1079.6" y="702.0"></text>
</g>
<g>
<title>JVM_IHashCode (7 samples, 0.07%)</title><rect x="1076.7" y="675.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1079.7" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.02%)</title><rect x="1077.2" y="659.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1080.2" y="670.0"></text>
</g>
<g>
<title>one/nio/serial/SerializeStream.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1077.7" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1080.7" y="798.0"></text>
</g>
<g>
<title>one/nio/serial/SerializeStream.writeObject (5 samples, 0.05%)</title><rect x="1078.0" y="787.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1081.0" y="798.0"></text>
</g>
<g>
<title>one/nio/serial/GeneratedSerializer.write (3 samples, 0.03%)</title><rect x="1078.0" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1081.0" y="782.0"></text>
</g>
<g>
<title>sun/reflect/Delegate0_SerializableValue.write (3 samples, 0.03%)</title><rect x="1078.0" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1081.0" y="766.0"></text>
</g>
<g>
<title>one/nio/serial/SerializeStream.writeObject (3 samples, 0.03%)</title><rect x="1078.0" y="739.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1081.0" y="750.0"></text>
</g>
<g>
<title>one/nio/serial/SerializationContext.put (3 samples, 0.03%)</title><rect x="1078.0" y="723.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1081.0" y="734.0"></text>
</g>
<g>
<title>one/nio/serial/Repository.get (2 samples, 0.02%)</title><rect x="1078.4" y="771.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1081.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.02%)</title><rect x="1078.4" y="755.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1081.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValueSerializer$SerializableValue.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1078.6" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1081.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.getData (2 samples, 0.02%)</title><rect x="1078.6" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1081.6" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.02%)</title><rect x="1078.6" y="755.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1081.6" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1078.6" y="739.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1081.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1078.6" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1081.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.iterateOverNodes (26 samples, 0.28%)</title><rect x="1078.9" y="819.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1081.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (25 samples, 0.27%)</title><rect x="1079.0" y="803.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1082.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (24 samples, 0.26%)</title><rect x="1079.0" y="787.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1082.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (7 samples, 0.07%)</title><rect x="1079.0" y="771.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1082.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (7 samples, 0.07%)</title><rect x="1079.0" y="755.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1082.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (7 samples, 0.07%)</title><rect x="1079.0" y="739.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1082.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (7 samples, 0.07%)</title><rect x="1079.0" y="723.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1082.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (7 samples, 0.07%)</title><rect x="1079.0" y="707.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1082.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (17 samples, 0.18%)</title><rect x="1079.9" y="771.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1082.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (17 samples, 0.18%)</title><rect x="1079.9" y="755.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1082.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (17 samples, 0.18%)</title><rect x="1079.9" y="739.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1082.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.18%)</title><rect x="1079.9" y="723.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1082.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 0.18%)</title><rect x="1079.9" y="707.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1082.9" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 0.17%)</title><rect x="1080.0" y="691.0" width="2.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1083.0" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.16%)</title><rect x="1080.1" y="675.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1083.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.16%)</title><rect x="1080.1" y="659.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1083.1" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.16%)</title><rect x="1080.1" y="643.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1083.1" y="654.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.15%)</title><rect x="1080.3" y="627.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1083.3" y="638.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.15%)</title><rect x="1080.3" y="611.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1083.3" y="622.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.14%)</title><rect x="1080.4" y="595.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1083.4" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.14%)</title><rect x="1080.4" y="579.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1083.4" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.14%)</title><rect x="1080.4" y="563.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1083.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.await (29 samples, 0.31%)</title><rect x="1082.1" y="819.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1085.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (28 samples, 0.30%)</title><rect x="1082.1" y="803.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1085.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.02%)</title><rect x="1082.1" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1085.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.06%)</title><rect x="1082.4" y="787.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1085.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.02%)</title><rect x="1082.9" y="771.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1085.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.02%)</title><rect x="1082.9" y="755.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1085.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (19 samples, 0.20%)</title><rect x="1083.3" y="787.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1086.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (19 samples, 0.20%)</title><rect x="1083.3" y="771.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1086.3" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.07%)</title><rect x="1083.6" y="755.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1086.6" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.05%)</title><rect x="1083.8" y="739.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1086.8" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (6 samples, 0.06%)</title><rect x="1084.6" y="755.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1087.6" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.05%)</title><rect x="1084.8" y="739.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1087.8" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.05%)</title><rect x="1084.8" y="723.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1087.8" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.05%)</title><rect x="1084.8" y="707.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1087.8" y="718.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.04%)</title><rect x="1084.8" y="691.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1087.8" y="702.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.04%)</title><rect x="1084.8" y="675.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1087.8" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.02%)</title><rect x="1084.8" y="659.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1087.8" y="670.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (2 samples, 0.02%)</title><rect x="1084.8" y="643.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1087.8" y="654.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.02%)</title><rect x="1084.8" y="627.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1087.8" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.02%)</title><rect x="1084.8" y="611.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1087.8" y="622.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.02%)</title><rect x="1085.0" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1088.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.getResult (12 samples, 0.13%)</title><rect x="1085.8" y="819.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1088.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzerGet.privateGetResult (8 samples, 0.09%)</title><rect x="1086.1" y="803.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1089.1" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.entrySet (2 samples, 0.02%)</title><rect x="1086.5" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1089.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1086.8" y="787.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1089.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzerGet.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1087.3" y="819.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1090.3" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1087.3" y="803.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1090.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primariesFor (6 samples, 0.06%)</title><rect x="1087.5" y="819.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1090.5" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primariesFor (6 samples, 0.06%)</title><rect x="1087.5" y="803.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1090.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$NodeKeyPair.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1087.9" y="787.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1090.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.trySendAnswer (395 samples, 4.20%)</title><rect x="1088.3" y="835.0" width="49.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1091.3" y="846.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (395 samples, 4.20%)</title><rect x="1088.3" y="819.0" width="49.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1091.3" y="830.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (390 samples, 4.15%)</title><rect x="1088.3" y="803.0" width="48.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1091.3" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 0.12%)</title><rect x="1088.5" y="787.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1091.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.06%)</title><rect x="1089.2" y="771.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1092.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (6 samples, 0.06%)</title><rect x="1089.2" y="755.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1092.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.06%)</title><rect x="1089.2" y="739.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1092.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (377 samples, 4.01%)</title><rect x="1089.9" y="787.0" width="47.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1092.9" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (370 samples, 3.93%)</title><rect x="1090.2" y="771.0" width="46.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1093.2" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (364 samples, 3.87%)</title><rect x="1090.9" y="755.0" width="45.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1093.9" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (363 samples, 3.86%)</title><rect x="1091.0" y="739.0" width="45.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1094.0" y="750.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.07%)</title><rect x="1091.3" y="723.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1094.3" y="734.0"></text>
</g>
<g>
<title>__memmove_ssse3 (3 samples, 0.03%)</title><rect x="1091.4" y="707.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1094.4" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.03%)</title><rect x="1091.8" y="707.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1094.8" y="718.0"></text>
</g>
<g>
<title>__libc_send (350 samples, 3.72%)</title><rect x="1092.3" y="723.0" width="43.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1095.3" y="734.0">__li..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (349 samples, 3.71%)</title><rect x="1092.4" y="707.0" width="43.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1095.4" y="718.0">entr..</text>
</g>
<g>
<title>__x64_sys_sendto (3 samples, 0.03%)</title><rect x="1092.4" y="691.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1095.4" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (346 samples, 3.68%)</title><rect x="1092.8" y="691.0" width="43.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1095.8" y="702.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (343 samples, 3.65%)</title><rect x="1093.2" y="675.0" width="43.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1096.2" y="686.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (343 samples, 3.65%)</title><rect x="1093.2" y="659.0" width="43.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1096.2" y="670.0">__sy..</text>
</g>
<g>
<title>sock_sendmsg (337 samples, 3.58%)</title><rect x="1093.7" y="643.0" width="42.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1096.7" y="654.0">sock..</text>
</g>
<g>
<title>inet6_sendmsg (330 samples, 3.51%)</title><rect x="1094.0" y="627.0" width="41.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1097.0" y="638.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (329 samples, 3.50%)</title><rect x="1094.2" y="611.0" width="41.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1097.2" y="622.0">tcp..</text>
</g>
<g>
<title>release_sock (2 samples, 0.02%)</title><rect x="1094.4" y="595.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1097.4" y="606.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.02%)</title><rect x="1094.7" y="595.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1097.7" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (323 samples, 3.43%)</title><rect x="1094.9" y="595.0" width="40.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1097.9" y="606.0">tcp..</text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.03%)</title><rect x="1095.8" y="579.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1098.8" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.03%)</title><rect x="1096.3" y="579.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1099.3" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (3 samples, 0.03%)</title><rect x="1096.3" y="563.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1099.3" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (22 samples, 0.23%)</title><rect x="1096.7" y="579.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1099.7" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (20 samples, 0.21%)</title><rect x="1096.8" y="563.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1099.8" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (10 samples, 0.11%)</title><rect x="1097.2" y="547.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1100.2" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.06%)</title><rect x="1097.2" y="531.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1100.2" y="542.0"></text>
</g>
<g>
<title>memset (4 samples, 0.04%)</title><rect x="1097.9" y="531.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1100.9" y="542.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.03%)</title><rect x="1098.4" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1101.4" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.02%)</title><rect x="1098.8" y="547.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1101.8" y="558.0"></text>
</g>
<g>
<title>memset (2 samples, 0.02%)</title><rect x="1099.1" y="547.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1102.1" y="558.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.03%)</title><rect x="1099.4" y="579.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1102.4" y="590.0"></text>
</g>
<g>
<title>tcp_push (279 samples, 2.97%)</title><rect x="1099.9" y="579.0" width="35.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1102.9" y="590.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (279 samples, 2.97%)</title><rect x="1099.9" y="563.0" width="35.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1102.9" y="574.0">__..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.33 (3 samples, 0.03%)</title><rect x="1100.1" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1103.1" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (275 samples, 2.92%)</title><rect x="1100.4" y="547.0" width="34.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1103.4" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (245 samples, 2.60%)</title><rect x="1101.2" y="531.0" width="30.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1104.2" y="542.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (235 samples, 2.50%)</title><rect x="1102.2" y="515.0" width="29.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1105.2" y="526.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (235 samples, 2.50%)</title><rect x="1102.2" y="499.0" width="29.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1105.2" y="510.0">__..</text>
</g>
<g>
<title>ip_local_out (230 samples, 2.44%)</title><rect x="1102.3" y="483.0" width="28.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1105.3" y="494.0">ip..</text>
</g>
<g>
<title>__ip_local_out (37 samples, 0.39%)</title><rect x="1102.3" y="467.0" width="4.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1105.3" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (4 samples, 0.04%)</title><rect x="1102.5" y="451.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1105.5" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (30 samples, 0.32%)</title><rect x="1103.0" y="451.0" width="3.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1106.0" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (5 samples, 0.05%)</title><rect x="1103.0" y="435.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1106.0" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.05%)</title><rect x="1103.0" y="419.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1106.0" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (21 samples, 0.22%)</title><rect x="1103.6" y="435.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1106.6" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (21 samples, 0.22%)</title><rect x="1103.6" y="419.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1106.6" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (3 samples, 0.03%)</title><rect x="1104.0" y="403.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1107.0" y="414.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (2 samples, 0.02%)</title><rect x="1104.3" y="403.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1107.3" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (10 samples, 0.11%)</title><rect x="1104.6" y="403.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1107.6" y="414.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (3 samples, 0.03%)</title><rect x="1105.8" y="403.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1108.8" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (3 samples, 0.03%)</title><rect x="1106.3" y="435.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1109.3" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (2 samples, 0.02%)</title><rect x="1106.7" y="451.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1109.7" y="462.0"></text>
</g>
<g>
<title>ip_output (191 samples, 2.03%)</title><rect x="1107.1" y="467.0" width="24.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1110.1" y="478.0">i..</text>
</g>
<g>
<title>ip_finish_output (188 samples, 2.00%)</title><rect x="1107.2" y="451.0" width="23.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1110.2" y="462.0">i..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.03%)</title><rect x="1107.2" y="435.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1110.2" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (184 samples, 1.96%)</title><rect x="1107.6" y="435.0" width="23.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1110.6" y="446.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (181 samples, 1.92%)</title><rect x="1108.0" y="419.0" width="22.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1111.0" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (163 samples, 1.73%)</title><rect x="1108.6" y="403.0" width="20.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1111.6" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.20 (163 samples, 1.73%)</title><rect x="1108.6" y="387.0" width="20.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1111.6" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (162 samples, 1.72%)</title><rect x="1108.7" y="371.0" width="20.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1111.7" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (162 samples, 1.72%)</title><rect x="1108.7" y="355.0" width="20.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1111.7" y="366.0"></text>
</g>
<g>
<title>net_rx_action (157 samples, 1.67%)</title><rect x="1109.4" y="339.0" width="19.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1112.4" y="350.0"></text>
</g>
<g>
<title>process_backlog (155 samples, 1.65%)</title><rect x="1109.6" y="323.0" width="19.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1112.6" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (149 samples, 1.58%)</title><rect x="1110.4" y="307.0" width="18.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1113.4" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (149 samples, 1.58%)</title><rect x="1110.4" y="291.0" width="18.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1113.4" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.04%)</title><rect x="1110.4" y="275.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1113.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv (144 samples, 1.53%)</title><rect x="1110.9" y="275.0" width="18.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1113.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (138 samples, 1.47%)</title><rect x="1111.1" y="259.0" width="17.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1114.1" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (137 samples, 1.46%)</title><rect x="1111.2" y="243.0" width="17.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1114.2" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (130 samples, 1.38%)</title><rect x="1111.4" y="227.0" width="16.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1114.4" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (129 samples, 1.37%)</title><rect x="1111.4" y="211.0" width="16.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1114.4" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (126 samples, 1.34%)</title><rect x="1111.7" y="195.0" width="15.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1114.7" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (9 samples, 0.10%)</title><rect x="1112.1" y="179.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1115.1" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.04%)</title><rect x="1113.2" y="179.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1116.2" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.02%)</title><rect x="1113.5" y="163.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1116.5" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (110 samples, 1.17%)</title><rect x="1113.7" y="179.0" width="13.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1116.7" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (109 samples, 1.16%)</title><rect x="1113.9" y="163.0" width="13.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1116.9" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.06%)</title><rect x="1114.4" y="147.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1117.4" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (6 samples, 0.06%)</title><rect x="1114.4" y="131.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1117.4" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.06%)</title><rect x="1114.4" y="115.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1117.4" y="126.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.06%)</title><rect x="1114.4" y="99.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1117.4" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.06%)</title><rect x="1114.4" y="83.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1117.4" y="94.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.02%)</title><rect x="1115.1" y="147.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1118.1" y="158.0"></text>
</g>
<g>
<title>tcp_ack (33 samples, 0.35%)</title><rect x="1115.4" y="147.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1118.4" y="158.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.02%)</title><rect x="1116.1" y="131.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1119.1" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (23 samples, 0.24%)</title><rect x="1116.5" y="131.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1119.5" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (14 samples, 0.15%)</title><rect x="1116.8" y="115.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1119.8" y="126.0"></text>
</g>
<g>
<title>skb_release_all (13 samples, 0.14%)</title><rect x="1116.9" y="99.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1119.9" y="110.0"></text>
</g>
<g>
<title>skb_release_data (13 samples, 0.14%)</title><rect x="1116.9" y="83.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1119.9" y="94.0"></text>
</g>
<g>
<title>skb_free_head (8 samples, 0.09%)</title><rect x="1117.5" y="67.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1120.5" y="78.0"></text>
</g>
<g>
<title>kfree (8 samples, 0.09%)</title><rect x="1117.5" y="51.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1120.5" y="62.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.05%)</title><rect x="1117.9" y="35.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1120.9" y="46.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.02%)</title><rect x="1118.5" y="115.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1121.5" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (5 samples, 0.05%)</title><rect x="1118.8" y="115.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1121.8" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (56 samples, 0.60%)</title><rect x="1119.6" y="147.0" width="7.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1122.6" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (56 samples, 0.60%)</title><rect x="1119.6" y="131.0" width="7.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1122.6" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (54 samples, 0.57%)</title><rect x="1119.9" y="115.0" width="6.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1122.9" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (54 samples, 0.57%)</title><rect x="1119.9" y="99.0" width="6.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1122.9" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (54 samples, 0.57%)</title><rect x="1119.9" y="83.0" width="6.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1122.9" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.03%)</title><rect x="1126.7" y="147.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1129.7" y="158.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.02%)</title><rect x="1127.3" y="147.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1130.3" y="158.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.02%)</title><rect x="1127.7" y="227.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1130.7" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.03%)</title><rect x="1127.9" y="227.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1130.9" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (2 samples, 0.02%)</title><rect x="1128.0" y="211.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1131.0" y="222.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.02%)</title><rect x="1128.0" y="195.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1131.0" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.02%)</title><rect x="1128.7" y="259.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1131.7" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (13 samples, 0.14%)</title><rect x="1129.0" y="403.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1132.0" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (12 samples, 0.13%)</title><rect x="1129.2" y="387.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1132.2" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.07%)</title><rect x="1129.5" y="371.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1132.5" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.06%)</title><rect x="1129.7" y="355.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1132.7" y="366.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.03%)</title><rect x="1129.9" y="339.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1132.9" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.03%)</title><rect x="1129.9" y="323.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1132.9" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.02%)</title><rect x="1130.0" y="307.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1133.0" y="318.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.02%)</title><rect x="1130.4" y="371.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1133.4" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.02%)</title><rect x="1130.8" y="451.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1133.8" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.03%)</title><rect x="1131.3" y="483.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1134.3" y="494.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.02%)</title><rect x="1132.3" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1135.3" y="542.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="1132.8" y="531.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1135.8" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (8 samples, 0.09%)</title><rect x="1133.2" y="531.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1136.2" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (7 samples, 0.07%)</title><rect x="1133.3" y="515.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1136.3" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.05%)</title><rect x="1133.6" y="499.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1136.6" y="510.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.05%)</title><rect x="1133.6" y="483.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1136.6" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.04%)</title><rect x="1133.6" y="467.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1136.6" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.03%)</title><rect x="1134.4" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1137.4" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.03%)</title><rect x="1134.9" y="579.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1137.9" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.03%)</title><rect x="1134.9" y="563.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1137.9" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.02%)</title><rect x="1135.1" y="547.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1138.1" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.04%)</title><rect x="1135.4" y="627.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1138.4" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.04%)</title><rect x="1135.4" y="611.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1138.4" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.04%)</title><rect x="1135.4" y="595.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1138.4" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.04%)</title><rect x="1135.4" y="579.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1138.4" y="590.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (4 samples, 0.04%)</title><rect x="1135.4" y="563.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1138.4" y="574.0"></text>
</g>
<g>
<title>aa_profile_af_perm (4 samples, 0.04%)</title><rect x="1135.4" y="547.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1138.4" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.02%)</title><rect x="1135.9" y="643.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1138.9" y="654.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.03%)</title><rect x="1136.2" y="723.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1139.2" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.05%)</title><rect x="1136.6" y="771.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1139.6" y="782.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.04%)</title><rect x="1136.7" y="755.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1139.7" y="766.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.04%)</title><rect x="1136.7" y="739.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1139.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.05%)</title><rect x="1137.2" y="803.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1140.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValidatedParameters.validateParameters (44 samples, 0.47%)</title><rect x="1137.8" y="835.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1140.8" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValidatedParameters.unpackReplicasParameter (43 samples, 0.46%)</title><rect x="1137.9" y="819.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1140.9" y="830.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (7 samples, 0.07%)</title><rect x="1137.9" y="803.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1140.9" y="814.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (6 samples, 0.06%)</title><rect x="1138.1" y="787.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1141.1" y="798.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.&lt;init&gt; (5 samples, 0.05%)</title><rect x="1138.2" y="771.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1141.2" y="782.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1138.6" y="755.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1141.6" y="766.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (30 samples, 0.32%)</title><rect x="1138.8" y="803.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1141.8" y="814.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (12 samples, 0.13%)</title><rect x="1138.8" y="787.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1141.8" y="798.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (12 samples, 0.13%)</title><rect x="1138.8" y="771.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1141.8" y="782.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (12 samples, 0.13%)</title><rect x="1138.8" y="755.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1141.8" y="766.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (12 samples, 0.13%)</title><rect x="1138.8" y="739.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1141.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (12 samples, 0.13%)</title><rect x="1138.8" y="723.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1141.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.13%)</title><rect x="1138.8" y="707.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1141.8" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.13%)</title><rect x="1138.8" y="691.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1141.8" y="702.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.next (3 samples, 0.03%)</title><rect x="1140.3" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1143.3" y="798.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (2 samples, 0.02%)</title><rect x="1140.5" y="771.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1143.5" y="782.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (2 samples, 0.02%)</title><rect x="1140.5" y="755.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1143.5" y="766.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (2 samples, 0.02%)</title><rect x="1140.5" y="739.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1143.5" y="750.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (2 samples, 0.02%)</title><rect x="1140.5" y="723.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1143.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (2 samples, 0.02%)</title><rect x="1140.5" y="707.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1143.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.02%)</title><rect x="1140.5" y="691.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="1140.5" y="675.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1143.5" y="686.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (12 samples, 0.13%)</title><rect x="1140.7" y="787.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.7" y="798.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (12 samples, 0.13%)</title><rect x="1140.7" y="771.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1143.7" y="782.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (12 samples, 0.13%)</title><rect x="1140.7" y="755.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1143.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.&lt;init&gt; (11 samples, 0.12%)</title><rect x="1140.8" y="739.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.8" y="750.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.&lt;init&gt; (10 samples, 0.11%)</title><rect x="1141.0" y="723.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1144.0" y="734.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.&lt;init&gt; (8 samples, 0.09%)</title><rect x="1141.2" y="707.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1144.2" y="718.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (7 samples, 0.07%)</title><rect x="1141.3" y="691.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1144.3" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1142.2" y="787.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1145.2" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="1142.3" y="771.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1145.3" y="782.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (6 samples, 0.06%)</title><rect x="1142.6" y="803.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1145.6" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (6 samples, 0.06%)</title><rect x="1142.6" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1145.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.03%)</title><rect x="1143.0" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1146.0" y="782.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (10 samples, 0.11%)</title><rect x="1143.3" y="867.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1146.3" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (10 samples, 0.11%)</title><rect x="1143.3" y="851.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1146.3" y="862.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$121/1107097229.run (10 samples, 0.11%)</title><rect x="1143.3" y="835.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1146.3" y="846.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (10 samples, 0.11%)</title><rect x="1143.3" y="819.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1146.3" y="830.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (10 samples, 0.11%)</title><rect x="1143.3" y="803.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1146.3" y="814.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (10 samples, 0.11%)</title><rect x="1143.3" y="787.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1146.3" y="798.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (10 samples, 0.11%)</title><rect x="1143.3" y="771.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1146.3" y="782.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (10 samples, 0.11%)</title><rect x="1143.3" y="755.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1146.3" y="766.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (10 samples, 0.11%)</title><rect x="1143.3" y="739.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1146.3" y="750.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (10 samples, 0.11%)</title><rect x="1143.3" y="723.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1146.3" y="734.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (10 samples, 0.11%)</title><rect x="1143.3" y="707.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1146.3" y="718.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.07%)</title><rect x="1143.5" y="691.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1146.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.07%)</title><rect x="1143.5" y="675.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1146.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (6 samples, 0.06%)</title><rect x="1143.6" y="659.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1146.6" y="670.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (6 samples, 0.06%)</title><rect x="1143.6" y="643.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1146.6" y="654.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (5 samples, 0.05%)</title><rect x="1143.6" y="627.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1146.6" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (5 samples, 0.05%)</title><rect x="1143.6" y="611.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1146.6" y="622.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (5 samples, 0.05%)</title><rect x="1143.6" y="595.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1146.6" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (5 samples, 0.05%)</title><rect x="1143.6" y="579.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1146.6" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (5 samples, 0.05%)</title><rect x="1143.6" y="563.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1146.6" y="574.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (5 samples, 0.05%)</title><rect x="1143.6" y="547.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1146.6" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (5 samples, 0.05%)</title><rect x="1143.6" y="531.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1146.6" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (5 samples, 0.05%)</title><rect x="1143.6" y="515.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1146.6" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (5 samples, 0.05%)</title><rect x="1143.6" y="499.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1146.6" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (5 samples, 0.05%)</title><rect x="1143.6" y="483.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1146.6" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (5 samples, 0.05%)</title><rect x="1143.6" y="467.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1146.6" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (5 samples, 0.05%)</title><rect x="1143.6" y="451.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1146.6" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (5 samples, 0.05%)</title><rect x="1143.6" y="435.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1146.6" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (5 samples, 0.05%)</title><rect x="1143.6" y="419.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1146.6" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (5 samples, 0.05%)</title><rect x="1143.6" y="403.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1146.6" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (5 samples, 0.05%)</title><rect x="1143.6" y="387.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1146.6" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (5 samples, 0.05%)</title><rect x="1143.6" y="371.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1146.6" y="382.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1143.7" y="355.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1146.7" y="366.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1143.7" y="339.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1146.7" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.equals (2 samples, 0.02%)</title><rect x="1143.7" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1146.7" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractSet.equals (2 samples, 0.02%)</title><rect x="1143.7" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1146.7" y="318.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.containsAll (2 samples, 0.02%)</title><rect x="1143.7" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1146.7" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.contains (2 samples, 0.02%)</title><rect x="1143.7" y="275.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1146.7" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.02%)</title><rect x="1143.7" y="259.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1146.7" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.02%)</title><rect x="1143.7" y="243.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1146.7" y="254.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (2 samples, 0.02%)</title><rect x="1143.7" y="227.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1146.7" y="238.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (2 samples, 0.02%)</title><rect x="1143.7" y="211.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1146.7" y="222.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (2 samples, 0.02%)</title><rect x="1144.3" y="691.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1147.3" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.02%)</title><rect x="1144.3" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1147.3" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.02%)</title><rect x="1144.3" y="659.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1147.3" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (2 samples, 0.02%)</title><rect x="1144.3" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1147.3" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.02%)</title><rect x="1144.3" y="627.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1147.3" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.02%)</title><rect x="1144.3" y="611.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1147.3" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.02%)</title><rect x="1144.3" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1147.3" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.02%)</title><rect x="1144.3" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1147.3" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.02%)</title><rect x="1144.3" y="563.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1147.3" y="574.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (300 samples, 3.19%)</title><rect x="1144.6" y="915.0" width="37.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1147.6" y="926.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.02%)</title><rect x="1145.6" y="899.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1148.6" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (36 samples, 0.38%)</title><rect x="1146.0" y="899.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1149.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (32 samples, 0.34%)</title><rect x="1146.5" y="883.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1149.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.23%)</title><rect x="1147.2" y="867.0" width="2.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1150.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="1147.2" y="851.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1150.2" y="862.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.03%)</title><rect x="1147.2" y="835.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1150.2" y="846.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.02%)</title><rect x="1147.4" y="819.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1150.4" y="830.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="1147.4" y="803.0" width="0.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1150.4" y="814.0"></text>
</g>
<g>
<title>epoll_wait (19 samples, 0.20%)</title><rect x="1147.6" y="851.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1150.6" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.14%)</title><rect x="1148.4" y="835.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1151.4" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.14%)</title><rect x="1148.4" y="819.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1151.4" y="830.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (12 samples, 0.13%)</title><rect x="1148.5" y="803.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1151.5" y="814.0"></text>
</g>
<g>
<title>do_epoll_wait (10 samples, 0.11%)</title><rect x="1148.5" y="787.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1151.5" y="798.0"></text>
</g>
<g>
<title>ep_poll (9 samples, 0.10%)</title><rect x="1148.6" y="771.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1151.6" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (5 samples, 0.05%)</title><rect x="1149.1" y="755.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1152.1" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.04%)</title><rect x="1149.2" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1152.2" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (4 samples, 0.04%)</title><rect x="1149.2" y="723.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1152.2" y="734.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.04%)</title><rect x="1149.2" y="707.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1152.2" y="718.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.02%)</title><rect x="1149.5" y="691.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1152.5" y="702.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.02%)</title><rect x="1149.7" y="787.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1152.7" y="798.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.02%)</title><rect x="1150.0" y="867.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1153.0" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (250 samples, 2.66%)</title><rect x="1150.5" y="899.0" width="31.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1153.5" y="910.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (244 samples, 2.59%)</title><rect x="1151.2" y="883.0" width="30.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1154.2" y="894.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (152 samples, 1.62%)</title><rect x="1151.4" y="867.0" width="19.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1154.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (108 samples, 1.15%)</title><rect x="1151.6" y="851.0" width="13.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1154.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (107 samples, 1.14%)</title><rect x="1151.7" y="835.0" width="13.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1154.7" y="846.0"></text>
</g>
<g>
<title>RequestHandler1_handleEntityGet.handleRequest (99 samples, 1.05%)</title><rect x="1151.7" y="819.0" width="12.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1154.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (7 samples, 0.07%)</title><rect x="1151.9" y="803.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1154.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.07%)</title><rect x="1151.9" y="787.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1154.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="1152.2" y="771.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1155.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.02%)</title><rect x="1152.2" y="755.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1155.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityGet (91 samples, 0.97%)</title><rect x="1152.7" y="803.0" width="11.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1155.7" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/76338237.linkToTargetMethod (2 samples, 0.02%)</title><rect x="1152.7" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1155.7" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="1152.7" y="771.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1155.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$151/1948971226.get$Lambda (2 samples, 0.02%)</title><rect x="1152.7" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1155.7" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="1152.7" y="739.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.7" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.02%)</title><rect x="1152.7" y="723.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1155.7" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.02%)</title><rect x="1152.7" y="707.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1155.7" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="1152.7" y="691.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1155.7" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="1152.7" y="675.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1155.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.executeOrSendError (89 samples, 0.95%)</title><rect x="1153.0" y="787.0" width="11.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1156.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (89 samples, 0.95%)</title><rect x="1153.0" y="771.0" width="11.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1156.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (87 samples, 0.92%)</title><rect x="1153.3" y="755.0" width="10.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1156.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (5 samples, 0.05%)</title><rect x="1153.3" y="739.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1156.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.05%)</title><rect x="1153.3" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1156.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.05%)</title><rect x="1153.3" y="707.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1156.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.05%)</title><rect x="1153.3" y="691.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1156.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (5 samples, 0.05%)</title><rect x="1153.3" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1156.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (81 samples, 0.86%)</title><rect x="1154.0" y="739.0" width="10.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (81 samples, 0.86%)</title><rect x="1154.0" y="723.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1157.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (81 samples, 0.86%)</title><rect x="1154.0" y="707.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1157.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (81 samples, 0.86%)</title><rect x="1154.0" y="691.0" width="10.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (81 samples, 0.86%)</title><rect x="1154.0" y="675.0" width="10.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.0" y="686.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.11%)</title><rect x="1154.3" y="659.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1157.3" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.05%)</title><rect x="1154.5" y="643.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1157.5" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (67 samples, 0.71%)</title><rect x="1155.5" y="659.0" width="8.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1158.5" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (65 samples, 0.69%)</title><rect x="1155.8" y="643.0" width="8.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1158.8" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (65 samples, 0.69%)</title><rect x="1155.8" y="627.0" width="8.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1158.8" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (65 samples, 0.69%)</title><rect x="1155.8" y="611.0" width="8.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1158.8" y="622.0"></text>
</g>
<g>
<title>do_futex (65 samples, 0.69%)</title><rect x="1155.8" y="595.0" width="8.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1158.8" y="606.0"></text>
</g>
<g>
<title>futex_wake (65 samples, 0.69%)</title><rect x="1155.8" y="579.0" width="8.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1158.8" y="590.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.03%)</title><rect x="1156.6" y="563.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1159.6" y="574.0"></text>
</g>
<g>
<title>wake_up_q (55 samples, 0.58%)</title><rect x="1157.0" y="563.0" width="6.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1160.0" y="574.0"></text>
</g>
<g>
<title>try_to_wake_up (55 samples, 0.58%)</title><rect x="1157.0" y="547.0" width="6.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1160.0" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (55 samples, 0.58%)</title><rect x="1157.0" y="531.0" width="6.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1160.0" y="542.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.02%)</title><rect x="1163.9" y="659.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1166.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (8 samples, 0.09%)</title><rect x="1164.2" y="819.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1167.2" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (8 samples, 0.09%)</title><rect x="1164.2" y="803.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1167.2" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.03%)</title><rect x="1164.2" y="787.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1167.2" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.05%)</title><rect x="1164.5" y="787.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1167.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.05%)</title><rect x="1164.5" y="771.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1167.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (5 samples, 0.05%)</title><rect x="1164.5" y="755.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1167.5" y="766.0"></text>
</g>
<g>
<title>RequestHandler1_handleEntityGet.handleRequest (2 samples, 0.02%)</title><rect x="1164.5" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1167.5" y="750.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="1164.8" y="739.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1167.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (22 samples, 0.23%)</title><rect x="1165.2" y="851.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1168.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.06%)</title><rect x="1165.5" y="835.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1168.5" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.14%)</title><rect x="1166.3" y="835.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1169.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.14%)</title><rect x="1166.3" y="819.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1169.3" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.02%)</title><rect x="1167.0" y="803.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1170.0" y="814.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.02%)</title><rect x="1167.0" y="787.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1170.0" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="1167.0" y="771.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1170.0" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="1167.0" y="755.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1170.0" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="1167.0" y="739.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1170.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1167.4" y="803.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1170.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1167.4" y="787.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1170.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.04%)</title><rect x="1167.4" y="771.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1170.4" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.04%)</title><rect x="1167.4" y="755.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1170.4" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.04%)</title><rect x="1167.4" y="739.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1170.4" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.04%)</title><rect x="1167.4" y="723.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1170.4" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.04%)</title><rect x="1167.4" y="707.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.4" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="1167.7" y="691.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1170.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (5 samples, 0.05%)</title><rect x="1167.9" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1170.9" y="862.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.04%)</title><rect x="1168.1" y="835.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1171.1" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.03%)</title><rect x="1168.2" y="819.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1171.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.09%)</title><rect x="1168.6" y="851.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1171.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.06%)</title><rect x="1168.6" y="835.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1171.6" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.06%)</title><rect x="1168.6" y="819.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1171.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.02%)</title><rect x="1169.3" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1172.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.02%)</title><rect x="1169.3" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1172.3" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.07%)</title><rect x="1169.6" y="851.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1172.6" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.07%)</title><rect x="1169.6" y="835.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1172.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1169.9" y="819.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1172.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1169.9" y="803.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1172.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.04%)</title><rect x="1169.9" y="787.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1172.9" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.03%)</title><rect x="1170.1" y="771.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.1" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.02%)</title><rect x="1170.2" y="755.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.2" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="1170.2" y="739.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.2" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="1170.2" y="723.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1173.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (90 samples, 0.96%)</title><rect x="1170.6" y="867.0" width="11.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1173.6" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (80 samples, 0.85%)</title><rect x="1171.8" y="851.0" width="10.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1174.8" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 0.11%)</title><rect x="1172.3" y="835.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1175.3" y="846.0"></text>
</g>
<g>
<title>__memmove_ssse3 (3 samples, 0.03%)</title><rect x="1172.8" y="819.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1175.8" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.03%)</title><rect x="1173.2" y="819.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1176.2" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.02%)</title><rect x="1173.3" y="803.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.3" y="814.0"></text>
</g>
<g>
<title>__GI___recv (61 samples, 0.65%)</title><rect x="1173.6" y="835.0" width="7.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1176.6" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (59 samples, 0.63%)</title><rect x="1173.8" y="819.0" width="7.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1176.8" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (59 samples, 0.63%)</title><rect x="1173.8" y="803.0" width="7.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1176.8" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (57 samples, 0.61%)</title><rect x="1174.1" y="787.0" width="7.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1177.1" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (55 samples, 0.58%)</title><rect x="1174.1" y="771.0" width="6.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1177.1" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (44 samples, 0.47%)</title><rect x="1174.7" y="755.0" width="5.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1177.7" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (32 samples, 0.34%)</title><rect x="1174.7" y="739.0" width="4.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1177.7" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (31 samples, 0.33%)</title><rect x="1174.8" y="723.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1177.8" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.04%)</title><rect x="1175.8" y="707.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1178.8" y="718.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.04%)</title><rect x="1175.8" y="691.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1178.8" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.03%)</title><rect x="1175.8" y="675.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1178.8" y="686.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.03%)</title><rect x="1175.8" y="659.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1178.8" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (12 samples, 0.13%)</title><rect x="1176.6" y="707.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1179.6" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (12 samples, 0.13%)</title><rect x="1176.6" y="691.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1179.6" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (8 samples, 0.09%)</title><rect x="1177.1" y="675.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1180.1" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.02%)</title><rect x="1177.3" y="659.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1180.3" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.04%)</title><rect x="1177.6" y="659.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1180.6" y="670.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.04%)</title><rect x="1177.6" y="643.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1180.6" y="654.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.04%)</title><rect x="1178.1" y="707.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1181.1" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (12 samples, 0.13%)</title><rect x="1178.7" y="739.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1181.7" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (11 samples, 0.12%)</title><rect x="1178.8" y="723.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1181.8" y="734.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (10 samples, 0.11%)</title><rect x="1179.0" y="707.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1182.0" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (10 samples, 0.11%)</title><rect x="1179.0" y="691.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1182.0" y="702.0"></text>
</g>
<g>
<title>aa_label_next_confined (2 samples, 0.02%)</title><rect x="1179.2" y="675.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1182.2" y="686.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (6 samples, 0.06%)</title><rect x="1179.5" y="675.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1182.5" y="686.0"></text>
</g>
<g>
<title>aa_profile_af_perm (6 samples, 0.06%)</title><rect x="1179.5" y="659.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1182.5" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.06%)</title><rect x="1180.2" y="755.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1183.2" y="766.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.03%)</title><rect x="1180.2" y="739.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1183.2" y="750.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="1180.3" y="723.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1183.3" y="734.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="1180.6" y="739.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1183.6" y="750.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.02%)</title><rect x="1181.2" y="835.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1184.2" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.02%)</title><rect x="1181.6" y="835.0" width="0.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1184.6" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.03%)</title><rect x="1181.8" y="899.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.8" y="910.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.02%)</title><rect x="1182.0" y="883.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1185.0" y="894.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="1182.0" y="867.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1185.0" y="878.0"></text>
</g>
<g>
<title>start_thread (61 samples, 0.65%)</title><rect x="1182.2" y="915.0" width="7.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1185.2" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (61 samples, 0.65%)</title><rect x="1182.2" y="899.0" width="7.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1185.2" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (61 samples, 0.65%)</title><rect x="1182.2" y="883.0" width="7.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.2" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (15 samples, 0.16%)</title><rect x="1182.2" y="867.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.2" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (11 samples, 0.12%)</title><rect x="1182.2" y="851.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.2" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.03%)</title><rect x="1182.2" y="835.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.2" y="846.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (5 samples, 0.05%)</title><rect x="1182.7" y="835.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.7" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (5 samples, 0.05%)</title><rect x="1182.7" y="819.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.7" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (5 samples, 0.05%)</title><rect x="1182.7" y="803.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.7" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (5 samples, 0.05%)</title><rect x="1182.7" y="787.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.7" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.04%)</title><rect x="1182.7" y="771.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.7" y="782.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (4 samples, 0.04%)</title><rect x="1182.7" y="755.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.7" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (4 samples, 0.04%)</title><rect x="1182.7" y="739.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.7" y="750.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (2 samples, 0.02%)</title><rect x="1182.9" y="723.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.9" y="734.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.02%)</title><rect x="1183.4" y="835.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.4" y="846.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.02%)</title><rect x="1183.4" y="819.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.4" y="830.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (2 samples, 0.02%)</title><rect x="1183.4" y="803.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.4" y="814.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (2 samples, 0.02%)</title><rect x="1183.4" y="787.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.4" y="798.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (2 samples, 0.02%)</title><rect x="1183.4" y="771.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.4" y="782.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (2 samples, 0.02%)</title><rect x="1183.4" y="755.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.4" y="766.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (3 samples, 0.03%)</title><rect x="1183.7" y="851.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.7" y="862.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (3 samples, 0.03%)</title><rect x="1183.7" y="835.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.7" y="846.0"></text>
</g>
<g>
<title>JavaThread::run() (44 samples, 0.47%)</title><rect x="1184.1" y="867.0" width="5.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.1" y="878.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (44 samples, 0.47%)</title><rect x="1184.1" y="851.0" width="5.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.1" y="862.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (44 samples, 0.47%)</title><rect x="1184.1" y="835.0" width="5.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.1" y="846.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (42 samples, 0.45%)</title><rect x="1184.1" y="819.0" width="5.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.1" y="830.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (42 samples, 0.45%)</title><rect x="1184.1" y="803.0" width="5.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.1" y="814.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (24 samples, 0.26%)</title><rect x="1184.1" y="787.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.1" y="798.0"></text>
</g>
<g>
<title>Matcher::match() (3 samples, 0.03%)</title><rect x="1184.1" y="771.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.1" y="782.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (2 samples, 0.02%)</title><rect x="1184.2" y="755.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.2" y="766.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (4 samples, 0.04%)</title><rect x="1184.5" y="771.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.5" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (4 samples, 0.04%)</title><rect x="1184.5" y="755.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.5" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (17 samples, 0.18%)</title><rect x="1185.0" y="771.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.0" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.02%)</title><rect x="1185.4" y="755.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.4" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (5 samples, 0.05%)</title><rect x="1185.6" y="755.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.6" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (3 samples, 0.03%)</title><rect x="1185.9" y="739.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.9" y="750.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (2 samples, 0.02%)</title><rect x="1186.0" y="723.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.0" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.02%)</title><rect x="1186.2" y="755.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.2" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.02%)</title><rect x="1186.6" y="755.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.6" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (2 samples, 0.02%)</title><rect x="1186.6" y="739.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.6" y="750.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.02%)</title><rect x="1186.9" y="755.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.9" y="766.0"></text>
</g>
<g>
<title>Compile::Optimize() (13 samples, 0.14%)</title><rect x="1187.1" y="787.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.1" y="798.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (3 samples, 0.03%)</title><rect x="1187.1" y="771.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.1" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.03%)</title><rect x="1187.1" y="755.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.1" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.02%)</title><rect x="1187.1" y="739.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.1" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (2 samples, 0.02%)</title><rect x="1187.1" y="723.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.1" y="734.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (2 samples, 0.02%)</title><rect x="1187.6" y="771.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.6" y="782.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (2 samples, 0.02%)</title><rect x="1187.6" y="755.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.6" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.03%)</title><rect x="1187.9" y="771.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.9" y="782.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.03%)</title><rect x="1188.2" y="771.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.2" y="782.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.03%)</title><rect x="1188.2" y="755.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.2" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.05%)</title><rect x="1188.7" y="787.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.7" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.05%)</title><rect x="1188.7" y="771.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.7" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.05%)</title><rect x="1188.7" y="755.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.7" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.05%)</title><rect x="1188.7" y="739.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.7" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.05%)</title><rect x="1188.7" y="723.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.7" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.05%)</title><rect x="1188.7" y="707.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.7" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.03%)</title><rect x="1188.9" y="691.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.9" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.03%)</title><rect x="1188.9" y="675.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.9" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.03%)</title><rect x="1188.9" y="659.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.9" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.03%)</title><rect x="1188.9" y="643.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.9" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.03%)</title><rect x="1188.9" y="627.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.9" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.03%)</title><rect x="1188.9" y="611.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.9" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1188.9" y="595.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.9" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1188.9" y="579.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.9" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1188.9" y="563.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.9" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1188.9" y="547.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.9" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1188.9" y="531.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.9" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1188.9" y="515.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.9" y="526.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.02%)</title><rect x="1189.4" y="819.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.4" y="830.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (2 samples, 0.02%)</title><rect x="1189.4" y="803.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.4" y="814.0"></text>
</g>
<g>
<title>Compilation::compile_method() (2 samples, 0.02%)</title><rect x="1189.4" y="787.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.4" y="798.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (2 samples, 0.02%)</title><rect x="1189.4" y="771.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.4" y="782.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (2 samples, 0.02%)</title><rect x="1189.4" y="755.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.4" y="766.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.02%)</title><rect x="1189.6" y="867.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.6" y="878.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.02%)</title><rect x="1189.6" y="851.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.6" y="862.0"></text>
</g>
</g>
</svg>
