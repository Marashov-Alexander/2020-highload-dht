<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (2,083 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.10%)</title><rect x="10.0" y="915.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.10%)</title><rect x="10.0" y="899.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (2 samples, 0.10%)</title><rect x="10.0" y="883.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.10%)</title><rect x="10.0" y="867.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.10%)</title><rect x="10.0" y="851.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.10%)</title><rect x="11.1" y="915.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="14.1" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="11.1" y="899.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="14.1" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.05%)</title><rect x="11.1" y="883.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.1" y="894.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.05%)</title><rect x="11.1" y="867.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="14.1" y="878.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="11.1" y="851.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="14.1" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.05%)</title><rect x="11.7" y="899.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="14.7" y="910.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.14%)</title><rect x="12.3" y="915.0" width="1.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="15.3" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.05%)</title><rect x="12.3" y="899.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="15.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="12.8" y="899.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="15.8" y="910.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="12.8" y="883.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="15.8" y="894.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="12.8" y="867.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="15.8" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="12.8" y="851.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="15.8" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.05%)</title><rect x="13.4" y="899.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="16.4" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="13.4" y="883.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="16.4" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="13.4" y="867.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="16.4" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="13.4" y="851.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="16.4" y="862.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="13.4" y="835.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="16.4" y="846.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="13.4" y="819.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="16.4" y="830.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.05%)</title><rect x="13.4" y="803.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="16.4" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.05%)</title><rect x="13.4" y="787.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="16.4" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="13.4" y="771.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="16.4" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,486 samples, 71.34%)</title><rect x="14.0" y="915.0" width="841.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.0" y="926.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,486 samples, 71.34%)</title><rect x="14.0" y="899.0" width="841.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.0" y="910.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,486 samples, 71.34%)</title><rect x="14.0" y="883.0" width="841.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.0" y="894.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (14 samples, 0.67%)</title><rect x="16.8" y="867.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.67%)</title><rect x="16.8" y="851.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.67%)</title><rect x="16.8" y="835.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.8" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$77/1379583237.run (1 samples, 0.05%)</title><rect x="19.1" y="819.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$86/914604914.run (3 samples, 0.14%)</title><rect x="19.6" y="819.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.6" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$75/54338970.run (6 samples, 0.29%)</title><rect x="21.3" y="819.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (281 samples, 13.49%)</title><rect x="24.7" y="867.0" width="159.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.7" y="878.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (263 samples, 12.63%)</title><rect x="34.9" y="851.0" width="149.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="37.9" y="862.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (155 samples, 7.44%)</title><rect x="36.6" y="835.0" width="87.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.6" y="846.0">java/util/..</text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="40.6" y="819.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.6" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="40.6" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.6" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (7 samples, 0.34%)</title><rect x="41.2" y="819.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="44.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="44.6" y="803.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (7 samples, 0.34%)</title><rect x="45.1" y="819.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (18 samples, 0.86%)</title><rect x="49.1" y="819.0" width="10.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.05%)</title><rect x="51.9" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (12 samples, 0.58%)</title><rect x="52.5" y="803.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (12 samples, 0.58%)</title><rect x="52.5" y="787.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="55.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (29 samples, 1.39%)</title><rect x="59.3" y="819.0" width="16.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (29 samples, 1.39%)</title><rect x="59.3" y="803.0" width="16.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (27 samples, 1.30%)</title><rect x="59.3" y="787.0" width="15.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (27 samples, 1.30%)</title><rect x="59.3" y="771.0" width="15.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (27 samples, 1.30%)</title><rect x="59.3" y="755.0" width="15.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.3" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.10%)</title><rect x="59.3" y="739.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="62.3" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.48%)</title><rect x="60.4" y="739.0" width="5.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="63.4" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.10%)</title><rect x="60.4" y="723.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="63.4" y="734.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.10%)</title><rect x="61.6" y="723.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="64.6" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_lock (6 samples, 0.29%)</title><rect x="62.7" y="723.0" width="3.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="65.7" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 0.72%)</title><rect x="66.1" y="739.0" width="8.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="69.1" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.62%)</title><rect x="67.2" y="723.0" width="7.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="70.2" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.62%)</title><rect x="67.2" y="707.0" width="7.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="70.2" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.62%)</title><rect x="67.2" y="691.0" width="7.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="70.2" y="702.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.62%)</title><rect x="67.2" y="675.0" width="7.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="70.2" y="686.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.62%)</title><rect x="67.2" y="659.0" width="7.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="70.2" y="670.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.10%)</title><rect x="68.3" y="643.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="71.3" y="654.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.43%)</title><rect x="69.5" y="643.0" width="5.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="72.5" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.43%)</title><rect x="69.5" y="627.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="72.5" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.43%)</title><rect x="69.5" y="611.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="72.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.10%)</title><rect x="74.6" y="787.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="77.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.05%)</title><rect x="75.7" y="819.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="78.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (85 samples, 4.08%)</title><rect x="76.3" y="819.0" width="48.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.3" y="830.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (85 samples, 4.08%)</title><rect x="76.3" y="803.0" width="48.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="79.3" y="814.0">jdk/..</text>
</g>
<g>
<title>Unsafe_Park (38 samples, 1.82%)</title><rect x="80.8" y="787.0" width="21.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="83.8" y="798.0">U..</text>
</g>
<g>
<title>Parker::park(bool, long) (20 samples, 0.96%)</title><rect x="83.1" y="771.0" width="11.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="86.1" y="782.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (6 samples, 0.29%)</title><rect x="87.6" y="755.0" width="3.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="90.6" y="766.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.05%)</title><rect x="91.0" y="755.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="94.0" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.24%)</title><rect x="91.6" y="755.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="94.6" y="766.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="94.4" y="771.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="97.4" y="782.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.10%)</title><rect x="95.0" y="771.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="98.0" y="782.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.29%)</title><rect x="96.1" y="771.0" width="3.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="99.1" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.29%)</title><rect x="96.1" y="755.0" width="3.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="99.1" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="96.1" y="739.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="99.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.24%)</title><rect x="96.7" y="739.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="99.7" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.10%)</title><rect x="98.4" y="723.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="101.4" y="734.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.10%)</title><rect x="98.4" y="707.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="101.4" y="718.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.10%)</title><rect x="98.4" y="691.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="101.4" y="702.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.05%)</title><rect x="99.5" y="771.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="102.5" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.10%)</title><rect x="100.1" y="771.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="103.1" y="782.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.05%)</title><rect x="101.2" y="771.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="104.2" y="782.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.05%)</title><rect x="101.8" y="771.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="104.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.87%)</title><rect x="102.3" y="787.0" width="22.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="105.3" y="798.0">[..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.05%)</title><rect x="102.3" y="771.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="105.3" y="782.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (38 samples, 1.82%)</title><rect x="102.9" y="771.0" width="21.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="105.9" y="782.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 1.78%)</title><rect x="103.5" y="755.0" width="20.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="106.5" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 1.78%)</title><rect x="103.5" y="739.0" width="20.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="106.5" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (32 samples, 1.54%)</title><rect x="106.3" y="723.0" width="18.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="109.3" y="734.0"></text>
</g>
<g>
<title>do_futex (32 samples, 1.54%)</title><rect x="106.3" y="707.0" width="18.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="109.3" y="718.0"></text>
</g>
<g>
<title>futex_wait (31 samples, 1.49%)</title><rect x="106.3" y="691.0" width="17.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="109.3" y="702.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.19%)</title><rect x="108.6" y="675.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="111.6" y="686.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.05%)</title><rect x="109.1" y="659.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="112.1" y="670.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.10%)</title><rect x="109.7" y="659.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="112.7" y="670.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.10%)</title><rect x="109.7" y="643.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="112.7" y="654.0"></text>
</g>
<g>
<title>futex_wait_setup (14 samples, 0.67%)</title><rect x="110.8" y="675.0" width="8.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="113.8" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="115.4" y="659.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="118.4" y="670.0"></text>
</g>
<g>
<title>get_futex_value_locked (5 samples, 0.24%)</title><rect x="115.9" y="659.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="118.9" y="670.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="118.8" y="675.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="121.8" y="686.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.14%)</title><rect x="119.3" y="675.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="122.3" y="686.0"></text>
</g>
<g>
<title>plist_add (4 samples, 0.19%)</title><rect x="121.0" y="675.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="124.0" y="686.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="123.3" y="675.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="126.3" y="686.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.05%)</title><rect x="123.9" y="691.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="126.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.14%)</title><rect x="124.4" y="835.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.14%)</title><rect x="124.4" y="819.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="127.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.14%)</title><rect x="124.4" y="803.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.10%)</title><rect x="124.4" y="787.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.10%)</title><rect x="124.4" y="771.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.10%)</title><rect x="124.4" y="755.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.4" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.10%)</title><rect x="124.4" y="739.0" width="1.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="127.4" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.05%)</title><rect x="124.4" y="723.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="127.4" y="734.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.05%)</title><rect x="125.0" y="723.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="128.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (1 samples, 0.05%)</title><rect x="125.6" y="787.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="128.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (102 samples, 4.90%)</title><rect x="126.1" y="835.0" width="57.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.1" y="846.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (102 samples, 4.90%)</title><rect x="126.1" y="819.0" width="57.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="129.1" y="830.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (100 samples, 4.80%)</title><rect x="127.3" y="803.0" width="56.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="130.3" y="814.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (97 samples, 4.66%)</title><rect x="129.0" y="787.0" width="54.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.0" y="798.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (97 samples, 4.66%)</title><rect x="129.0" y="771.0" width="54.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="132.0" y="782.0">jdk/i..</text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.05%)</title><rect x="129.5" y="755.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="132.5" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.05%)</title><rect x="130.1" y="755.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="133.1" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (24 samples, 1.15%)</title><rect x="130.7" y="755.0" width="13.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="133.7" y="766.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.05%)</title><rect x="130.7" y="739.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="133.7" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="131.2" y="739.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="134.2" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.10%)</title><rect x="131.8" y="739.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="134.8" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (7 samples, 0.34%)</title><rect x="132.9" y="739.0" width="4.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="135.9" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.05%)</title><rect x="136.9" y="739.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="139.9" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.05%)</title><rect x="137.5" y="739.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="140.5" y="750.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (4 samples, 0.19%)</title><rect x="138.0" y="739.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="141.0" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_lock (6 samples, 0.29%)</title><rect x="140.3" y="739.0" width="3.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="143.3" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="143.7" y="739.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="146.7" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (67 samples, 3.22%)</title><rect x="144.3" y="755.0" width="37.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="147.3" y="766.0">__p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (57 samples, 2.74%)</title><rect x="149.9" y="739.0" width="32.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="152.9" y="750.0">en..</text>
</g>
<g>
<title>do_syscall_64 (57 samples, 2.74%)</title><rect x="149.9" y="723.0" width="32.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="152.9" y="734.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (51 samples, 2.45%)</title><rect x="153.3" y="707.0" width="28.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="156.3" y="718.0">__..</text>
</g>
<g>
<title>do_futex (51 samples, 2.45%)</title><rect x="153.3" y="691.0" width="28.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="156.3" y="702.0">do..</text>
</g>
<g>
<title>futex_wake (49 samples, 2.35%)</title><rect x="153.3" y="675.0" width="27.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="156.3" y="686.0">f..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="159.0" y="659.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="162.0" y="670.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.14%)</title><rect x="159.6" y="659.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="162.6" y="670.0"></text>
</g>
<g>
<title>wake_up_q (35 samples, 1.68%)</title><rect x="161.3" y="659.0" width="19.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="164.3" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (35 samples, 1.68%)</title><rect x="161.3" y="643.0" width="19.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="164.3" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (35 samples, 1.68%)</title><rect x="161.3" y="627.0" width="19.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="164.3" y="638.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="181.1" y="675.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="184.1" y="686.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.05%)</title><rect x="181.6" y="675.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="184.6" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.10%)</title><rect x="182.2" y="755.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="185.2" y="766.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.05%)</title><rect x="183.3" y="755.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="186.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$77/1379583237.run (46 samples, 2.21%)</title><rect x="183.9" y="867.0" width="26.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="186.9" y="878.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.lambda$put$2 (46 samples, 2.21%)</title><rect x="183.9" y="851.0" width="26.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="186.9" y="862.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager.put (45 samples, 2.16%)</title><rect x="183.9" y="835.0" width="25.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="186.9" y="846.0">r..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.05%)</title><rect x="183.9" y="819.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="186.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (44 samples, 2.11%)</title><rect x="184.5" y="819.0" width="24.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.5" y="830.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="185.0" y="803.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="188.0" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="185.0" y="787.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="188.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="185.0" y="771.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="188.0" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="185.0" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="188.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.10%)</title><rect x="185.6" y="803.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="188.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.10%)</title><rect x="185.6" y="787.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="188.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.10%)</title><rect x="185.6" y="771.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="188.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.05%)</title><rect x="185.6" y="755.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="188.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.05%)</title><rect x="185.6" y="739.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="188.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.05%)</title><rect x="185.6" y="723.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="188.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (1 samples, 0.05%)</title><rect x="186.2" y="755.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="189.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.upsert (40 samples, 1.92%)</title><rect x="186.7" y="803.0" width="22.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="189.7" y="814.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (40 samples, 1.92%)</title><rect x="186.7" y="787.0" width="22.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.7" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (40 samples, 1.92%)</title><rect x="186.7" y="771.0" width="22.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="189.7" y="782.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.24%)</title><rect x="188.4" y="755.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.19%)</title><rect x="189.0" y="739.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (9 samples, 0.43%)</title><rect x="191.3" y="755.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="194.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (2 samples, 0.10%)</title><rect x="196.4" y="755.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="199.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (6 samples, 0.29%)</title><rect x="197.5" y="755.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="200.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="198.1" y="739.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="201.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.05%)</title><rect x="198.6" y="739.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="201.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.05%)</title><rect x="198.6" y="723.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="201.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.05%)</title><rect x="198.6" y="707.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="201.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="198.6" y="691.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="201.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.14%)</title><rect x="199.2" y="739.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="202.2" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.10%)</title><rect x="199.8" y="723.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="202.8" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.10%)</title><rect x="199.8" y="707.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="202.8" y="718.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="200.3" y="691.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="203.3" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="200.3" y="675.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="203.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (15 samples, 0.72%)</title><rect x="200.9" y="755.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.62%)</title><rect x="202.0" y="739.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="205.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.62%)</title><rect x="202.0" y="723.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="205.0" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="203.2" y="707.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="206.2" y="718.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.48%)</title><rect x="203.7" y="707.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.7" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (8 samples, 0.38%)</title><rect x="203.7" y="691.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="206.7" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.05%)</title><rect x="207.7" y="675.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="210.7" y="686.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.10%)</title><rect x="208.3" y="691.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="211.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.accept (1 samples, 0.05%)</title><rect x="209.4" y="835.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="212.4" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$81/1316063782.accept (2 samples, 0.10%)</title><rect x="210.0" y="867.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="213.0" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$86/914604914.run (533 samples, 25.59%)</title><rect x="211.1" y="867.0" width="301.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.1" y="878.0">ru/mail/polis/service/alexander/marashov/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.lambda$iterateOverNodes$6 (533 samples, 25.59%)</title><rect x="211.1" y="851.0" width="301.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="214.1" y="862.0">ru/mail/polis/service/alexander/marashov/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$81/1316063782.accept (533 samples, 25.59%)</title><rect x="211.1" y="835.0" width="301.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="214.1" y="846.0">ru/mail/polis/service/alexander/marashov/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.lambda$put$3 (533 samples, 25.59%)</title><rect x="211.1" y="819.0" width="301.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.1" y="830.0">ru/mail/polis/service/alexander/marashov/..</text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.34%)</title><rect x="211.7" y="803.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="214.7" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.14%)</title><rect x="211.7" y="787.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="214.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="212.8" y="771.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="215.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (1 samples, 0.05%)</title><rect x="212.8" y="755.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="215.8" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.19%)</title><rect x="213.4" y="787.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="216.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.19%)</title><rect x="213.4" y="771.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="216.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.19%)</title><rect x="213.4" y="755.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="216.4" y="766.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (2 samples, 0.10%)</title><rect x="214.5" y="739.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="217.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (482 samples, 23.14%)</title><rect x="215.6" y="803.0" width="273.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="218.6" y="814.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.10%)</title><rect x="216.2" y="787.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="219.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (479 samples, 23.00%)</title><rect x="217.3" y="787.0" width="271.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="220.3" y="798.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.10%)</title><rect x="219.0" y="771.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="222.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.10%)</title><rect x="219.0" y="755.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="222.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.05%)</title><rect x="219.6" y="739.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (118 samples, 5.66%)</title><rect x="220.2" y="771.0" width="66.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.2" y="782.0">one/nio..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.14%)</title><rect x="226.4" y="755.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="229.4" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.14%)</title><rect x="226.4" y="739.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="229.4" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.14%)</title><rect x="226.4" y="723.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="229.4" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.10%)</title><rect x="226.4" y="707.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="229.4" y="718.0"></text>
</g>
<g>
<title>JfrAllocationTracer::~JfrAllocationTracer() (1 samples, 0.05%)</title><rect x="226.4" y="691.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="229.4" y="702.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.05%)</title><rect x="227.0" y="691.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="230.0" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="227.5" y="707.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="230.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (104 samples, 4.99%)</title><rect x="228.1" y="755.0" width="58.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="231.1" y="766.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 0.48%)</title><rect x="231.5" y="739.0" width="5.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="234.5" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="233.2" y="723.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="236.2" y="734.0"></text>
</g>
<g>
<title>__memmove_ssse3 (1 samples, 0.05%)</title><rect x="233.8" y="723.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="236.8" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.24%)</title><rect x="234.3" y="723.0" width="2.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="237.3" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.10%)</title><rect x="235.5" y="707.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="238.5" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.05%)</title><rect x="236.6" y="707.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="239.6" y="718.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.05%)</title><rect x="236.6" y="691.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="239.6" y="702.0"></text>
</g>
<g>
<title>__GI___recv (87 samples, 4.18%)</title><rect x="237.2" y="739.0" width="49.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="240.2" y="750.0">__GI_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (79 samples, 3.79%)</title><rect x="241.7" y="723.0" width="44.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="244.7" y="734.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (79 samples, 3.79%)</title><rect x="241.7" y="707.0" width="44.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="244.7" y="718.0">do_s..</text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.05%)</title><rect x="242.8" y="691.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="245.8" y="702.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (76 samples, 3.65%)</title><rect x="243.4" y="691.0" width="43.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="246.4" y="702.0">__x6..</text>
</g>
<g>
<title>__sys_recvfrom (75 samples, 3.60%)</title><rect x="243.4" y="675.0" width="42.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="246.4" y="686.0">__sy..</text>
</g>
<g>
<title>fput (2 samples, 0.10%)</title><rect x="245.7" y="659.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="248.7" y="670.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.10%)</title><rect x="245.7" y="643.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="248.7" y="654.0"></text>
</g>
<g>
<title>sock_recvmsg (68 samples, 3.26%)</title><rect x="246.8" y="659.0" width="38.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="249.8" y="670.0">soc..</text>
</g>
<g>
<title>inet6_recvmsg (65 samples, 3.12%)</title><rect x="247.4" y="643.0" width="36.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="250.4" y="654.0">ine..</text>
</g>
<g>
<title>tcp_recvmsg (65 samples, 3.12%)</title><rect x="247.4" y="627.0" width="36.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="250.4" y="638.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.24%)</title><rect x="249.1" y="611.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="252.1" y="622.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.24%)</title><rect x="249.1" y="595.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="252.1" y="606.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.05%)</title><rect x="249.1" y="579.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="252.1" y="590.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.19%)</title><rect x="249.6" y="579.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="252.6" y="590.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.14%)</title><rect x="249.6" y="563.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="252.6" y="574.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.05%)</title><rect x="251.3" y="563.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="254.3" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="251.9" y="611.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="254.9" y="622.0"></text>
</g>
<g>
<title>add_wait_queue (1 samples, 0.05%)</title><rect x="252.5" y="611.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="255.5" y="622.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="253.0" y="611.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="256.0" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.05%)</title><rect x="253.0" y="595.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="256.0" y="606.0"></text>
</g>
<g>
<title>sk_wait_data (5 samples, 0.24%)</title><rect x="253.6" y="611.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="256.6" y="622.0"></text>
</g>
<g>
<title>add_wait_queue (1 samples, 0.05%)</title><rect x="253.6" y="595.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="256.6" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="253.6" y="579.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="256.6" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.05%)</title><rect x="254.2" y="595.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="257.2" y="606.0"></text>
</g>
<g>
<title>wait_woken (3 samples, 0.14%)</title><rect x="254.7" y="595.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="257.7" y="606.0"></text>
</g>
<g>
<title>schedule_timeout (3 samples, 0.14%)</title><rect x="254.7" y="579.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="257.7" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="254.7" y="563.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="257.7" y="574.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.05%)</title><rect x="255.3" y="563.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="258.3" y="574.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="255.9" y="563.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="258.9" y="574.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="255.9" y="547.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="258.9" y="558.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (49 samples, 2.35%)</title><rect x="256.4" y="611.0" width="27.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="259.4" y="622.0">t..</text>
</g>
<g>
<title>tcp_send_ack (46 samples, 2.21%)</title><rect x="258.1" y="595.0" width="26.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="261.1" y="606.0">t..</text>
</g>
<g>
<title>__tcp_send_ack.part.46 (46 samples, 2.21%)</title><rect x="258.1" y="579.0" width="26.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="261.1" y="590.0">_..</text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.24%)</title><rect x="258.1" y="563.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="261.1" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (3 samples, 0.14%)</title><rect x="258.1" y="547.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="261.1" y="558.0"></text>
</g>
<g>
<title>memset (3 samples, 0.14%)</title><rect x="258.1" y="531.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="261.1" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.05%)</title><rect x="259.8" y="547.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="262.8" y="558.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.05%)</title><rect x="260.4" y="547.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="263.4" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.05%)</title><rect x="261.0" y="563.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="264.0" y="574.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (40 samples, 1.92%)</title><rect x="261.5" y="563.0" width="22.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="264.5" y="574.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (39 samples, 1.87%)</title><rect x="262.1" y="547.0" width="22.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="265.1" y="558.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (39 samples, 1.87%)</title><rect x="262.1" y="531.0" width="22.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="265.1" y="542.0">_..</text>
</g>
<g>
<title>ip_local_out (39 samples, 1.87%)</title><rect x="262.1" y="515.0" width="22.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="265.1" y="526.0">i..</text>
</g>
<g>
<title>__ip_local_out (17 samples, 0.82%)</title><rect x="262.1" y="499.0" width="9.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="265.1" y="510.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.05%)</title><rect x="262.7" y="483.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="265.7" y="494.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.10%)</title><rect x="263.2" y="483.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="266.2" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.58%)</title><rect x="264.4" y="483.0" width="6.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="267.4" y="494.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.10%)</title><rect x="264.9" y="467.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="267.9" y="478.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.10%)</title><rect x="264.9" y="451.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="267.9" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (8 samples, 0.38%)</title><rect x="266.1" y="467.0" width="4.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="269.1" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (8 samples, 0.38%)</title><rect x="266.1" y="451.0" width="4.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="269.1" y="462.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.10%)</title><rect x="267.2" y="435.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="270.2" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (4 samples, 0.19%)</title><rect x="268.3" y="435.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="271.3" y="446.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.05%)</title><rect x="270.0" y="419.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="273.0" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="270.6" y="467.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="273.6" y="478.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="271.2" y="483.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="274.2" y="494.0"></text>
</g>
<g>
<title>ip_output (21 samples, 1.01%)</title><rect x="271.7" y="499.0" width="11.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="274.7" y="510.0"></text>
</g>
<g>
<title>ip_finish_output (19 samples, 0.91%)</title><rect x="271.7" y="483.0" width="10.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="274.7" y="494.0"></text>
</g>
<g>
<title>__ip_finish_output (19 samples, 0.91%)</title><rect x="271.7" y="467.0" width="10.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="274.7" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (19 samples, 0.91%)</title><rect x="271.7" y="451.0" width="10.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="274.7" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (18 samples, 0.86%)</title><rect x="272.3" y="435.0" width="10.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="275.3" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.20 (18 samples, 0.86%)</title><rect x="272.3" y="419.0" width="10.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="275.3" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (18 samples, 0.86%)</title><rect x="272.3" y="403.0" width="10.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="275.3" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (18 samples, 0.86%)</title><rect x="272.3" y="387.0" width="10.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="275.3" y="398.0"></text>
</g>
<g>
<title>net_rx_action (18 samples, 0.86%)</title><rect x="272.3" y="371.0" width="10.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="275.3" y="382.0"></text>
</g>
<g>
<title>process_backlog (17 samples, 0.82%)</title><rect x="272.9" y="355.0" width="9.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="275.9" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb (17 samples, 0.82%)</title><rect x="272.9" y="339.0" width="9.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="275.9" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (17 samples, 0.82%)</title><rect x="272.9" y="323.0" width="9.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="275.9" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.05%)</title><rect x="272.9" y="307.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="275.9" y="318.0"></text>
</g>
<g>
<title>ip_rcv (16 samples, 0.77%)</title><rect x="273.4" y="307.0" width="9.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="276.4" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (13 samples, 0.62%)</title><rect x="275.1" y="291.0" width="7.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="278.1" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (13 samples, 0.62%)</title><rect x="275.1" y="275.0" width="7.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="278.1" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (12 samples, 0.58%)</title><rect x="275.1" y="259.0" width="6.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="278.1" y="270.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (12 samples, 0.58%)</title><rect x="275.1" y="243.0" width="6.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="278.1" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (12 samples, 0.58%)</title><rect x="275.1" y="227.0" width="6.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="278.1" y="238.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.10%)</title><rect x="275.7" y="211.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="278.7" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.05%)</title><rect x="276.8" y="211.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="279.8" y="222.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.05%)</title><rect x="276.8" y="195.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="279.8" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (8 samples, 0.38%)</title><rect x="277.4" y="211.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="280.4" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (8 samples, 0.38%)</title><rect x="277.4" y="195.0" width="4.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="280.4" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.10%)</title><rect x="277.4" y="179.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="280.4" y="190.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.10%)</title><rect x="277.4" y="163.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="280.4" y="174.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.10%)</title><rect x="277.4" y="147.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="280.4" y="158.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.10%)</title><rect x="277.4" y="131.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="280.4" y="142.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.10%)</title><rect x="277.4" y="115.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="280.4" y="126.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.29%)</title><rect x="278.5" y="179.0" width="3.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="281.5" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.14%)</title><rect x="279.6" y="163.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="282.6" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.10%)</title><rect x="279.6" y="147.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="282.6" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.05%)</title><rect x="279.6" y="131.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="282.6" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.05%)</title><rect x="279.6" y="115.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="282.6" y="126.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.05%)</title><rect x="279.6" y="99.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="282.6" y="110.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.05%)</title><rect x="280.2" y="131.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="283.2" y="142.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.05%)</title><rect x="280.2" y="115.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="283.2" y="126.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.05%)</title><rect x="280.2" y="99.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="283.2" y="110.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.05%)</title><rect x="280.2" y="83.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="283.2" y="94.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.05%)</title><rect x="280.8" y="147.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="283.8" y="158.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.05%)</title><rect x="281.3" y="163.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="284.3" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="281.9" y="259.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="284.9" y="270.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="282.5" y="483.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="285.5" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="283.0" y="483.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="286.0" y="494.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat] (1 samples, 0.05%)</title><rect x="283.0" y="467.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="286.0" y="478.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="283.0" y="451.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="286.0" y="462.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="283.0" y="435.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="286.0" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="283.6" y="499.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="286.6" y="510.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.05%)</title><rect x="284.2" y="643.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="287.2" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.05%)</title><rect x="284.2" y="627.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="287.2" y="638.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.05%)</title><rect x="284.2" y="611.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="287.2" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.05%)</title><rect x="284.2" y="595.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="287.2" y="606.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.05%)</title><rect x="284.2" y="579.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="287.2" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.05%)</title><rect x="284.7" y="643.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="287.7" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.05%)</title><rect x="285.3" y="659.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="288.3" y="670.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="285.3" y="643.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="288.3" y="654.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="285.3" y="627.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="288.3" y="638.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="285.3" y="611.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="288.3" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.05%)</title><rect x="285.9" y="675.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="288.9" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.05%)</title><rect x="286.4" y="739.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="289.4" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (25 samples, 1.20%)</title><rect x="287.0" y="771.0" width="14.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.10%)</title><rect x="287.6" y="755.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="290.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="288.1" y="739.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.19%)</title><rect x="288.7" y="755.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="291.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.05%)</title><rect x="289.3" y="739.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="292.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.10%)</title><rect x="289.8" y="739.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="292.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (8 samples, 0.38%)</title><rect x="291.0" y="755.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="294.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.24%)</title><rect x="292.7" y="739.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="295.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.24%)</title><rect x="292.7" y="723.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="295.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.10%)</title><rect x="295.5" y="755.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="298.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (8 samples, 0.38%)</title><rect x="296.6" y="755.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="299.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.34%)</title><rect x="297.2" y="739.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="300.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.34%)</title><rect x="297.2" y="723.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="300.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (17 samples, 0.82%)</title><rect x="301.2" y="771.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="304.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.34%)</title><rect x="306.8" y="755.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="309.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.34%)</title><rect x="306.8" y="739.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="309.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.34%)</title><rect x="306.8" y="723.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="309.8" y="734.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.05%)</title><rect x="310.2" y="707.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="313.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.10%)</title><rect x="310.8" y="771.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="313.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.10%)</title><rect x="310.8" y="755.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="313.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.10%)</title><rect x="310.8" y="739.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (58 samples, 2.78%)</title><rect x="311.9" y="771.0" width="32.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="314.9" y="782.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (2 samples, 0.10%)</title><rect x="312.5" y="755.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="315.5" y="766.0"></text>
</g>
<g>
<title>__GI___setsockopt (55 samples, 2.64%)</title><rect x="313.6" y="755.0" width="31.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="316.6" y="766.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (54 samples, 2.59%)</title><rect x="314.2" y="739.0" width="30.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="317.2" y="750.0">en..</text>
</g>
<g>
<title>do_syscall_64 (54 samples, 2.59%)</title><rect x="314.2" y="723.0" width="30.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="317.2" y="734.0">do..</text>
</g>
<g>
<title>__sys_setsockopt (1 samples, 0.05%)</title><rect x="316.5" y="707.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="319.5" y="718.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (49 samples, 2.35%)</title><rect x="317.0" y="707.0" width="27.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="320.0" y="718.0">_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (2 samples, 0.10%)</title><rect x="317.0" y="691.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="320.0" y="702.0"></text>
</g>
<g>
<title>__sys_setsockopt (43 samples, 2.06%)</title><rect x="318.2" y="691.0" width="24.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="321.2" y="702.0">_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (1 samples, 0.05%)</title><rect x="321.0" y="675.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="324.0" y="686.0"></text>
</g>
<g>
<title>fput (1 samples, 0.05%)</title><rect x="321.6" y="675.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="324.6" y="686.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.05%)</title><rect x="321.6" y="659.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="324.6" y="670.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="322.1" y="675.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="325.1" y="686.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="322.7" y="675.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="325.7" y="686.0"></text>
</g>
<g>
<title>security_socket_setsockopt (11 samples, 0.53%)</title><rect x="323.3" y="675.0" width="6.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="326.3" y="686.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (1 samples, 0.05%)</title><rect x="323.3" y="659.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="326.3" y="670.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (10 samples, 0.48%)</title><rect x="323.8" y="659.0" width="5.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="326.8" y="670.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (10 samples, 0.48%)</title><rect x="323.8" y="643.0" width="5.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="326.8" y="654.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.34%)</title><rect x="325.5" y="627.0" width="4.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="328.5" y="638.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="326.1" y="611.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="329.1" y="622.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="326.1" y="595.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="329.1" y="606.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (5 samples, 0.24%)</title><rect x="326.7" y="611.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="329.7" y="622.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (1 samples, 0.05%)</title><rect x="327.8" y="595.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="330.8" y="606.0"></text>
</g>
<g>
<title>aa_check_perms (1 samples, 0.05%)</title><rect x="328.4" y="595.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="331.4" y="606.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.05%)</title><rect x="328.9" y="595.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="331.9" y="606.0"></text>
</g>
<g>
<title>sock_set_timeout (1 samples, 0.05%)</title><rect x="329.5" y="675.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="332.5" y="686.0"></text>
</g>
<g>
<title>sock_setsockopt (17 samples, 0.82%)</title><rect x="330.1" y="675.0" width="9.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="333.1" y="686.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="331.8" y="659.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="334.8" y="670.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.05%)</title><rect x="332.3" y="659.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="335.3" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.10%)</title><rect x="332.9" y="659.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="335.9" y="670.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.10%)</title><rect x="334.0" y="659.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="337.0" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.10%)</title><rect x="334.0" y="643.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="337.0" y="654.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="335.2" y="659.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="338.2" y="670.0"></text>
</g>
<g>
<title>sock_set_timeout (5 samples, 0.24%)</title><rect x="335.7" y="659.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="338.7" y="670.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.19%)</title><rect x="336.3" y="643.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="339.3" y="654.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.10%)</title><rect x="338.6" y="659.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="341.6" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.24%)</title><rect x="339.7" y="675.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="342.7" y="686.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.19%)</title><rect x="339.7" y="659.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="342.7" y="670.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="339.7" y="643.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="342.7" y="654.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.14%)</title><rect x="340.3" y="643.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="343.3" y="654.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.10%)</title><rect x="340.8" y="627.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="343.8" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="342.0" y="659.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="345.0" y="670.0"></text>
</g>
<g>
<title>fput (1 samples, 0.05%)</title><rect x="342.5" y="691.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="345.5" y="702.0"></text>
</g>
<g>
<title>sock_setsockopt (2 samples, 0.10%)</title><rect x="343.1" y="691.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="346.1" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.05%)</title><rect x="344.2" y="691.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="347.2" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (243 samples, 11.67%)</title><rect x="344.8" y="771.0" width="137.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="347.8" y="782.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (13 samples, 0.62%)</title><rect x="345.4" y="755.0" width="7.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="348.4" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.10%)</title><rect x="345.9" y="739.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="348.9" y="750.0"></text>
</g>
<g>
<title>__memmove_ssse3 (4 samples, 0.19%)</title><rect x="347.1" y="739.0" width="2.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="350.1" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.29%)</title><rect x="349.3" y="739.0" width="3.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="352.3" y="750.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.05%)</title><rect x="350.5" y="723.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="353.5" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="351.0" y="723.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="354.0" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.10%)</title><rect x="351.6" y="723.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="354.6" y="734.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.05%)</title><rect x="352.2" y="707.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="355.2" y="718.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.05%)</title><rect x="352.7" y="755.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="355.7" y="766.0"></text>
</g>
<g>
<title>__libc_send (228 samples, 10.95%)</title><rect x="353.3" y="755.0" width="129.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="356.3" y="766.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (227 samples, 10.90%)</title><rect x="353.9" y="739.0" width="128.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="356.9" y="750.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>do_syscall_64 (227 samples, 10.90%)</title><rect x="353.9" y="723.0" width="128.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="356.9" y="734.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (2 samples, 0.10%)</title><rect x="354.4" y="707.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="357.4" y="718.0"></text>
</g>
<g>
<title>__x64_sys_sendto (224 samples, 10.75%)</title><rect x="355.6" y="707.0" width="126.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="358.6" y="718.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (222 samples, 10.66%)</title><rect x="355.6" y="691.0" width="125.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="358.6" y="702.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (222 samples, 10.66%)</title><rect x="355.6" y="675.0" width="125.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="358.6" y="686.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (218 samples, 10.47%)</title><rect x="355.6" y="659.0" width="123.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="358.6" y="670.0">inet6_sendmsg</text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.05%)</title><rect x="356.1" y="643.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="359.1" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg (216 samples, 10.37%)</title><rect x="356.7" y="643.0" width="122.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="359.7" y="654.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.10%)</title><rect x="357.3" y="627.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="360.3" y="638.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="357.3" y="611.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="360.3" y="622.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="357.8" y="611.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="360.8" y="622.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="357.8" y="595.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="360.8" y="606.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.05%)</title><rect x="358.4" y="627.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="361.4" y="638.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.14%)</title><rect x="359.0" y="627.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="362.0" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (208 samples, 9.99%)</title><rect x="360.7" y="627.0" width="117.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="363.7" y="638.0">tcp_sendmsg_lo..</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.10%)</title><rect x="365.2" y="611.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="368.2" y="622.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.05%)</title><rect x="365.8" y="595.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="368.8" y="606.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.05%)</title><rect x="366.3" y="611.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="369.3" y="622.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.05%)</title><rect x="366.9" y="611.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="369.9" y="622.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.10%)</title><rect x="367.5" y="611.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="370.5" y="622.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.10%)</title><rect x="367.5" y="595.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="370.5" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (12 samples, 0.58%)</title><rect x="368.6" y="611.0" width="6.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="371.6" y="622.0"></text>
</g>
<g>
<title>__alloc_skb (11 samples, 0.53%)</title><rect x="369.2" y="595.0" width="6.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="372.2" y="606.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (6 samples, 0.29%)</title><rect x="369.7" y="579.0" width="3.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="372.7" y="590.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.10%)</title><rect x="369.7" y="563.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="372.7" y="574.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="370.9" y="563.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="373.9" y="574.0"></text>
</g>
<g>
<title>memset (3 samples, 0.14%)</title><rect x="371.4" y="563.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="374.4" y="574.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.10%)</title><rect x="373.1" y="579.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="376.1" y="590.0"></text>
</g>
<g>
<title>memset (2 samples, 0.10%)</title><rect x="374.3" y="579.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="377.3" y="590.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.05%)</title><rect x="375.4" y="611.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="378.4" y="622.0"></text>
</g>
<g>
<title>tcp_push (179 samples, 8.59%)</title><rect x="376.0" y="611.0" width="101.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="379.0" y="622.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (179 samples, 8.59%)</title><rect x="376.0" y="595.0" width="101.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="379.0" y="606.0">__tcp_push_p..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.33 (1 samples, 0.05%)</title><rect x="376.0" y="579.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="379.0" y="590.0"></text>
</g>
<g>
<title>tcp_write_xmit (178 samples, 8.55%)</title><rect x="376.5" y="579.0" width="100.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="379.5" y="590.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.14%)</title><rect x="378.2" y="563.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="381.2" y="574.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (161 samples, 7.73%)</title><rect x="379.9" y="563.0" width="91.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="382.9" y="574.0">__tcp_trans..</text>
</g>
<g>
<title>ip_queue_xmit (154 samples, 7.39%)</title><rect x="382.8" y="547.0" width="87.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="385.8" y="558.0">ip_queue_x..</text>
</g>
<g>
<title>__ip_queue_xmit (153 samples, 7.35%)</title><rect x="382.8" y="531.0" width="86.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="385.8" y="542.0">__ip_queue..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.10%)</title><rect x="383.9" y="515.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="386.9" y="526.0"></text>
</g>
<g>
<title>ip_local_out (148 samples, 7.11%)</title><rect x="385.0" y="515.0" width="83.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="388.0" y="526.0">ip_local_..</text>
</g>
<g>
<title>__ip_local_out (26 samples, 1.25%)</title><rect x="385.0" y="499.0" width="14.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="388.0" y="510.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.05%)</title><rect x="385.6" y="483.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="388.6" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (24 samples, 1.15%)</title><rect x="386.1" y="483.0" width="13.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="389.1" y="494.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.10%)</title><rect x="386.7" y="467.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="389.7" y="478.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.10%)</title><rect x="386.7" y="451.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="389.7" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (20 samples, 0.96%)</title><rect x="387.8" y="467.0" width="11.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="390.8" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (19 samples, 0.91%)</title><rect x="387.8" y="451.0" width="10.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="390.8" y="462.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.10%)</title><rect x="388.4" y="435.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="391.4" y="446.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (1 samples, 0.05%)</title><rect x="389.5" y="435.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="392.5" y="446.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (2 samples, 0.10%)</title><rect x="390.1" y="435.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="393.1" y="446.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (2 samples, 0.10%)</title><rect x="391.2" y="435.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="394.2" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (9 samples, 0.43%)</title><rect x="392.4" y="435.0" width="5.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="395.4" y="446.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.05%)</title><rect x="394.1" y="419.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="397.1" y="430.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (5 samples, 0.24%)</title><rect x="394.6" y="419.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="397.6" y="430.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.05%)</title><rect x="396.9" y="403.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="399.9" y="414.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.05%)</title><rect x="397.5" y="435.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="400.5" y="446.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.05%)</title><rect x="398.0" y="435.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="401.0" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.05%)</title><rect x="398.6" y="451.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="401.6" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="399.2" y="467.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="402.2" y="478.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="399.2" y="451.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="402.2" y="462.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (1 samples, 0.05%)</title><rect x="399.2" y="435.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="402.2" y="446.0"></text>
</g>
<g>
<title>ip_output (122 samples, 5.86%)</title><rect x="399.7" y="499.0" width="69.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="402.7" y="510.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (116 samples, 5.57%)</title><rect x="399.7" y="483.0" width="65.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="402.7" y="494.0">ip_fini..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.10%)</title><rect x="400.3" y="467.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="403.3" y="478.0"></text>
</g>
<g>
<title>__ip_finish_output (112 samples, 5.38%)</title><rect x="401.4" y="467.0" width="63.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="404.4" y="478.0">__ip_fi..</text>
</g>
<g>
<title>ip_finish_output2 (110 samples, 5.28%)</title><rect x="402.6" y="451.0" width="62.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="405.6" y="462.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (93 samples, 4.46%)</title><rect x="402.6" y="435.0" width="52.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="405.6" y="446.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.20 (93 samples, 4.46%)</title><rect x="402.6" y="419.0" width="52.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="405.6" y="430.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (92 samples, 4.42%)</title><rect x="403.1" y="403.0" width="52.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="406.1" y="414.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (92 samples, 4.42%)</title><rect x="403.1" y="387.0" width="52.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="406.1" y="398.0">__sof..</text>
</g>
<g>
<title>net_rx_action (86 samples, 4.13%)</title><rect x="406.5" y="371.0" width="48.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="409.5" y="382.0">net_..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.05%)</title><rect x="407.7" y="355.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="410.7" y="366.0"></text>
</g>
<g>
<title>process_backlog (83 samples, 3.98%)</title><rect x="408.2" y="355.0" width="47.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="411.2" y="366.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (82 samples, 3.94%)</title><rect x="408.8" y="339.0" width="46.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="411.8" y="350.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (82 samples, 3.94%)</title><rect x="408.8" y="323.0" width="46.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="411.8" y="334.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.05%)</title><rect x="408.8" y="307.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="411.8" y="318.0"></text>
</g>
<g>
<title>ip_rcv (81 samples, 3.89%)</title><rect x="409.4" y="307.0" width="45.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="412.4" y="318.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (80 samples, 3.84%)</title><rect x="409.4" y="291.0" width="45.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="412.4" y="302.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (77 samples, 3.70%)</title><rect x="409.4" y="275.0" width="43.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="412.4" y="286.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (76 samples, 3.65%)</title><rect x="409.4" y="259.0" width="43.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="412.4" y="270.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (76 samples, 3.65%)</title><rect x="409.4" y="243.0" width="43.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="412.4" y="254.0">ip_p..</text>
</g>
<g>
<title>tcp_v4_rcv (76 samples, 3.65%)</title><rect x="409.4" y="227.0" width="43.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="412.4" y="238.0">tcp_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="411.6" y="211.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="414.6" y="222.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.14%)</title><rect x="412.2" y="211.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="415.2" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.10%)</title><rect x="413.9" y="211.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="416.9" y="222.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="413.9" y="195.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="416.9" y="206.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.05%)</title><rect x="414.5" y="195.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="417.5" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (66 samples, 3.17%)</title><rect x="415.0" y="211.0" width="37.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="418.0" y="222.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.05%)</title><rect x="415.0" y="195.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="418.0" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (65 samples, 3.12%)</title><rect x="415.6" y="195.0" width="36.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="418.6" y="206.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.19%)</title><rect x="416.7" y="179.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="419.7" y="190.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.19%)</title><rect x="416.7" y="163.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="419.7" y="174.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.19%)</title><rect x="416.7" y="147.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="419.7" y="158.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.19%)</title><rect x="416.7" y="131.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="419.7" y="142.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.14%)</title><rect x="416.7" y="115.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="419.7" y="126.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.05%)</title><rect x="418.4" y="115.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="421.4" y="126.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.05%)</title><rect x="418.4" y="99.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="421.4" y="110.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.05%)</title><rect x="419.0" y="179.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="422.0" y="190.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.05%)</title><rect x="419.6" y="179.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="422.6" y="190.0"></text>
</g>
<g>
<title>tcp_ack (22 samples, 1.06%)</title><rect x="420.1" y="179.0" width="12.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="423.1" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (16 samples, 0.77%)</title><rect x="423.5" y="163.0" width="9.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="426.5" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (12 samples, 0.58%)</title><rect x="425.2" y="147.0" width="6.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="428.2" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.14%)</title><rect x="425.2" y="131.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="428.2" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.10%)</title><rect x="425.8" y="115.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="428.8" y="126.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.05%)</title><rect x="426.4" y="99.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="429.4" y="110.0"></text>
</g>
<g>
<title>skb_release_all (9 samples, 0.43%)</title><rect x="426.9" y="131.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="429.9" y="142.0"></text>
</g>
<g>
<title>skb_release_data (9 samples, 0.43%)</title><rect x="426.9" y="115.0" width="5.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="429.9" y="126.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.14%)</title><rect x="430.3" y="99.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="433.3" y="110.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.14%)</title><rect x="430.3" y="83.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="433.3" y="94.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.10%)</title><rect x="430.9" y="67.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="433.9" y="78.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.05%)</title><rect x="432.0" y="147.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="435.0" y="158.0"></text>
</g>
<g>
<title>tcp_data_ready (33 samples, 1.58%)</title><rect x="432.6" y="179.0" width="18.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="435.6" y="190.0"></text>
</g>
<g>
<title>sock_def_readable (32 samples, 1.54%)</title><rect x="433.2" y="163.0" width="18.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="436.2" y="174.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.10%)</title><rect x="433.2" y="147.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="436.2" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (30 samples, 1.44%)</title><rect x="434.3" y="147.0" width="17.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="437.3" y="158.0"></text>
</g>
<g>
<title>__wake_up_common_lock (30 samples, 1.44%)</title><rect x="434.3" y="131.0" width="17.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="437.3" y="142.0"></text>
</g>
<g>
<title>__lock_text_start (30 samples, 1.44%)</title><rect x="434.3" y="115.0" width="17.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="437.3" y="126.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.05%)</title><rect x="451.3" y="179.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="454.3" y="190.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.05%)</title><rect x="451.9" y="179.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="454.9" y="190.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.05%)</title><rect x="451.9" y="163.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="454.9" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="452.4" y="259.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="455.4" y="270.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="452.4" y="243.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="455.4" y="254.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="452.4" y="227.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="455.4" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.05%)</title><rect x="453.0" y="275.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="456.0" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (2 samples, 0.10%)</title><rect x="453.6" y="275.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="456.6" y="286.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="454.7" y="291.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="457.7" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (1 samples, 0.05%)</title><rect x="454.7" y="275.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="457.7" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.05%)</title><rect x="454.7" y="259.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="457.7" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (16 samples, 0.77%)</title><rect x="455.3" y="435.0" width="9.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="458.3" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (15 samples, 0.72%)</title><rect x="455.3" y="419.0" width="8.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="458.3" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.29%)</title><rect x="457.0" y="403.0" width="3.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="460.0" y="414.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="457.5" y="387.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="460.5" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.14%)</title><rect x="458.1" y="387.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="461.1" y="398.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="458.1" y="371.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="461.1" y="382.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.05%)</title><rect x="458.7" y="371.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="461.7" y="382.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.05%)</title><rect x="458.7" y="355.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="461.7" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.05%)</title><rect x="458.7" y="339.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="461.7" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.05%)</title><rect x="459.2" y="371.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="462.2" y="382.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.05%)</title><rect x="459.8" y="387.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="462.8" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.05%)</title><rect x="460.4" y="403.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="463.4" y="414.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (2 samples, 0.10%)</title><rect x="460.9" y="403.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="463.9" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.14%)</title><rect x="462.1" y="403.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="465.1" y="414.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.05%)</title><rect x="462.6" y="387.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="465.6" y="398.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.05%)</title><rect x="463.2" y="387.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="466.2" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="463.8" y="419.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="466.8" y="430.0"></text>
</g>
<g>
<title>do_softirq.part.20 (1 samples, 0.05%)</title><rect x="464.3" y="435.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="467.3" y="446.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="464.9" y="467.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="467.9" y="478.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="465.5" y="483.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="468.5" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.19%)</title><rect x="466.0" y="483.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="469.0" y="494.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.10%)</title><rect x="466.6" y="467.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="469.6" y="478.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.10%)</title><rect x="466.6" y="451.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="469.6" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="467.7" y="467.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="470.7" y="478.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat] (1 samples, 0.05%)</title><rect x="468.3" y="483.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="471.3" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.05%)</title><rect x="468.9" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="471.9" y="526.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.05%)</title><rect x="469.4" y="531.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="472.4" y="542.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.10%)</title><rect x="470.0" y="547.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="473.0" y="558.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.05%)</title><rect x="470.0" y="531.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="473.0" y="542.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.05%)</title><rect x="470.6" y="531.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="473.6" y="542.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.05%)</title><rect x="471.1" y="563.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="474.1" y="574.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.05%)</title><rect x="471.7" y="563.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="474.7" y="574.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.14%)</title><rect x="472.3" y="563.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="475.3" y="574.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.10%)</title><rect x="472.8" y="547.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="475.8" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.10%)</title><rect x="474.0" y="563.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="477.0" y="574.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="474.5" y="547.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="477.5" y="558.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.33 (1 samples, 0.05%)</title><rect x="475.1" y="563.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="478.1" y="574.0"></text>
</g>
<g>
<title>tcp_v4_send_check (3 samples, 0.14%)</title><rect x="475.7" y="563.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="478.7" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.10%)</title><rect x="477.4" y="611.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="480.4" y="622.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.10%)</title><rect x="477.4" y="595.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="480.4" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="477.9" y="579.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="480.9" y="590.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.05%)</title><rect x="478.5" y="627.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="481.5" y="638.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.19%)</title><rect x="479.1" y="659.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="482.1" y="670.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.10%)</title><rect x="480.2" y="643.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="483.2" y="654.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.10%)</title><rect x="480.2" y="627.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="483.2" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.10%)</title><rect x="480.2" y="611.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="483.2" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.10%)</title><rect x="480.2" y="595.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="483.2" y="606.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.05%)</title><rect x="481.3" y="691.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="484.3" y="702.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.05%)</title><rect x="481.9" y="691.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="484.9" y="702.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (10 samples, 0.48%)</title><rect x="482.5" y="771.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="485.5" y="782.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (4 samples, 0.19%)</title><rect x="485.9" y="755.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="488.9" y="766.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (1 samples, 0.05%)</title><rect x="488.1" y="771.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.1" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (1 samples, 0.05%)</title><rect x="488.1" y="755.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="491.1" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (1 samples, 0.05%)</title><rect x="488.1" y="739.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="491.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.accept (43 samples, 2.06%)</title><rect x="488.7" y="803.0" width="24.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="491.7" y="814.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.19%)</title><rect x="489.3" y="787.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="492.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.19%)</title><rect x="489.3" y="771.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="492.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.05%)</title><rect x="491.0" y="755.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (37 samples, 1.78%)</title><rect x="491.5" y="787.0" width="21.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="494.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (37 samples, 1.78%)</title><rect x="491.5" y="771.0" width="21.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="494.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (37 samples, 1.78%)</title><rect x="491.5" y="755.0" width="21.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="494.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (37 samples, 1.78%)</title><rect x="491.5" y="739.0" width="21.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="494.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (36 samples, 1.73%)</title><rect x="492.1" y="723.0" width="20.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="495.1" y="734.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.05%)</title><rect x="492.1" y="707.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="495.1" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.43%)</title><rect x="492.7" y="707.0" width="5.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="495.7" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="494.3" y="691.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="497.3" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.05%)</title><rect x="494.9" y="691.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="497.9" y="702.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.10%)</title><rect x="495.5" y="691.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="498.5" y="702.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="496.6" y="691.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="499.6" y="702.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="497.2" y="691.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="500.2" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (26 samples, 1.25%)</title><rect x="497.7" y="707.0" width="14.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="500.7" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 1.15%)</title><rect x="498.9" y="691.0" width="13.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="501.9" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 1.15%)</title><rect x="498.9" y="675.0" width="13.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="501.9" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (22 samples, 1.06%)</title><rect x="500.0" y="659.0" width="12.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="503.0" y="670.0"></text>
</g>
<g>
<title>do_futex (22 samples, 1.06%)</title><rect x="500.0" y="643.0" width="12.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="503.0" y="654.0"></text>
</g>
<g>
<title>futex_wake (22 samples, 1.06%)</title><rect x="500.0" y="627.0" width="12.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="503.0" y="638.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="501.1" y="611.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="504.1" y="622.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (1 samples, 0.05%)</title><rect x="501.1" y="595.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="504.1" y="606.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.05%)</title><rect x="501.7" y="611.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="504.7" y="622.0"></text>
</g>
<g>
<title>wake_up_q (18 samples, 0.86%)</title><rect x="502.3" y="611.0" width="10.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="505.3" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (18 samples, 0.86%)</title><rect x="502.3" y="595.0" width="10.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="505.3" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (18 samples, 0.86%)</title><rect x="502.3" y="579.0" width="10.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="505.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.signalAll (1 samples, 0.05%)</title><rect x="512.5" y="787.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="515.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.05%)</title><rect x="512.5" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="515.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.05%)</title><rect x="512.5" y="755.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="515.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.05%)</title><rect x="512.5" y="739.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="515.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.05%)</title><rect x="512.5" y="723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="515.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$75/54338970.run (594 samples, 28.52%)</title><rect x="513.0" y="867.0" width="336.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="516.0" y="878.0">ru/mail/polis/service/alexander/marashov/Servi..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityPut$3 (594 samples, 28.52%)</title><rect x="513.0" y="851.0" width="336.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.0" y="862.0">ru/mail/polis/service/alexander/marashov/Servi..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.19%)</title><rect x="513.0" y="835.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="516.0" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.19%)</title><rect x="513.0" y="819.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="516.0" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.10%)</title><rect x="513.0" y="803.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="516.0" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="513.0" y="787.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="516.0" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="513.0" y="771.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="516.0" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="513.0" y="755.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="516.0" y="766.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.05%)</title><rect x="513.0" y="739.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="516.0" y="750.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.05%)</title><rect x="513.6" y="787.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="516.6" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="514.2" y="803.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="517.2" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="514.2" y="787.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="517.2" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="514.7" y="771.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="514.7" y="755.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.10%)</title><rect x="515.3" y="835.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="518.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.put (126 samples, 6.05%)</title><rect x="516.4" y="835.0" width="71.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="519.4" y="846.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="516.4" y="819.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="519.4" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="516.4" y="803.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$77/1379583237.get$Lambda (1 samples, 0.05%)</title><rect x="516.4" y="787.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="519.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$77/1379583237.&lt;init&gt; (1 samples, 0.05%)</title><rect x="516.4" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.10%)</title><rect x="517.0" y="819.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.0" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.43%)</title><rect x="518.1" y="819.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.19%)</title><rect x="518.1" y="803.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="521.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.14%)</title><rect x="518.7" y="787.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="521.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.24%)</title><rect x="520.4" y="803.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager.put (55 samples, 2.64%)</title><rect x="523.2" y="819.0" width="31.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="526.2" y="830.0">ru..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.24%)</title><rect x="523.2" y="803.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="526.2" y="814.0"></text>
</g>
<g>
<title>Klass::klass_holder() const (1 samples, 0.05%)</title><rect x="523.8" y="787.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="526.8" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="524.4" y="787.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="527.4" y="798.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="524.4" y="771.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="527.4" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="524.4" y="755.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="527.4" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="524.4" y="739.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="527.4" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="524.4" y="723.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="527.4" y="734.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.05%)</title><rect x="524.4" y="707.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="527.4" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.10%)</title><rect x="524.9" y="787.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="527.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (50 samples, 2.40%)</title><rect x="526.1" y="803.0" width="28.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.1" y="814.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.19%)</title><rect x="526.1" y="787.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="529.1" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.14%)</title><rect x="526.6" y="771.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="529.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.14%)</title><rect x="526.6" y="755.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="529.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.19%)</title><rect x="528.3" y="787.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="531.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.19%)</title><rect x="528.3" y="771.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.19%)</title><rect x="528.3" y="755.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="531.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (2 samples, 0.10%)</title><rect x="528.9" y="739.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="531.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (1 samples, 0.05%)</title><rect x="530.0" y="739.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="533.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (1 samples, 0.05%)</title><rect x="530.0" y="723.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="533.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.upsert (42 samples, 2.02%)</title><rect x="530.6" y="787.0" width="23.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="533.6" y="798.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (42 samples, 2.02%)</title><rect x="530.6" y="771.0" width="23.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.6" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (42 samples, 2.02%)</title><rect x="530.6" y="755.0" width="23.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="533.6" y="766.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.24%)</title><rect x="533.4" y="739.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="536.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (5 samples, 0.24%)</title><rect x="533.4" y="723.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="536.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (11 samples, 0.53%)</title><rect x="536.3" y="739.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="539.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (3 samples, 0.14%)</title><rect x="542.5" y="739.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="545.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.14%)</title><rect x="542.5" y="723.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="545.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (9 samples, 0.43%)</title><rect x="544.2" y="739.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.05%)</title><rect x="544.8" y="723.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="547.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.34%)</title><rect x="545.3" y="723.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.3" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.14%)</title><rect x="547.6" y="707.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="550.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.14%)</title><rect x="547.6" y="691.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="550.6" y="702.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.10%)</title><rect x="548.2" y="675.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="551.2" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="548.2" y="659.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="551.2" y="670.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.05%)</title><rect x="548.7" y="659.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="551.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (9 samples, 0.43%)</title><rect x="549.3" y="739.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.3" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.34%)</title><rect x="550.4" y="723.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.4" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.34%)</title><rect x="550.4" y="707.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="553.4" y="718.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.34%)</title><rect x="550.4" y="691.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="553.4" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.19%)</title><rect x="551.6" y="675.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.6" y="686.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.05%)</title><rect x="553.8" y="675.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="556.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.iterateOverNodes (18 samples, 0.86%)</title><rect x="554.4" y="819.0" width="10.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="557.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (16 samples, 0.77%)</title><rect x="554.4" y="803.0" width="9.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="557.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (15 samples, 0.72%)</title><rect x="554.4" y="787.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="557.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (5 samples, 0.24%)</title><rect x="554.4" y="771.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.24%)</title><rect x="554.4" y="755.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="557.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.24%)</title><rect x="554.4" y="739.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="557.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.24%)</title><rect x="554.4" y="723.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="557.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (5 samples, 0.24%)</title><rect x="554.4" y="707.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="557.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.05%)</title><rect x="557.2" y="771.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="560.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.05%)</title><rect x="557.2" y="755.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="560.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.43%)</title><rect x="557.8" y="771.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="560.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.43%)</title><rect x="557.8" y="755.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.43%)</title><rect x="557.8" y="739.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="560.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.43%)</title><rect x="557.8" y="723.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="560.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.43%)</title><rect x="557.8" y="707.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="560.8" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.05%)</title><rect x="558.4" y="691.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="561.4" y="702.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="558.4" y="675.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="561.4" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.34%)</title><rect x="558.9" y="691.0" width="4.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="561.9" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.24%)</title><rect x="560.1" y="675.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="563.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.24%)</title><rect x="560.1" y="659.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="563.1" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.24%)</title><rect x="560.1" y="643.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="563.1" y="654.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.24%)</title><rect x="560.1" y="627.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="563.1" y="638.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.24%)</title><rect x="560.1" y="611.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="563.1" y="622.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.05%)</title><rect x="560.1" y="595.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="563.1" y="606.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.19%)</title><rect x="560.6" y="595.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="563.6" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.19%)</title><rect x="560.6" y="579.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="563.6" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.19%)</title><rect x="560.6" y="563.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="563.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.getResult (1 samples, 0.05%)</title><rect x="562.9" y="787.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="565.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.isLocal (2 samples, 0.10%)</title><rect x="563.5" y="803.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="566.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.isLocal (2 samples, 0.10%)</title><rect x="563.5" y="787.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="566.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.10%)</title><rect x="563.5" y="771.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="566.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.05%)</title><rect x="564.0" y="755.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.await (29 samples, 1.39%)</title><rect x="564.6" y="819.0" width="16.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (24 samples, 1.15%)</title><rect x="566.9" y="803.0" width="13.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="569.9" y="814.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="568.0" y="787.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="571.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.05%)</title><rect x="568.6" y="787.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="571.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.05%)</title><rect x="568.6" y="771.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="571.6" y="782.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.05%)</title><rect x="568.6" y="755.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="571.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (20 samples, 0.96%)</title><rect x="569.1" y="787.0" width="11.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="572.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (19 samples, 0.91%)</title><rect x="569.7" y="771.0" width="10.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.7" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (9 samples, 0.43%)</title><rect x="570.8" y="755.0" width="5.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="573.8" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.19%)</title><rect x="570.8" y="739.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="573.8" y="750.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.05%)</title><rect x="571.4" y="723.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="574.4" y="734.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.10%)</title><rect x="572.0" y="723.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="575.0" y="734.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.05%)</title><rect x="573.1" y="739.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="576.1" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.05%)</title><rect x="573.7" y="739.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="576.7" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="573.7" y="723.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="576.7" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="573.7" y="707.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="576.7" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="573.7" y="691.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="576.7" y="702.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="573.7" y="675.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="576.7" y="686.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="573.7" y="659.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="576.7" y="670.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="573.7" y="643.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="576.7" y="654.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (1 samples, 0.05%)</title><rect x="573.7" y="627.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="576.7" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.05%)</title><rect x="574.2" y="739.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="577.2" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.10%)</title><rect x="574.8" y="739.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="577.8" y="750.0"></text>
</g>
<g>
<title>__clock_gettime@plt (1 samples, 0.05%)</title><rect x="575.9" y="755.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="578.9" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (6 samples, 0.29%)</title><rect x="576.5" y="755.0" width="3.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="579.5" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.29%)</title><rect x="576.5" y="739.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="579.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.29%)</title><rect x="576.5" y="723.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="579.5" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.19%)</title><rect x="577.1" y="707.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="580.1" y="718.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.14%)</title><rect x="577.1" y="691.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="580.1" y="702.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.14%)</title><rect x="577.1" y="675.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="580.1" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.05%)</title><rect x="577.1" y="659.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="580.1" y="670.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (1 samples, 0.05%)</title><rect x="577.1" y="643.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="580.1" y="654.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.05%)</title><rect x="577.1" y="627.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="580.1" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="577.1" y="611.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="580.1" y="622.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.10%)</title><rect x="577.6" y="659.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="580.6" y="670.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.05%)</title><rect x="578.2" y="643.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="581.2" y="654.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.05%)</title><rect x="578.8" y="691.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="581.8" y="702.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.05%)</title><rect x="578.8" y="675.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="581.8" y="686.0"></text>
</g>
<g>
<title>ktime_add_safe (1 samples, 0.05%)</title><rect x="579.3" y="707.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="582.3" y="718.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="579.9" y="755.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="582.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.05%)</title><rect x="580.5" y="803.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="583.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.05%)</title><rect x="580.5" y="787.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="583.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.05%)</title><rect x="580.5" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="583.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.05%)</title><rect x="580.5" y="755.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.getResult (2 samples, 0.10%)</title><rect x="581.0" y="819.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="584.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.10%)</title><rect x="581.0" y="803.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="584.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.10%)</title><rect x="581.0" y="787.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="584.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.10%)</title><rect x="581.0" y="771.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="584.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.10%)</title><rect x="581.0" y="755.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="584.0" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.10%)</title><rect x="581.0" y="739.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="584.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/SimpleResponseAnalyzer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="582.2" y="819.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="585.2" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="582.7" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="585.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primariesFor (8 samples, 0.38%)</title><rect x="583.3" y="819.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="586.3" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primariesFor (8 samples, 0.38%)</title><rect x="583.3" y="803.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="586.3" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="583.9" y="787.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="586.9" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="583.9" y="771.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="586.9" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="583.9" y="755.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="586.9" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="583.9" y="739.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="586.9" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="583.9" y="723.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="586.9" y="734.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.05%)</title><rect x="583.9" y="707.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="586.9" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2 samples, 0.10%)</title><rect x="584.4" y="787.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="587.4" y="798.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2 samples, 0.10%)</title><rect x="584.4" y="771.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="587.4" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2 samples, 0.10%)</title><rect x="584.4" y="755.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="587.4" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpComparable (2 samples, 0.10%)</title><rect x="584.4" y="739.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="587.4" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="585.0" y="723.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="588.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValidatedParameters.validateParameters (3 samples, 0.14%)</title><rect x="585.6" y="787.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="588.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$NodeKeyPair.&lt;init&gt; (1 samples, 0.05%)</title><rect x="587.3" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="590.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.trySendAnswer (425 samples, 20.40%)</title><rect x="587.8" y="835.0" width="240.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="590.8" y="846.0">ru/mail/polis/service/alexander/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (425 samples, 20.40%)</title><rect x="587.8" y="819.0" width="240.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="590.8" y="830.0">one/nio/http/HttpSession.sendRes..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.14%)</title><rect x="589.0" y="803.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="592.0" y="814.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.14%)</title><rect x="589.0" y="787.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="592.0" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.14%)</title><rect x="589.0" y="771.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="592.0" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (3 samples, 0.14%)</title><rect x="589.0" y="755.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="592.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.05%)</title><rect x="590.7" y="803.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="593.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (403 samples, 19.35%)</title><rect x="591.2" y="803.0" width="228.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="594.2" y="814.0">one/nio/http/HttpSession.write..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (18 samples, 0.86%)</title><rect x="593.5" y="787.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="596.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (11 samples, 0.53%)</title><rect x="597.5" y="771.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="600.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (11 samples, 0.53%)</title><rect x="597.5" y="755.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (11 samples, 0.53%)</title><rect x="597.5" y="739.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="600.5" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.10%)</title><rect x="602.5" y="723.0" width="1.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="605.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (381 samples, 18.29%)</title><rect x="603.7" y="787.0" width="215.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.7" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (375 samples, 18.00%)</title><rect x="604.8" y="771.0" width="212.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="607.8" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.05%)</title><rect x="604.8" y="755.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="607.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (374 samples, 17.95%)</title><rect x="605.4" y="755.0" width="211.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="608.4" y="766.0">one/nio/net/Session$ArrayQue..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (374 samples, 17.95%)</title><rect x="605.4" y="739.0" width="211.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="608.4" y="750.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (9 samples, 0.43%)</title><rect x="607.1" y="723.0" width="5.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="610.1" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.10%)</title><rect x="608.2" y="707.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="611.2" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (1 samples, 0.05%)</title><rect x="609.3" y="707.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="612.3" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.19%)</title><rect x="609.9" y="707.0" width="2.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="612.9" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.05%)</title><rect x="609.9" y="691.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="612.9" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="610.5" y="691.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="613.5" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.10%)</title><rect x="611.0" y="691.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="614.0" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.05%)</title><rect x="611.6" y="675.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="614.6" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.05%)</title><rect x="612.2" y="723.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="615.2" y="734.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.05%)</title><rect x="612.7" y="723.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="615.7" y="734.0"></text>
</g>
<g>
<title>__libc_send (360 samples, 17.28%)</title><rect x="613.3" y="723.0" width="203.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="616.3" y="734.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (358 samples, 17.19%)</title><rect x="614.4" y="707.0" width="202.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="617.4" y="718.0">entry_SYSCALL_64_after_hwf..</text>
</g>
<g>
<title>do_syscall_64 (358 samples, 17.19%)</title><rect x="614.4" y="691.0" width="202.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="617.4" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (356 samples, 17.09%)</title><rect x="615.6" y="675.0" width="201.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="618.6" y="686.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (356 samples, 17.09%)</title><rect x="615.6" y="659.0" width="201.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="618.6" y="670.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="616.7" y="643.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="619.7" y="654.0"></text>
</g>
<g>
<title>fput (1 samples, 0.05%)</title><rect x="617.3" y="643.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="620.3" y="654.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.05%)</title><rect x="617.3" y="627.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="620.3" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (346 samples, 16.61%)</title><rect x="617.8" y="643.0" width="196.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="620.8" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (341 samples, 16.37%)</title><rect x="617.8" y="627.0" width="193.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="620.8" y="638.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (340 samples, 16.32%)</title><rect x="617.8" y="611.0" width="192.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="620.8" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="618.4" y="595.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="621.4" y="606.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.05%)</title><rect x="619.0" y="595.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="622.0" y="606.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.05%)</title><rect x="619.5" y="595.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="622.5" y="606.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.05%)</title><rect x="620.1" y="595.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="623.1" y="606.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.10%)</title><rect x="620.7" y="595.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="623.7" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.05%)</title><rect x="621.8" y="595.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="624.8" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (332 samples, 15.94%)</title><rect x="622.4" y="595.0" width="188.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="625.4" y="606.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.19%)</title><rect x="626.9" y="579.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="629.9" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.19%)</title><rect x="629.2" y="579.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="632.2" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.19%)</title><rect x="629.2" y="563.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="632.2" y="574.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.05%)</title><rect x="631.4" y="579.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="634.4" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.14%)</title><rect x="632.0" y="579.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="635.0" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (3 samples, 0.14%)</title><rect x="632.0" y="563.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="635.0" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (29 samples, 1.39%)</title><rect x="633.7" y="579.0" width="16.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="636.7" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (28 samples, 1.34%)</title><rect x="633.7" y="563.0" width="15.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="636.7" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (19 samples, 0.91%)</title><rect x="634.3" y="547.0" width="10.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="637.3" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (8 samples, 0.38%)</title><rect x="636.0" y="531.0" width="4.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="639.0" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.10%)</title><rect x="638.2" y="515.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="641.2" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.10%)</title><rect x="639.4" y="515.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="642.4" y="526.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.10%)</title><rect x="640.5" y="531.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="643.5" y="542.0"></text>
</g>
<g>
<title>memset (6 samples, 0.29%)</title><rect x="641.6" y="531.0" width="3.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="644.6" y="542.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.05%)</title><rect x="645.0" y="547.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="648.0" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.05%)</title><rect x="645.6" y="547.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="648.6" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.05%)</title><rect x="645.6" y="531.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="648.6" y="542.0"></text>
</g>
<g>
<title>memset (4 samples, 0.19%)</title><rect x="646.2" y="547.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="649.2" y="558.0"></text>
</g>
<g>
<title>should_failslab (2 samples, 0.10%)</title><rect x="648.4" y="547.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="651.4" y="558.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.05%)</title><rect x="649.6" y="563.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="652.6" y="574.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.05%)</title><rect x="650.1" y="579.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="653.1" y="590.0"></text>
</g>
<g>
<title>tcp_push (277 samples, 13.30%)</title><rect x="650.7" y="579.0" width="156.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="653.7" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (274 samples, 13.15%)</title><rect x="651.8" y="563.0" width="155.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="654.8" y="574.0">__tcp_push_pending_f..</text>
</g>
<g>
<title>tcp_write_xmit (274 samples, 13.15%)</title><rect x="651.8" y="547.0" width="155.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="654.8" y="558.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (259 samples, 12.43%)</title><rect x="653.5" y="531.0" width="146.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="656.5" y="542.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.05%)</title><rect x="656.9" y="515.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="659.9" y="526.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.05%)</title><rect x="657.5" y="515.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="660.5" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (250 samples, 12.00%)</title><rect x="658.1" y="515.0" width="141.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="661.1" y="526.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (250 samples, 12.00%)</title><rect x="658.1" y="499.0" width="141.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="661.1" y="510.0">__ip_queue_xmit</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.05%)</title><rect x="659.8" y="483.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="662.8" y="494.0"></text>
</g>
<g>
<title>ip_local_out (244 samples, 11.71%)</title><rect x="660.3" y="483.0" width="138.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="663.3" y="494.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (32 samples, 1.54%)</title><rect x="660.9" y="467.0" width="18.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="663.9" y="478.0"></text>
</g>
<g>
<title>ip_send_check (3 samples, 0.14%)</title><rect x="660.9" y="451.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="663.9" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="662.6" y="451.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="665.6" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.10%)</title><rect x="663.2" y="451.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="666.2" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (25 samples, 1.20%)</title><rect x="664.3" y="451.0" width="14.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="667.3" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.19%)</title><rect x="664.3" y="435.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="667.3" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (4 samples, 0.19%)</title><rect x="664.3" y="419.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="667.3" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (20 samples, 0.96%)</title><rect x="666.6" y="435.0" width="11.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="669.6" y="446.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (2 samples, 0.10%)</title><rect x="666.6" y="419.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="669.6" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (18 samples, 0.86%)</title><rect x="667.7" y="419.0" width="10.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="670.7" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (6 samples, 0.29%)</title><rect x="668.8" y="403.0" width="3.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="671.8" y="414.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (1 samples, 0.05%)</title><rect x="672.2" y="403.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="675.2" y="414.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (1 samples, 0.05%)</title><rect x="672.8" y="403.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="675.8" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (8 samples, 0.38%)</title><rect x="673.4" y="403.0" width="4.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="676.4" y="414.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (6 samples, 0.29%)</title><rect x="674.5" y="387.0" width="3.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="677.5" y="398.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.05%)</title><rect x="677.3" y="371.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="680.3" y="382.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.05%)</title><rect x="677.9" y="435.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="680.9" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="678.5" y="451.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="681.5" y="462.0"></text>
</g>
<g>
<title>ip_output (211 samples, 10.13%)</title><rect x="679.0" y="467.0" width="119.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="682.0" y="478.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.05%)</title><rect x="679.6" y="451.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="682.6" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (202 samples, 9.70%)</title><rect x="680.2" y="451.0" width="114.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="683.2" y="462.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="681.9" y="435.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="684.9" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (198 samples, 9.51%)</title><rect x="682.4" y="435.0" width="112.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="685.4" y="446.0">__ip_finish_ou..</text>
</g>
<g>
<title>ip_finish_output2 (194 samples, 9.31%)</title><rect x="684.1" y="419.0" width="109.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="687.1" y="430.0">ip_finish_out..</text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.05%)</title><rect x="687.5" y="403.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="690.5" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (169 samples, 8.11%)</title><rect x="688.1" y="403.0" width="95.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="691.1" y="414.0">__local_bh_..</text>
</g>
<g>
<title>do_softirq.part.20 (169 samples, 8.11%)</title><rect x="688.1" y="387.0" width="95.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="691.1" y="398.0">do_softirq...</text>
</g>
<g>
<title>do_softirq_own_stack (165 samples, 7.92%)</title><rect x="690.4" y="371.0" width="93.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="693.4" y="382.0">do_softirq_..</text>
</g>
<g>
<title>__softirqentry_text_start (164 samples, 7.87%)</title><rect x="690.4" y="355.0" width="92.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="693.4" y="366.0">__softirqen..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.10%)</title><rect x="694.3" y="339.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="697.3" y="350.0"></text>
</g>
<g>
<title>net_rx_action (153 samples, 7.35%)</title><rect x="695.5" y="339.0" width="86.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="698.5" y="350.0">net_rx_act..</text>
</g>
<g>
<title>process_backlog (152 samples, 7.30%)</title><rect x="696.0" y="323.0" width="86.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="699.0" y="334.0">process_ba..</text>
</g>
<g>
<title>__netif_receive_skb (149 samples, 7.15%)</title><rect x="697.7" y="307.0" width="84.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="700.7" y="318.0">__netif_re..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (148 samples, 7.11%)</title><rect x="698.3" y="291.0" width="83.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="701.3" y="302.0">__netif_r..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.14%)</title><rect x="699.4" y="275.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="702.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv (142 samples, 6.82%)</title><rect x="701.1" y="275.0" width="80.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="704.1" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (139 samples, 6.67%)</title><rect x="701.1" y="259.0" width="78.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="704.1" y="270.0">ip_rcv_fi..</text>
</g>
<g>
<title>ip_local_deliver (139 samples, 6.67%)</title><rect x="701.1" y="243.0" width="78.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="704.1" y="254.0">ip_local_..</text>
</g>
<g>
<title>ip_local_deliver_finish (135 samples, 6.48%)</title><rect x="702.3" y="227.0" width="76.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="705.3" y="238.0">ip_local..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (135 samples, 6.48%)</title><rect x="702.3" y="211.0" width="76.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="705.3" y="222.0">ip_proto..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.10%)</title><rect x="702.8" y="195.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="705.8" y="206.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.05%)</title><rect x="704.0" y="195.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="707.0" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (131 samples, 6.29%)</title><rect x="704.5" y="195.0" width="74.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="707.5" y="206.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (9 samples, 0.43%)</title><rect x="706.2" y="179.0" width="5.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="709.2" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.10%)</title><rect x="710.2" y="163.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="713.2" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.05%)</title><rect x="711.3" y="179.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="714.3" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.05%)</title><rect x="711.9" y="179.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="714.9" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.19%)</title><rect x="712.4" y="179.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="715.4" y="190.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.05%)</title><rect x="713.0" y="163.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="716.0" y="174.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.10%)</title><rect x="713.6" y="163.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="716.6" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (112 samples, 5.38%)</title><rect x="714.7" y="179.0" width="63.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="717.7" y="190.0">tcp_v4_..</text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.05%)</title><rect x="714.7" y="163.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="717.7" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (111 samples, 5.33%)</title><rect x="715.3" y="163.0" width="62.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="718.3" y="174.0">tcp_rc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.29%)</title><rect x="715.8" y="147.0" width="3.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="718.8" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (6 samples, 0.29%)</title><rect x="715.8" y="131.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="718.8" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.19%)</title><rect x="717.0" y="115.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="720.0" y="126.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.19%)</title><rect x="717.0" y="99.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="720.0" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.19%)</title><rect x="717.0" y="83.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="720.0" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.05%)</title><rect x="719.2" y="147.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="722.2" y="158.0"></text>
</g>
<g>
<title>tcp_ack (28 samples, 1.34%)</title><rect x="719.8" y="147.0" width="15.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="722.8" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.05%)</title><rect x="723.2" y="131.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="726.2" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (19 samples, 0.91%)</title><rect x="723.8" y="131.0" width="10.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="726.8" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (15 samples, 0.72%)</title><rect x="724.3" y="115.0" width="8.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="727.3" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.10%)</title><rect x="724.3" y="99.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="727.3" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.10%)</title><rect x="724.3" y="83.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="727.3" y="94.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.05%)</title><rect x="724.9" y="67.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="727.9" y="78.0"></text>
</g>
<g>
<title>skb_release_all (12 samples, 0.58%)</title><rect x="725.5" y="99.0" width="6.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="728.5" y="110.0"></text>
</g>
<g>
<title>skb_release_data (9 samples, 0.43%)</title><rect x="726.0" y="83.0" width="5.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="729.0" y="94.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.14%)</title><rect x="729.4" y="67.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="732.4" y="78.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.14%)</title><rect x="729.4" y="51.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="732.4" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.10%)</title><rect x="730.0" y="35.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="733.0" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.10%)</title><rect x="731.1" y="83.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="734.1" y="94.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.05%)</title><rect x="732.3" y="99.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="735.3" y="110.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.10%)</title><rect x="732.8" y="115.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="735.8" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (1 samples, 0.05%)</title><rect x="734.0" y="115.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="737.0" y="126.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.05%)</title><rect x="734.5" y="131.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="737.5" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.05%)</title><rect x="735.1" y="131.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="738.1" y="142.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.10%)</title><rect x="735.7" y="147.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="738.7" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.05%)</title><rect x="736.8" y="147.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="739.8" y="158.0"></text>
</g>
<g>
<title>tcp_data_ready (64 samples, 3.07%)</title><rect x="737.4" y="147.0" width="36.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="740.4" y="158.0">tcp..</text>
</g>
<g>
<title>sock_def_readable (64 samples, 3.07%)</title><rect x="737.4" y="131.0" width="36.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="740.4" y="142.0">soc..</text>
</g>
<g>
<title>__wake_up_sync_key (63 samples, 3.02%)</title><rect x="737.9" y="115.0" width="35.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="740.9" y="126.0">__w..</text>
</g>
<g>
<title>__wake_up_common_lock (63 samples, 3.02%)</title><rect x="737.9" y="99.0" width="35.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="740.9" y="110.0">__w..</text>
</g>
<g>
<title>__lock_text_start (62 samples, 2.98%)</title><rect x="737.9" y="83.0" width="35.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="740.9" y="94.0">__l..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.05%)</title><rect x="773.1" y="83.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="776.1" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.19%)</title><rect x="773.6" y="147.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="776.6" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.10%)</title><rect x="775.9" y="147.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="778.9" y="158.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.05%)</title><rect x="775.9" y="131.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="778.9" y="142.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.05%)</title><rect x="775.9" y="115.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="778.9" y="126.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.05%)</title><rect x="776.5" y="131.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="779.5" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.05%)</title><rect x="777.0" y="147.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="780.0" y="158.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.05%)</title><rect x="777.6" y="147.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="780.6" y="158.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.05%)</title><rect x="778.2" y="179.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="781.2" y="190.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.05%)</title><rect x="778.2" y="163.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="781.2" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.10%)</title><rect x="778.7" y="227.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="781.7" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="778.7" y="211.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="781.7" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.05%)</title><rect x="778.7" y="195.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="781.7" y="206.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="779.3" y="211.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="782.3" y="222.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="779.3" y="195.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="782.3" y="206.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.05%)</title><rect x="779.9" y="259.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="782.9" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.10%)</title><rect x="780.4" y="259.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="783.4" y="270.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat] (2 samples, 0.10%)</title><rect x="780.4" y="243.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="783.4" y="254.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="781.0" y="227.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="784.0" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="781.6" y="275.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="784.6" y="286.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.10%)</title><rect x="782.1" y="339.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="785.1" y="350.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.05%)</title><rect x="783.3" y="355.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="786.3" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (18 samples, 0.86%)</title><rect x="783.8" y="403.0" width="10.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="786.8" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (17 samples, 0.82%)</title><rect x="783.8" y="387.0" width="9.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="786.8" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 0.48%)</title><rect x="784.4" y="371.0" width="5.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="787.4" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="786.1" y="355.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="789.1" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.24%)</title><rect x="786.7" y="355.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="789.7" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="787.2" y="339.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="790.2" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.05%)</title><rect x="787.8" y="339.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="790.8" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.05%)</title><rect x="787.8" y="323.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="790.8" y="334.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.10%)</title><rect x="788.4" y="339.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="791.4" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.05%)</title><rect x="789.5" y="355.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="792.5" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.05%)</title><rect x="790.1" y="371.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="793.1" y="382.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (2 samples, 0.10%)</title><rect x="790.6" y="371.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="793.6" y="382.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.05%)</title><rect x="791.8" y="371.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="794.8" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.10%)</title><rect x="792.3" y="371.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="795.3" y="382.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.05%)</title><rect x="792.9" y="355.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="795.9" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.05%)</title><rect x="793.5" y="387.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="796.5" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="794.0" y="419.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="797.0" y="430.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.10%)</title><rect x="794.6" y="451.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="797.6" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.19%)</title><rect x="795.7" y="451.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="798.7" y="462.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="796.3" y="435.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="799.3" y="446.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="796.3" y="419.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="799.3" y="430.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.05%)</title><rect x="796.3" y="403.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="799.3" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat] (2 samples, 0.10%)</title><rect x="796.9" y="435.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="799.9" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="797.4" y="419.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="800.4" y="430.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="797.4" y="403.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="800.4" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat] (1 samples, 0.05%)</title><rect x="798.0" y="451.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="801.0" y="462.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.10%)</title><rect x="798.6" y="483.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="801.6" y="494.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.05%)</title><rect x="799.7" y="515.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="802.7" y="526.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.05%)</title><rect x="799.7" y="499.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="802.7" y="510.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.05%)</title><rect x="800.3" y="531.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="803.3" y="542.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.05%)</title><rect x="800.8" y="531.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="803.8" y="542.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.05%)</title><rect x="801.4" y="531.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="804.4" y="542.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.05%)</title><rect x="801.4" y="515.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="804.4" y="526.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.05%)</title><rect x="802.0" y="531.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="805.0" y="542.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.05%)</title><rect x="802.5" y="531.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="805.5" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.29%)</title><rect x="803.1" y="531.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="806.1" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.10%)</title><rect x="805.4" y="515.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="808.4" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.05%)</title><rect x="805.9" y="499.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="808.9" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="805.9" y="483.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="808.9" y="494.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.05%)</title><rect x="806.5" y="531.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="809.5" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.05%)</title><rect x="807.1" y="563.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="810.1" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.24%)</title><rect x="807.6" y="579.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="810.6" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.10%)</title><rect x="807.6" y="563.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="810.6" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.10%)</title><rect x="808.8" y="563.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="811.8" y="574.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.05%)</title><rect x="809.3" y="547.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="812.3" y="558.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.05%)</title><rect x="809.9" y="563.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="812.9" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.05%)</title><rect x="810.5" y="611.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="813.5" y="622.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.05%)</title><rect x="811.0" y="627.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="814.0" y="638.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.19%)</title><rect x="811.6" y="627.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="814.6" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.19%)</title><rect x="811.6" y="611.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="814.6" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.19%)</title><rect x="811.6" y="595.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="814.6" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.19%)</title><rect x="811.6" y="579.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="814.6" y="590.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.10%)</title><rect x="812.7" y="563.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="815.7" y="574.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (1 samples, 0.05%)</title><rect x="813.3" y="547.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="816.3" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.29%)</title><rect x="813.9" y="643.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="816.9" y="654.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.29%)</title><rect x="813.9" y="627.0" width="3.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="816.9" y="638.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.29%)</title><rect x="813.9" y="611.0" width="3.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="816.9" y="622.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.24%)</title><rect x="814.4" y="595.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="817.4" y="606.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.19%)</title><rect x="817.2" y="771.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="820.2" y="782.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.19%)</title><rect x="817.2" y="755.0" width="2.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="820.2" y="766.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.19%)</title><rect x="817.2" y="739.0" width="2.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="820.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (16 samples, 0.77%)</title><rect x="819.5" y="803.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.43%)</title><rect x="823.5" y="787.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="826.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.43%)</title><rect x="823.5" y="771.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="826.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValidatedParameters.validateParameters (37 samples, 1.78%)</title><rect x="828.6" y="835.0" width="20.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="831.6" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValidatedParameters.unpackReplicasParameter (37 samples, 1.78%)</title><rect x="828.6" y="819.0" width="20.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="831.6" y="830.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (8 samples, 0.38%)</title><rect x="828.6" y="803.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="831.6" y="814.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (8 samples, 0.38%)</title><rect x="828.6" y="787.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="831.6" y="798.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.&lt;init&gt; (3 samples, 0.14%)</title><rect x="829.1" y="771.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="832.1" y="782.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.&lt;init&gt; (4 samples, 0.19%)</title><rect x="830.8" y="771.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="833.8" y="782.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.&lt;init&gt; (3 samples, 0.14%)</title><rect x="831.4" y="755.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="834.4" y="766.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (25 samples, 1.20%)</title><rect x="833.1" y="803.0" width="14.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="836.1" y="814.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (15 samples, 0.72%)</title><rect x="833.7" y="787.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="836.7" y="798.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (15 samples, 0.72%)</title><rect x="833.7" y="771.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="836.7" y="782.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (15 samples, 0.72%)</title><rect x="833.7" y="755.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="836.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (15 samples, 0.72%)</title><rect x="833.7" y="739.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="836.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (15 samples, 0.72%)</title><rect x="833.7" y="723.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="836.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.72%)</title><rect x="833.7" y="707.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="836.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.72%)</title><rect x="833.7" y="691.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="836.7" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.10%)</title><rect x="839.3" y="675.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="842.3" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="839.3" y="659.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="842.3" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="839.3" y="643.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="842.3" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="839.3" y="627.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="842.3" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="839.3" y="611.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="842.3" y="622.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.05%)</title><rect x="839.9" y="659.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="842.9" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.05%)</title><rect x="840.5" y="675.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="843.5" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="840.5" y="659.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="843.5" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="840.5" y="643.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="843.5" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="840.5" y="627.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="843.5" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="840.5" y="611.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="843.5" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="840.5" y="595.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="843.5" y="606.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.05%)</title><rect x="840.5" y="579.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="843.5" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.05%)</title><rect x="840.5" y="563.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="843.5" y="574.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.05%)</title><rect x="840.5" y="547.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="843.5" y="558.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.05%)</title><rect x="841.0" y="675.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="844.0" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="841.6" y="675.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="844.6" y="686.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.next (1 samples, 0.05%)</title><rect x="842.2" y="787.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="845.2" y="798.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (3 samples, 0.14%)</title><rect x="842.7" y="787.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="845.7" y="798.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (3 samples, 0.14%)</title><rect x="842.7" y="771.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="845.7" y="782.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (3 samples, 0.14%)</title><rect x="842.7" y="755.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="845.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.&lt;init&gt; (3 samples, 0.14%)</title><rect x="842.7" y="739.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="845.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.&lt;init&gt; (3 samples, 0.14%)</title><rect x="842.7" y="723.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="845.7" y="734.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="843.9" y="707.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="846.9" y="718.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="843.9" y="691.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="846.9" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.24%)</title><rect x="844.4" y="787.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="847.4" y="798.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="846.1" y="771.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="849.1" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="846.7" y="771.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="849.7" y="782.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.19%)</title><rect x="847.3" y="803.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.3" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.14%)</title><rect x="847.8" y="787.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="850.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.10%)</title><rect x="848.4" y="771.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="851.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.10%)</title><rect x="848.4" y="755.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="851.4" y="766.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (11 samples, 0.53%)</title><rect x="849.5" y="867.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="852.5" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (11 samples, 0.53%)</title><rect x="849.5" y="851.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="852.5" y="862.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$121/1107097229.run (11 samples, 0.53%)</title><rect x="849.5" y="835.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="852.5" y="846.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (11 samples, 0.53%)</title><rect x="849.5" y="819.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="852.5" y="830.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (11 samples, 0.53%)</title><rect x="849.5" y="803.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="852.5" y="814.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (11 samples, 0.53%)</title><rect x="849.5" y="787.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="852.5" y="798.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (11 samples, 0.53%)</title><rect x="849.5" y="771.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="852.5" y="782.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (11 samples, 0.53%)</title><rect x="849.5" y="755.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="852.5" y="766.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (11 samples, 0.53%)</title><rect x="849.5" y="739.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="852.5" y="750.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (11 samples, 0.53%)</title><rect x="849.5" y="723.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="852.5" y="734.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (11 samples, 0.53%)</title><rect x="849.5" y="707.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="852.5" y="718.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.34%)</title><rect x="849.5" y="691.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="852.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.34%)</title><rect x="849.5" y="675.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="852.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (1 samples, 0.05%)</title><rect x="849.5" y="659.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="852.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (6 samples, 0.29%)</title><rect x="850.1" y="659.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="853.1" y="670.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (6 samples, 0.29%)</title><rect x="850.1" y="643.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.1" y="654.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (6 samples, 0.29%)</title><rect x="850.1" y="627.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="853.1" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (6 samples, 0.29%)</title><rect x="850.1" y="611.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="853.1" y="622.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (6 samples, 0.29%)</title><rect x="850.1" y="595.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.1" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (6 samples, 0.29%)</title><rect x="850.1" y="579.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="853.1" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (6 samples, 0.29%)</title><rect x="850.1" y="563.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="853.1" y="574.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (6 samples, 0.29%)</title><rect x="850.1" y="547.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.1" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (6 samples, 0.29%)</title><rect x="850.1" y="531.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.1" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (6 samples, 0.29%)</title><rect x="850.1" y="515.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.1" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (6 samples, 0.29%)</title><rect x="850.1" y="499.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.1" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (6 samples, 0.29%)</title><rect x="850.1" y="483.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.1" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (6 samples, 0.29%)</title><rect x="850.1" y="467.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="853.1" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (6 samples, 0.29%)</title><rect x="850.1" y="451.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="853.1" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (6 samples, 0.29%)</title><rect x="850.1" y="435.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.1" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (4 samples, 0.19%)</title><rect x="850.1" y="419.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.1" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (4 samples, 0.19%)</title><rect x="850.1" y="403.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="853.1" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (4 samples, 0.19%)</title><rect x="850.1" y="387.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="853.1" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (4 samples, 0.19%)</title><rect x="850.1" y="371.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.1" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (3 samples, 0.14%)</title><rect x="850.1" y="355.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.1" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (3 samples, 0.14%)</title><rect x="850.1" y="339.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.1" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (3 samples, 0.14%)</title><rect x="850.1" y="323.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="853.1" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (3 samples, 0.14%)</title><rect x="850.1" y="307.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="853.1" y="318.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.10%)</title><rect x="850.1" y="291.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="853.1" y="302.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (2 samples, 0.10%)</title><rect x="850.1" y="275.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.1" y="286.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="850.1" y="259.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.1" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.05%)</title><rect x="850.7" y="259.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="853.7" y="270.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="850.7" y="243.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.7" y="254.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="850.7" y="227.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.7" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.05%)</title><rect x="850.7" y="211.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.7" y="222.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.05%)</title><rect x="850.7" y="195.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="853.7" y="206.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.05%)</title><rect x="850.7" y="179.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.7" y="190.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 0.05%)</title><rect x="851.2" y="291.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="854.2" y="302.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.05%)</title><rect x="851.8" y="355.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="854.8" y="366.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (1 samples, 0.05%)</title><rect x="851.8" y="339.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="854.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.05%)</title><rect x="851.8" y="323.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="854.8" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.05%)</title><rect x="851.8" y="307.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="854.8" y="318.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.05%)</title><rect x="851.8" y="291.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="854.8" y="302.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.05%)</title><rect x="851.8" y="275.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="854.8" y="286.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.10%)</title><rect x="852.4" y="419.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="855.4" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.10%)</title><rect x="852.4" y="403.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="855.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.10%)</title><rect x="852.4" y="387.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (2 samples, 0.10%)</title><rect x="852.4" y="371.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="855.4" y="382.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (2 samples, 0.10%)</title><rect x="852.4" y="355.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="855.4" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.10%)</title><rect x="852.4" y="339.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="855.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.10%)</title><rect x="852.4" y="323.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="855.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (2 samples, 0.10%)</title><rect x="852.4" y="307.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.4" y="318.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (2 samples, 0.10%)</title><rect x="852.4" y="291.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="855.4" y="302.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (2 samples, 0.10%)</title><rect x="852.4" y="275.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="855.4" y="286.0"></text>
</g>
<g>
<title>Java_sun_management_ThreadImpl_getThreadInfo1 (1 samples, 0.05%)</title><rect x="852.4" y="259.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="855.4" y="270.0"></text>
</g>
<g>
<title>jmm_GetThreadInfo (1 samples, 0.05%)</title><rect x="852.9" y="259.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="855.9" y="270.0"></text>
</g>
<g>
<title>Management::create_thread_info_instance(ThreadSnapshot*, Thread*) (1 samples, 0.05%)</title><rect x="852.9" y="243.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="855.9" y="254.0"></text>
</g>
<g>
<title>initialize_ThreadInfo_constructor_arguments(JavaCallArguments*, ThreadSnapshot*, Thread*) (1 samples, 0.05%)</title><rect x="852.9" y="227.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="855.9" y="238.0"></text>
</g>
<g>
<title>ThreadStackTrace::allocate_fill_stack_trace_element_array(Thread*) (1 samples, 0.05%)</title><rect x="852.9" y="211.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="855.9" y="222.0"></text>
</g>
<g>
<title>java_lang_StackTraceElement::create(methodHandle const&amp;, int, Thread*) (1 samples, 0.05%)</title><rect x="852.9" y="195.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="855.9" y="206.0"></text>
</g>
<g>
<title>java_lang_StackTraceElement::fill_in(Handle, InstanceKlass*, methodHandle const&amp;, int, int, Symbol*, Thread*) (1 samples, 0.05%)</title><rect x="852.9" y="179.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="855.9" y="190.0"></text>
</g>
<g>
<title>StringTable::intern(Symbol*, Thread*) (1 samples, 0.05%)</title><rect x="852.9" y="163.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="855.9" y="174.0"></text>
</g>
<g>
<title>Symbol::as_unicode(int&amp;) const (1 samples, 0.05%)</title><rect x="852.9" y="147.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="855.9" y="158.0"></text>
</g>
<g>
<title>void UTF8::convert_to_unicode&lt;unsigned short&gt;(char const*, unsigned short*, int) (1 samples, 0.05%)</title><rect x="852.9" y="131.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="855.9" y="142.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (4 samples, 0.19%)</title><rect x="853.5" y="691.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="856.5" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (4 samples, 0.19%)</title><rect x="853.5" y="675.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="856.5" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.19%)</title><rect x="853.5" y="659.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="856.5" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (4 samples, 0.19%)</title><rect x="853.5" y="643.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.5" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.19%)</title><rect x="853.5" y="627.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.5" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (4 samples, 0.19%)</title><rect x="853.5" y="611.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.5" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (4 samples, 0.19%)</title><rect x="853.5" y="595.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.5" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (4 samples, 0.19%)</title><rect x="853.5" y="579.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="856.5" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.19%)</title><rect x="853.5" y="563.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="856.5" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (4 samples, 0.19%)</title><rect x="853.5" y="547.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="856.5" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (4 samples, 0.19%)</title><rect x="853.5" y="531.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="856.5" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (4 samples, 0.19%)</title><rect x="853.5" y="515.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="856.5" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.19%)</title><rect x="853.5" y="499.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="856.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.19%)</title><rect x="853.5" y="483.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="856.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor32.invoke (4 samples, 0.19%)</title><rect x="853.5" y="467.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="856.5" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (4 samples, 0.19%)</title><rect x="853.5" y="451.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="856.5" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (4 samples, 0.19%)</title><rect x="853.5" y="435.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="856.5" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.19%)</title><rect x="853.5" y="419.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="856.5" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.setBlockDataMode (1 samples, 0.05%)</title><rect x="854.1" y="403.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="857.1" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.drain (1 samples, 0.05%)</title><rect x="854.1" y="387.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="857.1" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.writeBlockHeader (1 samples, 0.05%)</title><rect x="854.1" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="857.1" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (1 samples, 0.05%)</title><rect x="854.6" y="403.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="857.6" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.05%)</title><rect x="854.6" y="387.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="857.6" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.05%)</title><rect x="854.6" y="371.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="857.6" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.05%)</title><rect x="854.6" y="355.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="857.6" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.05%)</title><rect x="854.6" y="339.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="857.6" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.05%)</title><rect x="854.6" y="323.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="857.6" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.05%)</title><rect x="854.6" y="307.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="857.6" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.05%)</title><rect x="854.6" y="291.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="857.6" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.05%)</title><rect x="854.6" y="275.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="857.6" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.05%)</title><rect x="854.6" y="259.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="857.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.05%)</title><rect x="854.6" y="243.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="857.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor32.invoke (1 samples, 0.05%)</title><rect x="854.6" y="227.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="857.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.05%)</title><rect x="854.6" y="211.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="857.6" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.05%)</title><rect x="854.6" y="195.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="857.6" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.05%)</title><rect x="854.6" y="179.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="857.6" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.05%)</title><rect x="855.2" y="403.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="858.2" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.05%)</title><rect x="855.2" y="387.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="858.2" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.setBlockDataMode (1 samples, 0.05%)</title><rect x="855.2" y="371.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="858.2" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.drain (1 samples, 0.05%)</title><rect x="855.2" y="355.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="858.2" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.writeBlockHeader (1 samples, 0.05%)</title><rect x="855.2" y="339.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="858.2" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (355 samples, 17.04%)</title><rect x="855.8" y="915.0" width="201.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="858.8" y="926.0">one/nio/server/SelectorThr..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="856.3" y="899.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="859.3" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (56 samples, 2.69%)</title><rect x="856.9" y="899.0" width="31.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="859.9" y="910.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (54 samples, 2.59%)</title><rect x="858.0" y="883.0" width="30.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="861.0" y="894.0">on..</text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.10%)</title><rect x="863.1" y="867.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="866.1" y="878.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.10%)</title><rect x="863.1" y="851.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="866.1" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.10%)</title><rect x="863.1" y="835.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="866.1" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.10%)</title><rect x="863.1" y="819.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="866.1" y="830.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.10%)</title><rect x="863.1" y="803.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="866.1" y="814.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.10%)</title><rect x="863.1" y="787.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="866.1" y="798.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="863.7" y="771.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="866.7" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.10%)</title><rect x="864.3" y="867.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="867.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.78%)</title><rect x="865.4" y="867.0" width="21.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="868.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.29%)</title><rect x="865.4" y="851.0" width="3.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="868.4" y="862.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.29%)</title><rect x="865.4" y="835.0" width="3.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="868.4" y="846.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.14%)</title><rect x="867.1" y="819.0" width="1.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="870.1" y="830.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.14%)</title><rect x="867.1" y="803.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="870.1" y="814.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.05%)</title><rect x="868.8" y="851.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="871.8" y="862.0"></text>
</g>
<g>
<title>epoll_wait (30 samples, 1.44%)</title><rect x="869.4" y="851.0" width="17.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="872.4" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 1.06%)</title><rect x="873.9" y="835.0" width="12.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="876.9" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 1.06%)</title><rect x="873.9" y="819.0" width="12.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="876.9" y="830.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (21 samples, 1.01%)</title><rect x="874.5" y="803.0" width="11.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="877.5" y="814.0"></text>
</g>
<g>
<title>do_epoll_wait (21 samples, 1.01%)</title><rect x="874.5" y="787.0" width="11.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="877.5" y="798.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="875.0" y="771.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="878.0" y="782.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="875.0" y="755.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="878.0" y="766.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="875.0" y="739.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="878.0" y="750.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="875.6" y="771.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="878.6" y="782.0"></text>
</g>
<g>
<title>ep_poll (17 samples, 0.82%)</title><rect x="876.2" y="771.0" width="9.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="879.2" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (9 samples, 0.43%)</title><rect x="877.3" y="755.0" width="5.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="880.3" y="766.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="878.4" y="739.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="881.4" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.29%)</title><rect x="879.0" y="739.0" width="3.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="882.0" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (4 samples, 0.19%)</title><rect x="880.1" y="723.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="883.1" y="734.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.14%)</title><rect x="880.7" y="707.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="883.7" y="718.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.10%)</title><rect x="880.7" y="691.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="883.7" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.05%)</title><rect x="881.8" y="691.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="884.8" y="702.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.05%)</title><rect x="882.4" y="755.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="885.4" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.19%)</title><rect x="883.0" y="755.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="886.0" y="766.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="883.0" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="886.0" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.14%)</title><rect x="883.5" y="739.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="886.5" y="750.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.14%)</title><rect x="883.5" y="723.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="886.5" y="734.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.10%)</title><rect x="884.1" y="707.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="887.1" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.05%)</title><rect x="885.2" y="755.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="888.2" y="766.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.05%)</title><rect x="885.8" y="771.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="888.8" y="782.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.19%)</title><rect x="886.4" y="867.0" width="2.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="889.4" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (296 samples, 14.21%)</title><rect x="888.6" y="899.0" width="167.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="891.6" y="910.0">one/nio/net/Session.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (290 samples, 13.92%)</title><rect x="892.0" y="883.0" width="164.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="895.0" y="894.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (213 samples, 10.23%)</title><rect x="892.6" y="867.0" width="120.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="895.6" y="878.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.05%)</title><rect x="896.6" y="851.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="899.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (153 samples, 7.35%)</title><rect x="897.1" y="851.0" width="86.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="900.1" y="862.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (150 samples, 7.20%)</title><rect x="898.8" y="835.0" width="85.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="901.8" y="846.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (144 samples, 6.91%)</title><rect x="898.8" y="819.0" width="81.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="901.8" y="830.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.34%)</title><rect x="898.8" y="803.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.8" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="901.7" y="787.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="904.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.05%)</title><rect x="902.2" y="787.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="905.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (12 samples, 0.58%)</title><rect x="902.8" y="803.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="905.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 0.58%)</title><rect x="902.8" y="787.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="905.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="905.1" y="771.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="908.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="905.1" y="755.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="908.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.10%)</title><rect x="905.6" y="771.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="908.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.10%)</title><rect x="905.6" y="755.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="908.6" y="766.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.05%)</title><rect x="906.8" y="771.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="909.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.19%)</title><rect x="907.3" y="771.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="910.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.19%)</title><rect x="907.3" y="755.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="910.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.19%)</title><rect x="907.3" y="739.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="910.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.19%)</title><rect x="907.3" y="723.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="910.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut (125 samples, 6.00%)</title><rect x="909.6" y="803.0" width="70.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="912.6" y="814.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/76338237.linkToTargetMethod (1 samples, 0.05%)</title><rect x="909.6" y="787.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="912.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="909.6" y="771.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="912.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$75/54338970.get$Lambda (1 samples, 0.05%)</title><rect x="909.6" y="755.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="912.6" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="909.6" y="739.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="912.6" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="909.6" y="723.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="912.6" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="909.6" y="707.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="912.6" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="909.6" y="691.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="912.6" y="702.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.05%)</title><rect x="909.6" y="675.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="912.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.executeOrSendError (124 samples, 5.95%)</title><rect x="910.2" y="787.0" width="70.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="913.2" y="798.0">ru/mail/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (124 samples, 5.95%)</title><rect x="910.2" y="771.0" width="70.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="913.2" y="782.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (124 samples, 5.95%)</title><rect x="910.2" y="755.0" width="70.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="913.2" y="766.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (7 samples, 0.34%)</title><rect x="912.4" y="739.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="915.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (7 samples, 0.34%)</title><rect x="912.4" y="723.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="915.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (7 samples, 0.34%)</title><rect x="912.4" y="707.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="915.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (7 samples, 0.34%)</title><rect x="912.4" y="691.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="915.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (7 samples, 0.34%)</title><rect x="912.4" y="675.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="915.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.19%)</title><rect x="916.4" y="739.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="919.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.19%)</title><rect x="916.4" y="723.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="919.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (109 samples, 5.23%)</title><rect x="918.7" y="739.0" width="61.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="921.7" y="750.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (109 samples, 5.23%)</title><rect x="918.7" y="723.0" width="61.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="921.7" y="734.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (109 samples, 5.23%)</title><rect x="918.7" y="707.0" width="61.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="921.7" y="718.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (108 samples, 5.18%)</title><rect x="919.2" y="691.0" width="61.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="922.2" y="702.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (108 samples, 5.18%)</title><rect x="919.2" y="675.0" width="61.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="922.2" y="686.0">jdk/in..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="919.8" y="659.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="922.8" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.10%)</title><rect x="920.4" y="659.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="923.4" y="670.0"></text>
</g>
<g>
<title>Unsafe_Unpark (16 samples, 0.77%)</title><rect x="921.5" y="659.0" width="9.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="924.5" y="670.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.10%)</title><rect x="922.6" y="643.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="925.6" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.19%)</title><rect x="923.7" y="643.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="926.7" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.19%)</title><rect x="926.0" y="643.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="929.0" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.05%)</title><rect x="928.3" y="643.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="931.3" y="654.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.05%)</title><rect x="928.8" y="643.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="931.8" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="929.4" y="643.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="932.4" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="930.0" y="643.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="933.0" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (86 samples, 4.13%)</title><rect x="930.5" y="659.0" width="48.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="933.5" y="670.0">__pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (81 samples, 3.89%)</title><rect x="933.4" y="643.0" width="45.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="936.4" y="654.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (81 samples, 3.89%)</title><rect x="933.4" y="627.0" width="45.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="936.4" y="638.0">do_s..</text>
</g>
<g>
<title>__x64_sys_futex (79 samples, 3.79%)</title><rect x="934.5" y="611.0" width="44.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="937.5" y="622.0">__x6..</text>
</g>
<g>
<title>do_futex (79 samples, 3.79%)</title><rect x="934.5" y="595.0" width="44.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="937.5" y="606.0">do_f..</text>
</g>
<g>
<title>futex_wake (78 samples, 3.74%)</title><rect x="935.1" y="579.0" width="44.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="938.1" y="590.0">fute..</text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.10%)</title><rect x="940.2" y="563.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="943.2" y="574.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.19%)</title><rect x="941.3" y="563.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="944.3" y="574.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.05%)</title><rect x="943.0" y="547.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="946.0" y="558.0"></text>
</g>
<g>
<title>wake_up_q (63 samples, 3.02%)</title><rect x="943.6" y="563.0" width="35.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="946.6" y="574.0">wak..</text>
</g>
<g>
<title>try_to_wake_up (63 samples, 3.02%)</title><rect x="943.6" y="547.0" width="35.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="946.6" y="558.0">try..</text>
</g>
<g>
<title>__lock_text_start (62 samples, 2.98%)</title><rect x="943.6" y="531.0" width="35.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="946.6" y="542.0">__l..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.05%)</title><rect x="978.7" y="531.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="981.7" y="542.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.10%)</title><rect x="979.3" y="659.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="982.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 0.29%)</title><rect x="980.4" y="819.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="983.4" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.29%)</title><rect x="980.4" y="803.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="983.4" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.10%)</title><rect x="980.4" y="787.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="983.4" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.19%)</title><rect x="981.5" y="787.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="984.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.19%)</title><rect x="981.5" y="771.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="984.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.19%)</title><rect x="981.5" y="755.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="984.5" y="766.0"></text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (2 samples, 0.10%)</title><rect x="981.5" y="739.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="984.5" y="750.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.10%)</title><rect x="982.7" y="739.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="985.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.43%)</title><rect x="983.8" y="851.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="986.8" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.05%)</title><rect x="983.8" y="835.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="986.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.10%)</title><rect x="984.4" y="835.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="987.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.10%)</title><rect x="984.4" y="819.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="987.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.10%)</title><rect x="984.4" y="803.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="987.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.10%)</title><rect x="984.4" y="787.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="987.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="984.9" y="771.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="987.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.29%)</title><rect x="985.5" y="835.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="988.5" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.24%)</title><rect x="986.1" y="819.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="989.1" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="988.3" y="803.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="991.3" y="814.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="988.3" y="787.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="991.3" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="988.3" y="771.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="991.3" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="988.3" y="755.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="991.3" y="766.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="988.3" y="739.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="991.3" y="750.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.05%)</title><rect x="988.3" y="723.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="991.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (27 samples, 1.30%)</title><rect x="988.9" y="851.0" width="15.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="991.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.19%)</title><rect x="1001.9" y="835.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1004.9" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.19%)</title><rect x="1001.9" y="819.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1004.9" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.77%)</title><rect x="1004.2" y="851.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1007.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.77%)</title><rect x="1004.2" y="835.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1007.2" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="1012.7" y="819.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1015.7" y="830.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1012.7" y="803.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1015.7" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1012.7" y="787.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1015.7" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="1012.7" y="771.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1015.7" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="1012.7" y="755.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1015.7" y="766.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.05%)</title><rect x="1012.7" y="739.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1015.7" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (76 samples, 3.65%)</title><rect x="1013.3" y="867.0" width="43.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1016.3" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (71 samples, 3.41%)</title><rect x="1016.1" y="851.0" width="40.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1019.1" y="862.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (12 samples, 0.58%)</title><rect x="1016.7" y="835.0" width="6.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1019.7" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="1017.8" y="819.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1020.8" y="830.0"></text>
</g>
<g>
<title>__memmove_ssse3 (2 samples, 0.10%)</title><rect x="1018.4" y="819.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1021.4" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.34%)</title><rect x="1019.5" y="819.0" width="4.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1022.5" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.05%)</title><rect x="1020.6" y="803.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1023.6" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="1021.2" y="803.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1024.2" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.14%)</title><rect x="1021.8" y="803.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1024.8" y="814.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.14%)</title><rect x="1021.8" y="787.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1024.8" y="798.0"></text>
</g>
<g>
<title>__GI___recv (57 samples, 2.74%)</title><rect x="1023.5" y="835.0" width="32.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1026.5" y="846.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (54 samples, 2.59%)</title><rect x="1025.2" y="819.0" width="30.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1028.2" y="830.0">en..</text>
</g>
<g>
<title>do_syscall_64 (54 samples, 2.59%)</title><rect x="1025.2" y="803.0" width="30.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1028.2" y="814.0">do..</text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.05%)</title><rect x="1026.9" y="787.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1029.9" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (50 samples, 2.40%)</title><rect x="1027.4" y="787.0" width="28.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1030.4" y="798.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (46 samples, 2.21%)</title><rect x="1027.4" y="771.0" width="26.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1030.4" y="782.0">_..</text>
</g>
<g>
<title>import_single_range (1 samples, 0.05%)</title><rect x="1027.4" y="755.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1030.4" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (40 samples, 1.92%)</title><rect x="1028.0" y="755.0" width="22.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1031.0" y="766.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (26 samples, 1.25%)</title><rect x="1028.6" y="739.0" width="14.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1031.6" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (25 samples, 1.20%)</title><rect x="1029.1" y="723.0" width="14.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1032.1" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.24%)</title><rect x="1034.2" y="707.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1037.2" y="718.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.19%)</title><rect x="1034.2" y="691.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1037.2" y="702.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.05%)</title><rect x="1034.2" y="675.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1037.2" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.10%)</title><rect x="1034.8" y="675.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1037.8" y="686.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.10%)</title><rect x="1034.8" y="659.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1037.8" y="670.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.05%)</title><rect x="1035.9" y="675.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1038.9" y="686.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.05%)</title><rect x="1036.5" y="691.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1039.5" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (9 samples, 0.43%)</title><rect x="1037.0" y="707.0" width="5.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1040.0" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (9 samples, 0.43%)</title><rect x="1037.0" y="691.0" width="5.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1040.0" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.19%)</title><rect x="1039.9" y="675.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1042.9" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.05%)</title><rect x="1039.9" y="659.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1042.9" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.14%)</title><rect x="1040.4" y="659.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1043.4" y="670.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.10%)</title><rect x="1041.0" y="643.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1044.0" y="654.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.05%)</title><rect x="1042.1" y="707.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1045.1" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.05%)</title><rect x="1042.7" y="707.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1045.7" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.05%)</title><rect x="1042.7" y="691.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1045.7" y="702.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.05%)</title><rect x="1042.7" y="675.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1045.7" y="686.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.05%)</title><rect x="1042.7" y="659.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1045.7" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (13 samples, 0.62%)</title><rect x="1043.3" y="739.0" width="7.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1046.3" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (13 samples, 0.62%)</title><rect x="1043.3" y="723.0" width="7.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1046.3" y="734.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.05%)</title><rect x="1043.3" y="707.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1046.3" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (12 samples, 0.58%)</title><rect x="1043.8" y="707.0" width="6.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1046.8" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (12 samples, 0.58%)</title><rect x="1043.8" y="691.0" width="6.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1046.8" y="702.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (11 samples, 0.53%)</title><rect x="1044.4" y="675.0" width="6.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1047.4" y="686.0"></text>
</g>
<g>
<title>aa_check_perms (1 samples, 0.05%)</title><rect x="1045.0" y="659.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1048.0" y="670.0"></text>
</g>
<g>
<title>aa_label_next_confined (2 samples, 0.10%)</title><rect x="1045.5" y="659.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1048.5" y="670.0"></text>
</g>
<g>
<title>aa_profile_af_perm (7 samples, 0.34%)</title><rect x="1046.7" y="659.0" width="3.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1049.7" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.24%)</title><rect x="1050.6" y="755.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1053.6" y="766.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.24%)</title><rect x="1050.6" y="739.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1053.6" y="750.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.24%)</title><rect x="1050.6" y="723.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1053.6" y="734.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.10%)</title><rect x="1052.3" y="707.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1055.3" y="718.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.10%)</title><rect x="1053.5" y="771.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1056.5" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.05%)</title><rect x="1054.6" y="771.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1057.6" y="782.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.05%)</title><rect x="1055.2" y="771.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1058.2" y="782.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.05%)</title><rect x="1055.7" y="835.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1058.7" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="1056.3" y="899.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1059.3" y="910.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="1056.3" y="883.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1059.3" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Flusher.run (157 samples, 7.54%)</title><rect x="1056.9" y="915.0" width="88.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1059.9" y="926.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.serialize (157 samples, 7.54%)</title><rect x="1056.9" y="899.0" width="88.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1059.9" y="910.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (2 samples, 0.10%)</title><rect x="1056.9" y="883.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1059.9" y="894.0"></text>
</g>
<g>
<title>java/util/Iterator.forEachRemaining (155 samples, 7.44%)</title><rect x="1058.0" y="883.0" width="87.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1061.0" y="894.0">java/util/..</text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3 samples, 0.14%)</title><rect x="1058.0" y="867.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1061.0" y="878.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (3 samples, 0.14%)</title><rect x="1058.0" y="851.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1061.0" y="862.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (3 samples, 0.14%)</title><rect x="1058.0" y="835.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1061.0" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (3 samples, 0.14%)</title><rect x="1058.0" y="819.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1061.0" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$146/202599129.getAsBoolean (3 samples, 0.14%)</title><rect x="1058.0" y="803.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1061.0" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3 samples, 0.14%)</title><rect x="1058.0" y="787.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1061.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3 samples, 0.14%)</title><rect x="1058.0" y="771.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1061.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.10%)</title><rect x="1058.0" y="755.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1061.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.10%)</title><rect x="1058.0" y="739.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1061.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2 samples, 0.10%)</title><rect x="1058.0" y="723.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1061.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (2 samples, 0.10%)</title><rect x="1058.0" y="707.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1061.0" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.05%)</title><rect x="1059.1" y="755.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1062.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable$$Lambda$134/643474225.apply (1 samples, 0.05%)</title><rect x="1059.1" y="739.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1062.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.lambda$iterator$0 (1 samples, 0.05%)</title><rect x="1059.1" y="723.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1062.1" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="1059.1" y="707.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1062.1" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="1059.1" y="691.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1062.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$$Lambda$140/683287089.accept (152 samples, 7.30%)</title><rect x="1059.7" y="867.0" width="86.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1062.7" y="878.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.lambda$serialize$0 (152 samples, 7.30%)</title><rect x="1059.7" y="851.0" width="86.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1062.7" y="862.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.14%)</title><rect x="1060.8" y="835.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1063.8" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.14%)</title><rect x="1060.8" y="819.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1063.8" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="1062.0" y="803.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1065.0" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="1062.0" y="787.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1065.0" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.05%)</title><rect x="1062.0" y="771.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1065.0" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (147 samples, 7.06%)</title><rect x="1062.5" y="835.0" width="83.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1065.5" y="846.0">sun/nio/c..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.05%)</title><rect x="1062.5" y="819.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1065.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.05%)</title><rect x="1063.1" y="819.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1066.1" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.05%)</title><rect x="1063.1" y="803.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1066.1" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.05%)</title><rect x="1063.1" y="787.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1066.1" y="798.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.05%)</title><rect x="1063.1" y="771.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1066.1" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.05%)</title><rect x="1063.1" y="755.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1066.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (144 samples, 6.91%)</title><rect x="1063.7" y="819.0" width="81.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1066.7" y="830.0">sun/nio/c..</text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="1063.7" y="803.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1066.7" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="1063.7" y="787.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1066.7" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.10%)</title><rect x="1064.2" y="803.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1067.2" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.10%)</title><rect x="1064.2" y="787.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1067.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.05%)</title><rect x="1064.8" y="771.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1067.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.05%)</title><rect x="1064.8" y="755.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1067.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.05%)</title><rect x="1064.8" y="739.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1067.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.05%)</title><rect x="1064.8" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1067.8" y="734.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.05%)</title><rect x="1064.8" y="707.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1067.8" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (139 samples, 6.67%)</title><rect x="1065.4" y="803.0" width="78.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1068.4" y="814.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (136 samples, 6.53%)</title><rect x="1067.1" y="787.0" width="77.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1070.1" y="798.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (136 samples, 6.53%)</title><rect x="1067.1" y="771.0" width="77.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1070.1" y="782.0">sun/nio/c..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (2 samples, 0.10%)</title><rect x="1067.6" y="755.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1070.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (133 samples, 6.39%)</title><rect x="1068.8" y="755.0" width="75.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1071.8" y="766.0">[unknown]</text>
</g>
<g>
<title>__GI_write (131 samples, 6.29%)</title><rect x="1068.8" y="739.0" width="74.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1071.8" y="750.0">__GI_write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (127 samples, 6.10%)</title><rect x="1071.0" y="723.0" width="72.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1074.0" y="734.0">entry_SY..</text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.10%)</title><rect x="1071.0" y="707.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1074.0" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (125 samples, 6.00%)</title><rect x="1072.2" y="707.0" width="70.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1075.2" y="718.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_write (122 samples, 5.86%)</title><rect x="1073.9" y="691.0" width="69.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1076.9" y="702.0">__x64_s..</text>
</g>
<g>
<title>fput (1 samples, 0.05%)</title><rect x="1073.9" y="675.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1076.9" y="686.0"></text>
</g>
<g>
<title>ksys_write (121 samples, 5.81%)</title><rect x="1074.4" y="675.0" width="68.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1077.4" y="686.0">ksys_wr..</text>
</g>
<g>
<title>vfs_write (121 samples, 5.81%)</title><rect x="1074.4" y="659.0" width="68.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1077.4" y="670.0">vfs_write</text>
</g>
<g>
<title>__vfs_write (118 samples, 5.66%)</title><rect x="1074.4" y="643.0" width="66.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1077.4" y="654.0">__vfs_w..</text>
</g>
<g>
<title>new_sync_write (118 samples, 5.66%)</title><rect x="1074.4" y="627.0" width="66.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1077.4" y="638.0">new_syn..</text>
</g>
<g>
<title>ext4_file_write_iter (117 samples, 5.62%)</title><rect x="1075.0" y="611.0" width="66.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1078.0" y="622.0">ext4_fi..</text>
</g>
<g>
<title>__generic_file_write_iter (115 samples, 5.52%)</title><rect x="1075.0" y="595.0" width="65.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1078.0" y="606.0">__gener..</text>
</g>
<g>
<title>file_update_time (1 samples, 0.05%)</title><rect x="1075.6" y="579.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1078.6" y="590.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.05%)</title><rect x="1075.6" y="563.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1078.6" y="574.0"></text>
</g>
<g>
<title>generic_perform_write (113 samples, 5.42%)</title><rect x="1076.1" y="579.0" width="64.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1079.1" y="590.0">generic..</text>
</g>
<g>
<title>ext4_da_write_begin (40 samples, 1.92%)</title><rect x="1076.7" y="563.0" width="22.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1079.7" y="574.0">e..</text>
</g>
<g>
<title>__ext4_journal_start_sb (32 samples, 1.54%)</title><rect x="1078.4" y="547.0" width="18.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1081.4" y="558.0"></text>
</g>
<g>
<title>ext4_journal_check_start (5 samples, 0.24%)</title><rect x="1078.4" y="531.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1081.4" y="542.0"></text>
</g>
<g>
<title>jbd2__journal_start (27 samples, 1.30%)</title><rect x="1081.2" y="531.0" width="15.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1084.2" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.05%)</title><rect x="1081.2" y="515.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1084.2" y="526.0"></text>
</g>
<g>
<title>memset (1 samples, 0.05%)</title><rect x="1081.8" y="515.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1084.8" y="526.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.05%)</title><rect x="1082.4" y="515.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1085.4" y="526.0"></text>
</g>
<g>
<title>start_this_handle (24 samples, 1.15%)</title><rect x="1082.9" y="515.0" width="13.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1085.9" y="526.0"></text>
</g>
<g>
<title>_raw_read_lock (6 samples, 0.29%)</title><rect x="1088.6" y="499.0" width="3.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1091.6" y="510.0"></text>
</g>
<g>
<title>add_transaction_credits (8 samples, 0.38%)</title><rect x="1092.0" y="499.0" width="4.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1095.0" y="510.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (3 samples, 0.14%)</title><rect x="1096.5" y="547.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1099.5" y="558.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.10%)</title><rect x="1096.5" y="531.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1099.5" y="542.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.10%)</title><rect x="1096.5" y="515.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1099.5" y="526.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.05%)</title><rect x="1097.1" y="499.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1100.1" y="510.0"></text>
</g>
<g>
<title>wait_for_stable_page (1 samples, 0.05%)</title><rect x="1097.7" y="531.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1100.7" y="542.0"></text>
</g>
<g>
<title>unlock_page (2 samples, 0.10%)</title><rect x="1098.2" y="547.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1101.2" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_end (65 samples, 3.12%)</title><rect x="1099.4" y="563.0" width="36.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1102.4" y="574.0">ext..</text>
</g>
<g>
<title>__ext4_journal_stop (13 samples, 0.62%)</title><rect x="1099.9" y="547.0" width="7.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1102.9" y="558.0"></text>
</g>
<g>
<title>jbd2_journal_stop (13 samples, 0.62%)</title><rect x="1099.9" y="531.0" width="7.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1102.9" y="542.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.10%)</title><rect x="1106.2" y="515.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1109.2" y="526.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.10%)</title><rect x="1106.2" y="499.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1109.2" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="1106.2" y="483.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1109.2" y="494.0"></text>
</g>
<g>
<title>generic_write_end (51 samples, 2.45%)</title><rect x="1107.3" y="547.0" width="28.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1110.3" y="558.0">ge..</text>
</g>
<g>
<title>__mark_inode_dirty (45 samples, 2.16%)</title><rect x="1109.0" y="531.0" width="25.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1112.0" y="542.0">_..</text>
</g>
<g>
<title>ext4_dirty_inode (45 samples, 2.16%)</title><rect x="1109.0" y="515.0" width="25.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1112.0" y="526.0">e..</text>
</g>
<g>
<title>__ext4_journal_start_sb (10 samples, 0.48%)</title><rect x="1109.6" y="499.0" width="5.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1112.6" y="510.0"></text>
</g>
<g>
<title>ext4_journal_check_start (9 samples, 0.43%)</title><rect x="1110.1" y="483.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1113.1" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_stop (3 samples, 0.14%)</title><rect x="1115.2" y="499.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1118.2" y="510.0"></text>
</g>
<g>
<title>jbd2_journal_stop (3 samples, 0.14%)</title><rect x="1115.2" y="483.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1118.2" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (31 samples, 1.49%)</title><rect x="1116.9" y="499.0" width="17.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1119.9" y="510.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (20 samples, 0.96%)</title><rect x="1116.9" y="483.0" width="11.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1119.9" y="494.0"></text>
</g>
<g>
<title>__brelse (4 samples, 0.19%)</title><rect x="1116.9" y="467.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1119.9" y="478.0"></text>
</g>
<g>
<title>ext4_do_update_inode (16 samples, 0.77%)</title><rect x="1119.2" y="467.0" width="9.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1122.2" y="478.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (3 samples, 0.14%)</title><rect x="1120.3" y="451.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1123.3" y="462.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (2 samples, 0.10%)</title><rect x="1120.9" y="435.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1123.9" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (11 samples, 0.53%)</title><rect x="1122.0" y="451.0" width="6.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1125.0" y="462.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.05%)</title><rect x="1122.0" y="435.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1125.0" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.62 (10 samples, 0.48%)</title><rect x="1122.6" y="435.0" width="5.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1125.6" y="446.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (4 samples, 0.19%)</title><rect x="1123.2" y="419.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1126.2" y="430.0"></text>
</g>
<g>
<title>crypto_shash_update (5 samples, 0.24%)</title><rect x="1125.4" y="419.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1128.4" y="430.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (4 samples, 0.19%)</title><rect x="1126.0" y="403.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1129.0" y="414.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (11 samples, 0.53%)</title><rect x="1128.3" y="483.0" width="6.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1131.3" y="494.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (9 samples, 0.43%)</title><rect x="1128.3" y="467.0" width="5.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1131.3" y="478.0"></text>
</g>
<g>
<title>__getblk_gfp (8 samples, 0.38%)</title><rect x="1128.8" y="451.0" width="4.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1131.8" y="462.0"></text>
</g>
<g>
<title>__find_get_block (8 samples, 0.38%)</title><rect x="1128.8" y="435.0" width="4.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1131.8" y="446.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (2 samples, 0.10%)</title><rect x="1133.4" y="467.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1136.4" y="478.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (2 samples, 0.10%)</title><rect x="1133.4" y="451.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1136.4" y="462.0"></text>
</g>
<g>
<title>block_write_end (2 samples, 0.10%)</title><rect x="1134.5" y="531.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1137.5" y="542.0"></text>
</g>
<g>
<title>__block_commit_write.isra.41 (2 samples, 0.10%)</title><rect x="1134.5" y="515.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1137.5" y="526.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.05%)</title><rect x="1135.6" y="531.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1138.6" y="542.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.10%)</title><rect x="1136.2" y="563.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1139.2" y="574.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.10%)</title><rect x="1137.3" y="563.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1140.3" y="574.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.10%)</title><rect x="1137.3" y="547.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1140.3" y="558.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (3 samples, 0.14%)</title><rect x="1138.4" y="563.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1141.4" y="574.0"></text>
</g>
<g>
<title>ext4_write_checks (1 samples, 0.05%)</title><rect x="1140.1" y="595.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1143.1" y="606.0"></text>
</g>
<g>
<title>generic_write_checks (1 samples, 0.05%)</title><rect x="1140.1" y="579.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1143.1" y="590.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.05%)</title><rect x="1140.7" y="595.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1143.7" y="606.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.14%)</title><rect x="1141.3" y="643.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1144.3" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.05%)</title><rect x="1141.3" y="627.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1144.3" y="638.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.10%)</title><rect x="1141.8" y="627.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1144.8" y="638.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.10%)</title><rect x="1141.8" y="611.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1144.8" y="622.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.05%)</title><rect x="1141.8" y="595.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1144.8" y="606.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.05%)</title><rect x="1142.4" y="595.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1145.4" y="606.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.10%)</title><rect x="1143.0" y="739.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1146.0" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="1144.1" y="803.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1147.1" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="1144.1" y="787.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1147.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="1144.7" y="803.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1147.7" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="1144.7" y="787.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1147.7" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.05%)</title><rect x="1144.7" y="771.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1147.7" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.05%)</title><rect x="1144.7" y="755.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1147.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.05%)</title><rect x="1145.2" y="819.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1148.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.05%)</title><rect x="1145.2" y="803.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1148.2" y="814.0"></text>
</g>
<g>
<title>start_thread (78 samples, 3.74%)</title><rect x="1145.8" y="915.0" width="44.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1148.8" y="926.0">star..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (78 samples, 3.74%)</title><rect x="1145.8" y="899.0" width="44.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1148.8" y="910.0">thre..</text>
</g>
<g>
<title>Thread::call_run() (78 samples, 3.74%)</title><rect x="1145.8" y="883.0" width="44.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1148.8" y="894.0">Thre..</text>
</g>
<g>
<title>GangWorker::loop() (60 samples, 2.88%)</title><rect x="1145.8" y="867.0" width="34.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1148.8" y="878.0">Ga..</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (60 samples, 2.88%)</title><rect x="1145.8" y="851.0" width="34.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1148.8" y="862.0">G1..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (58 samples, 2.78%)</title><rect x="1145.8" y="835.0" width="32.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1148.8" y="846.0">G1..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (57 samples, 2.74%)</title><rect x="1145.8" y="819.0" width="32.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1148.8" y="830.0">G1..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (31 samples, 1.49%)</title><rect x="1159.4" y="803.0" width="17.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.4" y="814.0"></text>
</g>
<g>
<title>G1PLABAllocator::allocate_direct_or_new_plab(InCSetState, unsigned long, bool*) (1 samples, 0.05%)</title><rect x="1169.0" y="787.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.0" y="798.0"></text>
</g>
<g>
<title>G1Allocator::old_attempt_allocation(unsigned long, unsigned long, unsigned long*) (1 samples, 0.05%)</title><rect x="1169.0" y="771.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1172.0" y="782.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.05%)</title><rect x="1169.0" y="755.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.0" y="766.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (1 samples, 0.05%)</title><rect x="1169.6" y="787.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.6" y="798.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.05%)</title><rect x="1170.2" y="787.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1173.2" y="798.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.05%)</title><rect x="1170.2" y="771.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1173.2" y="782.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.05%)</title><rect x="1170.2" y="755.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1173.2" y="766.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (11 samples, 0.53%)</title><rect x="1170.7" y="787.0" width="6.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.7" y="798.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.10%)</title><rect x="1177.0" y="803.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.0" y="814.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="1178.1" y="819.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1181.1" y="830.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.05%)</title><rect x="1178.7" y="835.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.7" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.05%)</title><rect x="1178.7" y="819.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.7" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.05%)</title><rect x="1178.7" y="803.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.7" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (1 samples, 0.05%)</title><rect x="1178.7" y="787.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.7" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.05%)</title><rect x="1178.7" y="771.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.7" y="782.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (1 samples, 0.05%)</title><rect x="1178.7" y="755.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1181.7" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.05%)</title><rect x="1178.7" y="739.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.7" y="750.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.05%)</title><rect x="1178.7" y="723.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.7" y="734.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.05%)</title><rect x="1179.2" y="835.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.2" y="846.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.05%)</title><rect x="1179.2" y="819.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.2" y="830.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.05%)</title><rect x="1179.2" y="803.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.2" y="814.0"></text>
</g>
<g>
<title>JavaThread::run() (17 samples, 0.82%)</title><rect x="1179.8" y="867.0" width="9.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.8" y="878.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (17 samples, 0.82%)</title><rect x="1179.8" y="851.0" width="9.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.8" y="862.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (16 samples, 0.77%)</title><rect x="1179.8" y="835.0" width="9.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.8" y="846.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (16 samples, 0.77%)</title><rect x="1179.8" y="819.0" width="9.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.8" y="830.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (16 samples, 0.77%)</title><rect x="1179.8" y="803.0" width="9.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.8" y="814.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (7 samples, 0.34%)</title><rect x="1179.8" y="787.0" width="4.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.8" y="798.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.05%)</title><rect x="1179.8" y="771.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.8" y="782.0"></text>
</g>
<g>
<title>immNKlassOper::constant() const (1 samples, 0.05%)</title><rect x="1179.8" y="755.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.8" y="766.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.05%)</title><rect x="1180.4" y="771.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.4" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.05%)</title><rect x="1180.4" y="755.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.4" y="766.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.05%)</title><rect x="1180.4" y="739.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1183.4" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (5 samples, 0.24%)</title><rect x="1180.9" y="771.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1183.9" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (1 samples, 0.05%)</title><rect x="1180.9" y="755.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.9" y="766.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="1180.9" y="739.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.9" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.05%)</title><rect x="1181.5" y="755.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.5" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::prompt_use(Block*, unsigned int) (1 samples, 0.05%)</title><rect x="1181.5" y="739.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.5" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.05%)</title><rect x="1182.1" y="755.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.1" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.05%)</title><rect x="1182.1" y="739.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.1" y="750.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.05%)</title><rect x="1182.6" y="755.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.6" y="766.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (1 samples, 0.05%)</title><rect x="1182.6" y="739.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.6" y="750.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (1 samples, 0.05%)</title><rect x="1182.6" y="723.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.6" y="734.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.05%)</title><rect x="1183.2" y="755.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.2" y="766.0"></text>
</g>
<g>
<title>Compile::Optimize() (7 samples, 0.34%)</title><rect x="1183.8" y="787.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.8" y="798.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (2 samples, 0.10%)</title><rect x="1183.8" y="771.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.8" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.10%)</title><rect x="1183.8" y="755.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.8" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.05%)</title><rect x="1183.8" y="739.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.8" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.05%)</title><rect x="1183.8" y="723.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.8" y="734.0"></text>
</g>
<g>
<title>RegionNode::is_CFG() const (1 samples, 0.05%)</title><rect x="1183.8" y="707.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.8" y="718.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.05%)</title><rect x="1184.3" y="739.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.3" y="750.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.05%)</title><rect x="1184.3" y="723.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.3" y="734.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.05%)</title><rect x="1184.3" y="707.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.3" y="718.0"></text>
</g>
<g>
<title>TypeInt::hash() const (1 samples, 0.05%)</title><rect x="1184.3" y="691.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.3" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.10%)</title><rect x="1184.9" y="771.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.9" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.05%)</title><rect x="1184.9" y="755.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.9" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.05%)</title><rect x="1185.5" y="755.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.5" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.05%)</title><rect x="1185.5" y="739.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.5" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.05%)</title><rect x="1185.5" y="723.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.5" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (1 samples, 0.05%)</title><rect x="1185.5" y="707.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.5" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.05%)</title><rect x="1185.5" y="691.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.5" y="702.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.05%)</title><rect x="1186.0" y="771.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.0" y="782.0"></text>
</g>
<g>
<title>ConNode::hash() const (1 samples, 0.05%)</title><rect x="1186.0" y="755.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.0" y="766.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (2 samples, 0.10%)</title><rect x="1186.6" y="771.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.6" y="782.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.05%)</title><rect x="1186.6" y="755.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.6" y="766.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.05%)</title><rect x="1186.6" y="739.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.6" y="750.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.05%)</title><rect x="1186.6" y="723.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.6" y="734.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_arraycopy_node(ArrayCopyNode*) (1 samples, 0.05%)</title><rect x="1187.2" y="755.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.2" y="766.0"></text>
</g>
<g>
<title>PhaseMacroExpand::generate_arraycopy(ArrayCopyNode*, AllocateArrayNode*, Node**, MergeMemNode*, Node**, TypePtr const*, BasicType, Node*, Node*, Node*, Node*, Node*, bool, bool, RegionNode*) (1 samples, 0.05%)</title><rect x="1187.2" y="739.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.2" y="750.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.05%)</title><rect x="1187.2" y="723.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.2" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.10%)</title><rect x="1187.7" y="787.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.7" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.10%)</title><rect x="1187.7" y="771.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.7" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.10%)</title><rect x="1187.7" y="755.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.7" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.10%)</title><rect x="1187.7" y="739.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.7" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.10%)</title><rect x="1187.7" y="723.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.7" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1187.7" y="707.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.7" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1187.7" y="691.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.7" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1187.7" y="675.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.7" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1187.7" y="659.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.7" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1187.7" y="643.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.7" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1187.7" y="627.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.7" y="638.0"></text>
</g>
<g>
<title>Parse::do_anewarray() (1 samples, 0.05%)</title><rect x="1187.7" y="611.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.7" y="622.0"></text>
</g>
<g>
<title>GraphKit::new_array(Node*, Node*, int, Node**, bool) (1 samples, 0.05%)</title><rect x="1187.7" y="595.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.7" y="606.0"></text>
</g>
<g>
<title>Compile::constrained_convI2L(PhaseGVN*, Node*, TypeInt const*, Node*) (1 samples, 0.05%)</title><rect x="1187.7" y="579.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.7" y="590.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.05%)</title><rect x="1187.7" y="563.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.7" y="574.0"></text>
</g>
<g>
<title>Parse::do_lookupswitch() (1 samples, 0.05%)</title><rect x="1188.3" y="707.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.3" y="718.0"></text>
</g>
<g>
<title>Parse::jump_switch_ranges(Node*, SwitchRange*, SwitchRange*, int) (1 samples, 0.05%)</title><rect x="1188.3" y="691.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.3" y="702.0"></text>
</g>
<g>
<title>Parse::linear_search_switch_ranges(Node*, SwitchRange*&amp;, SwitchRange*&amp;) (1 samples, 0.05%)</title><rect x="1188.3" y="675.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.3" y="686.0"></text>
</g>
<g>
<title>Parse::merge_new_path(int) (1 samples, 0.05%)</title><rect x="1188.3" y="659.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.3" y="670.0"></text>
</g>
<g>
<title>CompileQueue::get() (1 samples, 0.05%)</title><rect x="1188.9" y="835.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.9" y="846.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.05%)</title><rect x="1188.9" y="819.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.9" y="830.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.05%)</title><rect x="1188.9" y="803.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.9" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="1188.9" y="787.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1191.9" y="798.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.05%)</title><rect x="1189.4" y="867.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.4" y="878.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.05%)</title><rect x="1189.4" y="851.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.4" y="862.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (1 samples, 0.05%)</title><rect x="1189.4" y="835.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.4" y="846.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.05%)</title><rect x="1189.4" y="819.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.4" y="830.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.05%)</title><rect x="1189.4" y="803.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.4" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.05%)</title><rect x="1189.4" y="787.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.4" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (1 samples, 0.05%)</title><rect x="1189.4" y="771.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.4" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadStateSet::flush() (1 samples, 0.05%)</title><rect x="1189.4" y="755.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.4" y="766.0"></text>
</g>
<g>
<title>G1PLABAllocator::flush_and_retire_stats() (1 samples, 0.05%)</title><rect x="1189.4" y="739.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.4" y="750.0"></text>
</g>
<g>
<title>PLAB::flush_and_retire_stats(PLABStats*) (1 samples, 0.05%)</title><rect x="1189.4" y="723.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.4" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.05%)</title><rect x="1189.4" y="707.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.4" y="718.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.05%)</title><rect x="1189.4" y="691.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.4" y="702.0"></text>
</g>
</g>
</svg>
