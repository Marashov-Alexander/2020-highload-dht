<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (2,035 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="10.0" y="899.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.05%)</title><rect x="10.0" y="883.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.05%)</title><rect x="10.0" y="867.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.05%)</title><rect x="10.0" y="851.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.05%)</title><rect x="10.0" y="835.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.15%)</title><rect x="10.6" y="899.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.6" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.10%)</title><rect x="10.6" y="883.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.6" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.10%)</title><rect x="10.6" y="867.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.6" y="878.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.10%)</title><rect x="10.6" y="851.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.6" y="862.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.05%)</title><rect x="10.6" y="835.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.6" y="846.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="10.6" y="819.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.6" y="830.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.05%)</title><rect x="11.2" y="835.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="14.2" y="846.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="11.2" y="819.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="14.2" y="830.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.05%)</title><rect x="11.2" y="803.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="14.2" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.05%)</title><rect x="11.7" y="883.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="14.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="12.3" y="899.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="15.3" y="910.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.05%)</title><rect x="12.3" y="883.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="15.3" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="12.3" y="867.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="15.3" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="12.3" y="851.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="15.3" y="862.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.10%)</title><rect x="12.9" y="899.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="15.9" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="12.9" y="883.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.9" y="894.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="12.9" y="867.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="13.5" y="883.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="16.5" y="894.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="13.5" y="867.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="16.5" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.10%)</title><rect x="14.1" y="899.0" width="1.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="17.1" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.10%)</title><rect x="14.1" y="883.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="17.1" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.10%)</title><rect x="14.1" y="867.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="17.1" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.10%)</title><rect x="14.1" y="851.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="17.1" y="862.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.10%)</title><rect x="14.1" y="835.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="17.1" y="846.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.10%)</title><rect x="14.1" y="819.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="17.1" y="830.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.05%)</title><rect x="14.6" y="803.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="17.6" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.05%)</title><rect x="14.6" y="787.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="17.6" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="14.6" y="771.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="17.6" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,446 samples, 71.06%)</title><rect x="15.2" y="899.0" width="838.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.2" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,445 samples, 71.01%)</title><rect x="15.2" y="883.0" width="837.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.2" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,445 samples, 71.01%)</title><rect x="15.2" y="867.0" width="837.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.2" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (14 samples, 0.69%)</title><rect x="15.2" y="851.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.69%)</title><rect x="15.2" y="835.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.69%)</title><rect x="15.2" y="819.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.59%)</title><rect x="16.4" y="803.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$76/1984127695.run (1 samples, 0.05%)</title><rect x="18.7" y="787.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$84/2037434908.run (4 samples, 0.20%)</title><rect x="19.3" y="787.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$75/1400284883.run (3 samples, 0.15%)</title><rect x="21.6" y="787.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (272 samples, 13.37%)</title><rect x="23.3" y="851.0" width="157.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.3" y="862.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (265 samples, 13.02%)</title><rect x="26.2" y="835.0" width="153.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.2" y="846.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (157 samples, 7.71%)</title><rect x="29.7" y="819.0" width="91.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="32.7" y="830.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (10 samples, 0.49%)</title><rect x="29.7" y="803.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (4 samples, 0.20%)</title><rect x="33.2" y="787.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="36.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (1 samples, 0.05%)</title><rect x="34.4" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.05%)</title><rect x="34.9" y="771.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="37.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.05%)</title><rect x="34.9" y="755.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="37.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (11 samples, 0.54%)</title><rect x="35.5" y="803.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="38.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.05%)</title><rect x="37.3" y="787.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="40.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.05%)</title><rect x="37.3" y="771.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="37.3" y="755.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.3" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.05%)</title><rect x="37.3" y="739.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="40.3" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.05%)</title><rect x="37.3" y="723.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="40.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (1 samples, 0.05%)</title><rect x="37.8" y="787.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="40.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.05%)</title><rect x="37.8" y="771.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.8" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.05%)</title><rect x="37.8" y="755.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="40.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.05%)</title><rect x="37.8" y="739.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (6 samples, 0.29%)</title><rect x="38.4" y="787.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (6 samples, 0.29%)</title><rect x="38.4" y="771.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.getExclusiveOwnerThread (4 samples, 0.20%)</title><rect x="39.0" y="755.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="42.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.05%)</title><rect x="41.3" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="44.3" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.05%)</title><rect x="41.3" y="739.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="44.3" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.05%)</title><rect x="41.3" y="723.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="44.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (41 samples, 2.01%)</title><rect x="41.9" y="803.0" width="23.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.9" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (41 samples, 2.01%)</title><rect x="41.9" y="787.0" width="23.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="44.9" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (36 samples, 1.77%)</title><rect x="41.9" y="771.0" width="20.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="44.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (36 samples, 1.77%)</title><rect x="41.9" y="755.0" width="20.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="44.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (36 samples, 1.77%)</title><rect x="41.9" y="739.0" width="20.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="44.9" y="750.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.05%)</title><rect x="41.9" y="723.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="44.9" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.34%)</title><rect x="42.5" y="723.0" width="4.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="45.5" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="42.5" y="707.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="45.5" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.05%)</title><rect x="43.1" y="707.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="46.1" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.25%)</title><rect x="43.6" y="707.0" width="2.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="46.6" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (28 samples, 1.38%)</title><rect x="46.5" y="723.0" width="16.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="49.5" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 1.23%)</title><rect x="48.3" y="707.0" width="14.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="51.3" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 1.23%)</title><rect x="48.3" y="691.0" width="14.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="51.3" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (24 samples, 1.18%)</title><rect x="48.9" y="675.0" width="13.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="51.9" y="686.0"></text>
</g>
<g>
<title>do_futex (24 samples, 1.18%)</title><rect x="48.9" y="659.0" width="13.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="51.9" y="670.0"></text>
</g>
<g>
<title>futex_wake (23 samples, 1.13%)</title><rect x="48.9" y="643.0" width="13.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="51.9" y="654.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.10%)</title><rect x="50.6" y="627.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="53.6" y="638.0"></text>
</g>
<g>
<title>plist_del (1 samples, 0.05%)</title><rect x="51.2" y="611.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="54.2" y="622.0"></text>
</g>
<g>
<title>wake_up_q (18 samples, 0.88%)</title><rect x="51.7" y="627.0" width="10.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="54.7" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (18 samples, 0.88%)</title><rect x="51.7" y="611.0" width="10.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="54.7" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (18 samples, 0.88%)</title><rect x="51.7" y="595.0" width="10.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="54.7" y="606.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.05%)</title><rect x="62.2" y="643.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="65.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (5 samples, 0.25%)</title><rect x="62.8" y="771.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="65.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (95 samples, 4.67%)</title><rect x="65.7" y="803.0" width="55.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.7" y="814.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (95 samples, 4.67%)</title><rect x="65.7" y="787.0" width="55.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.7" y="798.0">jdk/i..</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.05%)</title><rect x="73.2" y="771.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="76.2" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="73.8" y="771.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="76.8" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (51 samples, 2.51%)</title><rect x="74.4" y="771.0" width="29.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="77.4" y="782.0">Un..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.10%)</title><rect x="81.9" y="755.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="84.9" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.05%)</title><rect x="82.5" y="739.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="85.5" y="750.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.05%)</title><rect x="83.1" y="755.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="86.1" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (14 samples, 0.69%)</title><rect x="83.6" y="755.0" width="8.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="86.6" y="766.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.05%)</title><rect x="88.3" y="739.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="91.3" y="750.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.10%)</title><rect x="88.9" y="739.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="91.9" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.15%)</title><rect x="90.0" y="739.0" width="1.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="93.0" y="750.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.05%)</title><rect x="91.8" y="755.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="94.8" y="766.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.15%)</title><rect x="92.3" y="755.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="95.3" y="766.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.10%)</title><rect x="94.1" y="755.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="97.1" y="766.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.39%)</title><rect x="95.2" y="755.0" width="4.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="98.2" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.29%)</title><rect x="96.4" y="739.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="99.4" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.29%)</title><rect x="96.4" y="723.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="99.4" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.25%)</title><rect x="97.0" y="707.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="100.0" y="718.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.25%)</title><rect x="97.0" y="691.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="100.0" y="702.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.20%)</title><rect x="97.6" y="675.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="100.6" y="686.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.12 (1 samples, 0.05%)</title><rect x="98.7" y="659.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="101.7" y="670.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="99.3" y="659.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="102.3" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.10%)</title><rect x="99.9" y="755.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="102.9" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="101.0" y="755.0" width="0.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="104.0" y="766.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.05%)</title><rect x="101.6" y="755.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="104.6" y="766.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.10%)</title><rect x="102.2" y="755.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="105.2" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="103.4" y="755.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="106.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 1.28%)</title><rect x="103.9" y="771.0" width="15.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="106.9" y="782.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.05%)</title><rect x="103.9" y="755.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="106.9" y="766.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (25 samples, 1.23%)</title><rect x="104.5" y="755.0" width="14.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="107.5" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 1.13%)</title><rect x="105.7" y="739.0" width="13.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="108.7" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 1.13%)</title><rect x="105.7" y="723.0" width="13.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="108.7" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (21 samples, 1.03%)</title><rect x="106.8" y="707.0" width="12.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="109.8" y="718.0"></text>
</g>
<g>
<title>do_futex (21 samples, 1.03%)</title><rect x="106.8" y="691.0" width="12.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="109.8" y="702.0"></text>
</g>
<g>
<title>futex_wait (20 samples, 0.98%)</title><rect x="106.8" y="675.0" width="11.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="109.8" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (8 samples, 0.39%)</title><rect x="108.6" y="659.0" width="4.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="111.6" y="670.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="109.2" y="643.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="112.2" y="654.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.10%)</title><rect x="109.7" y="643.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="112.7" y="654.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.20%)</title><rect x="110.9" y="643.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="113.9" y="654.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.15%)</title><rect x="111.5" y="627.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="114.5" y="638.0"></text>
</g>
<g>
<title>futex_wait_setup (6 samples, 0.29%)</title><rect x="113.2" y="659.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="116.2" y="670.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.10%)</title><rect x="115.5" y="643.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="118.5" y="654.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.15%)</title><rect x="116.7" y="659.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="119.7" y="670.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.05%)</title><rect x="118.4" y="675.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="121.4" y="686.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.15%)</title><rect x="119.0" y="771.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="122.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (14 samples, 0.69%)</title><rect x="120.8" y="819.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="123.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (14 samples, 0.69%)</title><rect x="120.8" y="803.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="123.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.05%)</title><rect x="121.3" y="787.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.05%)</title><rect x="121.3" y="771.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="124.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.05%)</title><rect x="121.3" y="755.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="121.3" y="739.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.3" y="750.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.05%)</title><rect x="121.3" y="723.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="124.3" y="734.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="121.3" y="707.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="124.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (12 samples, 0.59%)</title><rect x="121.9" y="787.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="124.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (7 samples, 0.34%)</title><rect x="124.8" y="771.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="127.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (3 samples, 0.15%)</title><rect x="124.8" y="755.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (4 samples, 0.20%)</title><rect x="126.6" y="755.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="129.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.20%)</title><rect x="126.6" y="739.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="129.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.15%)</title><rect x="127.1" y="723.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="130.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (88 samples, 4.32%)</title><rect x="128.9" y="819.0" width="51.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="131.9" y="830.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (88 samples, 4.32%)</title><rect x="128.9" y="803.0" width="51.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.9" y="814.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (88 samples, 4.32%)</title><rect x="128.9" y="787.0" width="51.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.9" y="798.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (88 samples, 4.32%)</title><rect x="128.9" y="771.0" width="51.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.9" y="782.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (88 samples, 4.32%)</title><rect x="128.9" y="755.0" width="51.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="131.9" y="766.0">jdk/i..</text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.05%)</title><rect x="128.9" y="739.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="131.9" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.05%)</title><rect x="129.4" y="739.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="132.4" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (18 samples, 0.88%)</title><rect x="130.0" y="739.0" width="10.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="133.0" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="130.0" y="723.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="133.0" y="734.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.05%)</title><rect x="130.6" y="723.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="133.6" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.10%)</title><rect x="131.2" y="723.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="134.2" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.25%)</title><rect x="132.3" y="723.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="135.3" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.05%)</title><rect x="135.2" y="723.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="138.2" y="734.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.15%)</title><rect x="135.8" y="723.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="138.8" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.25%)</title><rect x="137.6" y="723.0" width="2.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="140.6" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (66 samples, 3.24%)</title><rect x="140.5" y="739.0" width="38.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="143.5" y="750.0">__p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 2.85%)</title><rect x="145.1" y="723.0" width="33.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="148.1" y="734.0">en..</text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="145.1" y="707.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="148.1" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (57 samples, 2.80%)</title><rect x="145.7" y="707.0" width="33.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="148.7" y="718.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (56 samples, 2.75%)</title><rect x="146.3" y="691.0" width="32.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="149.3" y="702.0">__..</text>
</g>
<g>
<title>do_futex (56 samples, 2.75%)</title><rect x="146.3" y="675.0" width="32.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="149.3" y="686.0">do..</text>
</g>
<g>
<title>futex_wake (53 samples, 2.60%)</title><rect x="146.8" y="659.0" width="30.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="149.8" y="670.0">fu..</text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.10%)</title><rect x="150.9" y="643.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="153.9" y="654.0"></text>
</g>
<g>
<title>mark_wake_futex (7 samples, 0.34%)</title><rect x="152.1" y="643.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="155.1" y="654.0"></text>
</g>
<g>
<title>plist_del (1 samples, 0.05%)</title><rect x="153.8" y="627.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="156.8" y="638.0"></text>
</g>
<g>
<title>wake_q_add_safe (3 samples, 0.15%)</title><rect x="154.4" y="627.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="157.4" y="638.0"></text>
</g>
<g>
<title>wake_up_q (37 samples, 1.82%)</title><rect x="156.1" y="643.0" width="21.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="159.1" y="654.0">w..</text>
</g>
<g>
<title>try_to_wake_up (35 samples, 1.72%)</title><rect x="157.3" y="627.0" width="20.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="160.3" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (32 samples, 1.57%)</title><rect x="159.0" y="611.0" width="18.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="162.0" y="622.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.10%)</title><rect x="177.6" y="659.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="180.6" y="670.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.05%)</title><rect x="178.7" y="739.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="181.7" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@plt (1 samples, 0.05%)</title><rect x="179.3" y="739.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="182.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.10%)</title><rect x="179.9" y="835.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="182.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.10%)</title><rect x="179.9" y="819.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="182.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.10%)</title><rect x="179.9" y="803.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$76/1984127695.run (34 samples, 1.67%)</title><rect x="181.1" y="851.0" width="19.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="184.1" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.lambda$put$2 (34 samples, 1.67%)</title><rect x="181.1" y="835.0" width="19.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="184.1" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager.put (31 samples, 1.52%)</title><rect x="181.6" y="819.0" width="18.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="184.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.05%)</title><rect x="181.6" y="803.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="184.6" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="181.6" y="787.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="184.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (30 samples, 1.47%)</title><rect x="182.2" y="803.0" width="17.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="185.2" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.10%)</title><rect x="182.8" y="787.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="185.8" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="183.4" y="771.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="186.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="183.4" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="186.4" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="183.4" y="739.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="186.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.05%)</title><rect x="183.4" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="186.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.05%)</title><rect x="184.0" y="787.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.05%)</title><rect x="184.0" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="187.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.05%)</title><rect x="184.0" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="187.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.05%)</title><rect x="184.0" y="739.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="187.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.05%)</title><rect x="184.0" y="723.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="187.0" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.05%)</title><rect x="184.0" y="707.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="187.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.upsert (26 samples, 1.28%)</title><rect x="184.5" y="787.0" width="15.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="187.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (26 samples, 1.28%)</title><rect x="184.5" y="771.0" width="15.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="187.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (26 samples, 1.28%)</title><rect x="184.5" y="755.0" width="15.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="187.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.10%)</title><rect x="188.6" y="739.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="191.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.10%)</title><rect x="188.6" y="723.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (2 samples, 0.10%)</title><rect x="189.8" y="739.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="192.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (1 samples, 0.05%)</title><rect x="190.9" y="739.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="193.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (1 samples, 0.05%)</title><rect x="190.9" y="723.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (3 samples, 0.15%)</title><rect x="191.5" y="739.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="194.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.05%)</title><rect x="192.7" y="723.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (11 samples, 0.54%)</title><rect x="193.2" y="739.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="196.2" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.54%)</title><rect x="193.2" y="723.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="196.2" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.39%)</title><rect x="195.0" y="707.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.0" y="718.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.39%)</title><rect x="195.0" y="691.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="198.0" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (8 samples, 0.39%)</title><rect x="195.0" y="675.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="198.0" y="686.0"></text>
</g>
<g>
<title>vectorizedMismatch (4 samples, 0.20%)</title><rect x="197.3" y="659.0" width="2.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="200.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.accept (2 samples, 0.10%)</title><rect x="199.6" y="819.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="202.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.05%)</title><rect x="200.2" y="803.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="203.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.05%)</title><rect x="200.2" y="787.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$84/2037434908.run (530 samples, 26.04%)</title><rect x="200.8" y="851.0" width="307.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.8" y="862.0">ru/mail/polis/service/alexander/marashov/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.lambda$iterateOverNodes$6 (530 samples, 26.04%)</title><rect x="200.8" y="835.0" width="307.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="203.8" y="846.0">ru/mail/polis/service/alexander/marashov/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$79/1012503319.accept (530 samples, 26.04%)</title><rect x="200.8" y="819.0" width="307.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="203.8" y="830.0">ru/mail/polis/service/alexander/marashov/..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.lambda$put$3 (529 samples, 26.00%)</title><rect x="201.4" y="803.0" width="306.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.4" y="814.0">ru/mail/polis/service/alexander/marashov/..</text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="201.4" y="787.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="204.4" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="201.4" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="204.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (495 samples, 24.32%)</title><rect x="201.9" y="787.0" width="287.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.9" y="798.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (495 samples, 24.32%)</title><rect x="201.9" y="771.0" width="287.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="204.9" y="782.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (137 samples, 6.73%)</title><rect x="204.3" y="755.0" width="79.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.3" y="766.0">one/nio/h..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.15%)</title><rect x="210.0" y="739.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="213.0" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.15%)</title><rect x="210.0" y="723.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="213.0" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.15%)</title><rect x="210.0" y="707.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="213.0" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.15%)</title><rect x="210.0" y="691.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="213.0" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="210.0" y="675.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="213.0" y="686.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.05%)</title><rect x="210.0" y="659.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="213.0" y="670.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.05%)</title><rect x="210.0" y="643.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="213.0" y="654.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.05%)</title><rect x="210.6" y="675.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="213.6" y="686.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.05%)</title><rect x="211.2" y="675.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="214.2" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (124 samples, 6.09%)</title><rect x="211.8" y="739.0" width="71.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="214.8" y="750.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (16 samples, 0.79%)</title><rect x="213.5" y="723.0" width="9.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="216.5" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.15%)</title><rect x="216.4" y="707.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="219.4" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (1 samples, 0.05%)</title><rect x="218.2" y="707.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="221.2" y="718.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.34%)</title><rect x="218.7" y="707.0" width="4.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="221.7" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.05%)</title><rect x="220.5" y="691.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="223.5" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.15%)</title><rect x="221.1" y="691.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="224.1" y="702.0"></text>
</g>
<g>
<title>__GI___recv (100 samples, 4.91%)</title><rect x="222.8" y="723.0" width="58.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="225.8" y="734.0">__GI__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (92 samples, 4.52%)</title><rect x="227.4" y="707.0" width="53.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="230.4" y="718.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (92 samples, 4.52%)</title><rect x="227.4" y="691.0" width="53.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="230.4" y="702.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_recvfrom (90 samples, 4.42%)</title><rect x="228.6" y="675.0" width="52.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="231.6" y="686.0">__x64..</text>
</g>
<g>
<title>__sys_recvfrom (88 samples, 4.32%)</title><rect x="229.2" y="659.0" width="51.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="232.2" y="670.0">__sys..</text>
</g>
<g>
<title>fput (4 samples, 0.20%)</title><rect x="230.3" y="643.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="233.3" y="654.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.15%)</title><rect x="230.9" y="627.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="233.9" y="638.0"></text>
</g>
<g>
<title>sock_recvmsg (82 samples, 4.03%)</title><rect x="232.7" y="643.0" width="47.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="235.7" y="654.0">sock..</text>
</g>
<g>
<title>inet6_recvmsg (80 samples, 3.93%)</title><rect x="233.2" y="627.0" width="46.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="236.2" y="638.0">inet..</text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.10%)</title><rect x="233.8" y="611.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="236.8" y="622.0"></text>
</g>
<g>
<title>tcp_recvmsg (77 samples, 3.78%)</title><rect x="235.0" y="611.0" width="44.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="238.0" y="622.0">tcp_..</text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.25%)</title><rect x="235.6" y="595.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="238.6" y="606.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.20%)</title><rect x="236.1" y="579.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="239.1" y="590.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.15%)</title><rect x="236.1" y="563.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="239.1" y="574.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.10%)</title><rect x="236.1" y="547.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="239.1" y="558.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.05%)</title><rect x="237.3" y="547.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="240.3" y="558.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.05%)</title><rect x="237.9" y="563.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="240.9" y="574.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="238.5" y="595.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="241.5" y="606.0"></text>
</g>
<g>
<title>sk_wait_data (4 samples, 0.20%)</title><rect x="239.0" y="595.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="242.0" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.05%)</title><rect x="239.6" y="579.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="242.6" y="590.0"></text>
</g>
<g>
<title>wait_woken (2 samples, 0.10%)</title><rect x="240.2" y="579.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="243.2" y="590.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="240.8" y="563.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="243.8" y="574.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.05%)</title><rect x="241.4" y="595.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="244.4" y="606.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.05%)</title><rect x="241.4" y="579.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="244.4" y="590.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.05%)</title><rect x="241.4" y="563.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="244.4" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.05%)</title><rect x="241.4" y="547.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="244.4" y="558.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (63 samples, 3.10%)</title><rect x="241.9" y="595.0" width="36.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="244.9" y="606.0">tcp..</text>
</g>
<g>
<title>__tcp_send_ack.part.46 (2 samples, 0.10%)</title><rect x="244.3" y="579.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="247.3" y="590.0"></text>
</g>
<g>
<title>tcp_send_ack (57 samples, 2.80%)</title><rect x="245.4" y="579.0" width="33.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="248.4" y="590.0">tc..</text>
</g>
<g>
<title>__tcp_send_ack.part.46 (56 samples, 2.75%)</title><rect x="245.4" y="563.0" width="32.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="248.4" y="574.0">__..</text>
</g>
<g>
<title>__alloc_skb (11 samples, 0.54%)</title><rect x="245.4" y="547.0" width="6.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="248.4" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (7 samples, 0.34%)</title><rect x="246.6" y="531.0" width="4.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="249.6" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.10%)</title><rect x="246.6" y="515.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="249.6" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.05%)</title><rect x="247.2" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="250.2" y="510.0"></text>
</g>
<g>
<title>memset (5 samples, 0.25%)</title><rect x="247.7" y="515.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="250.7" y="526.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.05%)</title><rect x="250.6" y="531.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="253.6" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.05%)</title><rect x="251.2" y="531.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="254.2" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (43 samples, 2.11%)</title><rect x="251.8" y="547.0" width="24.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="254.8" y="558.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (43 samples, 2.11%)</title><rect x="251.8" y="531.0" width="24.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="254.8" y="542.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (43 samples, 2.11%)</title><rect x="251.8" y="515.0" width="24.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="254.8" y="526.0">_..</text>
</g>
<g>
<title>ip_local_out (43 samples, 2.11%)</title><rect x="251.8" y="499.0" width="24.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="254.8" y="510.0">i..</text>
</g>
<g>
<title>__ip_local_out (7 samples, 0.34%)</title><rect x="252.4" y="483.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="255.4" y="494.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.05%)</title><rect x="253.0" y="467.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="256.0" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.25%)</title><rect x="253.5" y="467.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="256.5" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (3 samples, 0.15%)</title><rect x="253.5" y="451.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="256.5" y="462.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.15%)</title><rect x="253.5" y="435.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="256.5" y="446.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.05%)</title><rect x="253.5" y="419.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="256.5" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (2 samples, 0.10%)</title><rect x="254.1" y="419.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="257.1" y="430.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.05%)</title><rect x="254.7" y="403.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="257.7" y="414.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.05%)</title><rect x="254.7" y="387.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="257.7" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (2 samples, 0.10%)</title><rect x="255.3" y="451.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="258.3" y="462.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="255.3" y="435.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="258.3" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="255.9" y="435.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="258.9" y="446.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (1 samples, 0.05%)</title><rect x="255.9" y="419.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="258.9" y="430.0"></text>
</g>
<g>
<title>ip_output (35 samples, 1.72%)</title><rect x="256.4" y="483.0" width="20.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="259.4" y="494.0"></text>
</g>
<g>
<title>ip_finish_output (33 samples, 1.62%)</title><rect x="257.0" y="467.0" width="19.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="260.0" y="478.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="257.0" y="451.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="260.0" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (32 samples, 1.57%)</title><rect x="257.6" y="451.0" width="18.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="260.6" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (32 samples, 1.57%)</title><rect x="257.6" y="435.0" width="18.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="260.6" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (27 samples, 1.33%)</title><rect x="258.2" y="419.0" width="15.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="261.2" y="430.0"></text>
</g>
<g>
<title>do_softirq.part.20 (27 samples, 1.33%)</title><rect x="258.2" y="403.0" width="15.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="261.2" y="414.0"></text>
</g>
<g>
<title>do_softirq_own_stack (26 samples, 1.28%)</title><rect x="258.8" y="387.0" width="15.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="261.8" y="398.0"></text>
</g>
<g>
<title>__softirqentry_text_start (25 samples, 1.23%)</title><rect x="258.8" y="371.0" width="14.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="261.8" y="382.0"></text>
</g>
<g>
<title>net_rx_action (25 samples, 1.23%)</title><rect x="258.8" y="355.0" width="14.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="261.8" y="366.0"></text>
</g>
<g>
<title>process_backlog (25 samples, 1.23%)</title><rect x="258.8" y="339.0" width="14.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="261.8" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb (24 samples, 1.18%)</title><rect x="259.3" y="323.0" width="14.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="262.3" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (24 samples, 1.18%)</title><rect x="259.3" y="307.0" width="14.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="262.3" y="318.0"></text>
</g>
<g>
<title>ip_rcv (23 samples, 1.13%)</title><rect x="259.3" y="291.0" width="13.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="262.3" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.05%)</title><rect x="259.9" y="275.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="262.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (20 samples, 0.98%)</title><rect x="260.5" y="275.0" width="11.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="263.5" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver (20 samples, 0.98%)</title><rect x="260.5" y="259.0" width="11.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="263.5" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (18 samples, 0.88%)</title><rect x="260.5" y="243.0" width="10.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="263.5" y="254.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (17 samples, 0.84%)</title><rect x="260.5" y="227.0" width="9.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="263.5" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (17 samples, 0.84%)</title><rect x="260.5" y="211.0" width="9.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="263.5" y="222.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.05%)</title><rect x="260.5" y="195.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="263.5" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.10%)</title><rect x="261.1" y="195.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="264.1" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="261.1" y="179.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="264.1" y="190.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.05%)</title><rect x="261.7" y="179.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="264.7" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (14 samples, 0.69%)</title><rect x="262.2" y="195.0" width="8.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="265.2" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (14 samples, 0.69%)</title><rect x="262.2" y="179.0" width="8.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="265.2" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.05%)</title><rect x="262.2" y="163.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="265.2" y="174.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.05%)</title><rect x="262.2" y="147.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="265.2" y="158.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.05%)</title><rect x="262.2" y="131.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="265.2" y="142.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.05%)</title><rect x="262.2" y="115.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="265.2" y="126.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.05%)</title><rect x="262.2" y="99.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="265.2" y="110.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.49%)</title><rect x="262.8" y="163.0" width="5.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="265.8" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (9 samples, 0.44%)</title><rect x="262.8" y="147.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="265.8" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.20%)</title><rect x="265.1" y="131.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="268.1" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.10%)</title><rect x="265.1" y="115.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="268.1" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.10%)</title><rect x="265.1" y="99.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="268.1" y="110.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.05%)</title><rect x="265.7" y="83.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="268.7" y="94.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.10%)</title><rect x="266.3" y="115.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="269.3" y="126.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.10%)</title><rect x="266.3" y="99.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="269.3" y="110.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.10%)</title><rect x="266.3" y="83.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="269.3" y="94.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.10%)</title><rect x="266.3" y="67.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="269.3" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (1 samples, 0.05%)</title><rect x="267.5" y="131.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="270.5" y="142.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.05%)</title><rect x="268.0" y="147.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="271.0" y="158.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.10%)</title><rect x="268.6" y="163.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="271.6" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.05%)</title><rect x="269.8" y="163.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="272.8" y="174.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.05%)</title><rect x="269.8" y="147.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="272.8" y="158.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.05%)</title><rect x="269.8" y="131.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="272.8" y="142.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.05%)</title><rect x="270.4" y="227.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="273.4" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="270.9" y="243.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="273.9" y="254.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="271.5" y="243.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="274.5" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="272.1" y="275.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="275.1" y="286.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="272.7" y="291.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="275.7" y="302.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.05%)</title><rect x="273.3" y="371.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="276.3" y="382.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.20%)</title><rect x="273.8" y="419.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="276.8" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.20%)</title><rect x="273.8" y="403.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="276.8" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.05%)</title><rect x="275.0" y="387.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="278.0" y="398.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.05%)</title><rect x="275.6" y="387.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="278.6" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="276.2" y="467.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="279.2" y="478.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="276.2" y="451.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="279.2" y="462.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.05%)</title><rect x="276.2" y="435.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="279.2" y="446.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.05%)</title><rect x="276.7" y="547.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="279.7" y="558.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.05%)</title><rect x="277.3" y="547.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="280.3" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.05%)</title><rect x="277.9" y="563.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="280.9" y="574.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.10%)</title><rect x="278.5" y="595.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="281.5" y="606.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.10%)</title><rect x="278.5" y="579.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="281.5" y="590.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.10%)</title><rect x="278.5" y="563.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="281.5" y="574.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.05%)</title><rect x="279.1" y="547.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="282.1" y="558.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.05%)</title><rect x="279.6" y="627.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="282.6" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.05%)</title><rect x="279.6" y="611.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="282.6" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.05%)</title><rect x="279.6" y="595.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="282.6" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.05%)</title><rect x="279.6" y="579.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="282.6" y="590.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.05%)</title><rect x="279.6" y="563.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="282.6" y="574.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.05%)</title><rect x="279.6" y="547.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="282.6" y="558.0"></text>
</g>
<g>
<title>fput (1 samples, 0.05%)</title><rect x="280.2" y="659.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="283.2" y="670.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.20%)</title><rect x="280.8" y="723.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="283.8" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.05%)</title><rect x="283.1" y="723.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="286.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (24 samples, 1.18%)</title><rect x="283.7" y="755.0" width="13.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="286.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.05%)</title><rect x="284.9" y="739.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="287.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="284.9" y="723.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="287.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="284.9" y="707.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.9" y="718.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.05%)</title><rect x="284.9" y="691.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="287.9" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.05%)</title><rect x="284.9" y="675.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="287.9" y="686.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.05%)</title><rect x="284.9" y="659.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="287.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.10%)</title><rect x="285.4" y="739.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="288.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="286.0" y="723.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="289.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="286.0" y="707.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.mayHaveBody (1 samples, 0.05%)</title><rect x="286.6" y="739.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (12 samples, 0.59%)</title><rect x="287.2" y="739.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="290.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.49%)</title><rect x="288.3" y="723.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.3" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.49%)</title><rect x="288.3" y="707.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="291.3" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="293.5" y="691.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="296.5" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="293.5" y="675.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="296.5" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="293.5" y="659.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="296.5" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="293.5" y="643.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="296.5" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.05%)</title><rect x="293.5" y="627.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="296.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.10%)</title><rect x="294.1" y="739.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="297.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.05%)</title><rect x="295.3" y="739.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="298.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="295.3" y="723.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="298.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.15%)</title><rect x="295.9" y="739.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="298.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.10%)</title><rect x="296.4" y="723.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="299.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.10%)</title><rect x="296.4" y="707.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="299.4" y="718.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.05%)</title><rect x="297.0" y="691.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="300.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (25 samples, 1.23%)</title><rect x="297.6" y="755.0" width="14.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="300.6" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="308.0" y="739.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="311.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.29%)</title><rect x="308.6" y="739.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="311.6" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (6 samples, 0.29%)</title><rect x="308.6" y="723.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="311.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.29%)</title><rect x="308.6" y="707.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="311.6" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="311.5" y="691.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="314.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.05%)</title><rect x="312.1" y="755.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="315.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="312.1" y="739.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="315.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="312.1" y="723.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="315.1" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="312.1" y="707.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="315.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (48 samples, 2.36%)</title><rect x="312.7" y="755.0" width="27.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="315.7" y="766.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (2 samples, 0.10%)</title><rect x="313.8" y="739.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="316.8" y="750.0"></text>
</g>
<g>
<title>__GI___setsockopt (44 samples, 2.16%)</title><rect x="315.0" y="739.0" width="25.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="318.0" y="750.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 2.01%)</title><rect x="316.7" y="723.0" width="23.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="319.7" y="734.0">e..</text>
</g>
<g>
<title>do_syscall_64 (41 samples, 2.01%)</title><rect x="316.7" y="707.0" width="23.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="319.7" y="718.0">d..</text>
</g>
<g>
<title>__sys_setsockopt (1 samples, 0.05%)</title><rect x="320.8" y="691.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="323.8" y="702.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (33 samples, 1.62%)</title><rect x="321.4" y="691.0" width="19.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="324.4" y="702.0"></text>
</g>
<g>
<title>__sys_setsockopt (33 samples, 1.62%)</title><rect x="321.4" y="675.0" width="19.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="324.4" y="686.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (1 samples, 0.05%)</title><rect x="323.1" y="659.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="326.1" y="670.0"></text>
</g>
<g>
<title>__get_user_4 (4 samples, 0.20%)</title><rect x="323.7" y="659.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="326.7" y="670.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="326.0" y="659.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="329.0" y="670.0"></text>
</g>
<g>
<title>security_socket_setsockopt (6 samples, 0.29%)</title><rect x="326.6" y="659.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="329.6" y="670.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (1 samples, 0.05%)</title><rect x="326.6" y="643.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="329.6" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (5 samples, 0.25%)</title><rect x="327.2" y="643.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="330.2" y="654.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (5 samples, 0.25%)</title><rect x="327.2" y="627.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="330.2" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.20%)</title><rect x="327.8" y="611.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="330.8" y="622.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.05%)</title><rect x="328.3" y="595.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="331.3" y="606.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.10%)</title><rect x="328.9" y="595.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="331.9" y="606.0"></text>
</g>
<g>
<title>aa_check_perms (1 samples, 0.05%)</title><rect x="328.9" y="579.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="331.9" y="590.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.05%)</title><rect x="329.5" y="579.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="332.5" y="590.0"></text>
</g>
<g>
<title>sock_set_timeout (1 samples, 0.05%)</title><rect x="330.1" y="659.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="333.1" y="670.0"></text>
</g>
<g>
<title>sock_setsockopt (12 samples, 0.59%)</title><rect x="330.7" y="659.0" width="6.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="333.7" y="670.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="331.8" y="643.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="334.8" y="654.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.10%)</title><rect x="332.4" y="643.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="335.4" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.05%)</title><rect x="333.0" y="627.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="336.0" y="638.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="333.0" y="611.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="336.0" y="622.0"></text>
</g>
<g>
<title>sock_set_timeout (6 samples, 0.29%)</title><rect x="333.6" y="643.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="336.6" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_string (5 samples, 0.25%)</title><rect x="334.1" y="627.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="337.1" y="638.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.05%)</title><rect x="337.0" y="643.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="340.0" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.25%)</title><rect x="337.6" y="659.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="340.6" y="670.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.20%)</title><rect x="338.2" y="643.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="341.2" y="654.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.20%)</title><rect x="338.2" y="627.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="341.2" y="638.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.10%)</title><rect x="339.4" y="611.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="342.4" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (245 samples, 12.04%)</title><rect x="340.5" y="755.0" width="142.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="343.5" y="766.0">one/nio/net/Native..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (15 samples, 0.74%)</title><rect x="341.7" y="739.0" width="8.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="344.7" y="750.0"></text>
</g>
<g>
<title>__memmove_ssse3 (4 samples, 0.20%)</title><rect x="342.3" y="723.0" width="2.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="345.3" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (10 samples, 0.49%)</title><rect x="344.6" y="723.0" width="5.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="347.6" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.10%)</title><rect x="347.5" y="707.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="350.5" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.15%)</title><rect x="348.6" y="707.0" width="1.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="351.6" y="718.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.15%)</title><rect x="348.6" y="691.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="351.6" y="702.0"></text>
</g>
<g>
<title>__libc_send (227 samples, 11.15%)</title><rect x="350.4" y="739.0" width="131.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="353.4" y="750.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (225 samples, 11.06%)</title><rect x="351.5" y="723.0" width="130.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="354.5" y="734.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>do_syscall_64 (225 samples, 11.06%)</title><rect x="351.5" y="707.0" width="130.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="354.5" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.05%)</title><rect x="352.7" y="691.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="355.7" y="702.0"></text>
</g>
<g>
<title>__x64_sys_sendto (222 samples, 10.91%)</title><rect x="353.3" y="691.0" width="128.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="356.3" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (222 samples, 10.91%)</title><rect x="353.3" y="675.0" width="128.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="356.3" y="686.0">__sys_sendto</text>
</g>
<g>
<title>fput (1 samples, 0.05%)</title><rect x="353.3" y="659.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="356.3" y="670.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.05%)</title><rect x="353.3" y="643.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="356.3" y="654.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.05%)</title><rect x="353.9" y="659.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="356.9" y="670.0"></text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.05%)</title><rect x="354.4" y="659.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="357.4" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (218 samples, 10.71%)</title><rect x="355.0" y="659.0" width="126.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="358.0" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.10%)</title><rect x="356.2" y="643.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="359.2" y="654.0"></text>
</g>
<g>
<title>inet6_sendmsg (213 samples, 10.47%)</title><rect x="357.3" y="643.0" width="123.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="360.3" y="654.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (212 samples, 10.42%)</title><rect x="357.3" y="627.0" width="123.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="360.3" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="357.9" y="611.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="360.9" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.05%)</title><rect x="357.9" y="595.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="360.9" y="606.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.10%)</title><rect x="358.5" y="611.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="361.5" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (207 samples, 10.17%)</title><rect x="359.7" y="611.0" width="120.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="362.7" y="622.0">tcp_sendmsg_loc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.05%)</title><rect x="363.7" y="595.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="366.7" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.05%)</title><rect x="364.3" y="595.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="367.3" y="606.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.05%)</title><rect x="364.9" y="595.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="367.9" y="606.0"></text>
</g>
<g>
<title>sk_page_frag_refill (4 samples, 0.20%)</title><rect x="365.4" y="595.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="368.4" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (4 samples, 0.20%)</title><rect x="365.4" y="579.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="368.4" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (10 samples, 0.49%)</title><rect x="367.8" y="595.0" width="5.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="370.8" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (10 samples, 0.49%)</title><rect x="367.8" y="579.0" width="5.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="370.8" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (4 samples, 0.20%)</title><rect x="368.3" y="563.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="371.3" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.05%)</title><rect x="368.3" y="547.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="371.3" y="558.0"></text>
</g>
<g>
<title>memset (3 samples, 0.15%)</title><rect x="368.9" y="547.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="371.9" y="558.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.05%)</title><rect x="370.7" y="563.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="373.7" y="574.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.10%)</title><rect x="371.2" y="563.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="374.2" y="574.0"></text>
</g>
<g>
<title>memset (2 samples, 0.10%)</title><rect x="372.4" y="563.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="375.4" y="574.0"></text>
</g>
<g>
<title>tcp_push (180 samples, 8.85%)</title><rect x="373.6" y="595.0" width="104.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="376.6" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (179 samples, 8.80%)</title><rect x="374.1" y="579.0" width="103.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="377.1" y="590.0">__tcp_push_p..</text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.05%)</title><rect x="374.1" y="563.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="377.1" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (178 samples, 8.75%)</title><rect x="374.7" y="563.0" width="103.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="377.7" y="574.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.05%)</title><rect x="378.2" y="547.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="381.2" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (165 samples, 8.11%)</title><rect x="378.8" y="547.0" width="95.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="381.8" y="558.0">__tcp_trans..</text>
</g>
<g>
<title>ip_queue_xmit (157 samples, 7.71%)</title><rect x="381.1" y="531.0" width="91.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="384.1" y="542.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (155 samples, 7.62%)</title><rect x="381.1" y="515.0" width="89.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="384.1" y="526.0">__ip_queue..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.05%)</title><rect x="381.1" y="499.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="384.1" y="510.0"></text>
</g>
<g>
<title>ip_local_out (154 samples, 7.57%)</title><rect x="381.7" y="499.0" width="89.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="384.7" y="510.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (28 samples, 1.38%)</title><rect x="381.7" y="483.0" width="16.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="384.7" y="494.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.05%)</title><rect x="381.7" y="467.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="384.7" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="382.3" y="467.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="385.3" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.05%)</title><rect x="382.8" y="467.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="385.8" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (23 samples, 1.13%)</title><rect x="383.4" y="467.0" width="13.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="386.4" y="478.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.05%)</title><rect x="385.2" y="451.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="388.2" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="385.7" y="451.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="388.7" y="462.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.05%)</title><rect x="385.7" y="435.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="388.7" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (18 samples, 0.88%)</title><rect x="386.3" y="451.0" width="10.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="389.3" y="462.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (18 samples, 0.88%)</title><rect x="386.3" y="435.0" width="10.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="389.3" y="446.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (3 samples, 0.15%)</title><rect x="388.1" y="419.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="391.1" y="430.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (1 samples, 0.05%)</title><rect x="389.8" y="419.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="392.8" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (9 samples, 0.44%)</title><rect x="390.4" y="419.0" width="5.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="393.4" y="430.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (6 samples, 0.29%)</title><rect x="392.1" y="403.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="395.1" y="414.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (3 samples, 0.15%)</title><rect x="393.9" y="387.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="396.9" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (2 samples, 0.10%)</title><rect x="395.6" y="419.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="398.6" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (2 samples, 0.10%)</title><rect x="396.8" y="467.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="399.8" y="478.0"></text>
</g>
<g>
<title>ip_output (122 samples, 6.00%)</title><rect x="397.9" y="483.0" width="70.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="400.9" y="494.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.05%)</title><rect x="397.9" y="467.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="400.9" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (120 samples, 5.90%)</title><rect x="398.5" y="467.0" width="69.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="401.5" y="478.0">ip_fini..</text>
</g>
<g>
<title>__ip_finish_output (119 samples, 5.85%)</title><rect x="399.1" y="451.0" width="69.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="402.1" y="462.0">__ip_fi..</text>
</g>
<g>
<title>ip_finish_output2 (119 samples, 5.85%)</title><rect x="399.1" y="435.0" width="69.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="402.1" y="446.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (108 samples, 5.31%)</title><rect x="400.2" y="419.0" width="62.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="403.2" y="430.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.20 (106 samples, 5.21%)</title><rect x="401.4" y="403.0" width="61.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="404.4" y="414.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (104 samples, 5.11%)</title><rect x="402.6" y="387.0" width="60.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="405.6" y="398.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (103 samples, 5.06%)</title><rect x="402.6" y="371.0" width="59.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="405.6" y="382.0">__soft..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.05%)</title><rect x="402.6" y="355.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="405.6" y="366.0"></text>
</g>
<g>
<title>net_rx_action (102 samples, 5.01%)</title><rect x="403.1" y="355.0" width="59.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="406.1" y="366.0">net_rx..</text>
</g>
<g>
<title>process_backlog (100 samples, 4.91%)</title><rect x="404.3" y="339.0" width="58.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="407.3" y="350.0">proces..</text>
</g>
<g>
<title>__netif_receive_skb (98 samples, 4.82%)</title><rect x="405.5" y="323.0" width="56.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="408.5" y="334.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (97 samples, 4.77%)</title><rect x="405.5" y="307.0" width="56.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="408.5" y="318.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.10%)</title><rect x="405.5" y="291.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="408.5" y="302.0"></text>
</g>
<g>
<title>ip_rcv (95 samples, 4.67%)</title><rect x="406.6" y="291.0" width="55.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="409.6" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.05%)</title><rect x="406.6" y="275.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="409.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (91 samples, 4.47%)</title><rect x="407.2" y="275.0" width="52.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="410.2" y="286.0">ip_rc..</text>
</g>
<g>
<title>ip_local_deliver (90 samples, 4.42%)</title><rect x="407.8" y="259.0" width="52.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="410.8" y="270.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (88 samples, 4.32%)</title><rect x="407.8" y="243.0" width="51.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="410.8" y="254.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (88 samples, 4.32%)</title><rect x="407.8" y="227.0" width="51.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="410.8" y="238.0">ip_pr..</text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.05%)</title><rect x="408.4" y="211.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="411.4" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (86 samples, 4.23%)</title><rect x="408.9" y="211.0" width="49.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="411.9" y="222.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.10%)</title><rect x="410.7" y="195.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="413.7" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.05%)</title><rect x="411.8" y="195.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="414.8" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.10%)</title><rect x="412.4" y="195.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="415.4" y="206.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.05%)</title><rect x="412.4" y="179.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="415.4" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.05%)</title><rect x="413.0" y="179.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="416.0" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (78 samples, 3.83%)</title><rect x="413.6" y="195.0" width="45.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="416.6" y="206.0">tcp_..</text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.05%)</title><rect x="413.6" y="179.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="416.6" y="190.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.05%)</title><rect x="414.2" y="179.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="417.2" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (76 samples, 3.73%)</title><rect x="414.7" y="179.0" width="44.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="417.7" y="190.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.29%)</title><rect x="414.7" y="163.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="417.7" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (6 samples, 0.29%)</title><rect x="414.7" y="147.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="417.7" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.29%)</title><rect x="414.7" y="131.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="417.7" y="142.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.25%)</title><rect x="415.3" y="115.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="418.3" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.25%)</title><rect x="415.3" y="99.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="418.3" y="110.0"></text>
</g>
<g>
<title>tcp_ack (18 samples, 0.88%)</title><rect x="418.2" y="163.0" width="10.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="421.2" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (16 samples, 0.79%)</title><rect x="418.8" y="147.0" width="9.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="421.8" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (11 samples, 0.54%)</title><rect x="420.0" y="131.0" width="6.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="423.0" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.10%)</title><rect x="420.0" y="115.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="423.0" y="126.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.05%)</title><rect x="420.0" y="99.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="423.0" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.05%)</title><rect x="420.5" y="99.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="423.5" y="110.0"></text>
</g>
<g>
<title>skb_release_all (9 samples, 0.44%)</title><rect x="421.1" y="115.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="424.1" y="126.0"></text>
</g>
<g>
<title>skb_release_data (8 samples, 0.39%)</title><rect x="421.1" y="99.0" width="4.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="424.1" y="110.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.05%)</title><rect x="425.2" y="83.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="428.2" y="94.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.05%)</title><rect x="425.2" y="67.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="428.2" y="78.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.05%)</title><rect x="425.8" y="99.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="428.8" y="110.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.05%)</title><rect x="426.3" y="131.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="429.3" y="142.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.05%)</title><rect x="426.9" y="131.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="429.9" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (1 samples, 0.05%)</title><rect x="427.5" y="131.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="430.5" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.05%)</title><rect x="428.1" y="147.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="431.1" y="158.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.05%)</title><rect x="428.7" y="163.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="431.7" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (49 samples, 2.41%)</title><rect x="429.2" y="163.0" width="28.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="432.2" y="174.0">tc..</text>
</g>
<g>
<title>sock_def_readable (49 samples, 2.41%)</title><rect x="429.2" y="147.0" width="28.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="432.2" y="158.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (49 samples, 2.41%)</title><rect x="429.2" y="131.0" width="28.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="432.2" y="142.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (49 samples, 2.41%)</title><rect x="429.2" y="115.0" width="28.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="432.2" y="126.0">__..</text>
</g>
<g>
<title>__lock_text_start (49 samples, 2.41%)</title><rect x="429.2" y="99.0" width="28.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="432.2" y="110.0">__..</text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.05%)</title><rect x="457.6" y="163.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="460.6" y="174.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.05%)</title><rect x="458.2" y="163.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="461.2" y="174.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="458.8" y="243.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="461.8" y="254.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="459.4" y="243.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="462.4" y="254.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (1 samples, 0.05%)</title><rect x="460.0" y="275.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="463.0" y="286.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="460.5" y="275.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="463.5" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat] (1 samples, 0.05%)</title><rect x="460.5" y="259.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="463.5" y="270.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="460.5" y="243.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="463.5" y="254.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="460.5" y="227.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="463.5" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat] (1 samples, 0.05%)</title><rect x="461.1" y="275.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="464.1" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.05%)</title><rect x="461.7" y="307.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="464.7" y="318.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.05%)</title><rect x="462.3" y="371.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="465.3" y="382.0"></text>
</g>
<g>
<title>dev_queue_xmit (9 samples, 0.44%)</title><rect x="462.9" y="419.0" width="5.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="465.9" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.39%)</title><rect x="462.9" y="403.0" width="4.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="465.9" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.25%)</title><rect x="462.9" y="387.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="465.9" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.25%)</title><rect x="462.9" y="371.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="465.9" y="382.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.15%)</title><rect x="463.4" y="355.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="466.4" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.05%)</title><rect x="463.4" y="339.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="466.4" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.10%)</title><rect x="464.0" y="339.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="467.0" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.10%)</title><rect x="464.0" y="323.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="467.0" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.05%)</title><rect x="465.2" y="355.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="468.2" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.05%)</title><rect x="465.8" y="387.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="468.8" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.05%)</title><rect x="466.3" y="387.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="469.3" y="398.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.05%)</title><rect x="466.9" y="387.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="469.9" y="398.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (1 samples, 0.05%)</title><rect x="467.5" y="403.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="470.5" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="468.1" y="467.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="471.1" y="478.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="468.1" y="451.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="471.1" y="462.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="468.1" y="435.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="471.1" y="446.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.05%)</title><rect x="468.1" y="419.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="471.1" y="430.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.05%)</title><rect x="468.7" y="483.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="471.7" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.15%)</title><rect x="469.2" y="483.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="472.2" y="494.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.10%)</title><rect x="471.0" y="515.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="474.0" y="526.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.15%)</title><rect x="472.1" y="531.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="475.1" y="542.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.05%)</title><rect x="473.3" y="515.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="476.3" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.05%)</title><rect x="473.3" y="499.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="476.3" y="510.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.05%)</title><rect x="473.9" y="531.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="476.9" y="542.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.05%)</title><rect x="474.5" y="547.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="477.5" y="558.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.05%)</title><rect x="475.0" y="547.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="478.0" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.20%)</title><rect x="475.6" y="547.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="478.6" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.15%)</title><rect x="476.2" y="531.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="479.2" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.05%)</title><rect x="477.4" y="515.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="480.4" y="526.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="477.4" y="499.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="480.4" y="510.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.05%)</title><rect x="477.9" y="595.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="480.9" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.05%)</title><rect x="478.5" y="595.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="481.5" y="606.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.05%)</title><rect x="479.1" y="595.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="482.1" y="606.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.05%)</title><rect x="479.7" y="611.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="482.7" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.05%)</title><rect x="480.3" y="627.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="483.3" y="638.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.05%)</title><rect x="480.8" y="643.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="483.8" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.05%)</title><rect x="480.8" y="627.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="483.8" y="638.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.05%)</title><rect x="480.8" y="611.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="483.8" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.05%)</title><rect x="480.8" y="595.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="483.8" y="606.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.05%)</title><rect x="480.8" y="579.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="483.8" y="590.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (1 samples, 0.05%)</title><rect x="480.8" y="563.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="483.8" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.05%)</title><rect x="481.4" y="659.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="484.4" y="670.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="481.4" y="643.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="484.4" y="654.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="481.4" y="627.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="484.4" y="638.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="481.4" y="611.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="484.4" y="622.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.05%)</title><rect x="482.0" y="739.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="485.0" y="750.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (8 samples, 0.39%)</title><rect x="482.6" y="755.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="485.6" y="766.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (4 samples, 0.20%)</title><rect x="484.9" y="739.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.9" y="750.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (3 samples, 0.15%)</title><rect x="487.2" y="755.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.accept (33 samples, 1.62%)</title><rect x="489.0" y="787.0" width="19.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="492.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.05%)</title><rect x="489.0" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="492.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.05%)</title><rect x="489.0" y="755.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="492.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (29 samples, 1.43%)</title><rect x="489.5" y="771.0" width="16.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (29 samples, 1.43%)</title><rect x="489.5" y="755.0" width="16.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="492.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (29 samples, 1.43%)</title><rect x="489.5" y="739.0" width="16.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="492.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (29 samples, 1.43%)</title><rect x="489.5" y="723.0" width="16.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="492.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (28 samples, 1.38%)</title><rect x="490.1" y="707.0" width="16.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="493.1" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.25%)</title><rect x="491.3" y="691.0" width="2.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="494.3" y="702.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.05%)</title><rect x="493.0" y="675.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="496.0" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="493.6" y="675.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="496.6" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_signal (21 samples, 1.03%)</title><rect x="494.2" y="691.0" width="12.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="497.2" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.93%)</title><rect x="495.3" y="675.0" width="11.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="498.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.93%)</title><rect x="495.3" y="659.0" width="11.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="498.3" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (19 samples, 0.93%)</title><rect x="495.3" y="643.0" width="11.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="498.3" y="654.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.93%)</title><rect x="495.3" y="627.0" width="11.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="498.3" y="638.0"></text>
</g>
<g>
<title>futex_wake (19 samples, 0.93%)</title><rect x="495.3" y="611.0" width="11.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="498.3" y="622.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="495.3" y="595.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="498.3" y="606.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (1 samples, 0.05%)</title><rect x="495.3" y="579.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="498.3" y="590.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.15%)</title><rect x="495.9" y="595.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="498.9" y="606.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.05%)</title><rect x="497.1" y="579.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="500.1" y="590.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 0.74%)</title><rect x="497.7" y="595.0" width="8.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="500.7" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (14 samples, 0.69%)</title><rect x="498.2" y="579.0" width="8.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="501.2" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.64%)</title><rect x="498.2" y="563.0" width="7.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="501.2" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.05%)</title><rect x="505.8" y="563.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="508.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.signalAll (3 samples, 0.15%)</title><rect x="506.4" y="771.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="509.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signalAll (1 samples, 0.05%)</title><rect x="506.4" y="755.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="509.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignalAll (1 samples, 0.05%)</title><rect x="506.4" y="739.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="509.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.05%)</title><rect x="506.4" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="509.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.05%)</title><rect x="506.4" y="707.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="509.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="506.4" y="691.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.10%)</title><rect x="506.9" y="755.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="509.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.10%)</title><rect x="506.9" y="739.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="509.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.10%)</title><rect x="506.9" y="723.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.10%)</title><rect x="506.9" y="707.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="509.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$75/1400284883.run (584 samples, 28.70%)</title><rect x="508.1" y="851.0" width="338.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="511.1" y="862.0">ru/mail/polis/service/alexander/marashov/Servi..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityPut$3 (584 samples, 28.70%)</title><rect x="508.1" y="835.0" width="338.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="511.1" y="846.0">ru/mail/polis/service/alexander/marashov/Servi..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.put (122 samples, 6.00%)</title><rect x="508.7" y="819.0" width="70.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="511.7" y="830.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.39%)</title><rect x="512.7" y="803.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="515.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.39%)</title><rect x="512.7" y="787.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="515.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.39%)</title><rect x="512.7" y="771.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.7" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="516.8" y="755.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="519.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager.put (40 samples, 1.97%)</title><rect x="517.4" y="803.0" width="23.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="520.4" y="814.0">r..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.05%)</title><rect x="517.4" y="787.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (1 samples, 0.05%)</title><rect x="517.4" y="771.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="520.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.upsert (39 samples, 1.92%)</title><rect x="518.0" y="787.0" width="22.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.0" y="798.0">r..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="518.0" y="771.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="521.0" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.25%)</title><rect x="518.5" y="771.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="521.5" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.25%)</title><rect x="518.5" y="755.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.25%)</title><rect x="518.5" y="739.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="521.5" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.15%)</title><rect x="519.7" y="723.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="522.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.05%)</title><rect x="520.9" y="707.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="523.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.10%)</title><rect x="521.4" y="771.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="524.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.10%)</title><rect x="521.4" y="755.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="524.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.10%)</title><rect x="521.4" y="739.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="524.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.05%)</title><rect x="521.4" y="723.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="524.4" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.05%)</title><rect x="521.4" y="707.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="524.4" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.05%)</title><rect x="521.4" y="691.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="524.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (1 samples, 0.05%)</title><rect x="522.0" y="723.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="525.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (1 samples, 0.05%)</title><rect x="522.0" y="707.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="525.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.upsert (31 samples, 1.52%)</title><rect x="522.6" y="771.0" width="18.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="525.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (31 samples, 1.52%)</title><rect x="522.6" y="755.0" width="18.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="525.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (31 samples, 1.52%)</title><rect x="522.6" y="739.0" width="18.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="525.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.05%)</title><rect x="530.7" y="723.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="533.7" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.05%)</title><rect x="530.7" y="707.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="533.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (1 samples, 0.05%)</title><rect x="531.3" y="723.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="534.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (3 samples, 0.15%)</title><rect x="531.9" y="723.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (3 samples, 0.15%)</title><rect x="531.9" y="707.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="534.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/Striped64$Cell.cas (1 samples, 0.05%)</title><rect x="533.0" y="691.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="536.0" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (1 samples, 0.05%)</title><rect x="533.0" y="675.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="536.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.compareAndSet (1 samples, 0.05%)</title><rect x="533.0" y="659.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="536.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.05%)</title><rect x="533.6" y="723.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="536.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.05%)</title><rect x="533.6" y="707.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="536.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="533.6" y="691.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="536.6" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="533.6" y="675.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="536.6" y="686.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="533.6" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="536.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (11 samples, 0.54%)</title><rect x="534.2" y="723.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="537.2" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.44%)</title><rect x="535.3" y="707.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="538.3" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.34%)</title><rect x="536.5" y="691.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="539.5" y="702.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.34%)</title><rect x="536.5" y="675.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="539.5" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.29%)</title><rect x="537.1" y="659.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="540.1" y="670.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.15%)</title><rect x="538.8" y="643.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="541.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.iterateOverNodes (21 samples, 1.03%)</title><rect x="540.6" y="803.0" width="12.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="543.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 1.03%)</title><rect x="540.6" y="787.0" width="12.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (21 samples, 1.03%)</title><rect x="540.6" y="771.0" width="12.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="543.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (4 samples, 0.20%)</title><rect x="542.9" y="755.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="545.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.20%)</title><rect x="542.9" y="739.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="545.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.20%)</title><rect x="542.9" y="723.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="545.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.20%)</title><rect x="542.9" y="707.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="545.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.05%)</title><rect x="545.2" y="755.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="548.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.05%)</title><rect x="545.2" y="739.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="548.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.05%)</title><rect x="545.2" y="723.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.05%)</title><rect x="545.2" y="707.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="548.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.05%)</title><rect x="545.2" y="691.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="548.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="545.2" y="675.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.2" y="686.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.05%)</title><rect x="545.2" y="659.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="548.2" y="670.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.05%)</title><rect x="545.2" y="643.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="548.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.59%)</title><rect x="545.8" y="755.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="548.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.59%)</title><rect x="545.8" y="739.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="548.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.59%)</title><rect x="545.8" y="723.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="548.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.59%)</title><rect x="545.8" y="707.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="548.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.54%)</title><rect x="546.4" y="691.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="549.4" y="702.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.29%)</title><rect x="546.4" y="675.0" width="3.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="549.4" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="546.9" y="659.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="549.9" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.20%)</title><rect x="547.5" y="659.0" width="2.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="550.5" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.25%)</title><rect x="549.8" y="675.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="552.8" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.20%)</title><rect x="550.4" y="659.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="553.4" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.20%)</title><rect x="550.4" y="643.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="553.4" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.20%)</title><rect x="550.4" y="627.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="553.4" y="638.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.20%)</title><rect x="550.4" y="611.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="553.4" y="622.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.20%)</title><rect x="550.4" y="595.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="553.4" y="606.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.20%)</title><rect x="550.4" y="579.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="553.4" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.20%)</title><rect x="550.4" y="563.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="553.4" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.20%)</title><rect x="550.4" y="547.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="553.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValidatedParameters.validateParameters (1 samples, 0.05%)</title><rect x="552.7" y="803.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="555.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.await (34 samples, 1.67%)</title><rect x="553.3" y="803.0" width="19.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="556.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (34 samples, 1.67%)</title><rect x="553.3" y="787.0" width="19.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="556.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (7 samples, 0.34%)</title><rect x="554.5" y="771.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="557.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.20%)</title><rect x="556.2" y="755.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="559.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.20%)</title><rect x="556.2" y="739.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="559.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.getExclusiveOwnerThread (2 samples, 0.10%)</title><rect x="557.4" y="723.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="560.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.10%)</title><rect x="558.5" y="771.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="561.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.10%)</title><rect x="558.5" y="755.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="561.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (21 samples, 1.03%)</title><rect x="559.7" y="771.0" width="12.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="562.7" y="782.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (1 samples, 0.05%)</title><rect x="559.7" y="755.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="562.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (20 samples, 0.98%)</title><rect x="560.3" y="755.0" width="11.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="563.3" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.15%)</title><rect x="560.9" y="739.0" width="1.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="563.9" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.05%)</title><rect x="560.9" y="723.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="563.9" y="734.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.05%)</title><rect x="561.4" y="723.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="564.4" y="734.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.05%)</title><rect x="562.0" y="723.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="565.0" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (16 samples, 0.79%)</title><rect x="562.6" y="739.0" width="9.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="565.6" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.74%)</title><rect x="563.2" y="723.0" width="8.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="566.2" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.74%)</title><rect x="563.2" y="707.0" width="8.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="566.2" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.59%)</title><rect x="563.2" y="691.0" width="6.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="566.2" y="702.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.44%)</title><rect x="563.2" y="675.0" width="5.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="566.2" y="686.0"></text>
</g>
<g>
<title>futex_wait (9 samples, 0.44%)</title><rect x="563.2" y="659.0" width="5.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="566.2" y="670.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.20%)</title><rect x="563.2" y="643.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="566.2" y="654.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (4 samples, 0.20%)</title><rect x="563.2" y="627.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="566.2" y="638.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (4 samples, 0.20%)</title><rect x="563.2" y="611.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="566.2" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.20%)</title><rect x="563.2" y="595.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="566.2" y="606.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.15%)</title><rect x="565.5" y="643.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="568.5" y="654.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.05%)</title><rect x="566.7" y="627.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="569.7" y="638.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.05%)</title><rect x="567.2" y="643.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="570.2" y="654.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (1 samples, 0.05%)</title><rect x="567.8" y="643.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="570.8" y="654.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.05%)</title><rect x="567.8" y="627.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="570.8" y="638.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.15%)</title><rect x="568.4" y="675.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="571.4" y="686.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.10%)</title><rect x="569.0" y="659.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="572.0" y="670.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.05%)</title><rect x="570.1" y="691.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="573.1" y="702.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.10%)</title><rect x="570.7" y="691.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="573.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="571.9" y="771.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="574.9" y="782.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.05%)</title><rect x="572.5" y="771.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="575.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.getResult (6 samples, 0.29%)</title><rect x="573.0" y="803.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="576.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.25%)</title><rect x="573.6" y="787.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="576.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.25%)</title><rect x="573.6" y="771.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="576.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.25%)</title><rect x="573.6" y="755.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="576.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.25%)</title><rect x="573.6" y="739.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.6" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.10%)</title><rect x="575.4" y="723.0" width="1.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="578.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/SimpleResponseAnalyzer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="576.5" y="803.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="579.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="576.5" y="787.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="579.5" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="576.5" y="771.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="579.5" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="576.5" y="755.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="579.5" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="576.5" y="739.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="579.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primariesFor (4 samples, 0.20%)</title><rect x="577.1" y="803.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primariesFor (4 samples, 0.20%)</title><rect x="577.1" y="787.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.1" y="798.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2 samples, 0.10%)</title><rect x="578.3" y="771.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="581.3" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2 samples, 0.10%)</title><rect x="578.3" y="755.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.3" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2 samples, 0.10%)</title><rect x="578.3" y="739.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="581.3" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpComparable (2 samples, 0.10%)</title><rect x="578.3" y="723.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="581.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$NodeKeyPair.compareTo (2 samples, 0.10%)</title><rect x="578.3" y="707.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$NodeKeyPair.compareTo (2 samples, 0.10%)</title><rect x="578.3" y="691.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="581.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.05%)</title><rect x="578.8" y="675.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.trySendAnswer (428 samples, 21.03%)</title><rect x="579.4" y="819.0" width="248.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="582.4" y="830.0">ru/mail/polis/service/alexander/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (426 samples, 20.93%)</title><rect x="580.0" y="803.0" width="247.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="583.0" y="814.0">one/nio/http/HttpSession.sendResp..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="588.1" y="787.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="591.1" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.05%)</title><rect x="588.1" y="771.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="591.1" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="588.1" y="755.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="591.1" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.05%)</title><rect x="588.1" y="739.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="591.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.29%)</title><rect x="588.7" y="787.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.29%)</title><rect x="588.7" y="771.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="591.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.29%)</title><rect x="588.7" y="755.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="591.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="589.9" y="739.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="592.9" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="589.9" y="723.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="592.9" y="734.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="590.4" y="739.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="593.4" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.10%)</title><rect x="591.0" y="739.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="594.0" y="750.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.10%)</title><rect x="591.0" y="723.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="594.0" y="734.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.10%)</title><rect x="591.0" y="707.0" width="1.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="594.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (402 samples, 19.75%)</title><rect x="592.2" y="787.0" width="233.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="595.2" y="798.0">one/nio/http/HttpSession.writeR..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (22 samples, 1.08%)</title><rect x="593.3" y="771.0" width="12.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="596.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.20%)</title><rect x="599.7" y="755.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.7" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.15%)</title><rect x="599.7" y="739.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="602.7" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.15%)</title><rect x="599.7" y="723.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="602.7" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.15%)</title><rect x="599.7" y="707.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="602.7" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.15%)</title><rect x="599.7" y="691.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="602.7" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.15%)</title><rect x="599.7" y="675.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="602.7" y="686.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.05%)</title><rect x="599.7" y="659.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="602.7" y="670.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.05%)</title><rect x="600.3" y="659.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="603.3" y="670.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.05%)</title><rect x="600.9" y="659.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="603.9" y="670.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (1 samples, 0.05%)</title><rect x="601.4" y="739.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="604.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.34%)</title><rect x="602.0" y="755.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.34%)</title><rect x="602.0" y="739.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.34%)</title><rect x="602.0" y="723.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (378 samples, 18.57%)</title><rect x="606.1" y="771.0" width="219.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="609.1" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="606.1" y="755.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="609.1" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="606.1" y="739.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="609.1" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="606.1" y="723.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="609.1" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="606.1" y="707.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="609.1" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="606.1" y="691.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="609.1" y="702.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.05%)</title><rect x="606.1" y="675.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="609.1" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.05%)</title><rect x="606.1" y="659.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="609.1" y="670.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.05%)</title><rect x="606.1" y="643.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="609.1" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (377 samples, 18.53%)</title><rect x="606.7" y="755.0" width="218.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="609.7" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (375 samples, 18.43%)</title><rect x="607.8" y="739.0" width="217.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.8" y="750.0">one/nio/net/Session$ArrayQueu..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.10%)</title><rect x="608.4" y="723.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="611.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (372 samples, 18.28%)</title><rect x="609.6" y="723.0" width="215.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.6" y="734.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (14 samples, 0.69%)</title><rect x="609.6" y="707.0" width="8.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="612.6" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.10%)</title><rect x="611.9" y="691.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="614.9" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (8 samples, 0.39%)</title><rect x="613.0" y="691.0" width="4.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="616.0" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.10%)</title><rect x="613.0" y="675.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="616.0" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.10%)</title><rect x="614.2" y="675.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="617.2" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.20%)</title><rect x="615.4" y="675.0" width="2.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="618.4" y="686.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.10%)</title><rect x="616.5" y="659.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="619.5" y="670.0"></text>
</g>
<g>
<title>__libc_send (358 samples, 17.59%)</title><rect x="617.7" y="707.0" width="207.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="620.7" y="718.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (355 samples, 17.44%)</title><rect x="619.4" y="691.0" width="205.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="622.4" y="702.0">entry_SYSCALL_64_after_hwfr..</text>
</g>
<g>
<title>do_syscall_64 (355 samples, 17.44%)</title><rect x="619.4" y="675.0" width="205.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="622.4" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (353 samples, 17.35%)</title><rect x="620.6" y="659.0" width="204.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="623.6" y="670.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (353 samples, 17.35%)</title><rect x="620.6" y="643.0" width="204.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="623.6" y="654.0">__sys_sendto</text>
</g>
<g>
<title>import_single_range (1 samples, 0.05%)</title><rect x="620.6" y="627.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="623.6" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (347 samples, 17.05%)</title><rect x="621.2" y="627.0" width="201.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="624.2" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (341 samples, 16.76%)</title><rect x="622.3" y="611.0" width="197.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="625.3" y="622.0">inet6_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="622.9" y="595.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="625.9" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (339 samples, 16.66%)</title><rect x="623.5" y="595.0" width="196.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="626.5" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="623.5" y="579.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="626.5" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="624.1" y="579.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="627.1" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="624.6" y="579.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="627.6" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="624.6" y="563.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="627.6" y="574.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="625.2" y="579.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="628.2" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.05%)</title><rect x="625.2" y="563.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="628.2" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="625.2" y="547.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="628.2" y="558.0"></text>
</g>
<g>
<title>sock_zerocopy_put (2 samples, 0.10%)</title><rect x="625.8" y="579.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="628.8" y="590.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.10%)</title><rect x="627.0" y="579.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="630.0" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (330 samples, 16.22%)</title><rect x="628.1" y="579.0" width="191.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="631.1" y="590.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.05%)</title><rect x="631.6" y="563.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="634.6" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.05%)</title><rect x="632.2" y="563.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="635.2" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.05%)</title><rect x="632.8" y="563.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="635.8" y="574.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.05%)</title><rect x="632.8" y="547.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="635.8" y="558.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.10%)</title><rect x="633.3" y="563.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="636.3" y="574.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.05%)</title><rect x="634.5" y="563.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="637.5" y="574.0"></text>
</g>
<g>
<title>sk_page_frag_refill (4 samples, 0.20%)</title><rect x="635.1" y="563.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="638.1" y="574.0"></text>
</g>
<g>
<title>skb_page_frag_refill (4 samples, 0.20%)</title><rect x="635.1" y="547.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="638.1" y="558.0"></text>
</g>
<g>
<title>alloc_pages_current (1 samples, 0.05%)</title><rect x="636.8" y="531.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="639.8" y="542.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.05%)</title><rect x="636.8" y="515.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="639.8" y="526.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.05%)</title><rect x="636.8" y="499.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="639.8" y="510.0"></text>
</g>
<g>
<title>prep_new_page (1 samples, 0.05%)</title><rect x="636.8" y="483.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="639.8" y="494.0"></text>
</g>
<g>
<title>clear_page_rep (1 samples, 0.05%)</title><rect x="636.8" y="467.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="639.8" y="478.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (35 samples, 1.72%)</title><rect x="637.4" y="563.0" width="20.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="640.4" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (30 samples, 1.47%)</title><rect x="640.3" y="547.0" width="17.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="643.3" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (19 samples, 0.93%)</title><rect x="640.3" y="531.0" width="11.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="643.3" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.25%)</title><rect x="641.5" y="515.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="644.5" y="526.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="642.6" y="499.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="645.6" y="510.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="642.6" y="483.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="645.6" y="494.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.10%)</title><rect x="643.2" y="499.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="646.2" y="510.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.05%)</title><rect x="644.4" y="515.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="647.4" y="526.0"></text>
</g>
<g>
<title>memset (11 samples, 0.54%)</title><rect x="644.9" y="515.0" width="6.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="647.9" y="526.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.05%)</title><rect x="651.3" y="531.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="654.3" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (7 samples, 0.34%)</title><rect x="651.9" y="531.0" width="4.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="654.9" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.10%)</title><rect x="654.8" y="515.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="657.8" y="526.0"></text>
</g>
<g>
<title>memset (3 samples, 0.15%)</title><rect x="656.0" y="531.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="659.0" y="542.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.05%)</title><rect x="657.7" y="563.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="660.7" y="574.0"></text>
</g>
<g>
<title>tcp_push (272 samples, 13.37%)</title><rect x="658.3" y="563.0" width="157.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="661.3" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (272 samples, 13.37%)</title><rect x="658.3" y="547.0" width="157.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="661.3" y="558.0">__tcp_push_pending_f..</text>
</g>
<g>
<title>tcp_write_xmit (271 samples, 13.32%)</title><rect x="658.9" y="531.0" width="157.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="661.9" y="542.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (245 samples, 12.04%)</title><rect x="660.0" y="515.0" width="142.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="663.0" y="526.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.05%)</title><rect x="661.8" y="499.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="664.8" y="510.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.05%)</title><rect x="662.3" y="499.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="665.3" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (240 samples, 11.79%)</title><rect x="662.9" y="499.0" width="139.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="665.9" y="510.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (240 samples, 11.79%)</title><rect x="662.9" y="483.0" width="139.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="665.9" y="494.0">__ip_queue_xmit</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.05%)</title><rect x="663.5" y="467.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="666.5" y="478.0"></text>
</g>
<g>
<title>ip_local_out (236 samples, 11.60%)</title><rect x="664.1" y="467.0" width="136.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="667.1" y="478.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (48 samples, 2.36%)</title><rect x="665.8" y="451.0" width="27.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="668.8" y="462.0">_..</text>
</g>
<g>
<title>ip_send_check (2 samples, 0.10%)</title><rect x="665.8" y="435.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="668.8" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.20%)</title><rect x="667.0" y="435.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="670.0" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (4 samples, 0.20%)</title><rect x="669.3" y="435.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="672.3" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.10%)</title><rect x="671.6" y="435.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="674.6" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (34 samples, 1.67%)</title><rect x="672.8" y="435.0" width="19.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="675.8" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (6 samples, 0.29%)</title><rect x="672.8" y="419.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="675.8" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (6 samples, 0.29%)</title><rect x="672.8" y="403.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="675.8" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (27 samples, 1.33%)</title><rect x="676.3" y="419.0" width="15.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="679.3" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (25 samples, 1.23%)</title><rect x="676.3" y="403.0" width="14.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="679.3" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (5 samples, 0.25%)</title><rect x="678.0" y="387.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="681.0" y="398.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (2 samples, 0.10%)</title><rect x="680.9" y="387.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="683.9" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (13 samples, 0.64%)</title><rect x="682.0" y="387.0" width="7.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="685.0" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.10%)</title><rect x="684.9" y="371.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="687.9" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (6 samples, 0.29%)</title><rect x="686.1" y="371.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="689.1" y="382.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (3 samples, 0.15%)</title><rect x="687.8" y="355.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="690.8" y="366.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (2 samples, 0.10%)</title><rect x="689.6" y="387.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="692.6" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.05%)</title><rect x="690.7" y="403.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="693.7" y="414.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.05%)</title><rect x="691.3" y="403.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="694.3" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="691.9" y="419.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="694.9" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (2 samples, 0.10%)</title><rect x="692.5" y="435.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="695.5" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.10%)</title><rect x="693.6" y="451.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="696.6" y="462.0"></text>
</g>
<g>
<title>ip_output (181 samples, 8.89%)</title><rect x="694.8" y="451.0" width="105.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="697.8" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (177 samples, 8.70%)</title><rect x="694.8" y="435.0" width="102.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="697.8" y="446.0">ip_finish_ou..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.20%)</title><rect x="697.7" y="419.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="700.7" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (166 samples, 8.16%)</title><rect x="700.0" y="419.0" width="96.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="703.0" y="430.0">__ip_finish..</text>
</g>
<g>
<title>ip_finish_output2 (162 samples, 7.96%)</title><rect x="701.8" y="403.0" width="93.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="704.8" y="414.0">ip_finish_o..</text>
</g>
<g>
<title>__local_bh_enable_ip (138 samples, 6.78%)</title><rect x="707.0" y="387.0" width="80.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="710.0" y="398.0">__local_b..</text>
</g>
<g>
<title>do_softirq.part.20 (138 samples, 6.78%)</title><rect x="707.0" y="371.0" width="80.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="710.0" y="382.0">do_softir..</text>
</g>
<g>
<title>do_softirq_own_stack (135 samples, 6.63%)</title><rect x="708.7" y="355.0" width="78.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="711.7" y="366.0">do_softir..</text>
</g>
<g>
<title>__softirqentry_text_start (134 samples, 6.58%)</title><rect x="708.7" y="339.0" width="77.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="711.7" y="350.0">__softirq..</text>
</g>
<g>
<title>net_rx_action (130 samples, 6.39%)</title><rect x="711.0" y="323.0" width="75.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="714.0" y="334.0">net_rx_a..</text>
</g>
<g>
<title>process_backlog (128 samples, 6.29%)</title><rect x="712.2" y="307.0" width="74.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="715.2" y="318.0">process_..</text>
</g>
<g>
<title>__netif_receive_skb (123 samples, 6.04%)</title><rect x="714.5" y="291.0" width="71.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="717.5" y="302.0">__netif_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (123 samples, 6.04%)</title><rect x="714.5" y="275.0" width="71.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="717.5" y="286.0">__netif_..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.10%)</title><rect x="714.5" y="259.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="717.5" y="270.0"></text>
</g>
<g>
<title>ip_rcv (118 samples, 5.80%)</title><rect x="715.7" y="259.0" width="68.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="718.7" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.05%)</title><rect x="715.7" y="243.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="718.7" y="254.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.10%)</title><rect x="716.3" y="243.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="719.3" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (111 samples, 5.45%)</title><rect x="717.4" y="243.0" width="64.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="720.4" y="254.0">ip_rcv_..</text>
</g>
<g>
<title>ip_local_deliver (109 samples, 5.36%)</title><rect x="718.0" y="227.0" width="63.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="721.0" y="238.0">ip_loca..</text>
</g>
<g>
<title>ip_local_deliver_finish (103 samples, 5.06%)</title><rect x="718.6" y="211.0" width="59.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="721.6" y="222.0">ip_loc..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (101 samples, 4.96%)</title><rect x="718.6" y="195.0" width="58.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="721.6" y="206.0">ip_pro..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="720.3" y="179.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="723.3" y="190.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.05%)</title><rect x="720.9" y="179.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="723.9" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (96 samples, 4.72%)</title><rect x="721.5" y="179.0" width="55.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="724.5" y="190.0">tcp_v..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="725.0" y="163.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="728.0" y="174.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.20%)</title><rect x="725.5" y="163.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="728.5" y="174.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.42 (1 samples, 0.05%)</title><rect x="727.9" y="163.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="730.9" y="174.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.05%)</title><rect x="728.4" y="163.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="731.4" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.10%)</title><rect x="729.0" y="163.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="732.0" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.10%)</title><rect x="729.0" y="147.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="732.0" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (80 samples, 3.93%)</title><rect x="730.2" y="163.0" width="46.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="733.2" y="174.0">tcp_..</text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.05%)</title><rect x="730.2" y="147.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="733.2" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (79 samples, 3.88%)</title><rect x="730.8" y="147.0" width="45.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="733.8" y="158.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.20%)</title><rect x="731.3" y="131.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="734.3" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.15%)</title><rect x="731.9" y="115.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="734.9" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.15%)</title><rect x="731.9" y="99.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="734.9" y="110.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.15%)</title><rect x="731.9" y="83.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="734.9" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="732.5" y="67.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="735.5" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.10%)</title><rect x="733.7" y="131.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="736.7" y="142.0"></text>
</g>
<g>
<title>tcp_ack (19 samples, 0.93%)</title><rect x="734.8" y="131.0" width="11.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="737.8" y="142.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.05%)</title><rect x="736.0" y="115.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="739.0" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (16 samples, 0.79%)</title><rect x="736.6" y="115.0" width="9.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="739.6" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.49%)</title><rect x="738.3" y="99.0" width="5.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="741.3" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.15%)</title><rect x="738.3" y="83.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="741.3" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.10%)</title><rect x="738.9" y="67.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="741.9" y="78.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.29%)</title><rect x="740.0" y="83.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="743.0" y="94.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.29%)</title><rect x="740.0" y="67.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="743.0" y="78.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.15%)</title><rect x="741.8" y="51.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="744.8" y="62.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.15%)</title><rect x="741.8" y="35.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="744.8" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.05%)</title><rect x="743.5" y="83.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="746.5" y="94.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.05%)</title><rect x="744.1" y="99.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="747.1" y="110.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.05%)</title><rect x="744.7" y="99.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="747.7" y="110.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.05%)</title><rect x="745.3" y="99.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="748.3" y="110.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.10%)</title><rect x="745.8" y="131.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="748.8" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (42 samples, 2.06%)</title><rect x="747.0" y="131.0" width="24.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="750.0" y="142.0">t..</text>
</g>
<g>
<title>sock_def_readable (42 samples, 2.06%)</title><rect x="747.0" y="115.0" width="24.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="750.0" y="126.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (42 samples, 2.06%)</title><rect x="747.0" y="99.0" width="24.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="750.0" y="110.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (42 samples, 2.06%)</title><rect x="747.0" y="83.0" width="24.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="750.0" y="94.0">_..</text>
</g>
<g>
<title>__lock_text_start (42 samples, 2.06%)</title><rect x="747.0" y="67.0" width="24.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="750.0" y="78.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (5 samples, 0.25%)</title><rect x="771.3" y="131.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="774.3" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.15%)</title><rect x="774.2" y="131.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="777.2" y="142.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.15%)</title><rect x="774.2" y="115.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="777.2" y="126.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.15%)</title><rect x="774.2" y="99.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="777.2" y="110.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.05%)</title><rect x="776.0" y="131.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="779.0" y="142.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.05%)</title><rect x="776.6" y="163.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="779.6" y="174.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.10%)</title><rect x="777.1" y="195.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="780.1" y="206.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="778.3" y="211.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="781.3" y="222.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="778.9" y="211.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="781.9" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.15%)</title><rect x="779.5" y="211.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="782.5" y="222.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="779.5" y="195.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="782.5" y="206.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.05%)</title><rect x="779.5" y="179.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="782.5" y="190.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="780.0" y="195.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="783.0" y="206.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="780.6" y="195.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="783.6" y="206.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.05%)</title><rect x="781.2" y="227.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="784.2" y="238.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (1 samples, 0.05%)</title><rect x="781.8" y="243.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="784.8" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.15%)</title><rect x="782.4" y="243.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="785.4" y="254.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat] (3 samples, 0.15%)</title><rect x="782.4" y="227.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="785.4" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (3 samples, 0.15%)</title><rect x="782.4" y="211.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="785.4" y="222.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (2 samples, 0.10%)</title><rect x="782.9" y="195.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="785.9" y="206.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.05%)</title><rect x="784.1" y="259.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="787.1" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.10%)</title><rect x="784.7" y="259.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="787.7" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.05%)</title><rect x="785.8" y="291.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="788.8" y="302.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.05%)</title><rect x="786.4" y="339.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="789.4" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (14 samples, 0.69%)</title><rect x="787.0" y="387.0" width="8.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="790.0" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (14 samples, 0.69%)</title><rect x="787.0" y="371.0" width="8.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="790.0" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.39%)</title><rect x="789.3" y="355.0" width="4.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="792.3" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="790.5" y="339.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="793.5" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.25%)</title><rect x="791.1" y="339.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="794.1" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="791.6" y="323.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="794.6" y="334.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.05%)</title><rect x="792.2" y="323.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="795.2" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.05%)</title><rect x="792.2" y="307.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="795.2" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.05%)</title><rect x="792.2" y="291.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="795.2" y="302.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.10%)</title><rect x="792.8" y="323.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="795.8" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.05%)</title><rect x="794.0" y="355.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="797.0" y="366.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.05%)</title><rect x="794.0" y="339.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="797.0" y="350.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.05%)</title><rect x="794.5" y="355.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="797.5" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.20 (1 samples, 0.05%)</title><rect x="795.1" y="387.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="798.1" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="795.7" y="403.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="798.7" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.10%)</title><rect x="796.3" y="419.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="799.3" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.20%)</title><rect x="797.4" y="435.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="800.4" y="446.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (3 samples, 0.15%)</title><rect x="797.4" y="419.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="800.4" y="430.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (2 samples, 0.10%)</title><rect x="797.4" y="403.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="800.4" y="414.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.05%)</title><rect x="798.0" y="387.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="801.0" y="398.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.05%)</title><rect x="798.6" y="403.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="801.6" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat] (1 samples, 0.05%)</title><rect x="799.2" y="419.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="802.2" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="799.2" y="403.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="802.2" y="414.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.05%)</title><rect x="799.2" y="387.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="802.2" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.10%)</title><rect x="799.8" y="451.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="802.8" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.10%)</title><rect x="800.9" y="467.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="803.9" y="478.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.05%)</title><rect x="802.1" y="515.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="805.1" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.05%)</title><rect x="802.7" y="515.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="805.7" y="526.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.10%)</title><rect x="803.2" y="515.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="806.2" y="526.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.10%)</title><rect x="803.2" y="499.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="806.2" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (12 samples, 0.59%)</title><rect x="804.4" y="515.0" width="7.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="807.4" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.25%)</title><rect x="808.5" y="499.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="811.5" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.20%)</title><rect x="809.0" y="483.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="812.0" y="494.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.20%)</title><rect x="809.0" y="467.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="812.0" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="810.2" y="451.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="813.2" y="462.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.05%)</title><rect x="810.8" y="451.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="813.8" y="462.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.05%)</title><rect x="811.4" y="515.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="814.4" y="526.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (3 samples, 0.15%)</title><rect x="811.9" y="515.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="814.9" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.10%)</title><rect x="813.7" y="515.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="816.7" y="526.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.05%)</title><rect x="814.8" y="515.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="817.8" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.05%)</title><rect x="814.8" y="499.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="817.8" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="814.8" y="483.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="817.8" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="814.8" y="467.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="817.8" y="478.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.05%)</title><rect x="815.4" y="515.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="818.4" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.29%)</title><rect x="816.0" y="563.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="819.0" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.25%)</title><rect x="816.0" y="547.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="819.0" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="817.2" y="531.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="820.2" y="542.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.10%)</title><rect x="817.7" y="531.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="820.7" y="542.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.05%)</title><rect x="818.9" y="547.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="821.9" y="558.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.05%)</title><rect x="819.5" y="579.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="822.5" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.20%)</title><rect x="820.1" y="611.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="823.1" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.20%)</title><rect x="820.1" y="595.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="823.1" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.20%)</title><rect x="820.1" y="579.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="823.1" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.20%)</title><rect x="820.1" y="563.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="823.1" y="574.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.10%)</title><rect x="821.2" y="547.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="824.2" y="558.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (1 samples, 0.05%)</title><rect x="821.2" y="531.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="824.2" y="542.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.05%)</title><rect x="821.8" y="531.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="824.8" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.25%)</title><rect x="822.4" y="627.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="825.4" y="638.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.25%)</title><rect x="822.4" y="611.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="825.4" y="622.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.25%)</title><rect x="822.4" y="595.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="825.4" y="606.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.25%)</title><rect x="822.4" y="579.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="825.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.15%)</title><rect x="825.3" y="787.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.15%)</title><rect x="825.3" y="771.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="828.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.15%)</title><rect x="825.3" y="755.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="828.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager.put (1 samples, 0.05%)</title><rect x="827.0" y="803.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValidatedParameters.validateParameters (33 samples, 1.62%)</title><rect x="827.6" y="819.0" width="19.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="830.6" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValidatedParameters.unpackReplicasParameter (33 samples, 1.62%)</title><rect x="827.6" y="803.0" width="19.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.6" y="814.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (6 samples, 0.29%)</title><rect x="828.2" y="787.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="831.2" y="798.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (5 samples, 0.25%)</title><rect x="828.2" y="771.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="831.2" y="782.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1 samples, 0.05%)</title><rect x="829.9" y="755.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.9" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="830.5" y="755.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="833.5" y="766.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1 samples, 0.05%)</title><rect x="831.1" y="771.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="834.1" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="831.1" y="755.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="834.1" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="831.1" y="739.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="834.1" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="831.1" y="723.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="834.1" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="831.1" y="707.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="834.1" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="831.1" y="691.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="834.1" y="702.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.05%)</title><rect x="831.1" y="675.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="834.1" y="686.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (26 samples, 1.28%)</title><rect x="831.7" y="787.0" width="15.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="834.7" y="798.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (10 samples, 0.49%)</title><rect x="835.1" y="771.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="838.1" y="782.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (10 samples, 0.49%)</title><rect x="835.1" y="755.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="838.1" y="766.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (10 samples, 0.49%)</title><rect x="835.1" y="739.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="838.1" y="750.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (10 samples, 0.49%)</title><rect x="835.1" y="723.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="838.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (10 samples, 0.49%)</title><rect x="835.1" y="707.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="838.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.49%)</title><rect x="835.1" y="691.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="838.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.49%)</title><rect x="835.1" y="675.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="838.1" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="839.8" y="659.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="842.8" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="839.8" y="643.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="842.8" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="839.8" y="627.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="842.8" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="839.8" y="611.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="842.8" y="622.0"></text>
</g>
<g>
<title>JfrAllocationTracer::~JfrAllocationTracer() (1 samples, 0.05%)</title><rect x="839.8" y="595.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="842.8" y="606.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.05%)</title><rect x="840.3" y="659.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="843.3" y="670.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.next (1 samples, 0.05%)</title><rect x="840.9" y="771.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="843.9" y="782.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="840.9" y="755.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="843.9" y="766.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (1 samples, 0.05%)</title><rect x="840.9" y="739.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="843.9" y="750.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1 samples, 0.05%)</title><rect x="840.9" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="843.9" y="734.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1 samples, 0.05%)</title><rect x="840.9" y="707.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (1 samples, 0.05%)</title><rect x="840.9" y="691.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="843.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="840.9" y="675.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="843.9" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="840.9" y="659.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="843.9" y="670.0"></text>
</g>
<g>
<title>com/google/common/base/Preconditions.checkNotNull (2 samples, 0.10%)</title><rect x="841.5" y="771.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="844.5" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.34%)</title><rect x="842.7" y="771.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="845.7" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.34%)</title><rect x="842.7" y="755.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="845.7" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.34%)</title><rect x="842.7" y="739.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="845.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.34%)</title><rect x="842.7" y="723.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="845.7" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.34%)</title><rect x="842.7" y="707.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="845.7" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="846.1" y="691.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="849.1" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.05%)</title><rect x="846.1" y="675.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="849.1" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.05%)</title><rect x="846.1" y="659.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="849.1" y="670.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (11 samples, 0.54%)</title><rect x="846.7" y="851.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.7" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (11 samples, 0.54%)</title><rect x="846.7" y="835.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="849.7" y="846.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$118/752700863.run (11 samples, 0.54%)</title><rect x="846.7" y="819.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="849.7" y="830.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (11 samples, 0.54%)</title><rect x="846.7" y="803.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="849.7" y="814.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (11 samples, 0.54%)</title><rect x="846.7" y="787.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="849.7" y="798.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (11 samples, 0.54%)</title><rect x="846.7" y="771.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="849.7" y="782.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.05%)</title><rect x="846.7" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="849.7" y="766.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.read (1 samples, 0.05%)</title><rect x="846.7" y="739.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="849.7" y="750.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.fill (1 samples, 0.05%)</title><rect x="846.7" y="723.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="849.7" y="734.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.read (1 samples, 0.05%)</title><rect x="846.7" y="707.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="849.7" y="718.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.read (1 samples, 0.05%)</title><rect x="846.7" y="691.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="849.7" y="702.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.socketRead (1 samples, 0.05%)</title><rect x="846.7" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="849.7" y="686.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.socketRead0 (1 samples, 0.05%)</title><rect x="846.7" y="659.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.7" y="670.0"></text>
</g>
<g>
<title>Java_java_net_SocketInputStream_socketRead0 (1 samples, 0.05%)</title><rect x="846.7" y="643.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="849.7" y="654.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.05%)</title><rect x="846.7" y="627.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="849.7" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (10 samples, 0.49%)</title><rect x="847.3" y="755.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.3" y="766.0"></text>
</g>
<g>
<title>java/rmi/server/ObjID.read (1 samples, 0.05%)</title><rect x="847.3" y="739.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="850.3" y="750.0"></text>
</g>
<g>
<title>java/rmi/server/UID.read (1 samples, 0.05%)</title><rect x="847.3" y="723.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.3" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readInt (1 samples, 0.05%)</title><rect x="847.3" y="707.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.3" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readInt (1 samples, 0.05%)</title><rect x="847.3" y="691.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.3" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (8 samples, 0.39%)</title><rect x="847.9" y="739.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="850.9" y="750.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (8 samples, 0.39%)</title><rect x="847.9" y="723.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="850.9" y="734.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (8 samples, 0.39%)</title><rect x="847.9" y="707.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="850.9" y="718.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (8 samples, 0.39%)</title><rect x="847.9" y="691.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="850.9" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.25%)</title><rect x="847.9" y="675.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="850.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.25%)</title><rect x="847.9" y="659.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="850.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (4 samples, 0.20%)</title><rect x="847.9" y="643.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="850.9" y="654.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (4 samples, 0.20%)</title><rect x="847.9" y="627.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.9" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (4 samples, 0.20%)</title><rect x="847.9" y="611.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="850.9" y="622.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (4 samples, 0.20%)</title><rect x="847.9" y="595.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="850.9" y="606.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (4 samples, 0.20%)</title><rect x="847.9" y="579.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="850.9" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (4 samples, 0.20%)</title><rect x="847.9" y="563.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.9" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (4 samples, 0.20%)</title><rect x="847.9" y="547.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.9" y="558.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (4 samples, 0.20%)</title><rect x="847.9" y="531.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="850.9" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (4 samples, 0.20%)</title><rect x="847.9" y="515.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="850.9" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (4 samples, 0.20%)</title><rect x="847.9" y="499.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="850.9" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (4 samples, 0.20%)</title><rect x="847.9" y="483.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="850.9" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (4 samples, 0.20%)</title><rect x="847.9" y="467.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.9" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (4 samples, 0.20%)</title><rect x="847.9" y="451.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.9" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (4 samples, 0.20%)</title><rect x="847.9" y="435.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="850.9" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (4 samples, 0.20%)</title><rect x="847.9" y="419.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.9" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (4 samples, 0.20%)</title><rect x="847.9" y="403.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="850.9" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (4 samples, 0.20%)</title><rect x="847.9" y="387.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="850.9" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (4 samples, 0.20%)</title><rect x="847.9" y="371.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.9" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (4 samples, 0.20%)</title><rect x="847.9" y="355.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="850.9" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (2 samples, 0.10%)</title><rect x="847.9" y="339.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="850.9" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (2 samples, 0.10%)</title><rect x="847.9" y="323.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.9" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (2 samples, 0.10%)</title><rect x="847.9" y="307.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.9" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (2 samples, 0.10%)</title><rect x="847.9" y="291.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="850.9" y="302.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.05%)</title><rect x="848.5" y="275.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="851.5" y="286.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (1 samples, 0.05%)</title><rect x="848.5" y="259.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="851.5" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.05%)</title><rect x="848.5" y="243.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.5" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.05%)</title><rect x="848.5" y="227.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="851.5" y="238.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.10%)</title><rect x="849.0" y="339.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="852.0" y="350.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.05%)</title><rect x="849.0" y="323.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="852.0" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySet (1 samples, 0.05%)</title><rect x="849.0" y="307.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="852.0" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (1 samples, 0.05%)</title><rect x="849.0" y="291.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="852.0" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="849.0" y="275.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="852.0" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractSet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="849.0" y="259.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="852.0" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.05%)</title><rect x="849.0" y="243.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="852.0" y="254.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="849.0" y="227.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="852.0" y="238.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (1 samples, 0.05%)</title><rect x="849.6" y="323.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="852.6" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.05%)</title><rect x="849.6" y="307.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="852.6" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.05%)</title><rect x="849.6" y="291.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="852.6" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.05%)</title><rect x="849.6" y="275.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="852.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor38.invoke (1 samples, 0.05%)</title><rect x="850.2" y="643.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="853.2" y="654.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttributes (1 samples, 0.05%)</title><rect x="850.2" y="627.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="853.2" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 0.05%)</title><rect x="850.2" y="611.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.2" y="622.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (1 samples, 0.05%)</title><rect x="850.2" y="595.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.2" y="606.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (1 samples, 0.05%)</title><rect x="850.2" y="579.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.2" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttributes (1 samples, 0.05%)</title><rect x="850.2" y="563.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.2" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttributes (1 samples, 0.05%)</title><rect x="850.2" y="547.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.2" y="558.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.getAttributes (1 samples, 0.05%)</title><rect x="850.2" y="531.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="853.2" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttributes (1 samples, 0.05%)</title><rect x="850.2" y="515.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="853.2" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttribute (1 samples, 0.05%)</title><rect x="850.2" y="499.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="853.2" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.getAttribute (1 samples, 0.05%)</title><rect x="850.2" y="483.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="853.2" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (1 samples, 0.05%)</title><rect x="850.2" y="467.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.2" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.05%)</title><rect x="850.2" y="451.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="853.2" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.05%)</title><rect x="850.2" y="435.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.2" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.05%)</title><rect x="850.2" y="419.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.2" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.05%)</title><rect x="850.2" y="403.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.2" y="414.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 0.05%)</title><rect x="850.2" y="387.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.2" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.05%)</title><rect x="850.2" y="371.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="853.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.05%)</title><rect x="850.2" y="355.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="853.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (1 samples, 0.05%)</title><rect x="850.2" y="339.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="853.2" y="350.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 0.05%)</title><rect x="850.2" y="323.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="853.2" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.05%)</title><rect x="850.2" y="307.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="853.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.05%)</title><rect x="850.2" y="291.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor41.invoke (1 samples, 0.05%)</title><rect x="850.2" y="275.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="853.2" y="286.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getDaemonThreadCount (1 samples, 0.05%)</title><rect x="850.2" y="259.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="853.2" y="270.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (2 samples, 0.10%)</title><rect x="850.8" y="675.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="853.8" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.10%)</title><rect x="850.8" y="659.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="853.8" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.10%)</title><rect x="850.8" y="643.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="853.8" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (2 samples, 0.10%)</title><rect x="850.8" y="627.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="853.8" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.10%)</title><rect x="850.8" y="611.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="853.8" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.10%)</title><rect x="850.8" y="595.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="853.8" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.10%)</title><rect x="850.8" y="579.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.8" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.10%)</title><rect x="850.8" y="563.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="853.8" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.10%)</title><rect x="850.8" y="547.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="853.8" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.10%)</title><rect x="850.8" y="531.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="853.8" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.10%)</title><rect x="850.8" y="515.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.8" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2 samples, 0.10%)</title><rect x="850.8" y="499.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="853.8" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.10%)</title><rect x="850.8" y="483.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="853.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.10%)</title><rect x="850.8" y="467.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor32.invoke (2 samples, 0.10%)</title><rect x="850.8" y="451.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="853.8" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (2 samples, 0.10%)</title><rect x="850.8" y="435.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="853.8" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.10%)</title><rect x="850.8" y="419.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="853.8" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.10%)</title><rect x="850.8" y="403.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="853.8" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (1 samples, 0.05%)</title><rect x="850.8" y="387.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="853.8" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.05%)</title><rect x="850.8" y="371.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="853.8" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.05%)</title><rect x="850.8" y="355.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.8" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.05%)</title><rect x="850.8" y="339.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="853.8" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.05%)</title><rect x="850.8" y="323.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="853.8" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.05%)</title><rect x="850.8" y="307.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="853.8" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.05%)</title><rect x="850.8" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="853.8" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.05%)</title><rect x="850.8" y="275.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="853.8" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.05%)</title><rect x="850.8" y="259.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.8" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.05%)</title><rect x="850.8" y="243.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.05%)</title><rect x="850.8" y="227.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor32.invoke (1 samples, 0.05%)</title><rect x="850.8" y="211.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.8" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.05%)</title><rect x="850.8" y="195.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="853.8" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.05%)</title><rect x="850.8" y="179.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="853.8" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.05%)</title><rect x="850.8" y="163.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="853.8" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.lookup (1 samples, 0.05%)</title><rect x="850.8" y="147.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="853.8" y="158.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="850.8" y="131.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="853.8" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.05%)</title><rect x="851.4" y="387.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="854.4" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.05%)</title><rect x="851.4" y="371.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="854.4" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.05%)</title><rect x="851.4" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="854.4" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.05%)</title><rect x="851.4" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="854.4" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.05%)</title><rect x="851.4" y="323.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="854.4" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.05%)</title><rect x="851.4" y="307.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="854.4" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.05%)</title><rect x="851.4" y="291.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="854.4" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.05%)</title><rect x="851.4" y="275.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="854.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.05%)</title><rect x="851.4" y="259.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="854.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor32.invoke (1 samples, 0.05%)</title><rect x="851.4" y="243.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="854.4" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.05%)</title><rect x="851.4" y="227.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="854.4" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.05%)</title><rect x="851.4" y="211.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="854.4" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.05%)</title><rect x="851.4" y="195.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="854.4" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.lookup (1 samples, 0.05%)</title><rect x="851.4" y="179.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="854.4" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.hash (1 samples, 0.05%)</title><rect x="851.4" y="163.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="854.4" y="174.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (1 samples, 0.05%)</title><rect x="851.4" y="147.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="854.4" y="158.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.05%)</title><rect x="851.4" y="131.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="854.4" y="142.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.05%)</title><rect x="851.4" y="115.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="854.4" y="126.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (1 samples, 0.05%)</title><rect x="851.9" y="675.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="854.9" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.05%)</title><rect x="851.9" y="659.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="854.9" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.05%)</title><rect x="851.9" y="643.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="854.9" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.05%)</title><rect x="851.9" y="627.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="854.9" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (1 samples, 0.05%)</title><rect x="851.9" y="611.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="854.9" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.05%)</title><rect x="851.9" y="595.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="854.9" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.05%)</title><rect x="851.9" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="854.9" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (1 samples, 0.05%)</title><rect x="851.9" y="563.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="854.9" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getReflector (1 samples, 0.05%)</title><rect x="851.9" y="547.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.05%)</title><rect x="851.9" y="531.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="854.9" y="542.0"></text>
</g>
<g>
<title>sun/rmi/transport/ObjectTable.getTarget (1 samples, 0.05%)</title><rect x="852.5" y="739.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="855.5" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="852.5" y="723.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="855.5" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="852.5" y="707.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="855.5" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/ObjectEndpoint.equals (1 samples, 0.05%)</title><rect x="852.5" y="691.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="855.5" y="702.0"></text>
</g>
<g>
<title>java/rmi/server/ObjID.equals (1 samples, 0.05%)</title><rect x="852.5" y="675.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.5" y="686.0"></text>
</g>
<g>
<title>java/rmi/server/UID.equals (1 samples, 0.05%)</title><rect x="852.5" y="659.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$75/1400284883.run (1 samples, 0.05%)</title><rect x="853.1" y="883.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.1" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityPut$3 (1 samples, 0.05%)</title><rect x="853.1" y="867.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="856.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.put (1 samples, 0.05%)</title><rect x="853.1" y="851.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.1" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primariesFor (1 samples, 0.05%)</title><rect x="853.1" y="835.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.1" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primariesFor (1 samples, 0.05%)</title><rect x="853.1" y="819.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="856.1" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.05%)</title><rect x="853.1" y="803.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="856.1" y="814.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.05%)</title><rect x="853.1" y="787.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="856.1" y="798.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.05%)</title><rect x="853.1" y="771.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="856.1" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpComparable (1 samples, 0.05%)</title><rect x="853.1" y="755.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="856.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$NodeKeyPair.compareTo (1 samples, 0.05%)</title><rect x="853.1" y="739.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="856.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology$NodeKeyPair.compareTo (1 samples, 0.05%)</title><rect x="853.1" y="723.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="856.1" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (341 samples, 16.76%)</title><rect x="853.7" y="899.0" width="197.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.7" y="910.0">one/nio/server/SelectorThr..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.05%)</title><rect x="853.7" y="883.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.7" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.05%)</title><rect x="854.3" y="883.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="857.3" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.05%)</title><rect x="854.3" y="867.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="857.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.05%)</title><rect x="854.3" y="851.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="857.3" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (60 samples, 2.95%)</title><rect x="854.8" y="883.0" width="34.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="857.8" y="894.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (54 samples, 2.65%)</title><rect x="858.3" y="867.0" width="31.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="861.3" y="878.0">on..</text>
</g>
<g>
<title>[unknown] (40 samples, 1.97%)</title><rect x="864.7" y="851.0" width="23.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="867.7" y="862.0">[..</text>
</g>
<g>
<title>[unknown] (5 samples, 0.25%)</title><rect x="864.7" y="835.0" width="2.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="867.7" y="846.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.25%)</title><rect x="864.7" y="819.0" width="2.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="867.7" y="830.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.15%)</title><rect x="865.9" y="803.0" width="1.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="868.9" y="814.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.10%)</title><rect x="866.4" y="787.0" width="1.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="869.4" y="798.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.10%)</title><rect x="867.6" y="835.0" width="1.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="870.6" y="846.0"></text>
</g>
<g>
<title>epoll_wait (33 samples, 1.62%)</title><rect x="868.8" y="835.0" width="19.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="871.8" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 1.03%)</title><rect x="875.7" y="819.0" width="12.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="878.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.05%)</title><rect x="875.7" y="803.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="878.7" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.98%)</title><rect x="876.3" y="803.0" width="11.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="879.3" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (18 samples, 0.88%)</title><rect x="877.5" y="787.0" width="10.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="880.5" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (18 samples, 0.88%)</title><rect x="877.5" y="771.0" width="10.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="880.5" y="782.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.15%)</title><rect x="878.6" y="755.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="881.6" y="766.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.15%)</title><rect x="878.6" y="739.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="881.6" y="750.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.15%)</title><rect x="878.6" y="723.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="881.6" y="734.0"></text>
</g>
<g>
<title>ep_poll (13 samples, 0.64%)</title><rect x="880.4" y="755.0" width="7.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="883.4" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (6 samples, 0.29%)</title><rect x="882.1" y="739.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="885.1" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.10%)</title><rect x="883.8" y="723.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="886.8" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.05%)</title><rect x="884.4" y="707.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="887.4" y="718.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.05%)</title><rect x="884.4" y="691.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="887.4" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.05%)</title><rect x="884.4" y="675.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="887.4" y="686.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.05%)</title><rect x="885.0" y="723.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="888.0" y="734.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.10%)</title><rect x="885.6" y="739.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="888.6" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.10%)</title><rect x="886.7" y="739.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="889.7" y="750.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="886.7" y="723.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="889.7" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.05%)</title><rect x="887.3" y="723.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="890.3" y="734.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="887.3" y="707.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="890.3" y="718.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="887.3" y="691.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="890.3" y="702.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.10%)</title><rect x="887.9" y="851.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="890.9" y="862.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.05%)</title><rect x="889.1" y="851.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="892.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (274 samples, 13.46%)</title><rect x="889.6" y="883.0" width="158.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="892.6" y="894.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (268 samples, 13.17%)</title><rect x="893.1" y="867.0" width="155.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="896.1" y="878.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (186 samples, 9.14%)</title><rect x="893.1" y="851.0" width="107.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="896.1" y="862.0">one/nio/http/..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="896.0" y="835.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="899.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2 samples, 0.10%)</title><rect x="896.6" y="835.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="899.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (137 samples, 6.73%)</title><rect x="897.8" y="835.0" width="79.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="900.8" y="846.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (135 samples, 6.63%)</title><rect x="898.9" y="819.0" width="78.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="901.9" y="830.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (126 samples, 6.19%)</title><rect x="899.5" y="803.0" width="73.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="902.5" y="814.0">RequestH..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.10%)</title><rect x="899.5" y="787.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="902.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (11 samples, 0.54%)</title><rect x="900.7" y="787.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="903.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (11 samples, 0.54%)</title><rect x="900.7" y="771.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="903.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="903.6" y="755.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="906.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="903.6" y="739.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="904.1" y="755.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="907.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="904.1" y="739.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="907.1" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="904.7" y="755.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="907.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.15%)</title><rect x="905.3" y="755.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="908.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="906.5" y="739.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="909.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="906.5" y="723.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="909.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="906.5" y="707.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="909.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityPut (113 samples, 5.55%)</title><rect x="907.0" y="787.0" width="65.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="910.0" y="798.0">ru/mail..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1455724367.linkToTargetMethod (1 samples, 0.05%)</title><rect x="907.0" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="910.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="907.0" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="910.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$75/1400284883.get$Lambda (1 samples, 0.05%)</title><rect x="907.0" y="739.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="910.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.executeOrSendError (112 samples, 5.50%)</title><rect x="907.6" y="771.0" width="65.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="910.6" y="782.0">ru/mail..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (112 samples, 5.50%)</title><rect x="907.6" y="755.0" width="65.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="910.6" y="766.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (112 samples, 5.50%)</title><rect x="907.6" y="739.0" width="65.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="910.6" y="750.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (9 samples, 0.44%)</title><rect x="908.8" y="723.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="911.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (9 samples, 0.44%)</title><rect x="908.8" y="707.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="911.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (9 samples, 0.44%)</title><rect x="908.8" y="691.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="911.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (9 samples, 0.44%)</title><rect x="908.8" y="675.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="911.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.25%)</title><rect x="914.0" y="723.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="917.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.25%)</title><rect x="914.0" y="707.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="917.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (96 samples, 4.72%)</title><rect x="916.9" y="723.0" width="55.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="919.9" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (96 samples, 4.72%)</title><rect x="916.9" y="707.0" width="55.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="919.9" y="718.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (96 samples, 4.72%)</title><rect x="916.9" y="691.0" width="55.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="919.9" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (96 samples, 4.72%)</title><rect x="916.9" y="675.0" width="55.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="919.9" y="686.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (94 samples, 4.62%)</title><rect x="918.0" y="659.0" width="54.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="921.0" y="670.0">jdk/i..</text>
</g>
<g>
<title>Unsafe_Unpark (18 samples, 0.88%)</title><rect x="918.6" y="643.0" width="10.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="921.6" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.10%)</title><rect x="920.4" y="627.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="923.4" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.25%)</title><rect x="921.5" y="627.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="924.5" y="638.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.05%)</title><rect x="924.4" y="627.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="927.4" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="924.4" y="611.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="927.4" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="924.4" y="595.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="927.4" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="924.4" y="579.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="927.4" y="590.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="924.4" y="563.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="927.4" y="574.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="924.4" y="547.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="927.4" y="558.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="924.4" y="531.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="927.4" y="542.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.05%)</title><rect x="925.0" y="627.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="928.0" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.25%)</title><rect x="925.6" y="627.0" width="2.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="928.6" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="928.5" y="627.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="931.5" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (74 samples, 3.64%)</title><rect x="929.1" y="643.0" width="42.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="932.1" y="654.0">__pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (71 samples, 3.49%)</title><rect x="930.8" y="627.0" width="41.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="933.8" y="638.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (71 samples, 3.49%)</title><rect x="930.8" y="611.0" width="41.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="933.8" y="622.0">do_..</text>
</g>
<g>
<title>__x64_sys_futex (71 samples, 3.49%)</title><rect x="930.8" y="595.0" width="41.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="933.8" y="606.0">__x..</text>
</g>
<g>
<title>do_futex (71 samples, 3.49%)</title><rect x="930.8" y="579.0" width="41.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="933.8" y="590.0">do_..</text>
</g>
<g>
<title>futex_wake (71 samples, 3.49%)</title><rect x="930.8" y="563.0" width="41.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="933.8" y="574.0">fut..</text>
</g>
<g>
<title>get_futex_key (2 samples, 0.10%)</title><rect x="933.1" y="547.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="936.1" y="558.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.15%)</title><rect x="934.3" y="547.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="937.3" y="558.0"></text>
</g>
<g>
<title>wake_up_q (62 samples, 3.05%)</title><rect x="936.0" y="547.0" width="36.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="939.0" y="558.0">wak..</text>
</g>
<g>
<title>try_to_wake_up (62 samples, 3.05%)</title><rect x="936.0" y="531.0" width="36.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="939.0" y="542.0">try..</text>
</g>
<g>
<title>__lock_text_start (62 samples, 3.05%)</title><rect x="936.0" y="515.0" width="36.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="939.0" y="526.0">__l..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="972.0" y="643.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="975.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (8 samples, 0.39%)</title><rect x="972.6" y="803.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="975.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (8 samples, 0.39%)</title><rect x="972.6" y="787.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="975.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.25%)</title><rect x="972.6" y="771.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="975.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.15%)</title><rect x="975.5" y="771.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="978.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.15%)</title><rect x="975.5" y="755.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="978.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.15%)</title><rect x="975.5" y="739.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="978.5" y="750.0"></text>
</g>
<g>
<title>RequestHandler2_handleEntityPut.handleRequest (1 samples, 0.05%)</title><rect x="976.0" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="979.0" y="734.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="976.6" y="723.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="979.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (19 samples, 0.93%)</title><rect x="977.2" y="835.0" width="11.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="980.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.05%)</title><rect x="977.2" y="819.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="980.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="977.2" y="803.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="980.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="977.2" y="787.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="980.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="977.2" y="771.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="980.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="977.2" y="755.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="980.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.79%)</title><rect x="977.8" y="819.0" width="9.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="980.8" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.79%)</title><rect x="977.8" y="803.0" width="9.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="980.8" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="985.9" y="787.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="988.9" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="985.9" y="771.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="988.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="986.5" y="787.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="989.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="986.5" y="771.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="989.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.05%)</title><rect x="986.5" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="989.5" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="986.5" y="739.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="989.5" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="986.5" y="723.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="989.5" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="986.5" y="707.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="989.5" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="986.5" y="691.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="989.5" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.05%)</title><rect x="986.5" y="675.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="989.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.10%)</title><rect x="987.1" y="819.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="990.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.10%)</title><rect x="988.2" y="835.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="991.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.10%)</title><rect x="988.2" y="819.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="991.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.10%)</title><rect x="988.2" y="803.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="991.2" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.98%)</title><rect x="989.4" y="835.0" width="11.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="992.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.39%)</title><rect x="996.3" y="819.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="999.3" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="999.2" y="803.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1002.2" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.10%)</title><rect x="999.8" y="803.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1002.8" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.10%)</title><rect x="999.8" y="787.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1002.8" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.10%)</title><rect x="999.8" y="771.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1002.8" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="999.8" y="755.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1002.8" y="766.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.05%)</title><rect x="999.8" y="739.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1002.8" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="1000.4" y="755.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1003.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (82 samples, 4.03%)</title><rect x="1001.0" y="851.0" width="47.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1004.0" y="862.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (79 samples, 3.88%)</title><rect x="1002.7" y="835.0" width="45.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1005.7" y="846.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (12 samples, 0.59%)</title><rect x="1004.4" y="819.0" width="7.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1007.4" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.05%)</title><rect x="1006.8" y="803.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1009.8" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="1007.3" y="803.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1010.3" y="814.0"></text>
</g>
<g>
<title>__memmove_ssse3 (2 samples, 0.10%)</title><rect x="1007.9" y="803.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1010.9" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.20%)</title><rect x="1009.1" y="803.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1012.1" y="814.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.05%)</title><rect x="1009.1" y="787.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1012.1" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.10%)</title><rect x="1009.7" y="787.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1012.7" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.05%)</title><rect x="1010.8" y="787.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1013.8" y="798.0"></text>
</g>
<g>
<title>__GI___recv (61 samples, 3.00%)</title><rect x="1011.4" y="819.0" width="35.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1014.4" y="830.0">__G..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (55 samples, 2.70%)</title><rect x="1014.9" y="803.0" width="31.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1017.9" y="814.0">en..</text>
</g>
<g>
<title>do_syscall_64 (55 samples, 2.70%)</title><rect x="1014.9" y="787.0" width="31.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1017.9" y="798.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (49 samples, 2.41%)</title><rect x="1018.4" y="771.0" width="28.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1021.4" y="782.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (49 samples, 2.41%)</title><rect x="1018.4" y="755.0" width="28.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1021.4" y="766.0">__..</text>
</g>
<g>
<title>sock_recvmsg (45 samples, 2.21%)</title><rect x="1018.4" y="739.0" width="26.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1021.4" y="750.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (32 samples, 1.57%)</title><rect x="1018.4" y="723.0" width="18.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1021.4" y="734.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.05%)</title><rect x="1018.9" y="707.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1021.9" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (30 samples, 1.47%)</title><rect x="1019.5" y="707.0" width="17.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1022.5" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.10%)</title><rect x="1024.7" y="691.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1027.7" y="702.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.10%)</title><rect x="1024.7" y="675.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1027.7" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.05%)</title><rect x="1024.7" y="659.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1027.7" y="670.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.05%)</title><rect x="1024.7" y="643.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1027.7" y="654.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.05%)</title><rect x="1025.3" y="659.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1028.3" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="1025.9" y="691.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1028.9" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="1026.5" y="691.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1029.5" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="1026.5" y="675.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1029.5" y="686.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="1027.1" y="691.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1030.1" y="702.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.05%)</title><rect x="1027.1" y="675.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1030.1" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.39%)</title><rect x="1027.6" y="691.0" width="4.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1030.6" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 0.39%)</title><rect x="1027.6" y="675.0" width="4.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1030.6" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.25%)</title><rect x="1029.4" y="659.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1032.4" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.05%)</title><rect x="1029.4" y="643.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1032.4" y="654.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.20%)</title><rect x="1030.0" y="643.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1033.0" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.15%)</title><rect x="1030.5" y="627.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1033.5" y="638.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.05%)</title><rect x="1032.3" y="691.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1035.3" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (7 samples, 0.34%)</title><rect x="1032.9" y="691.0" width="4.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1035.9" y="702.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.29%)</title><rect x="1033.4" y="675.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1036.4" y="686.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.20%)</title><rect x="1033.4" y="659.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1036.4" y="670.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.10%)</title><rect x="1034.6" y="643.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1037.6" y="654.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.10%)</title><rect x="1035.8" y="659.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1038.8" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (13 samples, 0.64%)</title><rect x="1036.9" y="723.0" width="7.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1039.9" y="734.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.05%)</title><rect x="1038.1" y="707.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1041.1" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (10 samples, 0.49%)</title><rect x="1038.7" y="707.0" width="5.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1041.7" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.05%)</title><rect x="1038.7" y="691.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1041.7" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (9 samples, 0.44%)</title><rect x="1039.2" y="691.0" width="5.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1042.2" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (9 samples, 0.44%)</title><rect x="1039.2" y="675.0" width="5.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1042.2" y="686.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (5 samples, 0.25%)</title><rect x="1041.0" y="659.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1044.0" y="670.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (1 samples, 0.05%)</title><rect x="1042.7" y="643.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1045.7" y="654.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.05%)</title><rect x="1043.3" y="643.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1046.3" y="654.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.05%)</title><rect x="1043.9" y="659.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1046.9" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.20%)</title><rect x="1044.5" y="739.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1047.5" y="750.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.15%)</title><rect x="1044.5" y="723.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1047.5" y="734.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.15%)</title><rect x="1044.5" y="707.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1047.5" y="718.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.15%)</title><rect x="1044.5" y="691.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1047.5" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="1046.2" y="723.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1049.2" y="734.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.05%)</title><rect x="1046.8" y="819.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1049.8" y="830.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.05%)</title><rect x="1047.4" y="819.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1050.4" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.05%)</title><rect x="1047.9" y="819.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1050.9" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.25%)</title><rect x="1048.5" y="883.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1051.5" y="894.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.20%)</title><rect x="1049.1" y="867.0" width="2.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1052.1" y="878.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.15%)</title><rect x="1049.7" y="851.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1052.7" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Flusher.run (154 samples, 7.57%)</title><rect x="1051.4" y="899.0" width="89.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1054.4" y="910.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.serialize (154 samples, 7.57%)</title><rect x="1051.4" y="883.0" width="89.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1054.4" y="894.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/Iterator.forEachRemaining (154 samples, 7.57%)</title><rect x="1051.4" y="867.0" width="89.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1054.4" y="878.0">java/util/..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$$Lambda$138/1696968646.accept (154 samples, 7.57%)</title><rect x="1051.4" y="851.0" width="89.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1054.4" y="862.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.lambda$serialize$0 (154 samples, 7.57%)</title><rect x="1051.4" y="835.0" width="89.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1054.4" y="846.0">ru/mail/po..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (154 samples, 7.57%)</title><rect x="1051.4" y="819.0" width="89.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1054.4" y="830.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.10%)</title><rect x="1052.0" y="803.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1055.0" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.10%)</title><rect x="1052.0" y="787.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1055.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (151 samples, 7.42%)</title><rect x="1053.2" y="803.0" width="87.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1056.2" y="814.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (144 samples, 7.08%)</title><rect x="1053.2" y="787.0" width="83.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1056.2" y="798.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (144 samples, 7.08%)</title><rect x="1053.2" y="771.0" width="83.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1056.2" y="782.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (144 samples, 7.08%)</title><rect x="1053.2" y="755.0" width="83.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1056.2" y="766.0">sun/nio/c..</text>
</g>
<g>
<title>[unknown] (144 samples, 7.08%)</title><rect x="1053.2" y="739.0" width="83.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1056.2" y="750.0">[unknown]</text>
</g>
<g>
<title>__GI_write (144 samples, 7.08%)</title><rect x="1053.2" y="723.0" width="83.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1056.2" y="734.0">__GI_write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (140 samples, 6.88%)</title><rect x="1055.5" y="707.0" width="81.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1058.5" y="718.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (140 samples, 6.88%)</title><rect x="1055.5" y="691.0" width="81.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1058.5" y="702.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_write (136 samples, 6.68%)</title><rect x="1057.8" y="675.0" width="78.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1060.8" y="686.0">__x64_sys..</text>
</g>
<g>
<title>ksys_write (136 samples, 6.68%)</title><rect x="1057.8" y="659.0" width="78.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1060.8" y="670.0">ksys_write</text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.10%)</title><rect x="1057.8" y="643.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1060.8" y="654.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.10%)</title><rect x="1057.8" y="627.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1060.8" y="638.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.10%)</title><rect x="1057.8" y="611.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1060.8" y="622.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.05%)</title><rect x="1059.0" y="643.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1062.0" y="654.0"></text>
</g>
<g>
<title>vfs_write (133 samples, 6.54%)</title><rect x="1059.5" y="643.0" width="77.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1062.5" y="654.0">vfs_write</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.05%)</title><rect x="1059.5" y="627.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1062.5" y="638.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.05%)</title><rect x="1060.1" y="627.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1063.1" y="638.0"></text>
</g>
<g>
<title>__vfs_write (127 samples, 6.24%)</title><rect x="1060.7" y="627.0" width="73.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1063.7" y="638.0">__vfs_wr..</text>
</g>
<g>
<title>ext4_file_write_iter (1 samples, 0.05%)</title><rect x="1060.7" y="611.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1063.7" y="622.0"></text>
</g>
<g>
<title>new_sync_write (126 samples, 6.19%)</title><rect x="1061.3" y="611.0" width="73.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1064.3" y="622.0">new_sync..</text>
</g>
<g>
<title>ext4_file_write_iter (126 samples, 6.19%)</title><rect x="1061.3" y="595.0" width="73.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1064.3" y="606.0">ext4_fil..</text>
</g>
<g>
<title>__generic_file_write_iter (124 samples, 6.09%)</title><rect x="1061.9" y="579.0" width="71.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1064.9" y="590.0">__generi..</text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.05%)</title><rect x="1061.9" y="563.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1064.9" y="574.0"></text>
</g>
<g>
<title>ext4_da_write_end (1 samples, 0.05%)</title><rect x="1062.4" y="563.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1065.4" y="574.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.05%)</title><rect x="1063.0" y="563.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1066.0" y="574.0"></text>
</g>
<g>
<title>generic_perform_write (121 samples, 5.95%)</title><rect x="1063.6" y="563.0" width="70.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1066.6" y="574.0">generic_..</text>
</g>
<g>
<title>ext4_da_write_begin (41 samples, 2.01%)</title><rect x="1064.2" y="547.0" width="23.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1067.2" y="558.0">e..</text>
</g>
<g>
<title>__ext4_journal_start_sb (37 samples, 1.82%)</title><rect x="1064.2" y="531.0" width="21.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1067.2" y="542.0">_..</text>
</g>
<g>
<title>ext4_journal_check_start (5 samples, 0.25%)</title><rect x="1064.8" y="515.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1067.8" y="526.0"></text>
</g>
<g>
<title>jbd2__journal_start (31 samples, 1.52%)</title><rect x="1067.7" y="515.0" width="17.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1070.7" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.05%)</title><rect x="1068.2" y="499.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1071.2" y="510.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="1068.2" y="483.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1071.2" y="494.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.05%)</title><rect x="1068.8" y="499.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1071.8" y="510.0"></text>
</g>
<g>
<title>start_this_handle (28 samples, 1.38%)</title><rect x="1069.4" y="499.0" width="16.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1072.4" y="510.0"></text>
</g>
<g>
<title>_raw_read_lock (13 samples, 0.64%)</title><rect x="1075.2" y="483.0" width="7.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1078.2" y="494.0"></text>
</g>
<g>
<title>add_transaction_credits (5 samples, 0.25%)</title><rect x="1082.7" y="483.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1085.7" y="494.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (4 samples, 0.20%)</title><rect x="1085.6" y="531.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1088.6" y="542.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.15%)</title><rect x="1085.6" y="515.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1088.6" y="526.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.10%)</title><rect x="1085.6" y="499.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1088.6" y="510.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="1086.8" y="499.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1089.8" y="510.0"></text>
</g>
<g>
<title>wait_for_stable_page (1 samples, 0.05%)</title><rect x="1087.4" y="515.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1090.4" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_end (76 samples, 3.73%)</title><rect x="1087.9" y="547.0" width="44.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1090.9" y="558.0">ext4..</text>
</g>
<g>
<title>__ext4_journal_stop (12 samples, 0.59%)</title><rect x="1088.5" y="531.0" width="7.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1091.5" y="542.0"></text>
</g>
<g>
<title>jbd2_journal_stop (12 samples, 0.59%)</title><rect x="1088.5" y="515.0" width="7.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1091.5" y="526.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.10%)</title><rect x="1093.2" y="499.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1096.2" y="510.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.10%)</title><rect x="1093.2" y="483.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1096.2" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="1093.2" y="467.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1096.2" y="478.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.10%)</title><rect x="1094.3" y="499.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1097.3" y="510.0"></text>
</g>
<g>
<title>generic_write_end (63 samples, 3.10%)</title><rect x="1095.5" y="531.0" width="36.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1098.5" y="542.0">gen..</text>
</g>
<g>
<title>__mark_inode_dirty (56 samples, 2.75%)</title><rect x="1095.5" y="515.0" width="32.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1098.5" y="526.0">__..</text>
</g>
<g>
<title>ext4_dirty_inode (56 samples, 2.75%)</title><rect x="1095.5" y="499.0" width="32.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1098.5" y="510.0">ex..</text>
</g>
<g>
<title>__ext4_journal_start_sb (11 samples, 0.54%)</title><rect x="1095.5" y="483.0" width="6.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1098.5" y="494.0"></text>
</g>
<g>
<title>ext4_journal_check_start (10 samples, 0.49%)</title><rect x="1096.1" y="467.0" width="5.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1099.1" y="478.0"></text>
</g>
<g>
<title>__ext4_journal_stop (7 samples, 0.34%)</title><rect x="1101.9" y="483.0" width="4.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1104.9" y="494.0"></text>
</g>
<g>
<title>jbd2_journal_stop (7 samples, 0.34%)</title><rect x="1101.9" y="467.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1104.9" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (38 samples, 1.87%)</title><rect x="1105.9" y="483.0" width="22.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1108.9" y="494.0">e..</text>
</g>
<g>
<title>ext4_mark_iloc_dirty (24 samples, 1.18%)</title><rect x="1105.9" y="467.0" width="13.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1108.9" y="478.0"></text>
</g>
<g>
<title>ext4_do_update_inode (23 samples, 1.13%)</title><rect x="1106.5" y="451.0" width="13.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1109.5" y="462.0"></text>
</g>
<g>
<title>__brelse (1 samples, 0.05%)</title><rect x="1108.8" y="435.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1111.8" y="446.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (9 samples, 0.44%)</title><rect x="1109.4" y="435.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1112.4" y="446.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (8 samples, 0.39%)</title><rect x="1110.0" y="419.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1113.0" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="1114.6" y="435.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1117.6" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (8 samples, 0.39%)</title><rect x="1115.2" y="435.0" width="4.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1118.2" y="446.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.05%)</title><rect x="1115.2" y="419.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1118.2" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.62 (7 samples, 0.34%)</title><rect x="1115.8" y="419.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1118.8" y="430.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (3 samples, 0.15%)</title><rect x="1117.5" y="403.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1120.5" y="414.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.05%)</title><rect x="1119.3" y="403.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1122.3" y="414.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.05%)</title><rect x="1119.3" y="387.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1122.3" y="398.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (14 samples, 0.69%)</title><rect x="1119.8" y="467.0" width="8.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1122.8" y="478.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (10 samples, 0.49%)</title><rect x="1119.8" y="451.0" width="5.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1122.8" y="462.0"></text>
</g>
<g>
<title>__getblk_gfp (7 samples, 0.34%)</title><rect x="1121.0" y="435.0" width="4.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1124.0" y="446.0"></text>
</g>
<g>
<title>__find_get_block (7 samples, 0.34%)</title><rect x="1121.0" y="419.0" width="4.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1124.0" y="430.0"></text>
</g>
<g>
<title>ext4_inode_table (1 samples, 0.05%)</title><rect x="1125.1" y="435.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1128.1" y="446.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (4 samples, 0.20%)</title><rect x="1125.6" y="451.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1128.6" y="462.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (4 samples, 0.20%)</title><rect x="1125.6" y="435.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1128.6" y="446.0"></text>
</g>
<g>
<title>block_write_end (6 samples, 0.29%)</title><rect x="1128.0" y="515.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1131.0" y="526.0"></text>
</g>
<g>
<title>__block_commit_write.isra.41 (6 samples, 0.29%)</title><rect x="1128.0" y="499.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1131.0" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.05%)</title><rect x="1131.4" y="515.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1134.4" y="526.0"></text>
</g>
<g>
<title>ext4_nonda_switch (1 samples, 0.05%)</title><rect x="1132.0" y="547.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1135.0" y="558.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.05%)</title><rect x="1132.6" y="547.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1135.6" y="558.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.05%)</title><rect x="1132.6" y="531.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1135.6" y="542.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.05%)</title><rect x="1133.2" y="547.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1136.2" y="558.0"></text>
</g>
<g>
<title>ext4_write_checks (1 samples, 0.05%)</title><rect x="1133.8" y="579.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1136.8" y="590.0"></text>
</g>
<g>
<title>generic_write_checks (1 samples, 0.05%)</title><rect x="1133.8" y="563.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1136.8" y="574.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.05%)</title><rect x="1134.3" y="627.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1137.3" y="638.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.15%)</title><rect x="1134.9" y="627.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1137.9" y="638.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.15%)</title><rect x="1134.9" y="611.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1137.9" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.15%)</title><rect x="1134.9" y="595.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1137.9" y="606.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.15%)</title><rect x="1134.9" y="579.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1137.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.15%)</title><rect x="1136.7" y="787.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1139.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.15%)</title><rect x="1136.7" y="771.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.7" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (4 samples, 0.20%)</title><rect x="1138.4" y="787.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1141.4" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.20%)</title><rect x="1138.4" y="771.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1141.4" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.10%)</title><rect x="1138.4" y="755.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.4" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.05%)</title><rect x="1139.0" y="739.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1142.0" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.05%)</title><rect x="1139.6" y="755.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1142.6" y="766.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="1140.1" y="755.0" width="0.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1143.1" y="766.0"></text>
</g>
<g>
<title>start_thread (85 samples, 4.18%)</title><rect x="1140.7" y="899.0" width="49.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1143.7" y="910.0">start..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (85 samples, 4.18%)</title><rect x="1140.7" y="883.0" width="49.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1143.7" y="894.0">threa..</text>
</g>
<g>
<title>Thread::call_run() (85 samples, 4.18%)</title><rect x="1140.7" y="867.0" width="49.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1143.7" y="878.0">Threa..</text>
</g>
<g>
<title>GangWorker::loop() (68 samples, 3.34%)</title><rect x="1140.7" y="851.0" width="39.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1143.7" y="862.0">Gan..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (3 samples, 0.15%)</title><rect x="1140.7" y="835.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1143.7" y="846.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (3 samples, 0.15%)</title><rect x="1140.7" y="819.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1143.7" y="830.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (3 samples, 0.15%)</title><rect x="1140.7" y="803.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1143.7" y="814.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.154] (1 samples, 0.05%)</title><rect x="1140.7" y="787.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1143.7" y="798.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (2 samples, 0.10%)</title><rect x="1141.3" y="787.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1144.3" y="798.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (2 samples, 0.10%)</title><rect x="1141.3" y="771.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1144.3" y="782.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (1 samples, 0.05%)</title><rect x="1141.9" y="755.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.9" y="766.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (1 samples, 0.05%)</title><rect x="1142.5" y="835.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1145.5" y="846.0"></text>
</g>
<g>
<title>HeapRegionRemSet::clear_locked(bool) (1 samples, 0.05%)</title><rect x="1142.5" y="819.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1145.5" y="830.0"></text>
</g>
<g>
<title>G1FromCardCache::clear(unsigned int) (1 samples, 0.05%)</title><rect x="1142.5" y="803.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1145.5" y="814.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (59 samples, 2.90%)</title><rect x="1143.0" y="835.0" width="34.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1146.0" y="846.0">G1..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (56 samples, 2.75%)</title><rect x="1143.0" y="819.0" width="32.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1146.0" y="830.0">G1..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (56 samples, 2.75%)</title><rect x="1143.0" y="803.0" width="32.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1146.0" y="814.0">G1..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (37 samples, 1.82%)</title><rect x="1152.3" y="787.0" width="21.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1155.3" y="798.0">G..</text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (10 samples, 0.49%)</title><rect x="1168.0" y="771.0" width="5.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1171.0" y="782.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.10%)</title><rect x="1173.8" y="787.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1176.8" y="798.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;TypeArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.05%)</title><rect x="1174.9" y="787.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1177.9" y="798.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.05%)</title><rect x="1175.5" y="819.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1178.5" y="830.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.05%)</title><rect x="1175.5" y="803.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.5" y="814.0"></text>
</g>
<g>
<title>G1HotCardCache::drain(CardTableEntryClosure*, unsigned int) (1 samples, 0.05%)</title><rect x="1175.5" y="787.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1178.5" y="798.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.05%)</title><rect x="1176.1" y="819.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1179.1" y="830.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.05%)</title><rect x="1176.1" y="803.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1179.1" y="814.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.05%)</title><rect x="1176.1" y="787.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1179.1" y="798.0"></text>
</g>
<g>
<title>G1EvacPhaseWithTrimTimeTracker::G1EvacPhaseWithTrimTimeTracker(G1ParScanThreadState*, TimeInterval&lt;CompositeCounterRepresentation, CompositeElapsedCounterSource&gt;&amp;, TimeInterval&lt;CompositeCounterRepresentation, CompositeElapsedCounterSource&gt;&amp;) (1 samples, 0.05%)</title><rect x="1176.1" y="771.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.1" y="782.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.05%)</title><rect x="1176.7" y="819.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1179.7" y="830.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.05%)</title><rect x="1176.7" y="803.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1179.7" y="814.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.05%)</title><rect x="1176.7" y="787.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.7" y="798.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.05%)</title><rect x="1176.7" y="771.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1179.7" y="782.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.05%)</title><rect x="1176.7" y="755.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1179.7" y="766.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.05%)</title><rect x="1176.7" y="739.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1179.7" y="750.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.05%)</title><rect x="1176.7" y="723.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1179.7" y="734.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (3 samples, 0.15%)</title><rect x="1177.2" y="835.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1180.2" y="846.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (3 samples, 0.15%)</title><rect x="1177.2" y="819.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.2" y="830.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.10%)</title><rect x="1177.2" y="803.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.2" y="814.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (1 samples, 0.05%)</title><rect x="1177.2" y="787.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.2" y="798.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (1 samples, 0.05%)</title><rect x="1177.8" y="787.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.8" y="798.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (1 samples, 0.05%)</title><rect x="1178.4" y="803.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.4" y="814.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (2 samples, 0.10%)</title><rect x="1179.0" y="835.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.0" y="846.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (2 samples, 0.10%)</title><rect x="1179.0" y="819.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.0" y="830.0"></text>
</g>
<g>
<title>ParallelSPCleanupThreadClosure::do_thread(Thread*) (2 samples, 0.10%)</title><rect x="1179.0" y="803.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.0" y="814.0"></text>
</g>
<g>
<title>ObjectSynchronizer::deflate_thread_local_monitors(Thread*, DeflateMonitorCounters*) (2 samples, 0.10%)</title><rect x="1179.0" y="787.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.0" y="798.0"></text>
</g>
<g>
<title>Thread::muxAcquire(long volatile*, char const*) (1 samples, 0.05%)</title><rect x="1179.6" y="771.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.6" y="782.0"></text>
</g>
<g>
<title>JavaThread::run() (15 samples, 0.74%)</title><rect x="1180.1" y="851.0" width="8.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.1" y="862.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (15 samples, 0.74%)</title><rect x="1180.1" y="835.0" width="8.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.1" y="846.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (14 samples, 0.69%)</title><rect x="1180.1" y="819.0" width="8.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.1" y="830.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (14 samples, 0.69%)</title><rect x="1180.1" y="803.0" width="8.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1183.1" y="814.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (14 samples, 0.69%)</title><rect x="1180.1" y="787.0" width="8.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.1" y="798.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (7 samples, 0.34%)</title><rect x="1180.1" y="771.0" width="4.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.1" y="782.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.05%)</title><rect x="1180.1" y="755.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.1" y="766.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 0.05%)</title><rect x="1180.1" y="739.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.1" y="750.0"></text>
</g>
<g>
<title>Node::jvms() const (1 samples, 0.05%)</title><rect x="1180.1" y="723.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.1" y="734.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.10%)</title><rect x="1180.7" y="755.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.7" y="766.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.10%)</title><rect x="1180.7" y="739.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.7" y="750.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (1 samples, 0.05%)</title><rect x="1180.7" y="723.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1183.7" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.05%)</title><rect x="1181.3" y="723.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.3" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (4 samples, 0.20%)</title><rect x="1181.9" y="755.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.9" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.05%)</title><rect x="1181.9" y="739.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.9" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (2 samples, 0.10%)</title><rect x="1182.5" y="739.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.5" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.05%)</title><rect x="1183.0" y="723.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.0" y="734.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="1183.0" y="707.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.0" y="718.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.05%)</title><rect x="1183.6" y="739.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1186.6" y="750.0"></text>
</g>
<g>
<title>Compile::Optimize() (5 samples, 0.25%)</title><rect x="1184.2" y="771.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.2" y="782.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (2 samples, 0.10%)</title><rect x="1184.2" y="755.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.2" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.10%)</title><rect x="1184.2" y="739.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.2" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.10%)</title><rect x="1184.2" y="723.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.2" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (2 samples, 0.10%)</title><rect x="1184.2" y="707.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.2" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.10%)</title><rect x="1185.4" y="755.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.4" y="766.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.05%)</title><rect x="1185.4" y="739.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.4" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.05%)</title><rect x="1185.9" y="739.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.9" y="750.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.05%)</title><rect x="1185.9" y="723.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.9" y="734.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.05%)</title><rect x="1186.5" y="755.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.5" y="766.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_arraycopy_node(ArrayCopyNode*) (1 samples, 0.05%)</title><rect x="1186.5" y="739.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.5" y="750.0"></text>
</g>
<g>
<title>PhaseMacroExpand::generate_arraycopy(ArrayCopyNode*, AllocateArrayNode*, Node**, MergeMemNode*, Node**, TypePtr const*, BasicType, Node*, Node*, Node*, Node*, Node*, bool, bool, RegionNode*) (1 samples, 0.05%)</title><rect x="1186.5" y="723.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.5" y="734.0"></text>
</g>
<g>
<title>MemBarNode::make(Compile*, int, int, Node*) (1 samples, 0.05%)</title><rect x="1186.5" y="707.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.5" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.10%)</title><rect x="1187.1" y="771.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.1" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.10%)</title><rect x="1187.1" y="755.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.1" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.10%)</title><rect x="1187.1" y="739.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.1" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.10%)</title><rect x="1187.1" y="723.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.1" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.10%)</title><rect x="1187.1" y="707.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.1" y="718.0"></text>
</g>
<g>
<title>Parse::array_store(BasicType) (1 samples, 0.05%)</title><rect x="1187.1" y="691.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.1" y="702.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.05%)</title><rect x="1187.1" y="675.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.1" y="686.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.05%)</title><rect x="1187.1" y="659.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.1" y="670.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.05%)</title><rect x="1187.1" y="643.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.1" y="654.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.05%)</title><rect x="1187.1" y="627.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.1" y="638.0"></text>
</g>
<g>
<title>IdealKit::if_then(Node*, BoolTest::mask, Node*, float, float, bool) (1 samples, 0.05%)</title><rect x="1187.1" y="611.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.1" y="622.0"></text>
</g>
<g>
<title>IdealKit::copy_cvstate() (1 samples, 0.05%)</title><rect x="1187.1" y="595.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.1" y="606.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.05%)</title><rect x="1187.1" y="579.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.1" y="590.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.05%)</title><rect x="1187.1" y="563.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.1" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1187.7" y="691.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.7" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1187.7" y="675.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.7" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1187.7" y="659.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.7" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1187.7" y="643.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.7" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1187.7" y="627.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.7" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1187.7" y="611.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.7" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1187.7" y="595.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.7" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1187.7" y="579.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.7" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1187.7" y="563.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.7" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1187.7" y="547.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.7" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1187.7" y="531.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.7" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1187.7" y="515.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.7" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1187.7" y="499.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.7" y="510.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.05%)</title><rect x="1187.7" y="483.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.7" y="494.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool) (1 samples, 0.05%)</title><rect x="1187.7" y="467.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.7" y="478.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.05%)</title><rect x="1187.7" y="451.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.7" y="462.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads() (1 samples, 0.05%)</title><rect x="1188.3" y="819.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.3" y="830.0"></text>
</g>
<g>
<title>os::available_memory() (1 samples, 0.05%)</title><rect x="1188.3" y="803.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.3" y="814.0"></text>
</g>
<g>
<title>OSContainer::memory_limit_in_bytes() (1 samples, 0.05%)</title><rect x="1188.3" y="787.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.3" y="798.0"></text>
</g>
<g>
<title>__GI_strstr (1 samples, 0.05%)</title><rect x="1188.3" y="771.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1191.3" y="782.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.10%)</title><rect x="1188.8" y="851.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.8" y="862.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.10%)</title><rect x="1188.8" y="835.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.8" y="846.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.05%)</title><rect x="1188.8" y="819.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.8" y="830.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (1 samples, 0.05%)</title><rect x="1188.8" y="803.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.8" y="814.0"></text>
</g>
<g>
<title>SubTasksDone::SubTasksDone(unsigned int) (1 samples, 0.05%)</title><rect x="1188.8" y="787.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.8" y="798.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (1 samples, 0.05%)</title><rect x="1189.4" y="819.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.4" y="830.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.05%)</title><rect x="1189.4" y="803.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.4" y="814.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.05%)</title><rect x="1189.4" y="787.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.4" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.05%)</title><rect x="1189.4" y="771.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.4" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::evacuate_collection_set(G1ParScanThreadStateSet*) (1 samples, 0.05%)</title><rect x="1189.4" y="755.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.4" y="766.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*) (1 samples, 0.05%)</title><rect x="1189.4" y="739.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.4" y="750.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.05%)</title><rect x="1189.4" y="723.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.4" y="734.0"></text>
</g>
<g>
<title>__new_sem_post (1 samples, 0.05%)</title><rect x="1189.4" y="707.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1192.4" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="1189.4" y="691.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1192.4" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="1189.4" y="675.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1192.4" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="1189.4" y="659.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1192.4" y="670.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="1189.4" y="643.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1192.4" y="654.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="1189.4" y="627.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1192.4" y="638.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.05%)</title><rect x="1189.4" y="611.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1192.4" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.05%)</title><rect x="1189.4" y="595.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1192.4" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="1189.4" y="579.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1192.4" y="590.0"></text>
</g>
</g>
</svg>
