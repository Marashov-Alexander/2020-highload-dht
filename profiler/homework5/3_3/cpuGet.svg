<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (8,985 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="10.0" y="915.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.02%)</title><rect x="10.0" y="899.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (2 samples, 0.02%)</title><rect x="10.0" y="883.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>[not_walkable_Java] (16 samples, 0.18%)</title><rect x="10.3" y="915.0" width="2.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.3" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (6 samples, 0.07%)</title><rect x="10.4" y="899.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.4" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (6 samples, 0.07%)</title><rect x="10.4" y="883.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.4" y="894.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.04%)</title><rect x="10.7" y="867.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.7" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.09%)</title><rect x="11.2" y="899.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.2" y="910.0"></text>
</g>
<g>
<title>[unknown_Java] (162 samples, 1.80%)</title><rect x="12.4" y="915.0" width="21.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="15.4" y="926.0">[..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (158 samples, 1.76%)</title><rect x="12.5" y="899.0" width="20.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="15.5" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (158 samples, 1.76%)</title><rect x="12.5" y="883.0" width="20.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.5" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.02%)</title><rect x="33.8" y="915.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="36.8" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="33.8" y="899.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="36.8" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.02%)</title><rect x="34.0" y="915.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="37.0" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.run (8,421 samples, 93.72%)</title><rect x="34.3" y="915.0" width="1105.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.3" y="926.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (8,421 samples, 93.72%)</title><rect x="34.3" y="899.0" width="1105.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="37.3" y="910.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (8,421 samples, 93.72%)</title><rect x="34.3" y="883.0" width="1105.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.3" y="894.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (21 samples, 0.23%)</title><rect x="34.3" y="867.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (21 samples, 0.23%)</title><rect x="34.3" y="851.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (21 samples, 0.23%)</title><rect x="34.3" y="835.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="37.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.20%)</title><rect x="34.7" y="819.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="37.7" y="830.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.04%)</title><rect x="35.6" y="803.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="38.6" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$84/2037434908.run (2 samples, 0.02%)</title><rect x="36.3" y="803.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="39.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$148/1601371073.run (4 samples, 0.04%)</title><rect x="36.5" y="803.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="39.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (267 samples, 2.97%)</title><rect x="37.1" y="867.0" width="35.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="40.1" y="878.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (246 samples, 2.74%)</title><rect x="39.7" y="851.0" width="32.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="42.7" y="862.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (127 samples, 1.41%)</title><rect x="40.9" y="835.0" width="16.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="43.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (14 samples, 0.16%)</title><rect x="40.9" y="819.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (5 samples, 0.06%)</title><rect x="42.0" y="803.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.0" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (2 samples, 0.02%)</title><rect x="42.3" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="45.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (17 samples, 0.19%)</title><rect x="42.7" y="819.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="45.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (12 samples, 0.13%)</title><rect x="43.4" y="803.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (12 samples, 0.13%)</title><rect x="43.4" y="787.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="46.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.getExclusiveOwnerThread (4 samples, 0.04%)</title><rect x="44.3" y="771.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (5 samples, 0.06%)</title><rect x="44.9" y="819.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.06%)</title><rect x="44.9" y="803.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.03%)</title><rect x="44.9" y="787.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.02%)</title><rect x="45.1" y="771.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.02%)</title><rect x="45.1" y="755.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.1" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.02%)</title><rect x="45.1" y="739.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="48.1" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="45.1" y="723.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="48.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="45.1" y="707.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="48.1" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="45.1" y="691.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="48.1" y="702.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.02%)</title><rect x="45.1" y="675.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="48.1" y="686.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.02%)</title><rect x="45.1" y="659.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="48.1" y="670.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.02%)</title><rect x="45.1" y="643.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="48.1" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.02%)</title><rect x="45.1" y="627.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="48.1" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.02%)</title><rect x="45.1" y="611.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="48.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.02%)</title><rect x="45.3" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="48.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (91 samples, 1.01%)</title><rect x="45.6" y="819.0" width="11.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (90 samples, 1.00%)</title><rect x="45.7" y="803.0" width="11.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="48.7" y="814.0"></text>
</g>
<g>
<title>Unsafe_Park (48 samples, 0.53%)</title><rect x="46.8" y="787.0" width="6.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="49.8" y="798.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (5 samples, 0.06%)</title><rect x="48.1" y="771.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="51.1" y="782.0"></text>
</g>
<g>
<title>Monitor::unlock() (3 samples, 0.03%)</title><rect x="48.7" y="771.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="51.7" y="782.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (12 samples, 0.13%)</title><rect x="49.1" y="771.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="52.1" y="782.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.03%)</title><rect x="50.1" y="755.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="53.1" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="50.4" y="755.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="53.4" y="766.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.02%)</title><rect x="50.7" y="771.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="53.7" y="782.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.07%)</title><rect x="51.4" y="771.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="54.4" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.07%)</title><rect x="51.4" y="755.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="54.4" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.07%)</title><rect x="51.4" y="739.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="54.4" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.07%)</title><rect x="51.4" y="723.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="54.4" y="734.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.06%)</title><rect x="51.4" y="707.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="54.4" y="718.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.04%)</title><rect x="51.4" y="691.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="54.4" y="702.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.02%)</title><rect x="51.6" y="675.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="54.6" y="686.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.02%)</title><rect x="52.6" y="771.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="55.6" y="782.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.02%)</title><rect x="52.8" y="771.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="55.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.36%)</title><rect x="53.1" y="787.0" width="4.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="56.1" y="798.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.02%)</title><rect x="53.1" y="771.0" width="0.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="56.1" y="782.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (29 samples, 0.32%)</title><rect x="53.5" y="771.0" width="3.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="56.5" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.28%)</title><rect x="54.0" y="755.0" width="3.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="57.0" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.28%)</title><rect x="54.0" y="739.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="57.0" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (22 samples, 0.24%)</title><rect x="54.4" y="723.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="57.4" y="734.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.24%)</title><rect x="54.4" y="707.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="57.4" y="718.0"></text>
</g>
<g>
<title>futex_wait (22 samples, 0.24%)</title><rect x="54.4" y="691.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="57.4" y="702.0"></text>
</g>
<g>
<title>futex_wait_queue_me (10 samples, 0.11%)</title><rect x="54.4" y="675.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="57.4" y="686.0"></text>
</g>
<g>
<title>plist_add (3 samples, 0.03%)</title><rect x="54.5" y="659.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="57.5" y="670.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.07%)</title><rect x="54.9" y="659.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="57.9" y="670.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.06%)</title><rect x="55.0" y="643.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="58.0" y="654.0"></text>
</g>
<g>
<title>futex_wait_setup (10 samples, 0.11%)</title><rect x="55.7" y="675.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="58.7" y="686.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.02%)</title><rect x="56.6" y="659.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="59.6" y="670.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.02%)</title><rect x="57.3" y="787.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="60.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (7 samples, 0.08%)</title><rect x="57.5" y="835.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (7 samples, 0.08%)</title><rect x="57.5" y="819.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (7 samples, 0.08%)</title><rect x="57.5" y="803.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (6 samples, 0.07%)</title><rect x="57.7" y="787.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (4 samples, 0.04%)</title><rect x="57.7" y="771.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.02%)</title><rect x="58.2" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.2" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.02%)</title><rect x="58.2" y="755.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (100 samples, 1.11%)</title><rect x="58.5" y="835.0" width="13.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (100 samples, 1.11%)</title><rect x="58.5" y="819.0" width="13.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="61.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (100 samples, 1.11%)</title><rect x="58.5" y="803.0" width="13.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="61.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (100 samples, 1.11%)</title><rect x="58.5" y="787.0" width="13.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (100 samples, 1.11%)</title><rect x="58.5" y="771.0" width="13.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.5" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.02%)</title><rect x="58.7" y="755.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="61.7" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (18 samples, 0.20%)</title><rect x="59.1" y="755.0" width="2.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="62.1" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.02%)</title><rect x="59.4" y="739.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="62.4" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.03%)</title><rect x="59.6" y="739.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="62.6" y="750.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.02%)</title><rect x="60.2" y="739.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="63.2" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_lock (6 samples, 0.07%)</title><rect x="60.4" y="739.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="63.4" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="61.2" y="739.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="64.2" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (77 samples, 0.86%)</title><rect x="61.5" y="755.0" width="10.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="64.5" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (72 samples, 0.80%)</title><rect x="62.1" y="739.0" width="9.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="65.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (72 samples, 0.80%)</title><rect x="62.1" y="723.0" width="9.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="65.1" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (69 samples, 0.77%)</title><rect x="62.5" y="707.0" width="9.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="65.5" y="718.0"></text>
</g>
<g>
<title>do_futex (69 samples, 0.77%)</title><rect x="62.5" y="691.0" width="9.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="65.5" y="702.0"></text>
</g>
<g>
<title>futex_wake (68 samples, 0.76%)</title><rect x="62.7" y="675.0" width="8.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="65.7" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (9 samples, 0.10%)</title><rect x="63.8" y="659.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="66.8" y="670.0"></text>
</g>
<g>
<title>wake_up_q (50 samples, 0.56%)</title><rect x="65.0" y="659.0" width="6.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="68.0" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (50 samples, 0.56%)</title><rect x="65.0" y="643.0" width="6.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="68.0" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (50 samples, 0.56%)</title><rect x="65.0" y="627.0" width="6.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="68.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.03%)</title><rect x="71.6" y="835.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="74.6" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$149/1637537171.run (2,403 samples, 26.74%)</title><rect x="72.1" y="867.0" width="315.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.1" y="878.0">ru/mail/polis/service/alexander/marashov/Re..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.lambda$get$0 (2,403 samples, 26.74%)</title><rect x="72.1" y="851.0" width="315.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="75.1" y="862.0">ru/mail/polis/service/alexander/marashov/Re..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager.rowGet (2,375 samples, 26.43%)</title><rect x="72.5" y="835.0" width="311.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="75.5" y="846.0">ru/mail/polis/service/alexander/marashov/D..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.03%)</title><rect x="72.8" y="819.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="75.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.rowGet (2,357 samples, 26.23%)</title><rect x="73.2" y="819.0" width="309.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="76.2" y="830.0">ru/mail/polis/dao/DAO.rowGet</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (59 samples, 0.66%)</title><rect x="73.6" y="803.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.6" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (57 samples, 0.63%)</title><rect x="73.8" y="787.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.8" y="798.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (57 samples, 0.63%)</title><rect x="73.8" y="771.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.8" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (57 samples, 0.63%)</title><rect x="73.8" y="755.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="76.8" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (57 samples, 0.63%)</title><rect x="73.8" y="739.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.8" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (57 samples, 0.63%)</title><rect x="73.8" y="723.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.8" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (56 samples, 0.62%)</title><rect x="74.0" y="707.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.0" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (56 samples, 0.62%)</title><rect x="74.0" y="691.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="77.0" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (56 samples, 0.62%)</title><rect x="74.0" y="675.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="77.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (56 samples, 0.62%)</title><rect x="74.0" y="659.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (56 samples, 0.62%)</title><rect x="74.0" y="643.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (22 samples, 0.24%)</title><rect x="74.0" y="627.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (7 samples, 0.08%)</title><rect x="74.0" y="611.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.08%)</title><rect x="74.0" y="595.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.08%)</title><rect x="74.0" y="579.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.0" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.07%)</title><rect x="74.1" y="563.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.07%)</title><rect x="74.1" y="547.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="77.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.07%)</title><rect x="74.1" y="531.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="77.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.07%)</title><rect x="74.1" y="515.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.1" y="526.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="74.1" y="499.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="77.1" y="510.0"></text>
</g>
<g>
<title>pread64 (6 samples, 0.07%)</title><rect x="74.1" y="483.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="77.1" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.07%)</title><rect x="74.1" y="467.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="77.1" y="478.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.02%)</title><rect x="74.1" y="451.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="77.1" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.04%)</title><rect x="74.4" y="451.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="77.4" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.03%)</title><rect x="74.5" y="435.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="77.5" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.03%)</title><rect x="74.5" y="419.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="77.5" y="430.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.02%)</title><rect x="74.6" y="403.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="77.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (8 samples, 0.09%)</title><rect x="74.9" y="611.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.9" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.08%)</title><rect x="75.0" y="595.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.08%)</title><rect x="75.0" y="579.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.0" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.07%)</title><rect x="75.1" y="563.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.07%)</title><rect x="75.1" y="547.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.07%)</title><rect x="75.1" y="531.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="78.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.07%)</title><rect x="75.1" y="515.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.1" y="526.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="75.1" y="499.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="78.1" y="510.0"></text>
</g>
<g>
<title>pread64 (6 samples, 0.07%)</title><rect x="75.1" y="483.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="78.1" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.07%)</title><rect x="75.1" y="467.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="78.1" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.07%)</title><rect x="75.1" y="451.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="78.1" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.04%)</title><rect x="75.4" y="435.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="78.4" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.04%)</title><rect x="75.4" y="419.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="78.4" y="430.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.03%)</title><rect x="75.5" y="403.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="78.5" y="414.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.03%)</title><rect x="75.5" y="387.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="78.5" y="398.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="75.7" y="371.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="78.7" y="382.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.02%)</title><rect x="75.7" y="355.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="78.7" y="366.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.02%)</title><rect x="75.7" y="339.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="78.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (7 samples, 0.08%)</title><rect x="75.9" y="611.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.9" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.08%)</title><rect x="75.9" y="595.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.08%)</title><rect x="75.9" y="579.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.08%)</title><rect x="75.9" y="563.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="78.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.07%)</title><rect x="75.9" y="547.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.07%)</title><rect x="75.9" y="531.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.07%)</title><rect x="75.9" y="515.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="75.9" y="499.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="78.9" y="510.0"></text>
</g>
<g>
<title>pread64 (5 samples, 0.06%)</title><rect x="76.1" y="483.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="79.1" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.06%)</title><rect x="76.1" y="467.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="79.1" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.06%)</title><rect x="76.1" y="451.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="79.1" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.06%)</title><rect x="76.1" y="435.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="79.1" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.06%)</title><rect x="76.1" y="419.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="79.1" y="430.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="76.1" y="403.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="79.1" y="414.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="76.1" y="387.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="79.1" y="398.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="76.1" y="371.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="79.1" y="382.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.02%)</title><rect x="76.5" y="403.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="79.5" y="414.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="76.5" y="387.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="79.5" y="398.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="76.5" y="371.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="79.5" y="382.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.02%)</title><rect x="76.5" y="355.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="79.5" y="366.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.02%)</title><rect x="76.5" y="339.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="79.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.value (34 samples, 0.38%)</title><rect x="76.8" y="627.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="79.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (5 samples, 0.06%)</title><rect x="76.8" y="611.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.8" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.06%)</title><rect x="76.8" y="595.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="79.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.06%)</title><rect x="76.8" y="579.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="79.8" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.06%)</title><rect x="76.8" y="563.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.04%)</title><rect x="77.0" y="547.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="80.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.04%)</title><rect x="77.0" y="531.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.04%)</title><rect x="77.0" y="515.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="77.0" y="499.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="80.0" y="510.0"></text>
</g>
<g>
<title>pread64 (4 samples, 0.04%)</title><rect x="77.0" y="483.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="80.0" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="77.1" y="467.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="80.1" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.03%)</title><rect x="77.1" y="451.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="80.1" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.03%)</title><rect x="77.1" y="435.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="80.1" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.03%)</title><rect x="77.1" y="419.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="80.1" y="430.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.03%)</title><rect x="77.1" y="403.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="80.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (12 samples, 0.13%)</title><rect x="77.5" y="611.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.5" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (12 samples, 0.13%)</title><rect x="77.5" y="595.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="80.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (12 samples, 0.13%)</title><rect x="77.5" y="579.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.5" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.10%)</title><rect x="77.6" y="563.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.6" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.04%)</title><rect x="77.6" y="547.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="80.6" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.04%)</title><rect x="77.6" y="531.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.02%)</title><rect x="77.9" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.02%)</title><rect x="77.9" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="80.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.02%)</title><rect x="77.9" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.06%)</title><rect x="78.2" y="547.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.2" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.06%)</title><rect x="78.2" y="531.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.06%)</title><rect x="78.2" y="515.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="81.2" y="526.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="78.3" y="499.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="81.3" y="510.0"></text>
</g>
<g>
<title>pread64 (4 samples, 0.04%)</title><rect x="78.3" y="483.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="81.3" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.04%)</title><rect x="78.3" y="467.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="81.3" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.04%)</title><rect x="78.3" y="451.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="81.3" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.03%)</title><rect x="78.4" y="435.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="81.4" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.03%)</title><rect x="78.4" y="419.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="81.4" y="430.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.03%)</title><rect x="78.4" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="81.4" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.02%)</title><rect x="78.8" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getLongFrom (6 samples, 0.07%)</title><rect x="79.1" y="611.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.1" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.07%)</title><rect x="79.1" y="595.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="82.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.07%)</title><rect x="79.1" y="579.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="82.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.07%)</title><rect x="79.1" y="563.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.07%)</title><rect x="79.1" y="547.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.07%)</title><rect x="79.1" y="531.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.07%)</title><rect x="79.1" y="515.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.1" y="526.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="79.2" y="499.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="82.2" y="510.0"></text>
</g>
<g>
<title>pread64 (5 samples, 0.06%)</title><rect x="79.2" y="483.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="82.2" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.06%)</title><rect x="79.2" y="467.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="82.2" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.06%)</title><rect x="79.2" y="451.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="82.2" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.04%)</title><rect x="79.3" y="435.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="82.3" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.04%)</title><rect x="79.3" y="419.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="82.3" y="430.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.03%)</title><rect x="79.5" y="403.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="82.5" y="414.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="79.5" y="387.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="82.5" y="398.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="79.5" y="371.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="82.5" y="382.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.02%)</title><rect x="79.5" y="355.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="82.5" y="366.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.02%)</title><rect x="79.5" y="339.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="82.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (11 samples, 0.12%)</title><rect x="79.9" y="611.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="82.9" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (10 samples, 0.11%)</title><rect x="80.0" y="595.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (10 samples, 0.11%)</title><rect x="80.0" y="579.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.0" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (8 samples, 0.09%)</title><rect x="80.0" y="563.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.06%)</title><rect x="80.3" y="547.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="83.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.06%)</title><rect x="80.3" y="531.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.06%)</title><rect x="80.3" y="515.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="80.3" y="499.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="83.3" y="510.0"></text>
</g>
<g>
<title>pread64 (5 samples, 0.06%)</title><rect x="80.3" y="483.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="83.3" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.06%)</title><rect x="80.3" y="467.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="83.3" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.06%)</title><rect x="80.3" y="451.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="83.3" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.06%)</title><rect x="80.3" y="435.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="83.3" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.06%)</title><rect x="80.3" y="419.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="83.3" y="430.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.06%)</title><rect x="80.3" y="403.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="83.3" y="414.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.04%)</title><rect x="80.3" y="387.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="83.3" y="398.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.04%)</title><rect x="80.3" y="371.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="83.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.rowIterator (2,295 samples, 25.54%)</title><rect x="81.3" y="803.0" width="301.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.3" y="814.0">ru/mail/polis/dao/alexander/marashov/DAOI..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (138 samples, 1.54%)</title><rect x="81.3" y="787.0" width="18.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.3" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (138 samples, 1.54%)</title><rect x="81.3" y="771.0" width="18.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.3" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (133 samples, 1.48%)</title><rect x="81.7" y="755.0" width="17.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="84.7" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (133 samples, 1.48%)</title><rect x="81.7" y="739.0" width="17.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="84.7" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (133 samples, 1.48%)</title><rect x="81.7" y="723.0" width="17.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="84.7" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (133 samples, 1.48%)</title><rect x="81.7" y="707.0" width="17.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.7" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (132 samples, 1.47%)</title><rect x="81.8" y="691.0" width="17.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.8" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (132 samples, 1.47%)</title><rect x="81.8" y="675.0" width="17.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.8" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (131 samples, 1.46%)</title><rect x="82.0" y="659.0" width="17.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (131 samples, 1.46%)</title><rect x="82.0" y="643.0" width="17.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (131 samples, 1.46%)</title><rect x="82.0" y="627.0" width="17.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.0" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.02%)</title><rect x="82.1" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.1" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="82.1" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.1" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="82.1" y="579.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (42 samples, 0.47%)</title><rect x="82.4" y="611.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="85.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (10 samples, 0.11%)</title><rect x="82.4" y="595.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (10 samples, 0.11%)</title><rect x="82.4" y="579.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.4" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (10 samples, 0.11%)</title><rect x="82.4" y="563.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="85.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (8 samples, 0.09%)</title><rect x="82.5" y="547.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.08%)</title><rect x="82.5" y="531.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="85.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.08%)</title><rect x="82.5" y="515.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.08%)</title><rect x="82.5" y="499.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.08%)</title><rect x="82.5" y="483.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="85.5" y="494.0"></text>
</g>
<g>
<title>pread64 (7 samples, 0.08%)</title><rect x="82.5" y="467.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="85.5" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.06%)</title><rect x="82.8" y="451.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="85.8" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.06%)</title><rect x="82.8" y="435.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="85.8" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.06%)</title><rect x="82.8" y="419.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="85.8" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.06%)</title><rect x="82.8" y="403.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="85.8" y="414.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.06%)</title><rect x="82.8" y="387.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="85.8" y="398.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.06%)</title><rect x="82.8" y="371.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="85.8" y="382.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.06%)</title><rect x="82.8" y="355.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="85.8" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (5 samples, 0.06%)</title><rect x="82.8" y="339.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="85.8" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (4 samples, 0.04%)</title><rect x="82.9" y="323.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="85.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (11 samples, 0.12%)</title><rect x="83.7" y="595.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (11 samples, 0.12%)</title><rect x="83.7" y="579.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (11 samples, 0.12%)</title><rect x="83.7" y="563.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.02%)</title><rect x="83.7" y="547.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.7" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.02%)</title><rect x="83.7" y="531.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="86.7" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.02%)</title><rect x="83.7" y="515.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="86.7" y="526.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.02%)</title><rect x="83.7" y="499.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.7" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.02%)</title><rect x="83.7" y="483.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.10%)</title><rect x="83.9" y="547.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="86.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.10%)</title><rect x="83.9" y="531.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (9 samples, 0.10%)</title><rect x="83.9" y="515.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="86.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.10%)</title><rect x="83.9" y="499.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="86.9" y="510.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.08%)</title><rect x="84.1" y="483.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="87.1" y="494.0"></text>
</g>
<g>
<title>pread64 (6 samples, 0.07%)</title><rect x="84.2" y="467.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="87.2" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.06%)</title><rect x="84.3" y="451.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="87.3" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.06%)</title><rect x="84.3" y="435.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="87.3" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.06%)</title><rect x="84.3" y="419.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="87.3" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.06%)</title><rect x="84.3" y="403.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="87.3" y="414.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.06%)</title><rect x="84.3" y="387.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="87.3" y="398.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.03%)</title><rect x="84.5" y="371.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="87.5" y="382.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.03%)</title><rect x="84.5" y="355.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="87.5" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.02%)</title><rect x="84.6" y="339.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="87.6" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.02%)</title><rect x="84.6" y="323.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="87.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (21 samples, 0.23%)</title><rect x="85.1" y="595.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="88.1" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.02%)</title><rect x="85.1" y="579.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="88.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (19 samples, 0.21%)</title><rect x="85.4" y="579.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="88.4" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (19 samples, 0.21%)</title><rect x="85.4" y="563.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (16 samples, 0.18%)</title><rect x="85.5" y="547.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="88.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (15 samples, 0.17%)</title><rect x="85.5" y="531.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (15 samples, 0.17%)</title><rect x="85.5" y="515.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="88.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (15 samples, 0.17%)</title><rect x="85.5" y="499.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="88.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.14%)</title><rect x="85.8" y="483.0" width="1.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="88.8" y="494.0"></text>
</g>
<g>
<title>pread64 (13 samples, 0.14%)</title><rect x="85.8" y="467.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="88.8" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.14%)</title><rect x="85.8" y="451.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="88.8" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.14%)</title><rect x="85.8" y="435.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="88.8" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (11 samples, 0.12%)</title><rect x="86.0" y="419.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="89.0" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (11 samples, 0.12%)</title><rect x="86.0" y="403.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="89.0" y="414.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="86.0" y="387.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="89.0" y="398.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="86.0" y="371.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="89.0" y="382.0"></text>
</g>
<g>
<title>vfs_read (9 samples, 0.10%)</title><rect x="86.3" y="387.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="89.3" y="398.0"></text>
</g>
<g>
<title>__vfs_read (9 samples, 0.10%)</title><rect x="86.3" y="371.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="89.3" y="382.0"></text>
</g>
<g>
<title>new_sync_read (9 samples, 0.10%)</title><rect x="86.3" y="355.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="89.3" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (8 samples, 0.09%)</title><rect x="86.4" y="339.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="89.4" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (7 samples, 0.08%)</title><rect x="86.6" y="323.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="89.6" y="334.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.03%)</title><rect x="86.7" y="307.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="89.7" y="318.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="86.8" y="291.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="89.8" y="302.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="87.1" y="307.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="90.1" y="318.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.02%)</title><rect x="87.1" y="291.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="90.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.value (86 samples, 0.96%)</title><rect x="87.9" y="611.0" width="11.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="90.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (16 samples, 0.18%)</title><rect x="87.9" y="595.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (16 samples, 0.18%)</title><rect x="87.9" y="579.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (16 samples, 0.18%)</title><rect x="87.9" y="563.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 0.13%)</title><rect x="88.0" y="547.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (11 samples, 0.12%)</title><rect x="88.1" y="531.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="91.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (11 samples, 0.12%)</title><rect x="88.1" y="515.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (11 samples, 0.12%)</title><rect x="88.1" y="499.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.1" y="510.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.12%)</title><rect x="88.1" y="483.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="91.1" y="494.0"></text>
</g>
<g>
<title>pread64 (11 samples, 0.12%)</title><rect x="88.1" y="467.0" width="1.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="91.1" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.12%)</title><rect x="88.1" y="451.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="91.1" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.12%)</title><rect x="88.1" y="435.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="91.1" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (11 samples, 0.12%)</title><rect x="88.1" y="419.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="91.1" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (11 samples, 0.12%)</title><rect x="88.1" y="403.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="91.1" y="414.0"></text>
</g>
<g>
<title>vfs_read (10 samples, 0.11%)</title><rect x="88.3" y="387.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="91.3" y="398.0"></text>
</g>
<g>
<title>__vfs_read (8 samples, 0.09%)</title><rect x="88.3" y="371.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="91.3" y="382.0"></text>
</g>
<g>
<title>new_sync_read (8 samples, 0.09%)</title><rect x="88.3" y="355.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="91.3" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (8 samples, 0.09%)</title><rect x="88.3" y="339.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="91.3" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (7 samples, 0.08%)</title><rect x="88.4" y="323.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="91.4" y="334.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.03%)</title><rect x="88.5" y="307.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="91.5" y="318.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.03%)</title><rect x="88.5" y="291.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="91.5" y="302.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="88.9" y="307.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="91.9" y="318.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.02%)</title><rect x="88.9" y="291.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="91.9" y="302.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="89.3" y="371.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="92.3" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.03%)</title><rect x="89.6" y="547.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="92.6" y="558.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="89.7" y="531.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="92.7" y="542.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.02%)</title><rect x="89.7" y="515.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="92.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (31 samples, 0.35%)</title><rect x="90.0" y="595.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="93.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (31 samples, 0.35%)</title><rect x="90.0" y="579.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="93.0" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (31 samples, 0.35%)</title><rect x="90.0" y="563.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="93.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (28 samples, 0.31%)</title><rect x="90.1" y="547.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="93.1" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="90.1" y="531.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="93.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (24 samples, 0.27%)</title><rect x="90.4" y="531.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="93.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (24 samples, 0.27%)</title><rect x="90.4" y="515.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="93.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (24 samples, 0.27%)</title><rect x="90.4" y="499.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="93.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.24%)</title><rect x="90.6" y="483.0" width="2.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="93.6" y="494.0"></text>
</g>
<g>
<title>pread64 (22 samples, 0.24%)</title><rect x="90.6" y="467.0" width="2.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="93.6" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.23%)</title><rect x="90.8" y="451.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="93.8" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.23%)</title><rect x="90.8" y="435.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="93.8" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (19 samples, 0.21%)</title><rect x="91.0" y="419.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="94.0" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (19 samples, 0.21%)</title><rect x="91.0" y="403.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="94.0" y="414.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.03%)</title><rect x="91.0" y="387.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="94.0" y="398.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="91.0" y="371.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="94.0" y="382.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="91.2" y="355.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="94.2" y="366.0"></text>
</g>
<g>
<title>vfs_read (15 samples, 0.17%)</title><rect x="91.6" y="387.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="94.6" y="398.0"></text>
</g>
<g>
<title>__vfs_read (13 samples, 0.14%)</title><rect x="91.6" y="371.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="94.6" y="382.0"></text>
</g>
<g>
<title>new_sync_read (13 samples, 0.14%)</title><rect x="91.6" y="355.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="94.6" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (10 samples, 0.11%)</title><rect x="91.8" y="339.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="94.8" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (9 samples, 0.10%)</title><rect x="91.9" y="323.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="94.9" y="334.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.03%)</title><rect x="92.1" y="307.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="95.1" y="318.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="92.2" y="291.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="95.2" y="302.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.03%)</title><rect x="92.5" y="307.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="95.5" y="318.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.03%)</title><rect x="92.5" y="291.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="95.5" y="302.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.02%)</title><rect x="92.9" y="307.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="95.9" y="318.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="93.3" y="371.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="96.3" y="382.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="93.3" y="355.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="96.3" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.02%)</title><rect x="93.8" y="547.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.8" y="558.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="93.8" y="531.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="96.8" y="542.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.02%)</title><rect x="93.8" y="515.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="96.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getLongFrom (25 samples, 0.28%)</title><rect x="94.1" y="595.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (25 samples, 0.28%)</title><rect x="94.1" y="579.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="97.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (25 samples, 0.28%)</title><rect x="94.1" y="563.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="97.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.04%)</title><rect x="94.3" y="547.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.3" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.04%)</title><rect x="94.3" y="531.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="97.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (19 samples, 0.21%)</title><rect x="94.8" y="547.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.8" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.03%)</title><rect x="94.8" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="97.8" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="94.8" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.03%)</title><rect x="94.8" y="499.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.03%)</title><rect x="94.8" y="483.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.03%)</title><rect x="94.8" y="467.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (3 samples, 0.03%)</title><rect x="94.8" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.8" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (2 samples, 0.02%)</title><rect x="95.0" y="435.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="98.0" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (16 samples, 0.18%)</title><rect x="95.2" y="531.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="98.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (16 samples, 0.18%)</title><rect x="95.2" y="515.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="98.2" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (16 samples, 0.18%)</title><rect x="95.2" y="499.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.2" y="510.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.17%)</title><rect x="95.4" y="483.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="98.4" y="494.0"></text>
</g>
<g>
<title>pread64 (15 samples, 0.17%)</title><rect x="95.4" y="467.0" width="1.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="98.4" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.17%)</title><rect x="95.4" y="451.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="98.4" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.17%)</title><rect x="95.4" y="435.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="98.4" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (14 samples, 0.16%)</title><rect x="95.5" y="419.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="98.5" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (14 samples, 0.16%)</title><rect x="95.5" y="403.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="98.5" y="414.0"></text>
</g>
<g>
<title>vfs_read (12 samples, 0.13%)</title><rect x="95.8" y="387.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="98.8" y="398.0"></text>
</g>
<g>
<title>__vfs_read (8 samples, 0.09%)</title><rect x="95.8" y="371.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="98.8" y="382.0"></text>
</g>
<g>
<title>new_sync_read (8 samples, 0.09%)</title><rect x="95.8" y="355.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="98.8" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (8 samples, 0.09%)</title><rect x="95.8" y="339.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="98.8" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (8 samples, 0.09%)</title><rect x="95.8" y="323.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="98.8" y="334.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.03%)</title><rect x="96.3" y="307.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="99.3" y="318.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.03%)</title><rect x="96.3" y="291.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="99.3" y="302.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.03%)</title><rect x="96.3" y="275.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="99.3" y="286.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.02%)</title><rect x="96.4" y="259.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="99.4" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.04%)</title><rect x="96.8" y="371.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="99.8" y="382.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.03%)</title><rect x="96.9" y="355.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="99.9" y="366.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="96.9" y="339.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="99.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (14 samples, 0.16%)</title><rect x="97.3" y="595.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (13 samples, 0.14%)</title><rect x="97.5" y="579.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.5" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (13 samples, 0.14%)</title><rect x="97.5" y="563.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="100.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 0.13%)</title><rect x="97.5" y="547.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="100.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (11 samples, 0.12%)</title><rect x="97.5" y="531.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (11 samples, 0.12%)</title><rect x="97.5" y="515.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (11 samples, 0.12%)</title><rect x="97.5" y="499.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="100.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.12%)</title><rect x="97.5" y="483.0" width="1.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="100.5" y="494.0"></text>
</g>
<g>
<title>pread64 (11 samples, 0.12%)</title><rect x="97.5" y="467.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="100.5" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.11%)</title><rect x="97.6" y="451.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="100.6" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.11%)</title><rect x="97.6" y="435.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="100.6" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (7 samples, 0.08%)</title><rect x="98.0" y="419.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="101.0" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (7 samples, 0.08%)</title><rect x="98.0" y="403.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="101.0" y="414.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.08%)</title><rect x="98.0" y="387.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="101.0" y="398.0"></text>
</g>
<g>
<title>__vfs_read (7 samples, 0.08%)</title><rect x="98.0" y="371.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="101.0" y="382.0"></text>
</g>
<g>
<title>new_sync_read (7 samples, 0.08%)</title><rect x="98.0" y="355.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="101.0" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (7 samples, 0.08%)</title><rect x="98.0" y="339.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="101.0" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (7 samples, 0.08%)</title><rect x="98.0" y="323.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="101.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (7 samples, 0.08%)</title><rect x="99.6" y="787.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="102.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (7 samples, 0.08%)</title><rect x="99.6" y="771.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="102.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (7 samples, 0.08%)</title><rect x="99.6" y="755.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (5 samples, 0.06%)</title><rect x="99.8" y="739.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (5 samples, 0.06%)</title><rect x="99.8" y="723.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.03%)</title><rect x="100.1" y="707.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="103.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.02%)</title><rect x="100.5" y="787.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (2 samples, 0.02%)</title><rect x="100.5" y="771.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="103.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (2 samples, 0.02%)</title><rect x="100.5" y="755.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="103.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.03%)</title><rect x="100.9" y="787.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="103.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.03%)</title><rect x="100.9" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.03%)</title><rect x="100.9" y="755.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.02%)</title><rect x="100.9" y="739.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="103.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.02%)</title><rect x="100.9" y="723.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.9" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.02%)</title><rect x="100.9" y="707.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="103.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (6 samples, 0.07%)</title><rect x="101.3" y="787.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (6 samples, 0.07%)</title><rect x="101.3" y="771.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="104.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (3 samples, 0.03%)</title><rect x="101.3" y="755.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="104.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (3 samples, 0.03%)</title><rect x="101.7" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (53 samples, 0.59%)</title><rect x="102.1" y="787.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="105.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (53 samples, 0.59%)</title><rect x="102.1" y="771.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="105.1" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (53 samples, 0.59%)</title><rect x="102.1" y="755.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="105.1" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (51 samples, 0.57%)</title><rect x="102.3" y="739.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="105.3" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (51 samples, 0.57%)</title><rect x="102.3" y="723.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.3" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (51 samples, 0.57%)</title><rect x="102.3" y="707.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="105.3" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (51 samples, 0.57%)</title><rect x="102.3" y="691.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="105.3" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (51 samples, 0.57%)</title><rect x="102.3" y="675.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="105.3" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (51 samples, 0.57%)</title><rect x="102.3" y="659.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="105.3" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (49 samples, 0.55%)</title><rect x="102.3" y="643.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (48 samples, 0.53%)</title><rect x="102.5" y="627.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="105.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (48 samples, 0.53%)</title><rect x="102.5" y="611.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="105.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (24 samples, 0.27%)</title><rect x="102.6" y="595.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (8 samples, 0.09%)</title><rect x="102.6" y="579.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (8 samples, 0.09%)</title><rect x="102.6" y="563.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (8 samples, 0.09%)</title><rect x="102.6" y="547.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="105.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (8 samples, 0.09%)</title><rect x="102.6" y="531.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="105.6" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="102.6" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.6" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.02%)</title><rect x="102.6" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="105.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.02%)</title><rect x="102.6" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.02%)</title><rect x="102.6" y="467.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="105.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.02%)</title><rect x="102.6" y="451.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="105.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (2 samples, 0.02%)</title><rect x="102.6" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="105.6" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (2 samples, 0.02%)</title><rect x="102.6" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="105.6" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.07%)</title><rect x="102.9" y="515.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="105.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.07%)</title><rect x="102.9" y="499.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.07%)</title><rect x="102.9" y="483.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.9" y="494.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="102.9" y="467.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="105.9" y="478.0"></text>
</g>
<g>
<title>pread64 (6 samples, 0.07%)</title><rect x="102.9" y="451.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="105.9" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.07%)</title><rect x="102.9" y="435.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="105.9" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.07%)</title><rect x="102.9" y="419.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="105.9" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.06%)</title><rect x="103.0" y="403.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="106.0" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.06%)</title><rect x="103.0" y="387.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="106.0" y="398.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.06%)</title><rect x="103.0" y="371.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="106.0" y="382.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.03%)</title><rect x="103.1" y="355.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="106.1" y="366.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.03%)</title><rect x="103.1" y="339.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="106.1" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.03%)</title><rect x="103.1" y="323.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="106.1" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.03%)</title><rect x="103.1" y="307.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="106.1" y="318.0"></text>
</g>
<g>
<title>touch_atime (3 samples, 0.03%)</title><rect x="103.1" y="291.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="106.1" y="302.0"></text>
</g>
<g>
<title>atime_needs_update (3 samples, 0.03%)</title><rect x="103.1" y="275.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="106.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (5 samples, 0.06%)</title><rect x="103.6" y="579.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="106.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.06%)</title><rect x="103.6" y="563.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="106.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.06%)</title><rect x="103.6" y="547.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="106.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.03%)</title><rect x="103.6" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="106.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.02%)</title><rect x="103.6" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="106.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.02%)</title><rect x="103.6" y="499.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.02%)</title><rect x="103.6" y="483.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="106.6" y="494.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="103.6" y="467.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="106.6" y="478.0"></text>
</g>
<g>
<title>pread64 (2 samples, 0.02%)</title><rect x="103.6" y="451.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="106.6" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="103.6" y="435.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="106.6" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="103.6" y="419.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="106.6" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.02%)</title><rect x="104.0" y="531.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="107.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (11 samples, 0.12%)</title><rect x="104.3" y="579.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="107.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.02%)</title><rect x="104.3" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="107.3" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="104.3" y="547.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="107.3" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="104.3" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="107.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (9 samples, 0.10%)</title><rect x="104.6" y="563.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="107.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (8 samples, 0.09%)</title><rect x="104.7" y="547.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.08%)</title><rect x="104.7" y="531.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="107.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.08%)</title><rect x="104.7" y="515.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="107.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.08%)</title><rect x="104.7" y="499.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.08%)</title><rect x="104.7" y="483.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="107.7" y="494.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.08%)</title><rect x="104.7" y="467.0" width="0.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="107.7" y="478.0"></text>
</g>
<g>
<title>pread64 (7 samples, 0.08%)</title><rect x="104.7" y="451.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="107.7" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.08%)</title><rect x="104.7" y="435.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="107.7" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.08%)</title><rect x="104.7" y="419.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="107.7" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (7 samples, 0.08%)</title><rect x="104.7" y="403.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="107.7" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (7 samples, 0.08%)</title><rect x="104.7" y="387.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="107.7" y="398.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.03%)</title><rect x="104.7" y="371.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="107.7" y="382.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="104.7" y="355.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="107.7" y="366.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.03%)</title><rect x="104.7" y="339.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="107.7" y="350.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.04%)</title><rect x="105.1" y="371.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="108.1" y="382.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.03%)</title><rect x="105.1" y="355.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="108.1" y="366.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="105.2" y="339.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="108.2" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.02%)</title><rect x="105.2" y="323.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="108.2" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.02%)</title><rect x="105.2" y="307.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="108.2" y="318.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="105.2" y="291.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="108.2" y="302.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.02%)</title><rect x="105.2" y="275.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="108.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.value (23 samples, 0.26%)</title><rect x="105.7" y="595.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (2 samples, 0.02%)</title><rect x="105.7" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="108.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.02%)</title><rect x="105.7" y="563.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.02%)</title><rect x="105.7" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.02%)</title><rect x="105.7" y="531.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.02%)</title><rect x="105.7" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.02%)</title><rect x="105.7" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.02%)</title><rect x="105.7" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.7" y="494.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="105.7" y="467.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="108.7" y="478.0"></text>
</g>
<g>
<title>pread64 (2 samples, 0.02%)</title><rect x="105.7" y="451.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="108.7" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="105.7" y="435.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="108.7" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="105.7" y="419.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="108.7" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.02%)</title><rect x="105.7" y="403.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="108.7" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (2 samples, 0.02%)</title><rect x="105.7" y="387.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="108.7" y="398.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.02%)</title><rect x="105.7" y="371.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="108.7" y="382.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="105.7" y="355.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="108.7" y="366.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="105.7" y="339.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="108.7" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.02%)</title><rect x="105.7" y="323.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="108.7" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.02%)</title><rect x="105.7" y="307.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="108.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (8 samples, 0.09%)</title><rect x="106.0" y="579.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="109.0" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.08%)</title><rect x="106.1" y="563.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="109.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.08%)</title><rect x="106.1" y="547.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="109.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.08%)</title><rect x="106.1" y="531.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="109.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.08%)</title><rect x="106.1" y="515.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="109.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.08%)</title><rect x="106.1" y="499.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="109.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.08%)</title><rect x="106.1" y="483.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="109.1" y="494.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.08%)</title><rect x="106.1" y="467.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="109.1" y="478.0"></text>
</g>
<g>
<title>pread64 (7 samples, 0.08%)</title><rect x="106.1" y="451.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="109.1" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.08%)</title><rect x="106.1" y="435.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="109.1" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.08%)</title><rect x="106.1" y="419.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="109.1" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (7 samples, 0.08%)</title><rect x="106.1" y="403.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="109.1" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (7 samples, 0.08%)</title><rect x="106.1" y="387.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="109.1" y="398.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="106.1" y="371.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="109.1" y="382.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="106.1" y="355.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="109.1" y="366.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.06%)</title><rect x="106.4" y="371.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="109.4" y="382.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.04%)</title><rect x="106.5" y="355.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="109.5" y="366.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.04%)</title><rect x="106.5" y="339.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="109.5" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.03%)</title><rect x="106.7" y="323.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="109.7" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.03%)</title><rect x="106.7" y="307.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="109.7" y="318.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="106.8" y="291.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="109.8" y="302.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.02%)</title><rect x="106.8" y="275.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="109.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getLongFrom (5 samples, 0.06%)</title><rect x="107.1" y="579.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.06%)</title><rect x="107.1" y="563.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="110.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.06%)</title><rect x="107.1" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="110.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.03%)</title><rect x="107.2" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.03%)</title><rect x="107.2" y="515.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.2" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.03%)</title><rect x="107.2" y="499.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.03%)</title><rect x="107.2" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.2" y="494.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="107.2" y="467.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="110.2" y="478.0"></text>
</g>
<g>
<title>pread64 (3 samples, 0.03%)</title><rect x="107.2" y="451.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="110.2" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="107.2" y="435.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="110.2" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.03%)</title><rect x="107.2" y="419.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="110.2" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.03%)</title><rect x="107.2" y="403.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="110.2" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.03%)</title><rect x="107.2" y="387.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="110.2" y="398.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.02%)</title><rect x="107.3" y="371.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="110.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (8 samples, 0.09%)</title><rect x="107.7" y="579.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (8 samples, 0.09%)</title><rect x="107.7" y="563.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="110.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (8 samples, 0.09%)</title><rect x="107.7" y="547.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="110.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.08%)</title><rect x="107.7" y="531.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.07%)</title><rect x="107.7" y="515.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.07%)</title><rect x="107.7" y="499.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="110.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.07%)</title><rect x="107.7" y="483.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.7" y="494.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="107.7" y="467.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="110.7" y="478.0"></text>
</g>
<g>
<title>pread64 (6 samples, 0.07%)</title><rect x="107.7" y="451.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="110.7" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.07%)</title><rect x="107.7" y="435.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="110.7" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.07%)</title><rect x="107.7" y="419.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="110.7" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.06%)</title><rect x="107.8" y="403.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="110.8" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.06%)</title><rect x="107.8" y="387.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="110.8" y="398.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.04%)</title><rect x="108.0" y="371.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="111.0" y="382.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="108.1" y="355.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="111.1" y="366.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="108.1" y="339.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="111.1" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.02%)</title><rect x="108.1" y="323.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="111.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$147/1758125089.compare (2 samples, 0.02%)</title><rect x="108.8" y="643.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.8" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2 samples, 0.02%)</title><rect x="108.8" y="627.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.8" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="108.8" y="611.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="111.8" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="108.8" y="595.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.8" y="606.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.02%)</title><rect x="108.8" y="579.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="111.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.iterator (17 samples, 0.19%)</title><rect x="109.0" y="787.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="112.0" y="798.0"></text>
</g>
<g>
<title>java/util/Collection.stream (15 samples, 0.17%)</title><rect x="109.0" y="771.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="112.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (15 samples, 0.17%)</title><rect x="109.0" y="755.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="112.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (15 samples, 0.17%)</title><rect x="109.0" y="739.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (15 samples, 0.17%)</title><rect x="109.0" y="723.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="112.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (14 samples, 0.16%)</title><rect x="109.2" y="707.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (14 samples, 0.16%)</title><rect x="109.2" y="691.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="112.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.02%)</title><rect x="109.2" y="675.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="109.2" y="659.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="112.2" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="109.2" y="643.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="112.2" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.02%)</title><rect x="109.2" y="627.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.2" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.02%)</title><rect x="109.2" y="611.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="112.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (12 samples, 0.13%)</title><rect x="109.4" y="675.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="112.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.04%)</title><rect x="110.5" y="659.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.5" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="110.6" y="643.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.6" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="110.6" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.6" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.02%)</title><rect x="110.7" y="611.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.7" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.02%)</title><rect x="110.7" y="595.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="113.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (2 samples, 0.02%)</title><rect x="111.0" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.0" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (2 samples, 0.02%)</title><rect x="111.0" y="755.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.iterator (2,066 samples, 22.99%)</title><rect x="111.3" y="787.0" width="271.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.3" y="798.0">ru/mail/polis/dao/alexander/marashov..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.&lt;init&gt; (2,066 samples, 22.99%)</title><rect x="111.3" y="771.0" width="271.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.3" y="782.0">ru/mail/polis/dao/alexander/marashov..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.binarySearch (2,066 samples, 22.99%)</title><rect x="111.3" y="755.0" width="271.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="114.3" y="766.0">ru/mail/polis/dao/alexander/marashov..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (20 samples, 0.22%)</title><rect x="112.0" y="739.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="115.0" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.07%)</title><rect x="113.0" y="723.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="116.0" y="734.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.03%)</title><rect x="113.4" y="707.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="116.4" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (7 samples, 0.08%)</title><rect x="113.8" y="723.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="116.8" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.03%)</title><rect x="114.3" y="707.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (2,040 samples, 22.70%)</title><rect x="114.7" y="739.0" width="267.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="117.7" y="750.0">ru/mail/polis/dao/alexander/marashov..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (624 samples, 6.94%)</title><rect x="114.7" y="723.0" width="81.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="117.7" y="734.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (18 samples, 0.20%)</title><rect x="114.8" y="707.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="117.8" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (16 samples, 0.18%)</title><rect x="115.1" y="691.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.11%)</title><rect x="115.9" y="675.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.9" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.07%)</title><rect x="116.4" y="659.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.4" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.04%)</title><rect x="116.6" y="643.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="119.6" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.04%)</title><rect x="116.6" y="627.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.6" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (2 samples, 0.02%)</title><rect x="117.2" y="707.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.2" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.flip (2 samples, 0.02%)</title><rect x="117.2" y="691.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.2" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (603 samples, 6.71%)</title><rect x="117.4" y="707.0" width="79.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.4" y="718.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (603 samples, 6.71%)</title><rect x="117.4" y="691.0" width="79.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.4" y="702.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (43 samples, 0.48%)</title><rect x="118.7" y="675.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.7" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (42 samples, 0.47%)</title><rect x="118.9" y="659.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.9" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (11 samples, 0.12%)</title><rect x="120.2" y="643.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="123.2" y="654.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (21 samples, 0.23%)</title><rect x="121.6" y="643.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="124.6" y="654.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (19 samples, 0.21%)</title><rect x="121.9" y="627.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.9" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (19 samples, 0.21%)</title><rect x="121.9" y="611.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.9" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.02%)</title><rect x="123.9" y="595.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="126.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (501 samples, 5.58%)</title><rect x="124.4" y="675.0" width="65.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.4" y="686.0">sun/nio..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (52 samples, 0.58%)</title><rect x="124.7" y="659.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="127.7" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (4 samples, 0.04%)</title><rect x="125.8" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.8" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (39 samples, 0.43%)</title><rect x="126.4" y="643.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="129.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (24 samples, 0.27%)</title><rect x="128.3" y="627.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (24 samples, 0.27%)</title><rect x="128.3" y="611.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (24 samples, 0.27%)</title><rect x="128.3" y="595.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (2 samples, 0.02%)</title><rect x="128.6" y="579.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (20 samples, 0.22%)</title><rect x="128.9" y="579.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="131.9" y="590.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (16 samples, 0.18%)</title><rect x="129.4" y="563.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (412 samples, 4.59%)</title><rect x="131.5" y="659.0" width="54.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.5" y="670.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (412 samples, 4.59%)</title><rect x="131.5" y="643.0" width="54.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="134.5" y="654.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (412 samples, 4.59%)</title><rect x="131.5" y="627.0" width="54.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.5" y="638.0">sun/n..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (7 samples, 0.08%)</title><rect x="134.2" y="611.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="137.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (380 samples, 4.23%)</title><rect x="135.2" y="611.0" width="49.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="138.2" y="622.0">[unkn..</text>
</g>
<g>
<title>__libc_disable_asynccancel (7 samples, 0.08%)</title><rect x="135.2" y="595.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="138.2" y="606.0"></text>
</g>
<g>
<title>pread64 (372 samples, 4.14%)</title><rect x="136.2" y="595.0" width="48.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="139.2" y="606.0">prea..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (339 samples, 3.77%)</title><rect x="140.5" y="579.0" width="44.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="143.5" y="590.0">entr..</text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.02%)</title><rect x="140.5" y="563.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="143.5" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (337 samples, 3.75%)</title><rect x="140.8" y="563.0" width="44.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="143.8" y="574.0">do_s..</text>
</g>
<g>
<title>__x64_sys_pread64 (288 samples, 3.21%)</title><rect x="147.1" y="547.0" width="37.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="150.1" y="558.0">__x..</text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="147.1" y="531.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="150.1" y="542.0"></text>
</g>
<g>
<title>ksys_pread64 (285 samples, 3.17%)</title><rect x="147.5" y="531.0" width="37.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="150.5" y="542.0">ksy..</text>
</g>
<g>
<title>__fdget (34 samples, 0.38%)</title><rect x="147.9" y="515.0" width="4.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="150.9" y="526.0"></text>
</g>
<g>
<title>__fget_light (34 samples, 0.38%)</title><rect x="147.9" y="499.0" width="4.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="150.9" y="510.0"></text>
</g>
<g>
<title>__fget (34 samples, 0.38%)</title><rect x="147.9" y="483.0" width="4.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="150.9" y="494.0"></text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.06%)</title><rect x="152.4" y="515.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="155.4" y="526.0"></text>
</g>
<g>
<title>fput (3 samples, 0.03%)</title><rect x="153.1" y="515.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="156.1" y="526.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.03%)</title><rect x="153.1" y="499.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="156.1" y="510.0"></text>
</g>
<g>
<title>vfs_read (238 samples, 2.65%)</title><rect x="153.7" y="515.0" width="31.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="156.7" y="526.0">vf..</text>
</g>
<g>
<title>__vfs_read (176 samples, 1.96%)</title><rect x="154.1" y="499.0" width="23.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="157.1" y="510.0">_..</text>
</g>
<g>
<title>ext4_file_read_iter (14 samples, 0.16%)</title><rect x="154.3" y="483.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="157.3" y="494.0"></text>
</g>
<g>
<title>new_sync_read (160 samples, 1.78%)</title><rect x="156.2" y="483.0" width="21.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="159.2" y="494.0">n..</text>
</g>
<g>
<title>ext4_file_read_iter (149 samples, 1.66%)</title><rect x="157.0" y="467.0" width="19.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="160.0" y="478.0"></text>
</g>
<g>
<title>generic_file_read_iter (137 samples, 1.52%)</title><rect x="158.4" y="451.0" width="18.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="161.4" y="462.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.02%)</title><rect x="164.7" y="435.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="167.7" y="446.0"></text>
</g>
<g>
<title>copy_page_to_iter (48 samples, 0.53%)</title><rect x="165.0" y="435.0" width="6.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="168.0" y="446.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="166.8" y="419.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="169.8" y="430.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.02%)</title><rect x="166.8" y="403.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="169.8" y="414.0"></text>
</g>
<g>
<title>copy_user_generic_string (31 samples, 0.35%)</title><rect x="167.1" y="419.0" width="4.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="170.1" y="430.0"></text>
</g>
<g>
<title>pagecache_get_page (22 samples, 0.24%)</title><rect x="171.4" y="435.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="174.4" y="446.0"></text>
</g>
<g>
<title>find_get_entry (19 samples, 0.21%)</title><rect x="171.8" y="419.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="174.8" y="430.0"></text>
</g>
<g>
<title>xas_load (12 samples, 0.13%)</title><rect x="172.6" y="403.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="175.6" y="414.0"></text>
</g>
<g>
<title>xas_start (4 samples, 0.04%)</title><rect x="173.6" y="387.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="176.6" y="398.0"></text>
</g>
<g>
<title>touch_atime (15 samples, 0.17%)</title><rect x="174.4" y="435.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="177.4" y="446.0"></text>
</g>
<g>
<title>atime_needs_update (9 samples, 0.10%)</title><rect x="175.2" y="419.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="178.2" y="430.0"></text>
</g>
<g>
<title>current_time (5 samples, 0.06%)</title><rect x="175.3" y="403.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="178.3" y="414.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (3 samples, 0.03%)</title><rect x="175.6" y="387.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="178.6" y="398.0"></text>
</g>
<g>
<title>timestamp_truncate (3 samples, 0.03%)</title><rect x="176.0" y="403.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="179.0" y="414.0"></text>
</g>
<g>
<title>iov_iter_init (4 samples, 0.04%)</title><rect x="176.7" y="467.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="179.7" y="478.0"></text>
</g>
<g>
<title>fsnotify (9 samples, 0.10%)</title><rect x="177.2" y="499.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="180.2" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (50 samples, 0.56%)</title><rect x="178.4" y="499.0" width="6.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="181.4" y="510.0"></text>
</g>
<g>
<title>apparmor_file_permission (7 samples, 0.08%)</title><rect x="178.6" y="483.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="181.6" y="494.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="179.5" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="182.5" y="494.0"></text>
</g>
<g>
<title>security_file_permission (39 samples, 0.43%)</title><rect x="179.8" y="483.0" width="5.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="182.8" y="494.0"></text>
</g>
<g>
<title>apparmor_file_permission (16 samples, 0.18%)</title><rect x="180.9" y="467.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="183.9" y="478.0"></text>
</g>
<g>
<title>common_file_perm (16 samples, 0.18%)</title><rect x="180.9" y="451.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="183.9" y="462.0"></text>
</g>
<g>
<title>aa_file_perm (4 samples, 0.04%)</title><rect x="182.3" y="435.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="185.3" y="446.0"></text>
</g>
<g>
<title>fsnotify (14 samples, 0.16%)</title><rect x="183.1" y="467.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="186.1" y="478.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.03%)</title><rect x="185.2" y="611.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="188.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (19 samples, 0.21%)</title><rect x="185.6" y="659.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="188.6" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (15 samples, 0.17%)</title><rect x="185.6" y="643.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="188.6" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.02%)</title><rect x="186.2" y="627.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.2" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (2 samples, 0.02%)</title><rect x="186.5" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.5" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.02%)</title><rect x="186.8" y="627.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="189.8" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.02%)</title><rect x="186.8" y="611.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.8" y="622.0"></text>
</g>
<g>
<title>vtable stub (4 samples, 0.04%)</title><rect x="187.0" y="627.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="190.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.04%)</title><rect x="187.6" y="643.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="190.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (16 samples, 0.18%)</title><rect x="188.1" y="659.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.1" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (16 samples, 0.18%)</title><rect x="188.1" y="643.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="191.1" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (4 samples, 0.04%)</title><rect x="188.9" y="627.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.9" y="638.0"></text>
</g>
<g>
<title>vtable stub (5 samples, 0.06%)</title><rect x="189.5" y="627.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="192.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (46 samples, 0.51%)</title><rect x="190.2" y="675.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.2" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.03%)</title><rect x="194.0" y="659.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="197.0" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.03%)</title><rect x="194.0" y="643.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="197.0" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.03%)</title><rect x="194.0" y="627.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="197.0" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.02%)</title><rect x="194.0" y="611.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="197.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (14 samples, 0.16%)</title><rect x="194.4" y="659.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="197.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.03%)</title><rect x="196.2" y="675.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.2" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.03%)</title><rect x="196.2" y="659.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="199.2" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.03%)</title><rect x="196.2" y="643.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="199.2" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.03%)</title><rect x="196.2" y="627.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="199.2" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.02%)</title><rect x="196.4" y="611.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="199.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (702 samples, 7.81%)</title><rect x="196.6" y="723.0" width="92.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="199.6" y="734.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (16 samples, 0.18%)</title><rect x="196.6" y="707.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="199.6" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.03%)</title><rect x="196.6" y="691.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="199.6" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.03%)</title><rect x="196.6" y="675.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="199.6" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.03%)</title><rect x="196.6" y="659.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="199.6" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="196.6" y="643.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="199.6" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.14%)</title><rect x="197.0" y="691.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="200.0" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (13 samples, 0.14%)</title><rect x="197.0" y="675.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="200.0" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.09%)</title><rect x="197.5" y="659.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="200.5" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.02%)</title><rect x="197.7" y="643.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="200.7" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.02%)</title><rect x="197.7" y="627.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.7" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.02%)</title><rect x="197.7" y="611.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="200.7" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.06%)</title><rect x="197.9" y="643.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="200.9" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.06%)</title><rect x="197.9" y="627.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.9" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (684 samples, 7.61%)</title><rect x="199.0" y="707.0" width="89.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="202.0" y="718.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (684 samples, 7.61%)</title><rect x="199.0" y="691.0" width="89.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="202.0" y="702.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (44 samples, 0.49%)</title><rect x="201.1" y="675.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.1" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (44 samples, 0.49%)</title><rect x="201.1" y="659.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="204.1" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 0.04%)</title><rect x="204.2" y="643.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="207.2" y="654.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (16 samples, 0.18%)</title><rect x="204.8" y="643.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="207.8" y="654.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (13 samples, 0.14%)</title><rect x="205.0" y="627.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.0" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (13 samples, 0.14%)</title><rect x="205.0" y="611.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (582 samples, 6.48%)</title><rect x="206.9" y="675.0" width="76.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="209.9" y="686.0">sun/nio/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (87 samples, 0.97%)</title><rect x="207.3" y="659.0" width="11.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.3" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (3 samples, 0.03%)</title><rect x="210.8" y="643.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="213.8" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (57 samples, 0.63%)</title><rect x="211.2" y="643.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (28 samples, 0.31%)</title><rect x="214.9" y="627.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="217.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (27 samples, 0.30%)</title><rect x="215.0" y="611.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="218.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (27 samples, 0.30%)</title><rect x="215.0" y="595.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (7 samples, 0.08%)</title><rect x="215.4" y="579.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="218.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (17 samples, 0.19%)</title><rect x="216.3" y="579.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="219.3" y="590.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (14 samples, 0.16%)</title><rect x="216.7" y="563.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="219.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (459 samples, 5.11%)</title><rect x="218.7" y="659.0" width="60.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="221.7" y="670.0">sun/ni..</text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.02%)</title><rect x="219.1" y="643.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="222.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (453 samples, 5.04%)</title><rect x="219.5" y="643.0" width="59.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="222.5" y="654.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (453 samples, 5.04%)</title><rect x="219.5" y="627.0" width="59.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="222.5" y="638.0">sun/ni..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (6 samples, 0.07%)</title><rect x="221.2" y="611.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="224.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (429 samples, 4.77%)</title><rect x="222.0" y="611.0" width="56.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="225.0" y="622.0">[unkno..</text>
</g>
<g>
<title>__libc_disable_asynccancel (7 samples, 0.08%)</title><rect x="222.0" y="595.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="225.0" y="606.0"></text>
</g>
<g>
<title>pread64 (421 samples, 4.69%)</title><rect x="223.0" y="595.0" width="55.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="226.0" y="606.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (398 samples, 4.43%)</title><rect x="226.0" y="579.0" width="52.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="229.0" y="590.0">entry..</text>
</g>
<g>
<title>__x64_sys_pread64 (9 samples, 0.10%)</title><rect x="226.0" y="563.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="229.0" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (388 samples, 4.32%)</title><rect x="227.4" y="563.0" width="50.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="230.4" y="574.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_pread64 (351 samples, 3.91%)</title><rect x="232.2" y="547.0" width="46.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="235.2" y="558.0">__x6..</text>
</g>
<g>
<title>ksys_pread64 (349 samples, 3.88%)</title><rect x="232.3" y="531.0" width="45.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="235.3" y="542.0">ksys..</text>
</g>
<g>
<title>__fdget (39 samples, 0.43%)</title><rect x="232.9" y="515.0" width="5.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="235.9" y="526.0"></text>
</g>
<g>
<title>__fget_light (39 samples, 0.43%)</title><rect x="232.9" y="499.0" width="5.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="235.9" y="510.0"></text>
</g>
<g>
<title>__fget (32 samples, 0.36%)</title><rect x="233.8" y="483.0" width="4.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="236.8" y="494.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="238.0" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="241.0" y="526.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.03%)</title><rect x="238.3" y="515.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="241.3" y="526.0"></text>
</g>
<g>
<title>fput (11 samples, 0.12%)</title><rect x="238.6" y="515.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="241.6" y="526.0"></text>
</g>
<g>
<title>fput_many (11 samples, 0.12%)</title><rect x="238.6" y="499.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="241.6" y="510.0"></text>
</g>
<g>
<title>vfs_read (290 samples, 3.23%)</title><rect x="240.1" y="515.0" width="38.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="243.1" y="526.0">vfs..</text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.03%)</title><rect x="240.9" y="499.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="243.9" y="510.0"></text>
</g>
<g>
<title>__vfs_read (220 samples, 2.45%)</title><rect x="241.3" y="499.0" width="28.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="244.3" y="510.0">__..</text>
</g>
<g>
<title>ext4_file_read_iter (10 samples, 0.11%)</title><rect x="241.3" y="483.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="244.3" y="494.0"></text>
</g>
<g>
<title>new_sync_read (210 samples, 2.34%)</title><rect x="242.6" y="483.0" width="27.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="245.6" y="494.0">n..</text>
</g>
<g>
<title>ext4_file_read_iter (191 samples, 2.13%)</title><rect x="244.9" y="467.0" width="25.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="247.9" y="478.0">e..</text>
</g>
<g>
<title>generic_file_read_iter (186 samples, 2.07%)</title><rect x="245.5" y="451.0" width="24.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="248.5" y="462.0">g..</text>
</g>
<g>
<title>atime_needs_update (4 samples, 0.04%)</title><rect x="249.8" y="435.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="252.8" y="446.0"></text>
</g>
<g>
<title>copy_page_to_iter (57 samples, 0.63%)</title><rect x="250.3" y="435.0" width="7.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="253.3" y="446.0"></text>
</g>
<g>
<title>copy_user_generic_string (38 samples, 0.42%)</title><rect x="252.6" y="419.0" width="5.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="255.6" y="430.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.02%)</title><rect x="257.6" y="419.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="260.6" y="430.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.02%)</title><rect x="257.8" y="435.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="260.8" y="446.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.02%)</title><rect x="258.2" y="435.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="261.2" y="446.0"></text>
</g>
<g>
<title>pagecache_get_page (62 samples, 0.69%)</title><rect x="258.5" y="435.0" width="8.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="261.5" y="446.0"></text>
</g>
<g>
<title>find_get_entry (58 samples, 0.65%)</title><rect x="258.9" y="419.0" width="7.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="261.9" y="430.0"></text>
</g>
<g>
<title>xas_load (15 samples, 0.17%)</title><rect x="264.0" y="403.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="267.0" y="414.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.02%)</title><rect x="265.7" y="387.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="268.7" y="398.0"></text>
</g>
<g>
<title>xas_start (4 samples, 0.04%)</title><rect x="266.0" y="403.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="269.0" y="414.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.02%)</title><rect x="266.6" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="269.6" y="446.0"></text>
</g>
<g>
<title>touch_atime (23 samples, 0.26%)</title><rect x="266.9" y="435.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="269.9" y="446.0"></text>
</g>
<g>
<title>atime_needs_update (16 samples, 0.18%)</title><rect x="267.8" y="419.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="270.8" y="430.0"></text>
</g>
<g>
<title>current_time (10 samples, 0.11%)</title><rect x="267.9" y="403.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="270.9" y="414.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (6 samples, 0.07%)</title><rect x="268.2" y="387.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="271.2" y="398.0"></text>
</g>
<g>
<title>timestamp_truncate (2 samples, 0.02%)</title><rect x="269.0" y="387.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="272.0" y="398.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.02%)</title><rect x="269.2" y="403.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="272.2" y="414.0"></text>
</g>
<g>
<title>timestamp_truncate (3 samples, 0.03%)</title><rect x="269.5" y="403.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="272.5" y="414.0"></text>
</g>
<g>
<title>fsnotify (14 samples, 0.16%)</title><rect x="270.2" y="499.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="273.2" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (47 samples, 0.52%)</title><rect x="272.0" y="499.0" width="6.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="275.0" y="510.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.03%)</title><rect x="272.7" y="483.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="275.7" y="494.0"></text>
</g>
<g>
<title>apparmor_file_permission (10 samples, 0.11%)</title><rect x="273.1" y="483.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="276.1" y="494.0"></text>
</g>
<g>
<title>security_file_permission (29 samples, 0.32%)</title><rect x="274.4" y="483.0" width="3.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="277.4" y="494.0"></text>
</g>
<g>
<title>__fsnotify_parent (6 samples, 0.07%)</title><rect x="274.9" y="467.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="277.9" y="478.0"></text>
</g>
<g>
<title>apparmor_file_permission (12 samples, 0.13%)</title><rect x="275.7" y="467.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="278.7" y="478.0"></text>
</g>
<g>
<title>common_file_perm (12 samples, 0.13%)</title><rect x="275.7" y="451.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="278.7" y="462.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="277.3" y="467.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="280.3" y="478.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.06%)</title><rect x="277.5" y="467.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="280.5" y="478.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.02%)</title><rect x="278.4" y="611.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="281.4" y="622.0"></text>
</g>
<g>
<title>pread64 (2 samples, 0.02%)</title><rect x="278.7" y="611.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="281.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (17 samples, 0.19%)</title><rect x="279.0" y="659.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="282.0" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (10 samples, 0.11%)</title><rect x="279.1" y="643.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="282.1" y="654.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.03%)</title><rect x="280.0" y="627.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="283.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (6 samples, 0.07%)</title><rect x="280.4" y="643.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (16 samples, 0.18%)</title><rect x="281.2" y="659.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="284.2" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (16 samples, 0.18%)</title><rect x="281.2" y="643.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="284.2" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.03%)</title><rect x="281.9" y="627.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="284.9" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (5 samples, 0.06%)</title><rect x="282.2" y="627.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="285.2" y="638.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.03%)</title><rect x="282.9" y="627.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="285.9" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (38 samples, 0.42%)</title><rect x="283.3" y="675.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="286.3" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.09%)</title><rect x="286.6" y="659.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="289.6" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (8 samples, 0.09%)</title><rect x="286.6" y="643.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="289.6" y="654.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (2 samples, 0.02%)</title><rect x="286.6" y="627.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="289.6" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.07%)</title><rect x="286.8" y="627.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="289.8" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.02%)</title><rect x="287.1" y="611.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="290.1" y="622.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.02%)</title><rect x="287.4" y="611.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="290.4" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.06%)</title><rect x="287.6" y="659.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="290.6" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (4 samples, 0.04%)</title><rect x="288.3" y="675.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="291.3" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.04%)</title><rect x="288.3" y="659.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="291.3" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.04%)</title><rect x="288.3" y="643.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="291.3" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.04%)</title><rect x="288.3" y="627.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="291.3" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.02%)</title><rect x="288.4" y="611.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="291.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (714 samples, 7.95%)</title><rect x="288.8" y="723.0" width="93.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.8" y="734.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (39 samples, 0.43%)</title><rect x="289.3" y="707.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="292.3" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (38 samples, 0.42%)</title><rect x="289.5" y="691.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="292.5" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (29 samples, 0.32%)</title><rect x="290.7" y="675.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="293.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (670 samples, 7.46%)</title><rect x="294.6" y="707.0" width="88.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="297.6" y="718.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (670 samples, 7.46%)</title><rect x="294.6" y="691.0" width="88.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="297.6" y="702.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.06%)</title><rect x="297.7" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="300.7" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (5 samples, 0.06%)</title><rect x="297.7" y="659.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="300.7" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.06%)</title><rect x="297.7" y="643.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="300.7" y="654.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.06%)</title><rect x="297.7" y="627.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="300.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.06%)</title><rect x="297.7" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="300.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (6 samples, 0.07%)</title><rect x="298.4" y="675.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="301.4" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (6 samples, 0.07%)</title><rect x="298.4" y="659.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="301.4" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.02%)</title><rect x="298.9" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="301.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (558 samples, 6.21%)</title><rect x="299.2" y="675.0" width="73.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.2" y="686.0">sun/nio/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (13 samples, 0.14%)</title><rect x="301.2" y="659.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="304.2" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (10 samples, 0.11%)</title><rect x="301.4" y="643.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="304.4" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (10 samples, 0.11%)</title><rect x="301.4" y="627.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="304.4" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="302.3" y="611.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="305.3" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (2 samples, 0.02%)</title><rect x="302.3" y="595.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="305.3" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (2 samples, 0.02%)</title><rect x="302.9" y="659.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.9" y="670.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (2 samples, 0.02%)</title><rect x="302.9" y="643.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="305.9" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (2 samples, 0.02%)</title><rect x="302.9" y="627.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="305.9" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.flip (2 samples, 0.02%)</title><rect x="302.9" y="611.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.9" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (469 samples, 5.22%)</title><rect x="303.1" y="659.0" width="61.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="306.1" y="670.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (453 samples, 5.04%)</title><rect x="305.2" y="643.0" width="59.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="308.2" y="654.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (453 samples, 5.04%)</title><rect x="305.2" y="627.0" width="59.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.2" y="638.0">sun/ni..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (6 samples, 0.07%)</title><rect x="308.0" y="611.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="311.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (420 samples, 4.67%)</title><rect x="308.8" y="611.0" width="55.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="311.8" y="622.0">[unkn..</text>
</g>
<g>
<title>__libc_disable_asynccancel (5 samples, 0.06%)</title><rect x="308.8" y="595.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="311.8" y="606.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (6 samples, 0.07%)</title><rect x="309.4" y="595.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="312.4" y="606.0"></text>
</g>
<g>
<title>pread64 (409 samples, 4.55%)</title><rect x="310.2" y="595.0" width="53.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="313.2" y="606.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (382 samples, 4.25%)</title><rect x="313.8" y="579.0" width="50.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="316.8" y="590.0">entry..</text>
</g>
<g>
<title>__x64_sys_pread64 (6 samples, 0.07%)</title><rect x="313.8" y="563.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="316.8" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (376 samples, 4.18%)</title><rect x="314.6" y="563.0" width="49.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="317.6" y="574.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_pread64 (324 samples, 3.61%)</title><rect x="321.3" y="547.0" width="42.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="324.3" y="558.0">__x6..</text>
</g>
<g>
<title>ksys_pread64 (323 samples, 3.59%)</title><rect x="321.4" y="531.0" width="42.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="324.4" y="542.0">ksys..</text>
</g>
<g>
<title>__fdget (40 samples, 0.45%)</title><rect x="321.5" y="515.0" width="5.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="324.5" y="526.0"></text>
</g>
<g>
<title>__fget_light (40 samples, 0.45%)</title><rect x="321.5" y="499.0" width="5.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="324.5" y="510.0"></text>
</g>
<g>
<title>__fget (32 samples, 0.36%)</title><rect x="322.6" y="483.0" width="4.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="325.6" y="494.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="326.8" y="515.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="329.8" y="526.0"></text>
</g>
<g>
<title>fput (4 samples, 0.04%)</title><rect x="327.3" y="515.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="330.3" y="526.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.04%)</title><rect x="327.3" y="499.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="330.3" y="510.0"></text>
</g>
<g>
<title>vfs_read (271 samples, 3.02%)</title><rect x="328.2" y="515.0" width="35.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="331.2" y="526.0">vfs..</text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.02%)</title><rect x="329.8" y="499.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="332.8" y="510.0"></text>
</g>
<g>
<title>__vfs_read (184 samples, 2.05%)</title><rect x="330.1" y="499.0" width="24.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="333.1" y="510.0">_..</text>
</g>
<g>
<title>ext4_file_read_iter (6 samples, 0.07%)</title><rect x="330.2" y="483.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="333.2" y="494.0"></text>
</g>
<g>
<title>new_sync_read (177 samples, 1.97%)</title><rect x="331.0" y="483.0" width="23.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="334.0" y="494.0">n..</text>
</g>
<g>
<title>ext4_file_read_iter (164 samples, 1.83%)</title><rect x="332.7" y="467.0" width="21.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="335.7" y="478.0">e..</text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="333.9" y="451.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="336.9" y="462.0"></text>
</g>
<g>
<title>generic_file_read_iter (151 samples, 1.68%)</title><rect x="334.1" y="451.0" width="19.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="337.1" y="462.0"></text>
</g>
<g>
<title>copy_page_to_iter (32 samples, 0.36%)</title><rect x="338.2" y="435.0" width="4.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="341.2" y="446.0"></text>
</g>
<g>
<title>copy_user_generic_string (24 samples, 0.27%)</title><rect x="339.1" y="419.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="342.1" y="430.0"></text>
</g>
<g>
<title>mark_page_accessed (7 samples, 0.08%)</title><rect x="342.5" y="435.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="345.5" y="446.0"></text>
</g>
<g>
<title>pagecache_get_page (48 samples, 0.53%)</title><rect x="343.4" y="435.0" width="6.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="346.4" y="446.0"></text>
</g>
<g>
<title>find_get_entry (43 samples, 0.48%)</title><rect x="343.8" y="419.0" width="5.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="346.8" y="430.0"></text>
</g>
<g>
<title>xas_load (17 samples, 0.19%)</title><rect x="346.9" y="403.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="349.9" y="414.0"></text>
</g>
<g>
<title>xas_start (5 samples, 0.06%)</title><rect x="348.4" y="387.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="351.4" y="398.0"></text>
</g>
<g>
<title>xas_start (3 samples, 0.03%)</title><rect x="349.1" y="403.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="352.1" y="414.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.02%)</title><rect x="349.5" y="419.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="352.5" y="430.0"></text>
</g>
<g>
<title>touch_atime (31 samples, 0.35%)</title><rect x="349.9" y="435.0" width="4.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="352.9" y="446.0"></text>
</g>
<g>
<title>atime_needs_update (18 samples, 0.20%)</title><rect x="351.6" y="419.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="354.6" y="430.0"></text>
</g>
<g>
<title>current_time (10 samples, 0.11%)</title><rect x="352.2" y="403.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="355.2" y="414.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.02%)</title><rect x="352.6" y="387.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="355.6" y="398.0"></text>
</g>
<g>
<title>timestamp_truncate (5 samples, 0.06%)</title><rect x="352.9" y="387.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="355.9" y="398.0"></text>
</g>
<g>
<title>timestamp_truncate (2 samples, 0.02%)</title><rect x="353.7" y="403.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="356.7" y="414.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.02%)</title><rect x="354.0" y="451.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="357.0" y="462.0"></text>
</g>
<g>
<title>fsnotify (9 samples, 0.10%)</title><rect x="354.2" y="499.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="357.2" y="510.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="355.4" y="499.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="358.4" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (62 samples, 0.69%)</title><rect x="355.7" y="499.0" width="8.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="358.7" y="510.0"></text>
</g>
<g>
<title>apparmor_file_permission (5 samples, 0.06%)</title><rect x="356.7" y="483.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="359.7" y="494.0"></text>
</g>
<g>
<title>security_file_permission (49 samples, 0.55%)</title><rect x="357.4" y="483.0" width="6.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="360.4" y="494.0"></text>
</g>
<g>
<title>__fsnotify_parent (6 samples, 0.07%)</title><rect x="358.9" y="467.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="361.9" y="478.0"></text>
</g>
<g>
<title>apparmor_file_permission (12 samples, 0.13%)</title><rect x="359.7" y="467.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="362.7" y="478.0"></text>
</g>
<g>
<title>common_file_perm (11 samples, 0.12%)</title><rect x="359.9" y="451.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="362.9" y="462.0"></text>
</g>
<g>
<title>aa_file_perm (5 samples, 0.06%)</title><rect x="360.7" y="435.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="363.7" y="446.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.04%)</title><rect x="361.3" y="467.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="364.3" y="478.0"></text>
</g>
<g>
<title>fsnotify (15 samples, 0.17%)</title><rect x="361.8" y="467.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="364.8" y="478.0"></text>
</g>
<g>
<title>fdval (4 samples, 0.04%)</title><rect x="364.1" y="611.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="367.1" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (38 samples, 0.42%)</title><rect x="364.7" y="659.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="367.7" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (28 samples, 0.31%)</title><rect x="365.0" y="643.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.0" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.03%)</title><rect x="366.8" y="627.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="369.8" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (5 samples, 0.06%)</title><rect x="367.2" y="627.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.2" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.02%)</title><rect x="367.9" y="627.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="370.9" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.02%)</title><rect x="367.9" y="611.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="370.9" y="622.0"></text>
</g>
<g>
<title>vtable stub (4 samples, 0.04%)</title><rect x="368.1" y="627.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="371.1" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (8 samples, 0.09%)</title><rect x="368.7" y="643.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="371.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (2 samples, 0.02%)</title><rect x="369.5" y="627.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="372.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (21 samples, 0.23%)</title><rect x="369.7" y="659.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="372.7" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (13 samples, 0.14%)</title><rect x="369.8" y="643.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="372.8" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.02%)</title><rect x="370.4" y="627.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="373.4" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (3 samples, 0.03%)</title><rect x="370.6" y="627.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="373.6" y="638.0"></text>
</g>
<g>
<title>vtable stub (4 samples, 0.04%)</title><rect x="371.0" y="627.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="374.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (7 samples, 0.08%)</title><rect x="371.6" y="643.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="374.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (46 samples, 0.51%)</title><rect x="372.5" y="675.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="375.5" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.09%)</title><rect x="376.0" y="659.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="379.0" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (8 samples, 0.09%)</title><rect x="376.0" y="643.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="379.0" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (8 samples, 0.09%)</title><rect x="376.0" y="627.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="379.0" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (5 samples, 0.06%)</title><rect x="376.3" y="611.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="379.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (11 samples, 0.12%)</title><rect x="377.1" y="659.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (31 samples, 0.35%)</title><rect x="378.5" y="675.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="381.5" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.07%)</title><rect x="381.8" y="659.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="384.8" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.06%)</title><rect x="381.9" y="643.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="384.9" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.04%)</title><rect x="382.1" y="627.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="385.1" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (3 samples, 0.03%)</title><rect x="382.2" y="611.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="385.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValueSerializer.serialize (13 samples, 0.14%)</title><rect x="382.7" y="819.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="385.7" y="830.0"></text>
</g>
<g>
<title>one/nio/serial/CalcSizeStream.writeObject (9 samples, 0.10%)</title><rect x="382.7" y="803.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="385.7" y="814.0"></text>
</g>
<g>
<title>one/nio/serial/GeneratedSerializer.calcSize (6 samples, 0.07%)</title><rect x="382.7" y="787.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="385.7" y="798.0"></text>
</g>
<g>
<title>sun/reflect/Delegate0_SerializableValue.calcSize (6 samples, 0.07%)</title><rect x="382.7" y="771.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="385.7" y="782.0"></text>
</g>
<g>
<title>one/nio/serial/CalcSizeStream.writeObject (6 samples, 0.07%)</title><rect x="382.7" y="755.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="385.7" y="766.0"></text>
</g>
<g>
<title>one/nio/serial/SerializationContext.put (6 samples, 0.07%)</title><rect x="382.7" y="739.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="385.7" y="750.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (2 samples, 0.02%)</title><rect x="382.8" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="385.8" y="734.0"></text>
</g>
<g>
<title>one/nio/serial/SerializationContext.init (3 samples, 0.03%)</title><rect x="383.1" y="723.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="386.1" y="734.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (3 samples, 0.03%)</title><rect x="383.1" y="707.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.1" y="718.0"></text>
</g>
<g>
<title>JVM_IHashCode (3 samples, 0.03%)</title><rect x="383.1" y="691.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="386.1" y="702.0"></text>
</g>
<g>
<title>one/nio/serial/Repository.get (3 samples, 0.03%)</title><rect x="383.5" y="787.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="386.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.03%)</title><rect x="383.5" y="771.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.5" y="782.0"></text>
</g>
<g>
<title>sun/reflect/Delegate0_SerializableValue.write (3 samples, 0.03%)</title><rect x="383.5" y="755.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="386.5" y="766.0"></text>
</g>
<g>
<title>one/nio/serial/SerializeStream.writeObject (4 samples, 0.04%)</title><rect x="383.9" y="803.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="386.9" y="814.0"></text>
</g>
<g>
<title>one/nio/serial/GeneratedSerializer.write (4 samples, 0.04%)</title><rect x="383.9" y="787.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.9" y="798.0"></text>
</g>
<g>
<title>sun/reflect/Delegate0_SerializableValue.write (4 samples, 0.04%)</title><rect x="383.9" y="771.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.9" y="782.0"></text>
</g>
<g>
<title>one/nio/serial/SerializeStream.writeObject (4 samples, 0.04%)</title><rect x="383.9" y="755.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.9" y="766.0"></text>
</g>
<g>
<title>one/nio/serial/Repository.get (2 samples, 0.02%)</title><rect x="384.0" y="739.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="387.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.accept (25 samples, 0.28%)</title><rect x="384.4" y="835.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="387.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (16 samples, 0.18%)</title><rect x="384.6" y="819.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="387.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (16 samples, 0.18%)</title><rect x="384.6" y="803.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="387.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (16 samples, 0.18%)</title><rect x="384.6" y="787.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.18%)</title><rect x="384.6" y="771.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="387.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.18%)</title><rect x="384.6" y="755.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="387.6" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.02%)</title><rect x="384.6" y="739.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="387.6" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 0.16%)</title><rect x="384.8" y="739.0" width="1.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="387.8" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.14%)</title><rect x="384.9" y="723.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="387.9" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.14%)</title><rect x="384.9" y="707.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="387.9" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.14%)</title><rect x="384.9" y="691.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="387.9" y="702.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.13%)</title><rect x="385.1" y="675.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="388.1" y="686.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.13%)</title><rect x="385.1" y="659.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="388.1" y="670.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.11%)</title><rect x="385.3" y="643.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="388.3" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.11%)</title><rect x="385.3" y="627.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="388.3" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.11%)</title><rect x="385.3" y="611.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="388.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzerGet.privateAccept (6 samples, 0.07%)</title><rect x="386.8" y="819.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="389.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValueSerializer.deserialize (4 samples, 0.04%)</title><rect x="386.8" y="803.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="389.8" y="814.0"></text>
</g>
<g>
<title>one/nio/serial/DeserializeStream.readObject (2 samples, 0.02%)</title><rect x="387.0" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="390.0" y="798.0"></text>
</g>
<g>
<title>one/nio/serial/Repository.requestSerializer (2 samples, 0.02%)</title><rect x="387.0" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="390.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzerGet.privateAccept (2 samples, 0.02%)</title><rect x="387.3" y="803.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.3" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.compute (2 samples, 0.02%)</title><rect x="387.3" y="787.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="390.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$84/2037434908.run (484 samples, 5.39%)</title><rect x="387.7" y="867.0" width="63.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="390.7" y="878.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.lambda$iterateOverNodes$6 (484 samples, 5.39%)</title><rect x="387.7" y="851.0" width="63.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="390.7" y="862.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager$$Lambda$150/1668259984.accept (483 samples, 5.38%)</title><rect x="387.7" y="835.0" width="63.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="390.7" y="846.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.lambda$get$1 (483 samples, 5.38%)</title><rect x="387.7" y="819.0" width="63.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="390.7" y="830.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (445 samples, 4.95%)</title><rect x="387.8" y="803.0" width="58.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="390.8" y="814.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (443 samples, 4.93%)</title><rect x="388.1" y="787.0" width="58.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="391.1" y="798.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.02%)</title><rect x="388.8" y="771.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="391.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.02%)</title><rect x="388.8" y="755.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="391.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.02%)</title><rect x="388.8" y="739.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="391.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (81 samples, 0.90%)</title><rect x="389.0" y="771.0" width="10.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="392.0" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.07%)</title><rect x="390.6" y="755.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="393.6" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.07%)</title><rect x="390.6" y="739.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="393.6" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.07%)</title><rect x="390.6" y="723.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="393.6" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.04%)</title><rect x="390.9" y="707.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="393.9" y="718.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (4 samples, 0.04%)</title><rect x="390.9" y="691.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="393.9" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (62 samples, 0.69%)</title><rect x="391.5" y="755.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="394.5" y="766.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (14 samples, 0.16%)</title><rect x="391.5" y="739.0" width="1.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="394.5" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.09%)</title><rect x="392.2" y="723.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="395.2" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.02%)</title><rect x="393.0" y="707.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="396.0" y="718.0"></text>
</g>
<g>
<title>__GI___recv (44 samples, 0.49%)</title><rect x="393.4" y="739.0" width="5.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="396.4" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.39%)</title><rect x="394.5" y="723.0" width="4.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="397.5" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.38%)</title><rect x="394.7" y="707.0" width="4.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="397.7" y="718.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (34 samples, 0.38%)</title><rect x="394.7" y="691.0" width="4.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="397.7" y="702.0"></text>
</g>
<g>
<title>__sys_recvfrom (34 samples, 0.38%)</title><rect x="394.7" y="675.0" width="4.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="397.7" y="686.0"></text>
</g>
<g>
<title>fput (3 samples, 0.03%)</title><rect x="394.7" y="659.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="397.7" y="670.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.03%)</title><rect x="394.7" y="643.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="397.7" y="654.0"></text>
</g>
<g>
<title>sock_recvmsg (30 samples, 0.33%)</title><rect x="395.1" y="659.0" width="3.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="398.1" y="670.0"></text>
</g>
<g>
<title>inet6_recvmsg (26 samples, 0.29%)</title><rect x="395.3" y="643.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="398.3" y="654.0"></text>
</g>
<g>
<title>tcp_recvmsg (24 samples, 0.27%)</title><rect x="395.6" y="627.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="398.6" y="638.0"></text>
</g>
<g>
<title>sk_wait_data (9 samples, 0.10%)</title><rect x="396.2" y="611.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="399.2" y="622.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.03%)</title><rect x="396.2" y="595.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="399.2" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.02%)</title><rect x="396.4" y="579.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="399.4" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.02%)</title><rect x="396.4" y="563.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="399.4" y="574.0"></text>
</g>
<g>
<title>wait_woken (5 samples, 0.06%)</title><rect x="396.8" y="595.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="399.8" y="606.0"></text>
</g>
<g>
<title>schedule_timeout (5 samples, 0.06%)</title><rect x="396.8" y="579.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="399.8" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.03%)</title><rect x="396.8" y="563.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="399.8" y="574.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="397.2" y="563.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="400.2" y="574.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.02%)</title><rect x="397.2" y="547.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="400.2" y="558.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (9 samples, 0.10%)</title><rect x="397.6" y="611.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="400.6" y="622.0"></text>
</g>
<g>
<title>tcp_send_ack (8 samples, 0.09%)</title><rect x="397.7" y="595.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="400.7" y="606.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (8 samples, 0.09%)</title><rect x="397.7" y="579.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="400.7" y="590.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (8 samples, 0.09%)</title><rect x="397.7" y="563.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="400.7" y="574.0"></text>
</g>
<g>
<title>ip_queue_xmit (7 samples, 0.08%)</title><rect x="397.7" y="547.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="400.7" y="558.0"></text>
</g>
<g>
<title>__ip_queue_xmit (7 samples, 0.08%)</title><rect x="397.7" y="531.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="400.7" y="542.0"></text>
</g>
<g>
<title>ip_local_out (7 samples, 0.08%)</title><rect x="397.7" y="515.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="400.7" y="526.0"></text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.03%)</title><rect x="397.7" y="499.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="400.7" y="510.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.02%)</title><rect x="397.8" y="483.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="400.8" y="494.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.04%)</title><rect x="398.1" y="499.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="401.1" y="510.0"></text>
</g>
<g>
<title>ip_finish_output (4 samples, 0.04%)</title><rect x="398.1" y="483.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="401.1" y="494.0"></text>
</g>
<g>
<title>__ip_finish_output (4 samples, 0.04%)</title><rect x="398.1" y="467.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="401.1" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 0.04%)</title><rect x="398.1" y="451.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="401.1" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.03%)</title><rect x="398.2" y="435.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="401.2" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.20 (3 samples, 0.03%)</title><rect x="398.2" y="419.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="401.2" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="398.2" y="403.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="401.2" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="398.2" y="387.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="401.2" y="398.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.03%)</title><rect x="398.2" y="371.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="401.2" y="382.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.03%)</title><rect x="398.2" y="355.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="401.2" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.02%)</title><rect x="398.3" y="339.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="401.3" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.02%)</title><rect x="398.3" y="323.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="401.3" y="334.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.03%)</title><rect x="399.3" y="739.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="402.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (30 samples, 0.33%)</title><rect x="399.7" y="771.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="402.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.02%)</title><rect x="399.7" y="755.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.02%)</title><rect x="399.7" y="739.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.02%)</title><rect x="399.7" y="723.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.7" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.02%)</title><rect x="399.7" y="707.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="402.7" y="718.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.02%)</title><rect x="399.7" y="691.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="402.7" y="702.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.02%)</title><rect x="399.7" y="675.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="402.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.07%)</title><rect x="399.9" y="755.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="402.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="400.4" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="403.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.02%)</title><rect x="400.4" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="403.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (13 samples, 0.14%)</title><rect x="400.7" y="755.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="403.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.13%)</title><rect x="400.8" y="739.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="403.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.13%)</title><rect x="400.8" y="723.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="403.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.02%)</title><rect x="402.4" y="755.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="405.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (7 samples, 0.08%)</title><rect x="402.7" y="755.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="405.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.04%)</title><rect x="403.1" y="739.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="406.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.04%)</title><rect x="403.1" y="723.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="406.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (15 samples, 0.17%)</title><rect x="403.6" y="771.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="406.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.02%)</title><rect x="404.0" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="407.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.09%)</title><rect x="404.3" y="755.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.02%)</title><rect x="404.5" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="407.5" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="404.5" y="723.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="407.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.04%)</title><rect x="404.8" y="739.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="407.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.04%)</title><rect x="404.8" y="723.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="407.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.03%)</title><rect x="404.9" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="407.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.02%)</title><rect x="405.0" y="691.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="408.0" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.02%)</title><rect x="405.3" y="755.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="408.3" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (44 samples, 0.49%)</title><rect x="405.6" y="771.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="408.6" y="782.0"></text>
</g>
<g>
<title>__GI___setsockopt (41 samples, 0.46%)</title><rect x="406.0" y="755.0" width="5.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="409.0" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 0.43%)</title><rect x="406.2" y="739.0" width="5.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="409.2" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (39 samples, 0.43%)</title><rect x="406.2" y="723.0" width="5.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="409.2" y="734.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (33 samples, 0.37%)</title><rect x="407.0" y="707.0" width="4.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="410.0" y="718.0"></text>
</g>
<g>
<title>__sys_setsockopt (32 samples, 0.36%)</title><rect x="407.1" y="691.0" width="4.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="410.1" y="702.0"></text>
</g>
<g>
<title>fput (2 samples, 0.02%)</title><rect x="407.8" y="675.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="410.8" y="686.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.02%)</title><rect x="407.8" y="659.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="410.8" y="670.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.02%)</title><rect x="408.1" y="675.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="411.1" y="686.0"></text>
</g>
<g>
<title>security_socket_setsockopt (7 samples, 0.08%)</title><rect x="408.3" y="675.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="411.3" y="686.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (5 samples, 0.06%)</title><rect x="408.6" y="659.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="411.6" y="670.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (5 samples, 0.06%)</title><rect x="408.6" y="643.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="411.6" y="654.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.06%)</title><rect x="408.6" y="627.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="411.6" y="638.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (3 samples, 0.03%)</title><rect x="408.8" y="611.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="411.8" y="622.0"></text>
</g>
<g>
<title>sock_setsockopt (11 samples, 0.12%)</title><rect x="409.2" y="675.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="412.2" y="686.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.04%)</title><rect x="409.5" y="659.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="412.5" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.02%)</title><rect x="409.8" y="643.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="412.8" y="654.0"></text>
</g>
<g>
<title>sock_set_timeout (3 samples, 0.03%)</title><rect x="410.2" y="659.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="413.2" y="670.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.03%)</title><rect x="410.2" y="643.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="413.2" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.06%)</title><rect x="410.7" y="675.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="413.7" y="686.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.06%)</title><rect x="410.7" y="659.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="413.7" y="670.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.04%)</title><rect x="410.8" y="643.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="413.8" y="654.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.04%)</title><rect x="410.8" y="627.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="413.8" y="638.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (257 samples, 2.86%)</title><rect x="411.3" y="771.0" width="33.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="414.3" y="782.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (5 samples, 0.06%)</title><rect x="411.5" y="755.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="414.5" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.04%)</title><rect x="411.6" y="739.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="414.6" y="750.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.03%)</title><rect x="411.7" y="723.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="414.7" y="734.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.03%)</title><rect x="411.7" y="707.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="414.7" y="718.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.02%)</title><rect x="412.1" y="755.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="415.1" y="766.0"></text>
</g>
<g>
<title>__libc_send (249 samples, 2.77%)</title><rect x="412.4" y="755.0" width="32.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="415.4" y="766.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (245 samples, 2.73%)</title><rect x="412.9" y="739.0" width="32.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="415.9" y="750.0">en..</text>
</g>
<g>
<title>do_syscall_64 (245 samples, 2.73%)</title><rect x="412.9" y="723.0" width="32.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="415.9" y="734.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (242 samples, 2.69%)</title><rect x="413.3" y="707.0" width="31.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="416.3" y="718.0">__..</text>
</g>
<g>
<title>__sys_sendto (242 samples, 2.69%)</title><rect x="413.3" y="691.0" width="31.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="416.3" y="702.0">__..</text>
</g>
<g>
<title>sock_sendmsg (241 samples, 2.68%)</title><rect x="413.4" y="675.0" width="31.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="416.4" y="686.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (235 samples, 2.62%)</title><rect x="413.6" y="659.0" width="30.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="416.6" y="670.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (235 samples, 2.62%)</title><rect x="413.6" y="643.0" width="30.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="416.6" y="654.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (226 samples, 2.52%)</title><rect x="414.4" y="627.0" width="29.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="417.4" y="638.0">tc..</text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.03%)</title><rect x="414.6" y="611.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="417.6" y="622.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.02%)</title><rect x="415.0" y="611.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="418.0" y="622.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (24 samples, 0.27%)</title><rect x="415.7" y="611.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="418.7" y="622.0"></text>
</g>
<g>
<title>__alloc_skb (21 samples, 0.23%)</title><rect x="415.8" y="595.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="418.8" y="606.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (6 samples, 0.07%)</title><rect x="416.2" y="579.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="419.2" y="590.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.02%)</title><rect x="416.2" y="563.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="419.2" y="574.0"></text>
</g>
<g>
<title>memset (3 samples, 0.03%)</title><rect x="416.6" y="563.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="419.6" y="574.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.02%)</title><rect x="417.0" y="579.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="420.0" y="590.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.02%)</title><rect x="417.4" y="579.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="420.4" y="590.0"></text>
</g>
<g>
<title>memset (7 samples, 0.08%)</title><rect x="417.6" y="579.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="420.6" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (2 samples, 0.02%)</title><rect x="418.6" y="595.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="421.6" y="606.0"></text>
</g>
<g>
<title>tcp_push (186 samples, 2.07%)</title><rect x="419.1" y="611.0" width="24.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="422.1" y="622.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (185 samples, 2.06%)</title><rect x="419.1" y="595.0" width="24.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="422.1" y="606.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (185 samples, 2.06%)</title><rect x="419.1" y="579.0" width="24.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="422.1" y="590.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (172 samples, 1.91%)</title><rect x="419.2" y="563.0" width="22.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="422.2" y="574.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (166 samples, 1.85%)</title><rect x="419.7" y="547.0" width="21.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="422.7" y="558.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (165 samples, 1.84%)</title><rect x="419.7" y="531.0" width="21.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="422.7" y="542.0">_..</text>
</g>
<g>
<title>ip_local_out (160 samples, 1.78%)</title><rect x="419.9" y="515.0" width="21.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="422.9" y="526.0">i..</text>
</g>
<g>
<title>__ip_local_out (29 samples, 0.32%)</title><rect x="419.9" y="499.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="422.9" y="510.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.02%)</title><rect x="420.0" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="423.0" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (26 samples, 0.29%)</title><rect x="420.3" y="483.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="423.3" y="494.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.02%)</title><rect x="420.3" y="467.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="423.3" y="478.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.02%)</title><rect x="420.3" y="451.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="423.3" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (23 samples, 0.26%)</title><rect x="420.5" y="467.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="423.5" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (22 samples, 0.24%)</title><rect x="420.5" y="451.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="423.5" y="462.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (6 samples, 0.07%)</title><rect x="420.9" y="435.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="423.9" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (10 samples, 0.11%)</title><rect x="422.0" y="435.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="425.0" y="446.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (3 samples, 0.03%)</title><rect x="422.9" y="419.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="425.9" y="430.0"></text>
</g>
<g>
<title>ip_output (131 samples, 1.46%)</title><rect x="423.7" y="499.0" width="17.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="426.7" y="510.0"></text>
</g>
<g>
<title>ip_finish_output (128 samples, 1.42%)</title><rect x="423.7" y="483.0" width="16.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="426.7" y="494.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.02%)</title><rect x="423.8" y="467.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="426.8" y="478.0"></text>
</g>
<g>
<title>__ip_finish_output (124 samples, 1.38%)</title><rect x="424.1" y="467.0" width="16.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="427.1" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (121 samples, 1.35%)</title><rect x="424.5" y="451.0" width="15.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="427.5" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (112 samples, 1.25%)</title><rect x="424.6" y="435.0" width="14.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="427.6" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.20 (112 samples, 1.25%)</title><rect x="424.6" y="419.0" width="14.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="427.6" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (112 samples, 1.25%)</title><rect x="424.6" y="403.0" width="14.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="427.6" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (111 samples, 1.24%)</title><rect x="424.6" y="387.0" width="14.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="427.6" y="398.0"></text>
</g>
<g>
<title>net_rx_action (105 samples, 1.17%)</title><rect x="425.1" y="371.0" width="13.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="428.1" y="382.0"></text>
</g>
<g>
<title>process_backlog (103 samples, 1.15%)</title><rect x="425.4" y="355.0" width="13.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="428.4" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb (103 samples, 1.15%)</title><rect x="425.4" y="339.0" width="13.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="428.4" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (103 samples, 1.15%)</title><rect x="425.4" y="323.0" width="13.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="428.4" y="334.0"></text>
</g>
<g>
<title>ip_rcv (102 samples, 1.14%)</title><rect x="425.4" y="307.0" width="13.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="428.4" y="318.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.02%)</title><rect x="425.4" y="291.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="428.4" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish (96 samples, 1.07%)</title><rect x="425.7" y="291.0" width="12.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="428.7" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (95 samples, 1.06%)</title><rect x="425.8" y="275.0" width="12.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="428.8" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (92 samples, 1.02%)</title><rect x="425.8" y="259.0" width="12.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="428.8" y="270.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (91 samples, 1.01%)</title><rect x="425.9" y="243.0" width="12.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="428.9" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (90 samples, 1.00%)</title><rect x="426.1" y="227.0" width="11.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="429.1" y="238.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.02%)</title><rect x="426.3" y="211.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="429.3" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.02%)</title><rect x="426.8" y="211.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="429.8" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (82 samples, 0.91%)</title><rect x="427.1" y="211.0" width="10.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="430.1" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (81 samples, 0.90%)</title><rect x="427.2" y="195.0" width="10.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="430.2" y="206.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.03%)</title><rect x="427.2" y="179.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="430.2" y="190.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.03%)</title><rect x="427.2" y="163.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="430.2" y="174.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.03%)</title><rect x="427.2" y="147.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="430.2" y="158.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.03%)</title><rect x="427.2" y="131.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="430.2" y="142.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.02%)</title><rect x="427.2" y="115.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="430.2" y="126.0"></text>
</g>
<g>
<title>tcp_ack (26 samples, 0.29%)</title><rect x="427.6" y="179.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="430.6" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (20 samples, 0.22%)</title><rect x="428.0" y="163.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="431.0" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (13 samples, 0.14%)</title><rect x="428.7" y="147.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="431.7" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.04%)</title><rect x="428.7" y="131.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="431.7" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.04%)</title><rect x="428.7" y="115.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="431.7" y="126.0"></text>
</g>
<g>
<title>skb_release_all (9 samples, 0.10%)</title><rect x="429.2" y="131.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="432.2" y="142.0"></text>
</g>
<g>
<title>skb_release_data (8 samples, 0.09%)</title><rect x="429.2" y="115.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="432.2" y="126.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.03%)</title><rect x="429.9" y="99.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="432.9" y="110.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.02%)</title><rect x="430.0" y="83.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="433.0" y="94.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.02%)</title><rect x="430.8" y="163.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="433.8" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.02%)</title><rect x="431.0" y="179.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="434.0" y="190.0"></text>
</g>
<g>
<title>tcp_data_ready (49 samples, 0.55%)</title><rect x="431.3" y="179.0" width="6.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="434.3" y="190.0"></text>
</g>
<g>
<title>sock_def_readable (49 samples, 0.55%)</title><rect x="431.3" y="163.0" width="6.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="434.3" y="174.0"></text>
</g>
<g>
<title>__wake_up_sync_key (48 samples, 0.53%)</title><rect x="431.4" y="147.0" width="6.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="434.4" y="158.0"></text>
</g>
<g>
<title>__wake_up_common_lock (48 samples, 0.53%)</title><rect x="431.4" y="131.0" width="6.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="434.4" y="142.0"></text>
</g>
<g>
<title>__lock_text_start (48 samples, 0.53%)</title><rect x="431.4" y="115.0" width="6.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="434.4" y="126.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.03%)</title><rect x="437.9" y="259.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="440.9" y="270.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.02%)</title><rect x="438.9" y="371.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="441.9" y="382.0"></text>
</g>
<g>
<title>dev_queue_xmit (8 samples, 0.09%)</title><rect x="439.3" y="435.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="442.3" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.09%)</title><rect x="439.3" y="419.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="442.3" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.03%)</title><rect x="439.8" y="403.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="442.8" y="414.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.02%)</title><rect x="440.0" y="387.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="443.0" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.02%)</title><rect x="440.5" y="483.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="443.5" y="494.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat] (2 samples, 0.02%)</title><rect x="440.5" y="467.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="443.5" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.03%)</title><rect x="441.0" y="515.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="444.0" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.03%)</title><rect x="441.8" y="563.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="444.8" y="574.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.03%)</title><rect x="442.5" y="563.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="445.5" y="574.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.03%)</title><rect x="442.5" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="445.5" y="558.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.03%)</title><rect x="442.5" y="531.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="445.5" y="542.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.03%)</title><rect x="442.5" y="515.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="445.5" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.02%)</title><rect x="442.6" y="499.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="445.6" y="510.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.02%)</title><rect x="443.1" y="563.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="446.1" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.04%)</title><rect x="443.5" y="611.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="446.5" y="622.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.03%)</title><rect x="443.7" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="446.7" y="606.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.03%)</title><rect x="444.0" y="627.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="447.0" y="638.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.04%)</title><rect x="444.6" y="659.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="447.6" y="670.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.04%)</title><rect x="444.6" y="643.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="447.6" y="654.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.04%)</title><rect x="444.6" y="627.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="447.6" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.03%)</title><rect x="444.7" y="611.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="447.7" y="622.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (8 samples, 0.09%)</title><rect x="445.1" y="771.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="448.1" y="782.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (3 samples, 0.03%)</title><rect x="445.8" y="755.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="448.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.accept (37 samples, 0.41%)</title><rect x="446.3" y="803.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="449.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.16%)</title><rect x="446.5" y="787.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="449.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.16%)</title><rect x="446.5" y="771.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="449.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.16%)</title><rect x="446.5" y="755.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="449.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.16%)</title><rect x="446.5" y="739.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="449.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.16%)</title><rect x="446.5" y="723.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="449.5" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.03%)</title><rect x="446.5" y="707.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="449.5" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.12%)</title><rect x="446.9" y="707.0" width="1.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="449.9" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.11%)</title><rect x="447.1" y="691.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="450.1" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.11%)</title><rect x="447.1" y="675.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="450.1" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.11%)</title><rect x="447.1" y="659.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="450.1" y="670.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.11%)</title><rect x="447.1" y="643.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="450.1" y="654.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.11%)</title><rect x="447.1" y="627.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="450.1" y="638.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.11%)</title><rect x="447.1" y="611.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="450.1" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.11%)</title><rect x="447.1" y="595.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="450.1" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.10%)</title><rect x="447.1" y="579.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="450.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzerGet.privateAccept (14 samples, 0.16%)</title><rect x="448.5" y="787.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="451.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValueSerializer.deserialize (6 samples, 0.07%)</title><rect x="448.5" y="771.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="451.5" y="782.0"></text>
</g>
<g>
<title>one/nio/serial/DeserializeStream.readObject (5 samples, 0.06%)</title><rect x="448.6" y="755.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="451.6" y="766.0"></text>
</g>
<g>
<title>one/nio/serial/GeneratedSerializer.read (2 samples, 0.02%)</title><rect x="448.9" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="451.9" y="750.0"></text>
</g>
<g>
<title>sun/reflect/Delegate0_SerializableValue.read (2 samples, 0.02%)</title><rect x="448.9" y="723.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.9" y="734.0"></text>
</g>
<g>
<title>one/nio/serial/DeserializeStream.readObject (2 samples, 0.02%)</title><rect x="448.9" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="451.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzerGet.privateAccept (8 samples, 0.09%)</title><rect x="449.3" y="771.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="452.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.compute (8 samples, 0.09%)</title><rect x="449.3" y="755.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="452.3" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.02%)</title><rect x="450.1" y="739.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="453.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/Value.hashCode (2 samples, 0.02%)</title><rect x="450.1" y="723.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="453.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (2 samples, 0.02%)</title><rect x="450.1" y="707.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/SimpleResponseAnalyzer.privateAccept (6 samples, 0.07%)</title><rect x="450.3" y="787.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="453.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (6 samples, 0.07%)</title><rect x="450.3" y="771.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="453.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.07%)</title><rect x="450.3" y="755.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="453.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$148/1601371073.run (5,235 samples, 58.26%)</title><rect x="451.3" y="867.0" width="687.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="454.3" y="878.0">ru/mail/polis/service/alexander/marashov/ServiceImpl$$Lambda$148/1601371073.run</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityGet$2 (5,234 samples, 58.25%)</title><rect x="451.4" y="851.0" width="687.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="454.4" y="862.0">ru/mail/polis/service/alexander/marashov/ServiceImpl.lambda$handleEntityGet$2</text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.get (4,803 samples, 53.46%)</title><rect x="451.7" y="835.0" width="630.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.7" y="846.0">ru/mail/polis/service/alexander/marashov/ResponseManager.get</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.08%)</title><rect x="452.1" y="819.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="455.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.08%)</title><rect x="452.1" y="803.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="455.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.08%)</title><rect x="452.1" y="787.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="455.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/DaoManager.rowGet (4,715 samples, 52.48%)</title><rect x="453.0" y="819.0" width="619.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="456.0" y="830.0">ru/mail/polis/service/alexander/marashov/DaoManager.rowGet</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8 samples, 0.09%)</title><rect x="453.2" y="803.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="456.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.rowGet (4,677 samples, 52.05%)</title><rect x="454.3" y="803.0" width="614.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="457.3" y="814.0">ru/mail/polis/dao/DAO.rowGet</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (87 samples, 0.97%)</title><rect x="454.6" y="787.0" width="11.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="457.6" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (84 samples, 0.93%)</title><rect x="454.8" y="771.0" width="11.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="457.8" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (83 samples, 0.92%)</title><rect x="454.9" y="755.0" width="10.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="457.9" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (83 samples, 0.92%)</title><rect x="454.9" y="739.0" width="10.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="457.9" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (83 samples, 0.92%)</title><rect x="454.9" y="723.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="457.9" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (83 samples, 0.92%)</title><rect x="454.9" y="707.0" width="10.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.9" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (83 samples, 0.92%)</title><rect x="454.9" y="691.0" width="10.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="457.9" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (83 samples, 0.92%)</title><rect x="454.9" y="675.0" width="10.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="457.9" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (82 samples, 0.91%)</title><rect x="455.1" y="659.0" width="10.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="458.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (82 samples, 0.91%)</title><rect x="455.1" y="643.0" width="10.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="458.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (82 samples, 0.91%)</title><rect x="455.1" y="627.0" width="10.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="458.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (24 samples, 0.27%)</title><rect x="455.1" y="611.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="458.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (11 samples, 0.12%)</title><rect x="455.1" y="595.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="458.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (11 samples, 0.12%)</title><rect x="455.1" y="579.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="458.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (11 samples, 0.12%)</title><rect x="455.1" y="563.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="458.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.11%)</title><rect x="455.2" y="547.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="458.2" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.03%)</title><rect x="455.2" y="531.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="458.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.06%)</title><rect x="455.6" y="531.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="458.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.06%)</title><rect x="455.6" y="515.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="458.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.06%)</title><rect x="455.6" y="499.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="458.6" y="510.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="455.7" y="483.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="458.7" y="494.0"></text>
</g>
<g>
<title>pread64 (4 samples, 0.04%)</title><rect x="455.7" y="467.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="458.7" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.04%)</title><rect x="455.7" y="451.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="458.7" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.04%)</title><rect x="455.7" y="435.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="458.7" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.03%)</title><rect x="455.9" y="419.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="458.9" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.03%)</title><rect x="455.9" y="403.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="458.9" y="414.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.03%)</title><rect x="455.9" y="387.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="458.9" y="398.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="456.0" y="371.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="459.0" y="382.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="456.0" y="355.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="459.0" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.02%)</title><rect x="456.0" y="339.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="459.0" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.02%)</title><rect x="456.0" y="323.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="459.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (7 samples, 0.08%)</title><rect x="456.5" y="595.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="459.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.08%)</title><rect x="456.5" y="579.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="459.5" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.08%)</title><rect x="456.5" y="563.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="459.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.06%)</title><rect x="456.5" y="547.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.04%)</title><rect x="456.7" y="531.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.04%)</title><rect x="456.7" y="515.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="459.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.04%)</title><rect x="456.7" y="499.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="459.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="456.7" y="483.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="459.7" y="494.0"></text>
</g>
<g>
<title>pread64 (4 samples, 0.04%)</title><rect x="456.7" y="467.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="459.7" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.04%)</title><rect x="456.7" y="451.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="459.7" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.04%)</title><rect x="456.7" y="435.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="459.7" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.04%)</title><rect x="456.7" y="419.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="459.7" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.04%)</title><rect x="456.7" y="403.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="459.7" y="414.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.04%)</title><rect x="456.7" y="387.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="459.7" y="398.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="456.8" y="371.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="459.8" y="382.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="456.8" y="355.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="459.8" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.02%)</title><rect x="456.8" y="339.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="459.8" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.02%)</title><rect x="456.8" y="323.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="459.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.02%)</title><rect x="457.2" y="547.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="460.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (6 samples, 0.07%)</title><rect x="457.4" y="595.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.06%)</title><rect x="457.6" y="579.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="460.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.06%)</title><rect x="457.6" y="563.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="460.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.04%)</title><rect x="457.6" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="460.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.03%)</title><rect x="457.7" y="531.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="460.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.03%)</title><rect x="457.7" y="515.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="460.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.03%)</title><rect x="457.7" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="460.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="457.7" y="483.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="460.7" y="494.0"></text>
</g>
<g>
<title>pread64 (3 samples, 0.03%)</title><rect x="457.7" y="467.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="460.7" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="457.8" y="451.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="460.8" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="457.8" y="435.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="460.8" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.02%)</title><rect x="457.8" y="419.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="460.8" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (2 samples, 0.02%)</title><rect x="457.8" y="403.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="460.8" y="414.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.02%)</title><rect x="457.8" y="387.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="460.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.value (57 samples, 0.63%)</title><rect x="458.2" y="611.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (17 samples, 0.19%)</title><rect x="458.2" y="595.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (17 samples, 0.19%)</title><rect x="458.2" y="579.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="461.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (17 samples, 0.19%)</title><rect x="458.2" y="563.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="461.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.04%)</title><rect x="458.4" y="547.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.4" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.04%)</title><rect x="458.4" y="531.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="461.4" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.02%)</title><rect x="458.6" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="461.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 0.13%)</title><rect x="458.9" y="547.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="461.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (11 samples, 0.12%)</title><rect x="459.0" y="531.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="462.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (11 samples, 0.12%)</title><rect x="459.0" y="515.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="462.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (10 samples, 0.11%)</title><rect x="459.1" y="499.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="462.1" y="510.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.11%)</title><rect x="459.1" y="483.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="462.1" y="494.0"></text>
</g>
<g>
<title>pread64 (10 samples, 0.11%)</title><rect x="459.1" y="467.0" width="1.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="462.1" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.11%)</title><rect x="459.1" y="451.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="462.1" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.11%)</title><rect x="459.1" y="435.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="462.1" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (10 samples, 0.11%)</title><rect x="459.1" y="419.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="462.1" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (10 samples, 0.11%)</title><rect x="459.1" y="403.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="462.1" y="414.0"></text>
</g>
<g>
<title>vfs_read (10 samples, 0.11%)</title><rect x="459.1" y="387.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="462.1" y="398.0"></text>
</g>
<g>
<title>__vfs_read (7 samples, 0.08%)</title><rect x="459.1" y="371.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="462.1" y="382.0"></text>
</g>
<g>
<title>new_sync_read (6 samples, 0.07%)</title><rect x="459.3" y="355.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="462.3" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (6 samples, 0.07%)</title><rect x="459.3" y="339.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="462.3" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (5 samples, 0.06%)</title><rect x="459.4" y="323.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="462.4" y="334.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="460.2" y="371.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="463.2" y="382.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="460.2" y="355.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="463.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (19 samples, 0.21%)</title><rect x="460.5" y="595.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="463.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (17 samples, 0.19%)</title><rect x="460.7" y="579.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="463.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (17 samples, 0.19%)</title><rect x="460.7" y="563.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="463.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (16 samples, 0.18%)</title><rect x="460.9" y="547.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="463.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (15 samples, 0.17%)</title><rect x="461.0" y="531.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="464.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (15 samples, 0.17%)</title><rect x="461.0" y="515.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="464.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (15 samples, 0.17%)</title><rect x="461.0" y="499.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="464.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.17%)</title><rect x="461.0" y="483.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="464.0" y="494.0"></text>
</g>
<g>
<title>pread64 (15 samples, 0.17%)</title><rect x="461.0" y="467.0" width="2.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="464.0" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.17%)</title><rect x="461.0" y="451.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="464.0" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.17%)</title><rect x="461.0" y="435.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="464.0" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (15 samples, 0.17%)</title><rect x="461.0" y="419.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="464.0" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (15 samples, 0.17%)</title><rect x="461.0" y="403.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="464.0" y="414.0"></text>
</g>
<g>
<title>vfs_read (14 samples, 0.16%)</title><rect x="461.1" y="387.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="464.1" y="398.0"></text>
</g>
<g>
<title>__vfs_read (11 samples, 0.12%)</title><rect x="461.1" y="371.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="464.1" y="382.0"></text>
</g>
<g>
<title>new_sync_read (11 samples, 0.12%)</title><rect x="461.1" y="355.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="464.1" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (11 samples, 0.12%)</title><rect x="461.1" y="339.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="464.1" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (10 samples, 0.11%)</title><rect x="461.2" y="323.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="464.2" y="334.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.03%)</title><rect x="461.6" y="307.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="464.6" y="318.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.03%)</title><rect x="461.6" y="291.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="464.6" y="302.0"></text>
</g>
<g>
<title>pagecache_get_page (4 samples, 0.04%)</title><rect x="462.0" y="307.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="465.0" y="318.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.03%)</title><rect x="462.2" y="291.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="465.2" y="302.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.03%)</title><rect x="462.6" y="371.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="465.6" y="382.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="462.7" y="355.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="465.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getLongFrom (6 samples, 0.07%)</title><rect x="463.0" y="595.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="466.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.07%)</title><rect x="463.0" y="579.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.0" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.07%)</title><rect x="463.0" y="563.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.04%)</title><rect x="463.1" y="547.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.04%)</title><rect x="463.1" y="531.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.04%)</title><rect x="463.1" y="515.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="466.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.04%)</title><rect x="463.1" y="499.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.1" y="510.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="463.1" y="483.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="466.1" y="494.0"></text>
</g>
<g>
<title>pread64 (4 samples, 0.04%)</title><rect x="463.1" y="467.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="466.1" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.04%)</title><rect x="463.1" y="451.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="466.1" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.04%)</title><rect x="463.1" y="435.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="466.1" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.04%)</title><rect x="463.1" y="419.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="466.1" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.04%)</title><rect x="463.1" y="403.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="466.1" y="414.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.03%)</title><rect x="463.2" y="387.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="466.2" y="398.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.03%)</title><rect x="463.2" y="371.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="466.2" y="382.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.03%)</title><rect x="463.2" y="355.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="466.2" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.03%)</title><rect x="463.2" y="339.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="466.2" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.03%)</title><rect x="463.2" y="323.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="466.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (15 samples, 0.17%)</title><rect x="463.7" y="595.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (15 samples, 0.17%)</title><rect x="463.7" y="579.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="466.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (15 samples, 0.17%)</title><rect x="463.7" y="563.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (13 samples, 0.14%)</title><rect x="463.9" y="547.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="466.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (11 samples, 0.12%)</title><rect x="463.9" y="531.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (9 samples, 0.10%)</title><rect x="464.0" y="515.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="467.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.10%)</title><rect x="464.0" y="499.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="467.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.10%)</title><rect x="464.0" y="483.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="467.0" y="494.0"></text>
</g>
<g>
<title>pread64 (9 samples, 0.10%)</title><rect x="464.0" y="467.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="467.0" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.10%)</title><rect x="464.0" y="451.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="467.0" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.10%)</title><rect x="464.0" y="435.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="467.0" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (8 samples, 0.09%)</title><rect x="464.1" y="419.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="467.1" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (8 samples, 0.09%)</title><rect x="464.1" y="403.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="467.1" y="414.0"></text>
</g>
<g>
<title>fput (2 samples, 0.02%)</title><rect x="464.3" y="387.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="467.3" y="398.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.02%)</title><rect x="464.3" y="371.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="467.3" y="382.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.06%)</title><rect x="464.5" y="387.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="467.5" y="398.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.03%)</title><rect x="464.5" y="371.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="467.5" y="382.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.03%)</title><rect x="464.5" y="355.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="467.5" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.03%)</title><rect x="464.5" y="339.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="467.5" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.03%)</title><rect x="464.5" y="323.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="467.5" y="334.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="464.9" y="371.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="467.9" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.02%)</title><rect x="465.3" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="468.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/DAOImpl.rowIterator (4,588 samples, 51.06%)</title><rect x="466.0" y="787.0" width="602.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="469.0" y="798.0">ru/mail/polis/dao/alexander/marashov/DAOImpl.rowIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (287 samples, 3.19%)</title><rect x="466.1" y="771.0" width="37.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="469.1" y="782.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (287 samples, 3.19%)</title><rect x="466.1" y="755.0" width="37.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.1" y="766.0">com..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (275 samples, 3.06%)</title><rect x="466.5" y="739.0" width="36.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.5" y="750.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (275 samples, 3.06%)</title><rect x="466.5" y="723.0" width="36.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.5" y="734.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (274 samples, 3.05%)</title><rect x="466.6" y="707.0" width="36.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.6" y="718.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (273 samples, 3.04%)</title><rect x="466.8" y="691.0" width="35.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="469.8" y="702.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (271 samples, 3.02%)</title><rect x="467.0" y="675.0" width="35.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="470.0" y="686.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (270 samples, 3.01%)</title><rect x="467.2" y="659.0" width="35.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.2" y="670.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (269 samples, 2.99%)</title><rect x="467.2" y="643.0" width="35.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="470.2" y="654.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (268 samples, 2.98%)</title><rect x="467.3" y="627.0" width="35.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="470.3" y="638.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (268 samples, 2.98%)</title><rect x="467.3" y="611.0" width="35.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="470.3" y="622.0">ru/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.03%)</title><rect x="467.6" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="470.6" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="467.6" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="470.6" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="467.6" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="470.6" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="467.6" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (118 samples, 1.31%)</title><rect x="468.1" y="595.0" width="15.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (24 samples, 0.27%)</title><rect x="468.1" y="579.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (24 samples, 0.27%)</title><rect x="468.1" y="563.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="471.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (24 samples, 0.27%)</title><rect x="468.1" y="547.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="471.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (21 samples, 0.23%)</title><rect x="468.2" y="531.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="471.2" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="468.2" y="515.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="471.2" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.02%)</title><rect x="468.2" y="499.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (18 samples, 0.20%)</title><rect x="468.5" y="515.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="471.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (18 samples, 0.20%)</title><rect x="468.5" y="499.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (18 samples, 0.20%)</title><rect x="468.5" y="483.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="471.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.19%)</title><rect x="468.6" y="467.0" width="2.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="471.6" y="478.0"></text>
</g>
<g>
<title>pread64 (17 samples, 0.19%)</title><rect x="468.6" y="451.0" width="2.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="471.6" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.18%)</title><rect x="468.7" y="435.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="471.7" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.17%)</title><rect x="468.9" y="419.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="471.9" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (14 samples, 0.16%)</title><rect x="469.0" y="403.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="472.0" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (14 samples, 0.16%)</title><rect x="469.0" y="387.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="472.0" y="398.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="469.0" y="371.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="472.0" y="382.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="469.0" y="355.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="472.0" y="366.0"></text>
</g>
<g>
<title>vfs_read (12 samples, 0.13%)</title><rect x="469.3" y="371.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="472.3" y="382.0"></text>
</g>
<g>
<title>__vfs_read (10 samples, 0.11%)</title><rect x="469.5" y="355.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="472.5" y="366.0"></text>
</g>
<g>
<title>new_sync_read (9 samples, 0.10%)</title><rect x="469.7" y="339.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="472.7" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (8 samples, 0.09%)</title><rect x="469.8" y="323.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="472.8" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (7 samples, 0.08%)</title><rect x="469.9" y="307.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="472.9" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="470.2" y="291.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="473.2" y="302.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="470.2" y="275.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="473.2" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="470.4" y="291.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="473.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (34 samples, 0.38%)</title><rect x="471.2" y="579.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="474.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (32 samples, 0.36%)</title><rect x="471.5" y="563.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="474.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (32 samples, 0.36%)</title><rect x="471.5" y="547.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="474.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.02%)</title><rect x="471.5" y="531.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="474.5" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.02%)</title><rect x="471.5" y="515.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="474.5" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.02%)</title><rect x="471.5" y="499.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="474.5" y="510.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.02%)</title><rect x="471.5" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="474.5" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.02%)</title><rect x="471.5" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="474.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (24 samples, 0.27%)</title><rect x="471.8" y="531.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="474.8" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.03%)</title><rect x="471.8" y="515.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="474.8" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.02%)</title><rect x="471.9" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="474.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.02%)</title><rect x="471.9" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="474.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.02%)</title><rect x="471.9" y="467.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="474.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.02%)</title><rect x="471.9" y="451.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="474.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (2 samples, 0.02%)</title><rect x="471.9" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="474.9" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (21 samples, 0.23%)</title><rect x="472.2" y="515.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.2" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (21 samples, 0.23%)</title><rect x="472.2" y="499.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="475.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (21 samples, 0.23%)</title><rect x="472.2" y="483.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="475.2" y="494.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.22%)</title><rect x="472.3" y="467.0" width="2.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="475.3" y="478.0"></text>
</g>
<g>
<title>pread64 (20 samples, 0.22%)</title><rect x="472.3" y="451.0" width="2.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="475.3" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.20%)</title><rect x="472.5" y="435.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="475.5" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.20%)</title><rect x="472.5" y="419.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="475.5" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (16 samples, 0.18%)</title><rect x="472.8" y="403.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="475.8" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (16 samples, 0.18%)</title><rect x="472.8" y="387.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="475.8" y="398.0"></text>
</g>
<g>
<title>vfs_read (15 samples, 0.17%)</title><rect x="472.9" y="371.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="475.9" y="382.0"></text>
</g>
<g>
<title>__vfs_read (10 samples, 0.11%)</title><rect x="473.2" y="355.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="476.2" y="366.0"></text>
</g>
<g>
<title>new_sync_read (10 samples, 0.11%)</title><rect x="473.2" y="339.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="476.2" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (10 samples, 0.11%)</title><rect x="473.2" y="323.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="476.2" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (8 samples, 0.09%)</title><rect x="473.5" y="307.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="476.5" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.04%)</title><rect x="473.7" y="291.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="476.7" y="302.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.04%)</title><rect x="473.7" y="275.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="476.7" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="474.3" y="291.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="477.3" y="302.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.02%)</title><rect x="474.3" y="275.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="477.3" y="286.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.03%)</title><rect x="474.5" y="355.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="477.5" y="366.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="474.6" y="339.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="477.6" y="350.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="474.6" y="323.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="477.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.07%)</title><rect x="474.9" y="531.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="477.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (60 samples, 0.67%)</title><rect x="475.7" y="579.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="478.7" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.06%)</title><rect x="475.7" y="563.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="478.7" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="475.7" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="478.7" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="475.7" y="531.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="478.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (55 samples, 0.61%)</title><rect x="476.4" y="563.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="479.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (54 samples, 0.60%)</title><rect x="476.5" y="547.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="479.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.02%)</title><rect x="476.9" y="531.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="479.9" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.02%)</title><rect x="476.9" y="515.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="479.9" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.02%)</title><rect x="476.9" y="499.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="479.9" y="510.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.02%)</title><rect x="476.9" y="483.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.9" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.02%)</title><rect x="476.9" y="467.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="479.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (41 samples, 0.46%)</title><rect x="477.3" y="531.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.3" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.03%)</title><rect x="477.4" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="480.4" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.02%)</title><rect x="477.5" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="480.5" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.02%)</title><rect x="477.5" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="480.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (33 samples, 0.37%)</title><rect x="477.8" y="515.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (32 samples, 0.36%)</title><rect x="477.9" y="499.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="480.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (32 samples, 0.36%)</title><rect x="477.9" y="483.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.9" y="494.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.33%)</title><rect x="478.1" y="467.0" width="3.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="481.1" y="478.0"></text>
</g>
<g>
<title>pread64 (29 samples, 0.32%)</title><rect x="478.2" y="451.0" width="3.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="481.2" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.29%)</title><rect x="478.6" y="435.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="481.6" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.29%)</title><rect x="478.6" y="419.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="481.6" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (22 samples, 0.24%)</title><rect x="479.1" y="403.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="482.1" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (22 samples, 0.24%)</title><rect x="479.1" y="387.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="482.1" y="398.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.04%)</title><rect x="479.2" y="371.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="482.2" y="382.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.04%)</title><rect x="479.2" y="355.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="482.2" y="366.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.04%)</title><rect x="479.2" y="339.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="482.2" y="350.0"></text>
</g>
<g>
<title>vfs_read (17 samples, 0.19%)</title><rect x="479.8" y="371.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="482.8" y="382.0"></text>
</g>
<g>
<title>__vfs_read (14 samples, 0.16%)</title><rect x="479.8" y="355.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="482.8" y="366.0"></text>
</g>
<g>
<title>new_sync_read (14 samples, 0.16%)</title><rect x="479.8" y="339.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="482.8" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (13 samples, 0.14%)</title><rect x="479.9" y="323.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="482.9" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (13 samples, 0.14%)</title><rect x="479.9" y="307.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="482.9" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.04%)</title><rect x="480.3" y="291.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="483.3" y="302.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.03%)</title><rect x="480.4" y="275.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="483.4" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.06%)</title><rect x="480.8" y="291.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="483.8" y="302.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.06%)</title><rect x="480.8" y="275.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="483.8" y="286.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.03%)</title><rect x="481.6" y="355.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="484.6" y="366.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="481.7" y="339.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="484.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.04%)</title><rect x="482.1" y="515.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="485.1" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.03%)</title><rect x="482.1" y="499.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="485.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.04%)</title><rect x="482.7" y="531.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="485.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.03%)</title><rect x="483.2" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="486.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.value (144 samples, 1.60%)</title><rect x="483.6" y="595.0" width="18.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="486.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (34 samples, 0.38%)</title><rect x="483.6" y="579.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (33 samples, 0.37%)</title><rect x="483.7" y="563.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="486.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (33 samples, 0.37%)</title><rect x="483.7" y="547.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="486.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.06%)</title><rect x="484.0" y="531.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="487.0" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (5 samples, 0.06%)</title><rect x="484.0" y="515.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="487.0" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.06%)</title><rect x="484.0" y="499.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.0" y="510.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.06%)</title><rect x="484.0" y="483.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.0" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.06%)</title><rect x="484.0" y="467.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.0" y="478.0"></text>
</g>
<g>
<title>unsafe_arraycopy (2 samples, 0.02%)</title><rect x="484.4" y="451.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="487.4" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (22 samples, 0.24%)</title><rect x="484.6" y="531.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.6" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.04%)</title><rect x="484.6" y="515.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.6" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="484.8" y="499.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="487.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (15 samples, 0.17%)</title><rect x="485.2" y="515.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="488.2" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (15 samples, 0.17%)</title><rect x="485.2" y="499.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="488.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (15 samples, 0.17%)</title><rect x="485.2" y="483.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="488.2" y="494.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.16%)</title><rect x="485.3" y="467.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="488.3" y="478.0"></text>
</g>
<g>
<title>pread64 (14 samples, 0.16%)</title><rect x="485.3" y="451.0" width="1.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="488.3" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.14%)</title><rect x="485.4" y="435.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="488.4" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.14%)</title><rect x="485.4" y="419.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="488.4" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (13 samples, 0.14%)</title><rect x="485.4" y="403.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="488.4" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (13 samples, 0.14%)</title><rect x="485.4" y="387.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="488.4" y="398.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="485.4" y="371.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="488.4" y="382.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="485.4" y="355.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="488.4" y="366.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="485.4" y="339.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="488.4" y="350.0"></text>
</g>
<g>
<title>vfs_read (11 samples, 0.12%)</title><rect x="485.7" y="371.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="488.7" y="382.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.04%)</title><rect x="485.9" y="355.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="488.9" y="366.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.03%)</title><rect x="486.1" y="339.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="489.1" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.03%)</title><rect x="486.1" y="323.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="489.1" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.03%)</title><rect x="486.1" y="307.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="489.1" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="486.2" y="291.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="489.2" y="302.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.04%)</title><rect x="486.6" y="355.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="489.6" y="366.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.03%)</title><rect x="486.7" y="339.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="489.7" y="350.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="486.9" y="323.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="489.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.02%)</title><rect x="487.1" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="490.1" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.02%)</title><rect x="487.1" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.04%)</title><rect x="487.5" y="531.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (53 samples, 0.59%)</title><rect x="488.0" y="579.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.0" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.03%)</title><rect x="488.0" y="563.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="491.0" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="488.2" y="547.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="491.2" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="488.2" y="531.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="491.2" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="488.2" y="515.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="491.2" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.02%)</title><rect x="488.2" y="499.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.2" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.02%)</title><rect x="488.2" y="483.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="491.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (50 samples, 0.56%)</title><rect x="488.4" y="563.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="491.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (50 samples, 0.56%)</title><rect x="488.4" y="547.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.03%)</title><rect x="488.7" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.7" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.03%)</title><rect x="488.7" y="515.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="491.7" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.02%)</title><rect x="488.8" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.8" y="510.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.02%)</title><rect x="488.8" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="491.8" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.02%)</title><rect x="488.8" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="491.8" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (38 samples, 0.42%)</title><rect x="489.1" y="531.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="492.1" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (10 samples, 0.11%)</title><rect x="489.1" y="515.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="492.1" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (7 samples, 0.08%)</title><rect x="489.5" y="499.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="492.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (5 samples, 0.06%)</title><rect x="489.7" y="483.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="492.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.03%)</title><rect x="490.0" y="467.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="493.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.03%)</title><rect x="490.0" y="451.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="493.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (3 samples, 0.03%)</title><rect x="490.0" y="435.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="493.0" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (2 samples, 0.02%)</title><rect x="490.1" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.1" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (25 samples, 0.28%)</title><rect x="490.4" y="515.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="493.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (24 samples, 0.27%)</title><rect x="490.5" y="499.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="493.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (23 samples, 0.26%)</title><rect x="490.7" y="483.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.7" y="494.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.24%)</title><rect x="490.8" y="467.0" width="2.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="493.8" y="478.0"></text>
</g>
<g>
<title>pread64 (22 samples, 0.24%)</title><rect x="490.8" y="451.0" width="2.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="493.8" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.24%)</title><rect x="490.8" y="435.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="493.8" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.24%)</title><rect x="490.8" y="419.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="493.8" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (19 samples, 0.21%)</title><rect x="491.2" y="403.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="494.2" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (19 samples, 0.21%)</title><rect x="491.2" y="387.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="494.2" y="398.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="491.2" y="371.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="494.2" y="382.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="491.2" y="355.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="494.2" y="366.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="491.2" y="339.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="494.2" y="350.0"></text>
</g>
<g>
<title>vfs_read (17 samples, 0.19%)</title><rect x="491.5" y="371.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="494.5" y="382.0"></text>
</g>
<g>
<title>__vfs_read (15 samples, 0.17%)</title><rect x="491.5" y="355.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="494.5" y="366.0"></text>
</g>
<g>
<title>new_sync_read (14 samples, 0.16%)</title><rect x="491.6" y="339.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="494.6" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (12 samples, 0.13%)</title><rect x="491.6" y="323.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="494.6" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (12 samples, 0.13%)</title><rect x="491.6" y="307.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="494.6" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.03%)</title><rect x="492.4" y="291.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="495.4" y="302.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.03%)</title><rect x="492.4" y="275.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="495.4" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="492.8" y="291.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="495.8" y="302.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.02%)</title><rect x="493.2" y="323.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="496.2" y="334.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="493.4" y="355.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="496.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.02%)</title><rect x="493.8" y="515.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="496.8" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.02%)</title><rect x="493.8" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="496.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (7 samples, 0.08%)</title><rect x="494.1" y="531.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="497.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.02%)</title><rect x="494.7" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="497.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getLongFrom (21 samples, 0.23%)</title><rect x="495.0" y="579.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="498.0" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (21 samples, 0.23%)</title><rect x="495.0" y="563.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="498.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (21 samples, 0.23%)</title><rect x="495.0" y="547.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="498.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.04%)</title><rect x="495.0" y="531.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="498.0" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.04%)</title><rect x="495.0" y="515.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.0" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.03%)</title><rect x="495.1" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="498.1" y="510.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.03%)</title><rect x="495.1" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="498.1" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.03%)</title><rect x="495.1" y="467.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="498.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (16 samples, 0.18%)</title><rect x="495.5" y="531.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="498.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (14 samples, 0.16%)</title><rect x="495.5" y="515.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="498.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (14 samples, 0.16%)</title><rect x="495.5" y="499.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="498.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (14 samples, 0.16%)</title><rect x="495.5" y="483.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="498.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.13%)</title><rect x="495.8" y="467.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="498.8" y="478.0"></text>
</g>
<g>
<title>pread64 (11 samples, 0.12%)</title><rect x="495.9" y="451.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="498.9" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.12%)</title><rect x="495.9" y="435.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="498.9" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.12%)</title><rect x="495.9" y="419.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="498.9" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (10 samples, 0.11%)</title><rect x="496.1" y="403.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="499.1" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (10 samples, 0.11%)</title><rect x="496.1" y="387.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="499.1" y="398.0"></text>
</g>
<g>
<title>vfs_read (9 samples, 0.10%)</title><rect x="496.2" y="371.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="499.2" y="382.0"></text>
</g>
<g>
<title>__vfs_read (8 samples, 0.09%)</title><rect x="496.2" y="355.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="499.2" y="366.0"></text>
</g>
<g>
<title>new_sync_read (8 samples, 0.09%)</title><rect x="496.2" y="339.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="499.2" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (8 samples, 0.09%)</title><rect x="496.2" y="323.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="499.2" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (7 samples, 0.08%)</title><rect x="496.3" y="307.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="499.3" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.03%)</title><rect x="496.8" y="291.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="499.8" y="302.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.03%)</title><rect x="496.8" y="275.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="499.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (36 samples, 0.40%)</title><rect x="497.8" y="579.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="500.8" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (34 samples, 0.38%)</title><rect x="498.0" y="563.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="501.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (34 samples, 0.38%)</title><rect x="498.0" y="547.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="501.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (30 samples, 0.33%)</title><rect x="498.3" y="531.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="501.3" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.03%)</title><rect x="498.4" y="515.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="501.4" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="498.4" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="501.4" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.03%)</title><rect x="498.4" y="483.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="501.4" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (25 samples, 0.28%)</title><rect x="498.8" y="515.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="501.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (24 samples, 0.27%)</title><rect x="498.9" y="499.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="501.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (24 samples, 0.27%)</title><rect x="498.9" y="483.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.9" y="494.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.24%)</title><rect x="499.2" y="467.0" width="2.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="502.2" y="478.0"></text>
</g>
<g>
<title>pread64 (21 samples, 0.23%)</title><rect x="499.3" y="451.0" width="2.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="502.3" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.20%)</title><rect x="499.7" y="435.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="502.7" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.19%)</title><rect x="499.9" y="419.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="502.9" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (16 samples, 0.18%)</title><rect x="500.0" y="403.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="503.0" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (16 samples, 0.18%)</title><rect x="500.0" y="387.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="503.0" y="398.0"></text>
</g>
<g>
<title>vfs_read (14 samples, 0.16%)</title><rect x="500.3" y="371.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="503.3" y="382.0"></text>
</g>
<g>
<title>__vfs_read (13 samples, 0.14%)</title><rect x="500.4" y="355.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="503.4" y="366.0"></text>
</g>
<g>
<title>new_sync_read (13 samples, 0.14%)</title><rect x="500.4" y="339.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="503.4" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (13 samples, 0.14%)</title><rect x="500.4" y="323.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="503.4" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (11 samples, 0.12%)</title><rect x="500.5" y="307.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="503.5" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.03%)</title><rect x="501.0" y="291.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="504.0" y="302.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.02%)</title><rect x="501.4" y="291.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="504.4" y="302.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.02%)</title><rect x="501.7" y="291.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="504.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.02%)</title><rect x="502.2" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="505.2" y="542.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.08%)</title><rect x="502.6" y="739.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="505.6" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.08%)</title><rect x="502.6" y="723.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="505.6" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.08%)</title><rect x="502.6" y="707.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="505.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.02%)</title><rect x="502.6" y="691.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="505.6" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$143/1248898623.getAsBoolean (2 samples, 0.02%)</title><rect x="502.6" y="675.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="505.6" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.02%)</title><rect x="502.6" y="659.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="505.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2 samples, 0.02%)</title><rect x="502.6" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="505.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.02%)</title><rect x="502.6" y="627.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="505.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.02%)</title><rect x="502.6" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="505.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2 samples, 0.02%)</title><rect x="502.6" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="505.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.init (4 samples, 0.04%)</title><rect x="502.9" y="691.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="505.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.hasNext (2 samples, 0.02%)</title><rect x="503.5" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="506.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (18 samples, 0.20%)</title><rect x="503.8" y="771.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="506.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (18 samples, 0.20%)</title><rect x="503.8" y="755.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (15 samples, 0.17%)</title><rect x="503.9" y="739.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="506.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (12 samples, 0.13%)</title><rect x="504.3" y="723.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="507.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.03%)</title><rect x="504.9" y="707.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="507.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (5 samples, 0.06%)</title><rect x="505.2" y="707.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="508.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.03%)</title><rect x="505.5" y="691.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="508.5" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="505.5" y="675.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="508.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="505.5" y="659.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="508.5" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.03%)</title><rect x="505.5" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="508.5" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.03%)</title><rect x="505.5" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.5" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.03%)</title><rect x="505.5" y="611.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="508.5" y="622.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (3 samples, 0.03%)</title><rect x="505.5" y="595.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="508.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (2 samples, 0.02%)</title><rect x="505.9" y="739.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.02%)</title><rect x="506.2" y="771.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (2 samples, 0.02%)</title><rect x="506.2" y="755.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="509.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (2 samples, 0.02%)</title><rect x="506.2" y="739.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="509.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (15 samples, 0.17%)</title><rect x="506.4" y="771.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="509.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (15 samples, 0.17%)</title><rect x="506.4" y="755.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="509.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (11 samples, 0.12%)</title><rect x="506.6" y="739.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="509.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (4 samples, 0.04%)</title><rect x="507.5" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="510.5" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.04%)</title><rect x="507.5" y="707.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="510.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 0.02%)</title><rect x="508.0" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="511.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (96 samples, 1.07%)</title><rect x="508.4" y="771.0" width="12.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="511.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (96 samples, 1.07%)</title><rect x="508.4" y="755.0" width="12.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="511.4" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (96 samples, 1.07%)</title><rect x="508.4" y="739.0" width="12.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="511.4" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.03%)</title><rect x="508.8" y="723.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="511.8" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.03%)</title><rect x="508.8" y="707.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="511.8" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.03%)</title><rect x="508.8" y="691.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="511.8" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.02%)</title><rect x="508.9" y="675.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="511.9" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.02%)</title><rect x="508.9" y="659.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="511.9" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (90 samples, 1.00%)</title><rect x="509.2" y="723.0" width="11.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.2" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (89 samples, 0.99%)</title><rect x="509.3" y="707.0" width="11.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="512.3" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (89 samples, 0.99%)</title><rect x="509.3" y="691.0" width="11.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.3" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (89 samples, 0.99%)</title><rect x="509.3" y="675.0" width="11.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.3" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (88 samples, 0.98%)</title><rect x="509.4" y="659.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="512.4" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (88 samples, 0.98%)</title><rect x="509.4" y="643.0" width="11.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="512.4" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (87 samples, 0.97%)</title><rect x="509.6" y="627.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="512.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (87 samples, 0.97%)</title><rect x="509.6" y="611.0" width="11.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="512.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.next (87 samples, 0.97%)</title><rect x="509.6" y="595.0" width="11.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="512.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (37 samples, 0.41%)</title><rect x="509.7" y="579.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="512.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (14 samples, 0.16%)</title><rect x="509.7" y="563.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (13 samples, 0.14%)</title><rect x="509.8" y="547.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="512.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (13 samples, 0.14%)</title><rect x="509.8" y="531.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="512.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (11 samples, 0.12%)</title><rect x="509.8" y="515.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.8" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="509.8" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="512.8" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.02%)</title><rect x="509.8" y="483.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="512.8" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.10%)</title><rect x="510.1" y="499.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="513.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (9 samples, 0.10%)</title><rect x="510.1" y="483.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="513.1" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.10%)</title><rect x="510.1" y="467.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="513.1" y="478.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.10%)</title><rect x="510.1" y="451.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="513.1" y="462.0"></text>
</g>
<g>
<title>pread64 (9 samples, 0.10%)</title><rect x="510.1" y="435.0" width="1.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="513.1" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.10%)</title><rect x="510.1" y="419.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="513.1" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.10%)</title><rect x="510.1" y="403.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="513.1" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (9 samples, 0.10%)</title><rect x="510.1" y="387.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="513.1" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (9 samples, 0.10%)</title><rect x="510.1" y="371.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="513.1" y="382.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.08%)</title><rect x="510.4" y="355.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="513.4" y="366.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.06%)</title><rect x="510.4" y="339.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="513.4" y="350.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.04%)</title><rect x="510.5" y="323.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="513.5" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (4 samples, 0.04%)</title><rect x="510.5" y="307.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="513.5" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (4 samples, 0.04%)</title><rect x="510.5" y="291.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="513.5" y="302.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="511.0" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="514.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.02%)</title><rect x="511.3" y="515.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="514.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (11 samples, 0.12%)</title><rect x="511.5" y="563.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="514.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (10 samples, 0.11%)</title><rect x="511.7" y="547.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="514.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (10 samples, 0.11%)</title><rect x="511.7" y="531.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="514.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.10%)</title><rect x="511.8" y="515.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="514.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.08%)</title><rect x="511.9" y="499.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.08%)</title><rect x="511.9" y="483.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="514.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.08%)</title><rect x="511.9" y="467.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="514.9" y="478.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="512.2" y="451.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="515.2" y="462.0"></text>
</g>
<g>
<title>pread64 (5 samples, 0.06%)</title><rect x="512.2" y="435.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="515.2" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.06%)</title><rect x="512.2" y="419.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="515.2" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.06%)</title><rect x="512.2" y="403.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="515.2" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.06%)</title><rect x="512.2" y="387.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="515.2" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.06%)</title><rect x="512.2" y="371.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="515.2" y="382.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.03%)</title><rect x="512.5" y="355.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="515.5" y="366.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="512.5" y="339.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="515.5" y="350.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="512.5" y="323.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="515.5" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.02%)</title><rect x="512.5" y="307.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="515.5" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.02%)</title><rect x="512.5" y="291.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="515.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (12 samples, 0.13%)</title><rect x="513.0" y="563.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="516.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (12 samples, 0.13%)</title><rect x="513.0" y="547.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="516.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (12 samples, 0.13%)</title><rect x="513.0" y="531.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 0.13%)</title><rect x="513.0" y="515.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="516.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (12 samples, 0.13%)</title><rect x="513.0" y="499.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="516.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (12 samples, 0.13%)</title><rect x="513.0" y="483.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="516.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (12 samples, 0.13%)</title><rect x="513.0" y="467.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="516.0" y="478.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.10%)</title><rect x="513.4" y="451.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="516.4" y="462.0"></text>
</g>
<g>
<title>pread64 (9 samples, 0.10%)</title><rect x="513.4" y="435.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="516.4" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.10%)</title><rect x="513.4" y="419.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="516.4" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.10%)</title><rect x="513.4" y="403.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="516.4" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (8 samples, 0.09%)</title><rect x="513.5" y="387.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="516.5" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (8 samples, 0.09%)</title><rect x="513.5" y="371.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="516.5" y="382.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.08%)</title><rect x="513.7" y="355.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="516.7" y="366.0"></text>
</g>
<g>
<title>__vfs_read (6 samples, 0.07%)</title><rect x="513.7" y="339.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="516.7" y="350.0"></text>
</g>
<g>
<title>new_sync_read (6 samples, 0.07%)</title><rect x="513.7" y="323.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="516.7" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (6 samples, 0.07%)</title><rect x="513.7" y="307.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="516.7" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (5 samples, 0.06%)</title><rect x="513.8" y="291.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="516.8" y="302.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="514.2" y="275.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="517.2" y="286.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.02%)</title><rect x="514.2" y="259.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="517.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.value (49 samples, 0.55%)</title><rect x="514.6" y="579.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="517.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (8 samples, 0.09%)</title><rect x="514.6" y="563.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="517.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (8 samples, 0.09%)</title><rect x="514.6" y="547.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="517.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (8 samples, 0.09%)</title><rect x="514.6" y="531.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="517.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.08%)</title><rect x="514.6" y="515.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="517.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.08%)</title><rect x="514.6" y="499.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="517.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.08%)</title><rect x="514.6" y="483.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="517.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.08%)</title><rect x="514.6" y="467.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.6" y="478.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.08%)</title><rect x="514.6" y="451.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="517.6" y="462.0"></text>
</g>
<g>
<title>pread64 (7 samples, 0.08%)</title><rect x="514.6" y="435.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="517.6" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.07%)</title><rect x="514.7" y="419.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="517.7" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.07%)</title><rect x="514.7" y="403.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="517.7" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (6 samples, 0.07%)</title><rect x="514.7" y="387.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="517.7" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (6 samples, 0.07%)</title><rect x="514.7" y="371.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="517.7" y="382.0"></text>
</g>
<g>
<title>vfs_read (6 samples, 0.07%)</title><rect x="514.7" y="355.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="517.7" y="366.0"></text>
</g>
<g>
<title>__vfs_read (6 samples, 0.07%)</title><rect x="514.7" y="339.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="517.7" y="350.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.06%)</title><rect x="514.8" y="323.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="517.8" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (5 samples, 0.06%)</title><rect x="514.8" y="307.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="517.8" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (5 samples, 0.06%)</title><rect x="514.8" y="291.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="517.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (13 samples, 0.14%)</title><rect x="515.6" y="563.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="518.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (13 samples, 0.14%)</title><rect x="515.6" y="547.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="518.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (13 samples, 0.14%)</title><rect x="515.6" y="531.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.02%)</title><rect x="515.6" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="518.6" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.02%)</title><rect x="515.6" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="518.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.11%)</title><rect x="515.9" y="515.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (10 samples, 0.11%)</title><rect x="515.9" y="499.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (9 samples, 0.10%)</title><rect x="516.0" y="483.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.10%)</title><rect x="516.0" y="467.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="519.0" y="478.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.10%)</title><rect x="516.0" y="451.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="519.0" y="462.0"></text>
</g>
<g>
<title>pread64 (8 samples, 0.09%)</title><rect x="516.1" y="435.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="519.1" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.09%)</title><rect x="516.1" y="419.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="519.1" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.09%)</title><rect x="516.1" y="403.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="519.1" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (8 samples, 0.09%)</title><rect x="516.1" y="387.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="519.1" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (8 samples, 0.09%)</title><rect x="516.1" y="371.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="519.1" y="382.0"></text>
</g>
<g>
<title>vfs_read (6 samples, 0.07%)</title><rect x="516.4" y="355.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="519.4" y="366.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.06%)</title><rect x="516.4" y="339.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="519.4" y="350.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.06%)</title><rect x="516.4" y="323.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="519.4" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (5 samples, 0.06%)</title><rect x="516.4" y="307.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="519.4" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (5 samples, 0.06%)</title><rect x="516.4" y="291.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="519.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getLongFrom (17 samples, 0.19%)</title><rect x="517.3" y="563.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="520.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (17 samples, 0.19%)</title><rect x="517.3" y="547.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="520.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (17 samples, 0.19%)</title><rect x="517.3" y="531.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (15 samples, 0.17%)</title><rect x="517.6" y="515.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="520.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (14 samples, 0.16%)</title><rect x="517.7" y="499.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="520.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (14 samples, 0.16%)</title><rect x="517.7" y="483.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (14 samples, 0.16%)</title><rect x="517.7" y="467.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.7" y="478.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.14%)</title><rect x="517.9" y="451.0" width="1.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="520.9" y="462.0"></text>
</g>
<g>
<title>pread64 (13 samples, 0.14%)</title><rect x="517.9" y="435.0" width="1.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="520.9" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.13%)</title><rect x="518.0" y="419.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="521.0" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.13%)</title><rect x="518.0" y="403.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="521.0" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (10 samples, 0.11%)</title><rect x="518.2" y="387.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="521.2" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (10 samples, 0.11%)</title><rect x="518.2" y="371.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="521.2" y="382.0"></text>
</g>
<g>
<title>vfs_read (9 samples, 0.10%)</title><rect x="518.4" y="355.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="521.4" y="366.0"></text>
</g>
<g>
<title>__vfs_read (6 samples, 0.07%)</title><rect x="518.4" y="339.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="521.4" y="350.0"></text>
</g>
<g>
<title>new_sync_read (6 samples, 0.07%)</title><rect x="518.4" y="323.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="521.4" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (6 samples, 0.07%)</title><rect x="518.4" y="307.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="521.4" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (5 samples, 0.06%)</title><rect x="518.4" y="291.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="521.4" y="302.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.03%)</title><rect x="518.5" y="275.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="521.5" y="286.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.03%)</title><rect x="518.5" y="259.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="521.5" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="519.3" y="339.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="522.3" y="350.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="519.3" y="323.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="522.3" y="334.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="519.3" y="307.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="522.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (11 samples, 0.12%)</title><rect x="519.6" y="563.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (10 samples, 0.11%)</title><rect x="519.7" y="547.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (10 samples, 0.11%)</title><rect x="519.7" y="531.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="522.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.10%)</title><rect x="519.8" y="515.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="522.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.08%)</title><rect x="519.8" y="499.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="522.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.08%)</title><rect x="519.8" y="483.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.8" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.08%)</title><rect x="519.8" y="467.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="522.8" y="478.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.08%)</title><rect x="519.8" y="451.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="522.8" y="462.0"></text>
</g>
<g>
<title>pread64 (7 samples, 0.08%)</title><rect x="519.8" y="435.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="522.8" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.07%)</title><rect x="520.0" y="419.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="523.0" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.07%)</title><rect x="520.0" y="403.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="523.0" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.04%)</title><rect x="520.2" y="387.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="523.2" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.04%)</title><rect x="520.2" y="371.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="523.2" y="382.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.04%)</title><rect x="520.2" y="355.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="523.2" y="366.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="520.2" y="339.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="523.2" y="350.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="520.2" y="323.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="523.2" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.02%)</title><rect x="520.2" y="307.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="523.2" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.02%)</title><rect x="520.2" y="291.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="523.2" y="302.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="520.5" y="339.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="523.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.02%)</title><rect x="520.7" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.7" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.02%)</title><rect x="520.7" y="483.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="523.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/MemTable.iterator (12 samples, 0.13%)</title><rect x="521.0" y="771.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="524.0" y="782.0"></text>
</g>
<g>
<title>java/util/Collection.stream (8 samples, 0.09%)</title><rect x="521.1" y="755.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="524.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (8 samples, 0.09%)</title><rect x="521.1" y="739.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="524.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (8 samples, 0.09%)</title><rect x="521.1" y="723.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="524.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (8 samples, 0.09%)</title><rect x="521.1" y="707.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (7 samples, 0.08%)</title><rect x="521.3" y="691.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="524.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (7 samples, 0.08%)</title><rect x="521.3" y="675.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="524.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (7 samples, 0.08%)</title><rect x="521.3" y="659.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.02%)</title><rect x="521.9" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="524.9" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="521.9" y="627.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="524.9" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="521.9" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.9" y="622.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.02%)</title><rect x="521.9" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="524.9" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.02%)</title><rect x="521.9" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="524.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.02%)</title><rect x="522.2" y="755.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="525.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.02%)</title><rect x="522.2" y="739.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="525.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.02%)</title><rect x="522.2" y="723.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="525.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (2 samples, 0.02%)</title><rect x="522.2" y="707.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="525.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.iterator (4,155 samples, 46.24%)</title><rect x="522.6" y="771.0" width="545.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="525.6" y="782.0">ru/mail/polis/dao/alexander/marashov/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable$1.&lt;init&gt; (4,155 samples, 46.24%)</title><rect x="522.6" y="755.0" width="545.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="525.6" y="766.0">ru/mail/polis/dao/alexander/marashov/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.binarySearch (4,154 samples, 46.23%)</title><rect x="522.7" y="739.0" width="545.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="525.7" y="750.0">ru/mail/polis/dao/alexander/marashov/SSTable.binarySearch</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (33 samples, 0.37%)</title><rect x="524.2" y="723.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="527.2" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.02%)</title><rect x="525.3" y="707.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="528.3" y="718.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (17 samples, 0.19%)</title><rect x="525.6" y="707.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="528.6" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (7 samples, 0.08%)</title><rect x="526.3" y="691.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="529.3" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.03%)</title><rect x="526.8" y="675.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="529.8" y="686.0"></text>
</g>
<g>
<title>vectorizedMismatch (5 samples, 0.06%)</title><rect x="527.2" y="691.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="530.2" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.06%)</title><rect x="527.8" y="707.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="530.8" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.03%)</title><rect x="528.1" y="691.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="531.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.key (4,110 samples, 45.74%)</title><rect x="528.5" y="723.0" width="539.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="531.5" y="734.0">ru/mail/polis/dao/alexander/marashov/SSTable.key</text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getFrom (1,287 samples, 14.32%)</title><rect x="528.5" y="707.0" width="169.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="531.5" y="718.0">ru/mail/polis/dao/alex..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (47 samples, 0.52%)</title><rect x="528.6" y="691.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="531.6" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.03%)</title><rect x="529.0" y="675.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="532.0" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.02%)</title><rect x="529.1" y="659.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="532.1" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.02%)</title><rect x="529.1" y="643.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="532.1" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="529.1" y="627.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="532.1" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (41 samples, 0.46%)</title><rect x="529.4" y="675.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="532.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (31 samples, 0.35%)</title><rect x="530.7" y="659.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="533.7" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (26 samples, 0.29%)</title><rect x="531.2" y="643.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="534.2" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.03%)</title><rect x="532.2" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="535.2" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.03%)</title><rect x="532.2" y="611.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="535.2" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (16 samples, 0.18%)</title><rect x="532.6" y="627.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="535.6" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (16 samples, 0.18%)</title><rect x="532.6" y="611.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="535.6" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.02%)</title><rect x="534.3" y="595.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="537.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (4 samples, 0.04%)</title><rect x="534.8" y="691.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="537.8" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.flip (4 samples, 0.04%)</title><rect x="534.8" y="675.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="537.8" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,235 samples, 13.75%)</title><rect x="535.3" y="691.0" width="162.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="538.3" y="702.0">sun/nio/ch/FileChanne..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,235 samples, 13.75%)</title><rect x="535.3" y="675.0" width="162.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="538.3" y="686.0">sun/nio/ch/FileChanne..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (103 samples, 1.15%)</title><rect x="538.2" y="659.0" width="13.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="541.2" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (103 samples, 1.15%)</title><rect x="538.2" y="643.0" width="13.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="541.2" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (20 samples, 0.22%)</title><rect x="543.3" y="627.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="546.3" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (44 samples, 0.49%)</title><rect x="546.0" y="627.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="549.0" y="638.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (42 samples, 0.47%)</title><rect x="546.2" y="611.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="549.2" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (41 samples, 0.46%)</title><rect x="546.4" y="595.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="549.4" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.02%)</title><rect x="550.0" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="553.0" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.04%)</title><rect x="550.3" y="579.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="553.3" y="590.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="550.9" y="579.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="553.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.02%)</title><rect x="551.3" y="579.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="554.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1,003 samples, 11.16%)</title><rect x="551.7" y="659.0" width="131.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.7" y="670.0">sun/nio/ch/IOUti..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (111 samples, 1.24%)</title><rect x="552.4" y="643.0" width="14.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="555.4" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (77 samples, 0.86%)</title><rect x="556.9" y="627.0" width="10.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="559.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (37 samples, 0.41%)</title><rect x="562.1" y="611.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (36 samples, 0.40%)</title><rect x="562.2" y="595.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="565.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (36 samples, 0.40%)</title><rect x="562.2" y="579.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="565.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (4 samples, 0.04%)</title><rect x="562.5" y="563.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="565.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (30 samples, 0.33%)</title><rect x="563.0" y="563.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="566.0" y="574.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (21 samples, 0.23%)</title><rect x="564.2" y="547.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.2" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (816 samples, 9.08%)</title><rect x="567.0" y="643.0" width="107.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="570.0" y="654.0">sun/nio/ch/IO..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (815 samples, 9.07%)</title><rect x="567.1" y="627.0" width="107.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.1" y="638.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (814 samples, 9.06%)</title><rect x="567.2" y="611.0" width="106.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.2" y="622.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (15 samples, 0.17%)</title><rect x="571.4" y="595.0" width="2.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="574.4" y="606.0"></text>
</g>
<g>
<title>[unknown] (759 samples, 8.45%)</title><rect x="573.4" y="595.0" width="99.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="576.4" y="606.0">[unknown]</text>
</g>
<g>
<title>__libc_disable_asynccancel (12 samples, 0.13%)</title><rect x="573.4" y="579.0" width="1.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="576.4" y="590.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (5 samples, 0.06%)</title><rect x="575.0" y="579.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="578.0" y="590.0"></text>
</g>
<g>
<title>pread64 (742 samples, 8.26%)</title><rect x="575.6" y="579.0" width="97.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="578.6" y="590.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (690 samples, 7.68%)</title><rect x="582.5" y="563.0" width="90.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="585.5" y="574.0">entry_SYSC..</text>
</g>
<g>
<title>__x64_sys_pread64 (14 samples, 0.16%)</title><rect x="582.5" y="547.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="585.5" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (676 samples, 7.52%)</title><rect x="584.3" y="547.0" width="88.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="587.3" y="558.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_pread64 (604 samples, 6.72%)</title><rect x="593.8" y="531.0" width="79.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="596.8" y="542.0">__x64_sys..</text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="593.8" y="515.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="596.8" y="526.0"></text>
</g>
<g>
<title>ksys_pread64 (601 samples, 6.69%)</title><rect x="594.2" y="515.0" width="78.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="597.2" y="526.0">ksys_prea..</text>
</g>
<g>
<title>__fdget (54 samples, 0.60%)</title><rect x="594.5" y="499.0" width="7.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="597.5" y="510.0"></text>
</g>
<g>
<title>__fget_light (54 samples, 0.60%)</title><rect x="594.5" y="483.0" width="7.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="597.5" y="494.0"></text>
</g>
<g>
<title>__fget (52 samples, 0.58%)</title><rect x="594.8" y="467.0" width="6.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="597.8" y="478.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.02%)</title><rect x="601.6" y="499.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="604.6" y="510.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="601.9" y="499.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="604.9" y="510.0"></text>
</g>
<g>
<title>fput (11 samples, 0.12%)</title><rect x="602.2" y="499.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="605.2" y="510.0"></text>
</g>
<g>
<title>fput_many (11 samples, 0.12%)</title><rect x="602.2" y="483.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="605.2" y="494.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="603.6" y="499.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="606.6" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.03%)</title><rect x="603.9" y="499.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="606.9" y="510.0"></text>
</g>
<g>
<title>vfs_read (524 samples, 5.83%)</title><rect x="604.3" y="499.0" width="68.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="607.3" y="510.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (12 samples, 0.13%)</title><rect x="606.9" y="483.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="609.9" y="494.0"></text>
</g>
<g>
<title>__vfs_read (374 samples, 4.16%)</title><rect x="608.5" y="483.0" width="49.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="611.5" y="494.0">__vfs..</text>
</g>
<g>
<title>ext4_file_read_iter (18 samples, 0.20%)</title><rect x="609.4" y="467.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="612.4" y="478.0"></text>
</g>
<g>
<title>new_sync_read (349 samples, 3.88%)</title><rect x="611.8" y="467.0" width="45.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="614.8" y="478.0">new_..</text>
</g>
<g>
<title>ext4_file_read_iter (318 samples, 3.54%)</title><rect x="615.4" y="451.0" width="41.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="618.4" y="462.0">ext..</text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.04%)</title><rect x="618.1" y="435.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="621.1" y="446.0"></text>
</g>
<g>
<title>generic_file_read_iter (293 samples, 3.26%)</title><rect x="618.6" y="435.0" width="38.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="621.6" y="446.0">gen..</text>
</g>
<g>
<title>_cond_resched (4 samples, 0.04%)</title><rect x="628.4" y="419.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="631.4" y="430.0"></text>
</g>
<g>
<title>rcu_all_qs (4 samples, 0.04%)</title><rect x="628.4" y="403.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="631.4" y="414.0"></text>
</g>
<g>
<title>atime_needs_update (4 samples, 0.04%)</title><rect x="629.0" y="419.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="632.0" y="430.0"></text>
</g>
<g>
<title>copy_page_to_iter (103 samples, 1.15%)</title><rect x="629.5" y="419.0" width="13.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="632.5" y="430.0"></text>
</g>
<g>
<title>_cond_resched (4 samples, 0.04%)</title><rect x="632.9" y="403.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="635.9" y="414.0"></text>
</g>
<g>
<title>rcu_all_qs (4 samples, 0.04%)</title><rect x="632.9" y="387.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="635.9" y="398.0"></text>
</g>
<g>
<title>copy_user_generic_string (72 samples, 0.80%)</title><rect x="633.4" y="403.0" width="9.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="636.4" y="414.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.03%)</title><rect x="643.0" y="419.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="646.0" y="430.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.02%)</title><rect x="643.4" y="419.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="646.4" y="430.0"></text>
</g>
<g>
<title>pagecache_get_page (57 samples, 0.63%)</title><rect x="643.7" y="419.0" width="7.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="646.7" y="430.0"></text>
</g>
<g>
<title>find_get_entry (53 samples, 0.59%)</title><rect x="644.1" y="403.0" width="6.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="647.1" y="414.0"></text>
</g>
<g>
<title>xas_load (30 samples, 0.33%)</title><rect x="646.7" y="387.0" width="3.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="649.7" y="398.0"></text>
</g>
<g>
<title>xas_start (8 samples, 0.09%)</title><rect x="649.6" y="371.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="652.6" y="382.0"></text>
</g>
<g>
<title>xas_start (3 samples, 0.03%)</title><rect x="650.6" y="387.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="653.6" y="398.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.03%)</title><rect x="651.2" y="419.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="654.2" y="430.0"></text>
</g>
<g>
<title>touch_atime (42 samples, 0.47%)</title><rect x="651.5" y="419.0" width="5.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="654.5" y="430.0"></text>
</g>
<g>
<title>atime_needs_update (18 samples, 0.20%)</title><rect x="654.7" y="403.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="657.7" y="414.0"></text>
</g>
<g>
<title>current_time (11 samples, 0.12%)</title><rect x="655.2" y="387.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="658.2" y="398.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.02%)</title><rect x="655.7" y="371.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="658.7" y="382.0"></text>
</g>
<g>
<title>timestamp_truncate (5 samples, 0.06%)</title><rect x="656.0" y="371.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="659.0" y="382.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.02%)</title><rect x="656.7" y="387.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="659.7" y="398.0"></text>
</g>
<g>
<title>iov_iter_init (3 samples, 0.03%)</title><rect x="657.2" y="451.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="660.2" y="462.0"></text>
</g>
<g>
<title>fsnotify (22 samples, 0.24%)</title><rect x="657.6" y="483.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="660.6" y="494.0"></text>
</g>
<g>
<title>rw_verify_area (96 samples, 1.07%)</title><rect x="660.5" y="483.0" width="12.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="663.5" y="494.0"></text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.04%)</title><rect x="661.0" y="467.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="664.0" y="478.0"></text>
</g>
<g>
<title>apparmor_file_permission (11 samples, 0.12%)</title><rect x="661.5" y="467.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="664.5" y="478.0"></text>
</g>
<g>
<title>security_file_permission (76 samples, 0.85%)</title><rect x="663.1" y="467.0" width="10.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="666.1" y="478.0"></text>
</g>
<g>
<title>__fsnotify_parent (7 samples, 0.08%)</title><rect x="664.8" y="451.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="667.8" y="462.0"></text>
</g>
<g>
<title>apparmor_file_permission (25 samples, 0.28%)</title><rect x="665.7" y="451.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="668.7" y="462.0"></text>
</g>
<g>
<title>common_file_perm (24 samples, 0.27%)</title><rect x="665.9" y="435.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="668.9" y="446.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.02%)</title><rect x="668.8" y="419.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="671.8" y="430.0"></text>
</g>
<g>
<title>common_file_perm (6 samples, 0.07%)</title><rect x="669.0" y="451.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="672.0" y="462.0"></text>
</g>
<g>
<title>fsnotify (25 samples, 0.28%)</title><rect x="669.8" y="451.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="672.8" y="462.0"></text>
</g>
<g>
<title>convertReturnVal (2 samples, 0.02%)</title><rect x="673.1" y="595.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="676.1" y="606.0"></text>
</g>
<g>
<title>fdval (5 samples, 0.06%)</title><rect x="673.3" y="595.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="676.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (44 samples, 0.49%)</title><rect x="674.1" y="643.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.1" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (33 samples, 0.37%)</title><rect x="674.4" y="627.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="677.4" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.02%)</title><rect x="676.4" y="611.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.4" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (2 samples, 0.02%)</title><rect x="676.6" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.6" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.03%)</title><rect x="676.9" y="611.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.9" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (3 samples, 0.03%)</title><rect x="676.9" y="595.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="679.9" y="606.0"></text>
</g>
<g>
<title>vtable stub (11 samples, 0.12%)</title><rect x="677.3" y="611.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="680.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (9 samples, 0.10%)</title><rect x="678.7" y="627.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="681.7" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (27 samples, 0.30%)</title><rect x="679.9" y="643.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="682.9" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (27 samples, 0.30%)</title><rect x="679.9" y="627.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.9" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.02%)</title><rect x="681.2" y="611.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="684.2" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (7 samples, 0.08%)</title><rect x="681.5" y="611.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="684.5" y="622.0"></text>
</g>
<g>
<title>vtable stub (7 samples, 0.08%)</title><rect x="682.5" y="611.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="685.5" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (100 samples, 1.11%)</title><rect x="683.5" y="659.0" width="13.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.5" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.11%)</title><rect x="692.7" y="643.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="695.7" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (10 samples, 0.11%)</title><rect x="692.7" y="627.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="695.7" y="638.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (2 samples, 0.02%)</title><rect x="692.7" y="611.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="695.7" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.08%)</title><rect x="692.9" y="611.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="695.9" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (5 samples, 0.06%)</title><rect x="693.0" y="595.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="696.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (20 samples, 0.22%)</title><rect x="694.0" y="643.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (7 samples, 0.08%)</title><rect x="696.6" y="659.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="699.6" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.08%)</title><rect x="696.6" y="643.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="699.6" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.06%)</title><rect x="696.9" y="627.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="699.9" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.04%)</title><rect x="697.0" y="611.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="700.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getIntFrom (1,361 samples, 15.15%)</title><rect x="697.5" y="707.0" width="178.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="700.5" y="718.0">ru/mail/polis/dao/alexa..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (60 samples, 0.67%)</title><rect x="697.8" y="691.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="700.8" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="697.8" y="675.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="700.8" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.02%)</title><rect x="697.8" y="659.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="700.8" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.02%)</title><rect x="697.8" y="643.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="700.8" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="697.8" y="627.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="700.8" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (58 samples, 0.65%)</title><rect x="698.0" y="675.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="701.0" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.02%)</title><rect x="698.2" y="659.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="701.2" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.02%)</title><rect x="698.2" y="643.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="701.2" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="698.2" y="627.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="701.2" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="698.2" y="611.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="701.2" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="698.2" y="595.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="701.2" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (55 samples, 0.61%)</title><rect x="698.4" y="659.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="701.4" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (22 samples, 0.24%)</title><rect x="702.5" y="643.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.5" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.06%)</title><rect x="702.8" y="627.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.8" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.06%)</title><rect x="702.8" y="611.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.8" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.03%)</title><rect x="703.0" y="595.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="706.0" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (15 samples, 0.17%)</title><rect x="703.4" y="627.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="706.4" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (15 samples, 0.17%)</title><rect x="703.4" y="611.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="706.4" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.02%)</title><rect x="705.0" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.0" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (3 samples, 0.03%)</title><rect x="705.8" y="691.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (3 samples, 0.03%)</title><rect x="705.8" y="675.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (2 samples, 0.02%)</title><rect x="705.9" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.9" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,295 samples, 14.41%)</title><rect x="706.2" y="691.0" width="170.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.2" y="702.0">sun/nio/ch/FileChannel..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,295 samples, 14.41%)</title><rect x="706.2" y="675.0" width="170.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="709.2" y="686.0">sun/nio/ch/FileChannel..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (82 samples, 0.91%)</title><rect x="710.0" y="659.0" width="10.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="713.0" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (81 samples, 0.90%)</title><rect x="710.1" y="643.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="713.1" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (13 samples, 0.14%)</title><rect x="716.3" y="627.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="719.3" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.02%)</title><rect x="717.7" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.7" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (21 samples, 0.23%)</title><rect x="718.0" y="627.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="721.0" y="638.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (16 samples, 0.18%)</title><rect x="718.7" y="611.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="721.7" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (16 samples, 0.18%)</title><rect x="718.7" y="595.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="721.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1,087 samples, 12.10%)</title><rect x="720.8" y="659.0" width="142.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="723.8" y="670.0">sun/nio/ch/IOUtil...</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (151 samples, 1.68%)</title><rect x="721.5" y="643.0" width="19.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="724.5" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (7 samples, 0.08%)</title><rect x="728.1" y="627.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.1" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (93 samples, 1.04%)</title><rect x="729.0" y="627.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (52 samples, 0.58%)</title><rect x="734.4" y="611.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="737.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (49 samples, 0.55%)</title><rect x="734.8" y="595.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="737.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (49 samples, 0.55%)</title><rect x="734.8" y="579.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="737.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (7 samples, 0.08%)</title><rect x="734.9" y="563.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="737.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (41 samples, 0.46%)</title><rect x="735.9" y="563.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="738.9" y="574.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (24 samples, 0.27%)</title><rect x="738.1" y="547.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="741.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (860 samples, 9.57%)</title><rect x="741.4" y="643.0" width="112.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="744.4" y="654.0">sun/nio/ch/IOU..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (856 samples, 9.53%)</title><rect x="741.9" y="627.0" width="112.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.9" y="638.0">sun/nio/ch/Fil..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (856 samples, 9.53%)</title><rect x="741.9" y="611.0" width="112.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="744.9" y="622.0">sun/nio/ch/Fil..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (14 samples, 0.16%)</title><rect x="747.7" y="595.0" width="1.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="750.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (792 samples, 8.81%)</title><rect x="749.5" y="595.0" width="104.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="752.5" y="606.0">[unknown]</text>
</g>
<g>
<title>__libc_disable_asynccancel (15 samples, 0.17%)</title><rect x="749.5" y="579.0" width="2.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="752.5" y="590.0"></text>
</g>
<g>
<title>pread64 (776 samples, 8.64%)</title><rect x="751.6" y="579.0" width="101.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="754.6" y="590.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (719 samples, 8.00%)</title><rect x="759.1" y="563.0" width="94.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="762.1" y="574.0">entry_SYSCA..</text>
</g>
<g>
<title>__x64_sys_pread64 (17 samples, 0.19%)</title><rect x="759.1" y="547.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="762.1" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (702 samples, 7.81%)</title><rect x="761.3" y="547.0" width="92.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="764.3" y="558.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (639 samples, 7.11%)</title><rect x="769.5" y="531.0" width="83.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="772.5" y="542.0">__x64_sys..</text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="769.6" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="772.6" y="526.0"></text>
</g>
<g>
<title>ksys_pread64 (635 samples, 7.07%)</title><rect x="770.0" y="515.0" width="83.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="773.0" y="526.0">ksys_prea..</text>
</g>
<g>
<title>__fdget (62 samples, 0.69%)</title><rect x="770.3" y="499.0" width="8.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="773.3" y="510.0"></text>
</g>
<g>
<title>__fget_light (62 samples, 0.69%)</title><rect x="770.3" y="483.0" width="8.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="773.3" y="494.0"></text>
</g>
<g>
<title>__fget (55 samples, 0.61%)</title><rect x="771.2" y="467.0" width="7.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="774.2" y="478.0"></text>
</g>
<g>
<title>__fsnotify_parent (6 samples, 0.07%)</title><rect x="778.5" y="499.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="781.5" y="510.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.03%)</title><rect x="779.3" y="499.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="782.3" y="510.0"></text>
</g>
<g>
<title>fput (9 samples, 0.10%)</title><rect x="779.7" y="499.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="782.7" y="510.0"></text>
</g>
<g>
<title>fput_many (9 samples, 0.10%)</title><rect x="779.7" y="483.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="782.7" y="494.0"></text>
</g>
<g>
<title>vfs_read (549 samples, 6.11%)</title><rect x="781.3" y="499.0" width="72.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="784.3" y="510.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (6 samples, 0.07%)</title><rect x="784.1" y="483.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="787.1" y="494.0"></text>
</g>
<g>
<title>__vfs_read (394 samples, 4.39%)</title><rect x="784.8" y="483.0" width="51.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="787.8" y="494.0">__vfs..</text>
</g>
<g>
<title>ext4_file_read_iter (12 samples, 0.13%)</title><rect x="785.1" y="467.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="788.1" y="478.0"></text>
</g>
<g>
<title>new_sync_read (380 samples, 4.23%)</title><rect x="786.7" y="467.0" width="49.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="789.7" y="478.0">new_s..</text>
</g>
<g>
<title>ext4_file_read_iter (355 samples, 3.95%)</title><rect x="789.6" y="451.0" width="46.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="792.6" y="462.0">ext4..</text>
</g>
<g>
<title>generic_file_read_iter (326 samples, 3.63%)</title><rect x="793.0" y="435.0" width="42.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="796.0" y="446.0">gene..</text>
</g>
<g>
<title>_cond_resched (6 samples, 0.07%)</title><rect x="800.3" y="419.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="803.3" y="430.0"></text>
</g>
<g>
<title>rcu_all_qs (4 samples, 0.04%)</title><rect x="800.6" y="403.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="803.6" y="414.0"></text>
</g>
<g>
<title>atime_needs_update (3 samples, 0.03%)</title><rect x="801.1" y="419.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="804.1" y="430.0"></text>
</g>
<g>
<title>copy_page_to_iter (101 samples, 1.12%)</title><rect x="801.5" y="419.0" width="13.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="804.5" y="430.0"></text>
</g>
<g>
<title>_cond_resched (5 samples, 0.06%)</title><rect x="804.3" y="403.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="807.3" y="414.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.03%)</title><rect x="804.5" y="387.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="807.5" y="398.0"></text>
</g>
<g>
<title>copy_user_generic_string (74 samples, 0.82%)</title><rect x="804.9" y="403.0" width="9.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="807.9" y="414.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.02%)</title><rect x="814.8" y="419.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="817.8" y="430.0"></text>
</g>
<g>
<title>mark_page_accessed (6 samples, 0.07%)</title><rect x="815.1" y="419.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="818.1" y="430.0"></text>
</g>
<g>
<title>pagecache_get_page (110 samples, 1.22%)</title><rect x="815.8" y="419.0" width="14.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="818.8" y="430.0"></text>
</g>
<g>
<title>find_get_entry (105 samples, 1.17%)</title><rect x="816.2" y="403.0" width="13.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="819.2" y="414.0"></text>
</g>
<g>
<title>xas_load (32 samples, 0.36%)</title><rect x="825.6" y="387.0" width="4.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="828.6" y="398.0"></text>
</g>
<g>
<title>xas_start (6 samples, 0.07%)</title><rect x="829.0" y="371.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="832.0" y="382.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.02%)</title><rect x="829.8" y="387.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="832.8" y="398.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.02%)</title><rect x="830.0" y="403.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="833.0" y="414.0"></text>
</g>
<g>
<title>touch_atime (41 samples, 0.46%)</title><rect x="830.4" y="419.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="833.4" y="430.0"></text>
</g>
<g>
<title>atime_needs_update (19 samples, 0.21%)</title><rect x="833.3" y="403.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="836.3" y="414.0"></text>
</g>
<g>
<title>current_time (7 samples, 0.08%)</title><rect x="834.0" y="387.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="837.0" y="398.0"></text>
</g>
<g>
<title>timestamp_truncate (3 samples, 0.03%)</title><rect x="834.5" y="371.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="837.5" y="382.0"></text>
</g>
<g>
<title>timestamp_truncate (6 samples, 0.07%)</title><rect x="835.0" y="387.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="838.0" y="398.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.02%)</title><rect x="835.8" y="435.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="838.8" y="446.0"></text>
</g>
<g>
<title>iov_iter_init (3 samples, 0.03%)</title><rect x="836.2" y="451.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="839.2" y="462.0"></text>
</g>
<g>
<title>fsnotify (23 samples, 0.26%)</title><rect x="836.6" y="483.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="839.6" y="494.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.03%)</title><rect x="839.6" y="483.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="842.6" y="494.0"></text>
</g>
<g>
<title>rw_verify_area (102 samples, 1.14%)</title><rect x="840.0" y="483.0" width="13.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="843.0" y="494.0"></text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.06%)</title><rect x="840.7" y="467.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="843.7" y="478.0"></text>
</g>
<g>
<title>apparmor_file_permission (20 samples, 0.22%)</title><rect x="841.5" y="467.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="844.5" y="478.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.04%)</title><rect x="844.1" y="467.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="847.1" y="478.0"></text>
</g>
<g>
<title>security_file_permission (67 samples, 0.75%)</title><rect x="844.6" y="467.0" width="8.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="847.6" y="478.0"></text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.06%)</title><rect x="846.3" y="451.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="849.3" y="462.0"></text>
</g>
<g>
<title>apparmor_file_permission (17 samples, 0.19%)</title><rect x="847.0" y="451.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="850.0" y="462.0"></text>
</g>
<g>
<title>common_file_perm (17 samples, 0.19%)</title><rect x="847.0" y="435.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="850.0" y="446.0"></text>
</g>
<g>
<title>aa_file_perm (4 samples, 0.04%)</title><rect x="848.7" y="419.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="851.7" y="430.0"></text>
</g>
<g>
<title>common_file_perm (8 samples, 0.09%)</title><rect x="849.2" y="451.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="852.2" y="462.0"></text>
</g>
<g>
<title>fsnotify (24 samples, 0.27%)</title><rect x="850.2" y="451.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="853.2" y="462.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.03%)</title><rect x="853.7" y="595.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="856.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (38 samples, 0.42%)</title><rect x="854.3" y="643.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="857.3" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (33 samples, 0.37%)</title><rect x="854.3" y="627.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="857.3" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.02%)</title><rect x="857.2" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="860.2" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.02%)</title><rect x="857.2" y="595.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="860.2" y="606.0"></text>
</g>
<g>
<title>vtable stub (9 samples, 0.10%)</title><rect x="857.5" y="611.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="860.5" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (5 samples, 0.06%)</title><rect x="858.7" y="627.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="861.7" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (32 samples, 0.36%)</title><rect x="859.3" y="643.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="862.3" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (32 samples, 0.36%)</title><rect x="859.3" y="627.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="862.3" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.02%)</title><rect x="861.0" y="611.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="864.0" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (7 samples, 0.08%)</title><rect x="861.3" y="611.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="864.3" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.02%)</title><rect x="862.2" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.2" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.02%)</title><rect x="862.2" y="595.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.2" y="606.0"></text>
</g>
<g>
<title>vtable stub (8 samples, 0.09%)</title><rect x="862.5" y="611.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="865.5" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (88 samples, 0.98%)</title><rect x="863.5" y="659.0" width="11.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="866.5" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (9 samples, 0.10%)</title><rect x="870.6" y="643.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="873.6" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (8 samples, 0.09%)</title><rect x="870.7" y="627.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="873.7" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.08%)</title><rect x="870.9" y="611.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="873.9" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (5 samples, 0.06%)</title><rect x="871.1" y="595.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="874.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (25 samples, 0.28%)</title><rect x="871.8" y="643.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="874.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (9 samples, 0.10%)</title><rect x="875.1" y="659.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="878.1" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.09%)</title><rect x="875.2" y="643.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="878.2" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (8 samples, 0.09%)</title><rect x="875.2" y="627.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="878.2" y="638.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (2 samples, 0.02%)</title><rect x="875.3" y="611.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="878.3" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.04%)</title><rect x="875.7" y="611.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="878.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alexander/marashov/SSTable.getOffset (1,462 samples, 16.27%)</title><rect x="876.3" y="707.0" width="192.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="879.3" y="718.0">ru/mail/polis/dao/alexand..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (104 samples, 1.16%)</title><rect x="877.0" y="691.0" width="13.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="880.0" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.04%)</title><rect x="878.2" y="675.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="881.2" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.04%)</title><rect x="878.2" y="659.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="881.2" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.04%)</title><rect x="878.2" y="643.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="881.2" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="878.2" y="627.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="881.2" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (91 samples, 1.01%)</title><rect x="878.7" y="675.0" width="12.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="881.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (83 samples, 0.92%)</title><rect x="879.8" y="659.0" width="10.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="882.8" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (2 samples, 0.02%)</title><rect x="890.7" y="691.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="893.7" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,350 samples, 15.03%)</title><rect x="891.0" y="691.0" width="177.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="894.0" y="702.0">sun/nio/ch/FileChannelI..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,347 samples, 14.99%)</title><rect x="891.4" y="675.0" width="176.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="894.4" y="686.0">sun/nio/ch/FileChannelI..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.03%)</title><rect x="897.1" y="659.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="900.1" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.03%)</title><rect x="897.1" y="643.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="900.1" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (3 samples, 0.03%)</title><rect x="897.1" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="900.1" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (3 samples, 0.03%)</title><rect x="897.5" y="659.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="900.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (9 samples, 0.10%)</title><rect x="897.9" y="659.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="900.9" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (8 samples, 0.09%)</title><rect x="898.1" y="643.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.1" y="654.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (7 samples, 0.08%)</title><rect x="898.2" y="627.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="901.2" y="638.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (7 samples, 0.08%)</title><rect x="898.2" y="611.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="901.2" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (7 samples, 0.08%)</title><rect x="898.2" y="595.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="901.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (8 samples, 0.09%)</title><rect x="899.1" y="659.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="902.1" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (7 samples, 0.08%)</title><rect x="899.2" y="643.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1,118 samples, 12.44%)</title><rect x="900.2" y="659.0" width="146.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="903.2" y="670.0">sun/nio/ch/IOUtil...</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (33 samples, 0.37%)</title><rect x="905.5" y="643.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="908.5" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.03%)</title><rect x="905.5" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="908.5" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.03%)</title><rect x="905.5" y="611.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="908.5" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (30 samples, 0.33%)</title><rect x="905.9" y="627.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="908.9" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (29 samples, 0.32%)</title><rect x="906.1" y="611.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="909.1" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (10 samples, 0.11%)</title><rect x="908.6" y="595.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="911.6" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (5 samples, 0.06%)</title><rect x="908.6" y="579.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="911.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (5 samples, 0.06%)</title><rect x="909.2" y="579.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="912.2" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (2 samples, 0.02%)</title><rect x="909.9" y="643.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="912.9" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (2 samples, 0.02%)</title><rect x="909.9" y="627.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="912.9" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (2 samples, 0.02%)</title><rect x="909.9" y="611.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="912.9" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.flip (2 samples, 0.02%)</title><rect x="909.9" y="595.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="912.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (928 samples, 10.33%)</title><rect x="910.1" y="643.0" width="121.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="913.1" y="654.0">sun/nio/ch/IOUt..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (910 samples, 10.13%)</title><rect x="912.4" y="627.0" width="119.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="915.4" y="638.0">sun/nio/ch/File..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (910 samples, 10.13%)</title><rect x="912.4" y="611.0" width="119.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="915.4" y="622.0">sun/nio/ch/File..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (10 samples, 0.11%)</title><rect x="919.2" y="595.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="922.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (828 samples, 9.22%)</title><rect x="920.5" y="595.0" width="108.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="923.5" y="606.0">[unknown]</text>
</g>
<g>
<title>__libc_disable_asynccancel (9 samples, 0.10%)</title><rect x="920.5" y="579.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="923.5" y="590.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (6 samples, 0.07%)</title><rect x="921.7" y="579.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="924.7" y="590.0"></text>
</g>
<g>
<title>pread64 (813 samples, 9.05%)</title><rect x="922.5" y="579.0" width="106.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="925.5" y="590.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (730 samples, 8.12%)</title><rect x="933.4" y="563.0" width="95.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="936.4" y="574.0">entry_SYSCA..</text>
</g>
<g>
<title>__x64_sys_pread64 (21 samples, 0.23%)</title><rect x="933.4" y="547.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="936.4" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (708 samples, 7.88%)</title><rect x="936.3" y="547.0" width="93.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="939.3" y="558.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (650 samples, 7.23%)</title><rect x="943.9" y="531.0" width="85.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="946.9" y="542.0">__x64_sys_..</text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="944.0" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="947.0" y="526.0"></text>
</g>
<g>
<title>ksys_pread64 (647 samples, 7.20%)</title><rect x="944.3" y="515.0" width="85.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="947.3" y="526.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (81 samples, 0.90%)</title><rect x="944.5" y="499.0" width="10.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="947.5" y="510.0"></text>
</g>
<g>
<title>__fget_light (80 samples, 0.89%)</title><rect x="944.7" y="483.0" width="10.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="947.7" y="494.0"></text>
</g>
<g>
<title>__fget (74 samples, 0.82%)</title><rect x="945.5" y="467.0" width="9.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="948.5" y="478.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.06%)</title><rect x="955.2" y="499.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="958.2" y="510.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.02%)</title><rect x="955.8" y="499.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="958.8" y="510.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="956.1" y="499.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="959.1" y="510.0"></text>
</g>
<g>
<title>fput (15 samples, 0.17%)</title><rect x="956.4" y="499.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="959.4" y="510.0"></text>
</g>
<g>
<title>fput_many (15 samples, 0.17%)</title><rect x="956.4" y="483.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="959.4" y="494.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="958.5" y="499.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="961.5" y="510.0"></text>
</g>
<g>
<title>vfs_read (536 samples, 5.97%)</title><rect x="958.9" y="499.0" width="70.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="961.9" y="510.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.06%)</title><rect x="960.3" y="483.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="963.3" y="494.0"></text>
</g>
<g>
<title>__vfs_read (393 samples, 4.37%)</title><rect x="961.0" y="483.0" width="51.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="964.0" y="494.0">__vfs..</text>
</g>
<g>
<title>ext4_file_read_iter (19 samples, 0.21%)</title><rect x="961.5" y="467.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="964.5" y="478.0"></text>
</g>
<g>
<title>new_sync_read (370 samples, 4.12%)</title><rect x="964.0" y="467.0" width="48.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="967.0" y="478.0">new_..</text>
</g>
<g>
<title>ext4_file_read_iter (344 samples, 3.83%)</title><rect x="966.7" y="451.0" width="45.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="969.7" y="462.0">ext4..</text>
</g>
<g>
<title>generic_file_read_iter (319 samples, 3.55%)</title><rect x="969.8" y="435.0" width="41.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="972.8" y="446.0">gen..</text>
</g>
<g>
<title>_cond_resched (5 samples, 0.06%)</title><rect x="980.0" y="419.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="983.0" y="430.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.03%)</title><rect x="980.3" y="403.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="983.3" y="414.0"></text>
</g>
<g>
<title>atime_needs_update (6 samples, 0.07%)</title><rect x="980.7" y="419.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="983.7" y="430.0"></text>
</g>
<g>
<title>copy_page_to_iter (83 samples, 0.92%)</title><rect x="981.4" y="419.0" width="10.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="984.4" y="430.0"></text>
</g>
<g>
<title>_cond_resched (5 samples, 0.06%)</title><rect x="983.0" y="403.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="986.0" y="414.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.03%)</title><rect x="983.3" y="387.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="986.3" y="398.0"></text>
</g>
<g>
<title>copy_user_generic_string (63 samples, 0.70%)</title><rect x="983.7" y="403.0" width="8.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="986.7" y="414.0"></text>
</g>
<g>
<title>copyout (3 samples, 0.03%)</title><rect x="992.0" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="995.0" y="414.0"></text>
</g>
<g>
<title>mark_page_accessed (5 samples, 0.06%)</title><rect x="992.3" y="419.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="995.3" y="430.0"></text>
</g>
<g>
<title>pagecache_get_page (103 samples, 1.15%)</title><rect x="993.0" y="419.0" width="13.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="996.0" y="430.0"></text>
</g>
<g>
<title>find_get_entry (99 samples, 1.10%)</title><rect x="993.5" y="403.0" width="13.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="996.5" y="414.0"></text>
</g>
<g>
<title>xas_load (41 samples, 0.46%)</title><rect x="1000.8" y="387.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1003.8" y="398.0"></text>
</g>
<g>
<title>xas_start (6 samples, 0.07%)</title><rect x="1005.4" y="371.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1008.4" y="382.0"></text>
</g>
<g>
<title>xas_start (3 samples, 0.03%)</title><rect x="1006.1" y="387.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1009.1" y="398.0"></text>
</g>
<g>
<title>touch_atime (39 samples, 0.43%)</title><rect x="1006.5" y="419.0" width="5.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1009.5" y="430.0"></text>
</g>
<g>
<title>atime_needs_update (20 samples, 0.22%)</title><rect x="1008.9" y="403.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1011.9" y="414.0"></text>
</g>
<g>
<title>current_time (15 samples, 0.17%)</title><rect x="1009.2" y="387.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1012.2" y="398.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (4 samples, 0.04%)</title><rect x="1009.7" y="371.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1012.7" y="382.0"></text>
</g>
<g>
<title>timestamp_truncate (7 samples, 0.08%)</title><rect x="1010.2" y="371.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1013.2" y="382.0"></text>
</g>
<g>
<title>timestamp_truncate (3 samples, 0.03%)</title><rect x="1011.1" y="387.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1014.1" y="398.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.02%)</title><rect x="1011.7" y="435.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1014.7" y="446.0"></text>
</g>
<g>
<title>iov_iter_init (5 samples, 0.06%)</title><rect x="1011.9" y="451.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1014.9" y="462.0"></text>
</g>
<g>
<title>fsnotify (18 samples, 0.20%)</title><rect x="1012.6" y="483.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1015.6" y="494.0"></text>
</g>
<g>
<title>rw_verify_area (108 samples, 1.20%)</title><rect x="1015.1" y="483.0" width="14.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1018.1" y="494.0"></text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.04%)</title><rect x="1016.0" y="467.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1019.0" y="478.0"></text>
</g>
<g>
<title>apparmor_file_permission (14 samples, 0.16%)</title><rect x="1016.5" y="467.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1019.5" y="478.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="1018.4" y="467.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1021.4" y="478.0"></text>
</g>
<g>
<title>security_file_permission (81 samples, 0.90%)</title><rect x="1018.6" y="467.0" width="10.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1021.6" y="478.0"></text>
</g>
<g>
<title>__fsnotify_parent (6 samples, 0.07%)</title><rect x="1020.3" y="451.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1023.3" y="462.0"></text>
</g>
<g>
<title>apparmor_file_permission (34 samples, 0.38%)</title><rect x="1021.1" y="451.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1024.1" y="462.0"></text>
</g>
<g>
<title>common_file_perm (33 samples, 0.37%)</title><rect x="1021.2" y="435.0" width="4.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1024.2" y="446.0"></text>
</g>
<g>
<title>aa_file_perm (6 samples, 0.07%)</title><rect x="1024.8" y="419.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1027.8" y="430.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.04%)</title><rect x="1025.6" y="451.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1028.6" y="462.0"></text>
</g>
<g>
<title>fsnotify (24 samples, 0.27%)</title><rect x="1026.1" y="451.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1029.1" y="462.0"></text>
</g>
<g>
<title>fdval (11 samples, 0.12%)</title><rect x="1029.4" y="595.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1032.4" y="606.0"></text>
</g>
<g>
<title>pread64 (8 samples, 0.09%)</title><rect x="1030.8" y="595.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1033.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (59 samples, 0.66%)</title><rect x="1032.0" y="643.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1035.0" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (34 samples, 0.38%)</title><rect x="1032.3" y="627.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1035.3" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (6 samples, 0.07%)</title><rect x="1034.9" y="611.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1037.9" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.02%)</title><rect x="1035.7" y="611.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1038.7" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.02%)</title><rect x="1035.7" y="595.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1038.7" y="606.0"></text>
</g>
<g>
<title>vtable stub (6 samples, 0.07%)</title><rect x="1035.9" y="611.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1038.9" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (23 samples, 0.26%)</title><rect x="1036.7" y="627.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1039.7" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (7 samples, 0.08%)</title><rect x="1038.7" y="611.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1041.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (55 samples, 0.61%)</title><rect x="1039.8" y="643.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1042.8" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (34 samples, 0.38%)</title><rect x="1040.0" y="627.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1043.0" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.02%)</title><rect x="1041.5" y="611.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1044.5" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (5 samples, 0.06%)</title><rect x="1041.7" y="611.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1044.7" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.02%)</title><rect x="1042.4" y="611.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1045.4" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.02%)</title><rect x="1042.4" y="595.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1045.4" y="606.0"></text>
</g>
<g>
<title>vtable stub (14 samples, 0.16%)</title><rect x="1042.6" y="611.0" width="1.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1045.6" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (19 samples, 0.21%)</title><rect x="1044.5" y="627.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1047.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (93 samples, 1.04%)</title><rect x="1047.0" y="659.0" width="12.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1050.0" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.06%)</title><rect x="1056.0" y="643.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1059.0" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.04%)</title><rect x="1056.2" y="627.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1059.2" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.04%)</title><rect x="1056.2" y="611.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1059.2" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.02%)</title><rect x="1056.4" y="595.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1059.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (19 samples, 0.21%)</title><rect x="1056.7" y="643.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1059.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (68 samples, 0.76%)</title><rect x="1059.2" y="659.0" width="8.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1062.2" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.07%)</title><rect x="1067.3" y="643.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1070.3" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.07%)</title><rect x="1067.3" y="627.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1070.3" y="638.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (2 samples, 0.02%)</title><rect x="1067.3" y="611.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1070.3" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.04%)</title><rect x="1067.6" y="611.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1070.6" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.02%)</title><rect x="1068.3" y="771.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1071.3" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.02%)</title><rect x="1068.3" y="755.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1071.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValueSerializer.serialize (28 samples, 0.31%)</title><rect x="1068.5" y="803.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1071.5" y="814.0"></text>
</g>
<g>
<title>one/nio/serial/CalcSizeStream.writeObject (23 samples, 0.26%)</title><rect x="1068.8" y="787.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1071.8" y="798.0"></text>
</g>
<g>
<title>one/nio/serial/GeneratedSerializer.calcSize (20 samples, 0.22%)</title><rect x="1068.8" y="771.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1071.8" y="782.0"></text>
</g>
<g>
<title>sun/reflect/Delegate0_SerializableValue.calcSize (19 samples, 0.21%)</title><rect x="1068.9" y="755.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1071.9" y="766.0"></text>
</g>
<g>
<title>one/nio/serial/CalcSizeStream.writeObject (19 samples, 0.21%)</title><rect x="1068.9" y="739.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1071.9" y="750.0"></text>
</g>
<g>
<title>one/nio/serial/SerializationContext.put (18 samples, 0.20%)</title><rect x="1069.0" y="723.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1072.0" y="734.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (5 samples, 0.06%)</title><rect x="1069.3" y="707.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1072.3" y="718.0"></text>
</g>
<g>
<title>one/nio/serial/SerializationContext.init (11 samples, 0.12%)</title><rect x="1070.0" y="707.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1073.0" y="718.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (7 samples, 0.08%)</title><rect x="1070.5" y="691.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1073.5" y="702.0"></text>
</g>
<g>
<title>JVM_IHashCode (5 samples, 0.06%)</title><rect x="1070.5" y="675.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1073.5" y="686.0"></text>
</g>
<g>
<title>one/nio/serial/Repository.get (3 samples, 0.03%)</title><rect x="1071.4" y="771.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1074.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.03%)</title><rect x="1071.4" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1074.4" y="766.0"></text>
</g>
<g>
<title>one/nio/serial/SerializeStream.writeObject (3 samples, 0.03%)</title><rect x="1071.8" y="787.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1074.8" y="798.0"></text>
</g>
<g>
<title>one/nio/serial/GeneratedSerializer.write (3 samples, 0.03%)</title><rect x="1071.8" y="771.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1074.8" y="782.0"></text>
</g>
<g>
<title>sun/reflect/Delegate0_SerializableValue.write (3 samples, 0.03%)</title><rect x="1071.8" y="755.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1074.8" y="766.0"></text>
</g>
<g>
<title>one/nio/serial/SerializeStream.writeObject (3 samples, 0.03%)</title><rect x="1071.8" y="739.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1074.8" y="750.0"></text>
</g>
<g>
<title>one/nio/serial/Repository.get (2 samples, 0.02%)</title><rect x="1071.8" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1074.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ResponseManager.iterateOverNodes (29 samples, 0.32%)</title><rect x="1072.2" y="819.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1075.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (29 samples, 0.32%)</title><rect x="1072.2" y="803.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1075.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (28 samples, 0.31%)</title><rect x="1072.2" y="787.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1075.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (4 samples, 0.04%)</title><rect x="1072.2" y="771.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1075.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.04%)</title><rect x="1072.2" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1075.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.04%)</title><rect x="1072.2" y="739.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1075.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.04%)</title><rect x="1072.2" y="723.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1075.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.02%)</title><rect x="1072.7" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1075.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.02%)</title><rect x="1072.7" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1075.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (22 samples, 0.24%)</title><rect x="1073.0" y="771.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (22 samples, 0.24%)</title><rect x="1073.0" y="755.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1076.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (22 samples, 0.24%)</title><rect x="1073.0" y="739.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1076.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (22 samples, 0.24%)</title><rect x="1073.0" y="723.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1076.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (22 samples, 0.24%)</title><rect x="1073.0" y="707.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1076.0" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.02%)</title><rect x="1073.2" y="691.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1076.2" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (18 samples, 0.20%)</title><rect x="1073.5" y="691.0" width="2.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1076.5" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.19%)</title><rect x="1073.6" y="675.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1076.6" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.19%)</title><rect x="1073.6" y="659.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1076.6" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.18%)</title><rect x="1073.8" y="643.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1076.8" y="654.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.18%)</title><rect x="1073.8" y="627.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1076.8" y="638.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.17%)</title><rect x="1073.9" y="611.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1076.9" y="622.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.03%)</title><rect x="1073.9" y="595.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1076.9" y="606.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.13%)</title><rect x="1074.3" y="595.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1077.3" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.13%)</title><rect x="1074.3" y="579.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1077.3" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.13%)</title><rect x="1074.3" y="563.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1077.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValueSerializer.serialize (2 samples, 0.02%)</title><rect x="1076.0" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1079.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.await (37 samples, 0.41%)</title><rect x="1076.3" y="819.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1079.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (36 samples, 0.40%)</title><rect x="1076.4" y="803.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1079.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (31 samples, 0.35%)</title><rect x="1076.9" y="787.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1079.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (31 samples, 0.35%)</title><rect x="1076.9" y="771.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1079.9" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (13 samples, 0.14%)</title><rect x="1076.9" y="755.0" width="1.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1079.9" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.03%)</title><rect x="1077.6" y="739.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1080.6" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.02%)</title><rect x="1078.1" y="739.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1081.1" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.02%)</title><rect x="1078.4" y="739.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1081.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="1078.6" y="755.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1081.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="1078.6" y="739.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1081.6" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.02%)</title><rect x="1078.6" y="723.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1081.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="1078.6" y="707.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1081.6" y="718.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.02%)</title><rect x="1078.6" y="691.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1081.6" y="702.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.02%)</title><rect x="1078.6" y="675.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1081.6" y="686.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="1078.6" y="659.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1081.6" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (11 samples, 0.12%)</title><rect x="1079.0" y="755.0" width="1.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1082.0" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.11%)</title><rect x="1079.2" y="739.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1082.2" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.11%)</title><rect x="1079.2" y="723.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1082.2" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.11%)</title><rect x="1079.2" y="707.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1082.2" y="718.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.07%)</title><rect x="1079.3" y="691.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1082.3" y="702.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.07%)</title><rect x="1079.3" y="675.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1082.3" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 0.06%)</title><rect x="1079.3" y="659.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1082.3" y="670.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (4 samples, 0.04%)</title><rect x="1079.3" y="643.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1082.3" y="654.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (4 samples, 0.04%)</title><rect x="1079.3" y="627.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1082.3" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.04%)</title><rect x="1079.3" y="611.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1082.3" y="622.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.03%)</title><rect x="1080.5" y="755.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1083.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.getResult (5 samples, 0.06%)</title><rect x="1081.1" y="819.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1084.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzerGet.privateGetResult (3 samples, 0.03%)</title><rect x="1081.4" y="803.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1084.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzerGet.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1081.8" y="819.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1084.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/analyzers/ResponseAnalyzer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1081.8" y="803.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1084.8" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primariesFor (3 samples, 0.03%)</title><rect x="1082.0" y="819.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1085.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/topologies/RendezvousTopology.primariesFor (3 samples, 0.03%)</title><rect x="1082.0" y="803.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1085.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.trySendAnswer (389 samples, 4.33%)</title><rect x="1082.4" y="835.0" width="51.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1085.4" y="846.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (388 samples, 4.32%)</title><rect x="1082.6" y="819.0" width="50.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1085.6" y="830.0">one/n..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.02%)</title><rect x="1084.1" y="803.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1087.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.02%)</title><rect x="1084.1" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1087.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.02%)</title><rect x="1084.1" y="771.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1087.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (374 samples, 4.16%)</title><rect x="1084.4" y="803.0" width="49.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1087.4" y="814.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 0.12%)</title><rect x="1084.4" y="787.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1087.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1084.8" y="771.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1087.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.07%)</title><rect x="1085.1" y="771.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1088.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (6 samples, 0.07%)</title><rect x="1085.1" y="755.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1088.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.07%)</title><rect x="1085.1" y="739.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1088.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (363 samples, 4.04%)</title><rect x="1085.9" y="787.0" width="47.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1088.9" y="798.0">one/..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.03%)</title><rect x="1085.9" y="771.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1088.9" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.02%)</title><rect x="1086.0" y="755.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1089.0" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.02%)</title><rect x="1086.0" y="739.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1089.0" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="1086.0" y="723.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1089.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (360 samples, 4.01%)</title><rect x="1086.2" y="771.0" width="47.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1089.2" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (353 samples, 3.93%)</title><rect x="1087.2" y="755.0" width="46.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1090.2" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (350 samples, 3.90%)</title><rect x="1087.6" y="739.0" width="45.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1090.6" y="750.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (9 samples, 0.10%)</title><rect x="1088.0" y="723.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1091.0" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.02%)</title><rect x="1088.4" y="707.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1091.4" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (2 samples, 0.02%)</title><rect x="1088.6" y="707.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1091.6" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.02%)</title><rect x="1088.9" y="707.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1091.9" y="718.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.02%)</title><rect x="1089.1" y="723.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1092.1" y="734.0"></text>
</g>
<g>
<title>__libc_send (334 samples, 3.72%)</title><rect x="1089.4" y="723.0" width="43.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1092.4" y="734.0">__li..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (330 samples, 3.67%)</title><rect x="1089.9" y="707.0" width="43.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1092.9" y="718.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (330 samples, 3.67%)</title><rect x="1089.9" y="691.0" width="43.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1092.9" y="702.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (328 samples, 3.65%)</title><rect x="1090.2" y="675.0" width="43.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1093.2" y="686.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (328 samples, 3.65%)</title><rect x="1090.2" y="659.0" width="43.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1093.2" y="670.0">__sy..</text>
</g>
<g>
<title>sock_sendmsg (318 samples, 3.54%)</title><rect x="1090.8" y="643.0" width="41.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1093.8" y="654.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (310 samples, 3.45%)</title><rect x="1091.1" y="627.0" width="40.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1094.1" y="638.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (309 samples, 3.44%)</title><rect x="1091.2" y="611.0" width="40.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1094.2" y="622.0">tcp..</text>
</g>
<g>
<title>tcp_sendmsg_locked (303 samples, 3.37%)</title><rect x="1091.9" y="595.0" width="39.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1094.9" y="606.0">tcp..</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.02%)</title><rect x="1092.4" y="579.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1095.4" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="1092.4" y="563.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1095.4" y="574.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.02%)</title><rect x="1092.7" y="579.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1095.7" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (19 samples, 0.21%)</title><rect x="1093.2" y="579.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1096.2" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (16 samples, 0.18%)</title><rect x="1093.6" y="563.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1096.6" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (8 samples, 0.09%)</title><rect x="1093.7" y="547.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1096.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.04%)</title><rect x="1093.7" y="531.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1096.7" y="542.0"></text>
</g>
<g>
<title>memset (3 samples, 0.03%)</title><rect x="1094.4" y="531.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1097.4" y="542.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.03%)</title><rect x="1094.8" y="547.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1097.8" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.02%)</title><rect x="1095.3" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1098.3" y="558.0"></text>
</g>
<g>
<title>tcp_push (267 samples, 2.97%)</title><rect x="1095.8" y="579.0" width="35.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1098.8" y="590.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (267 samples, 2.97%)</title><rect x="1095.8" y="563.0" width="35.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1098.8" y="574.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (263 samples, 2.93%)</title><rect x="1096.4" y="547.0" width="34.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1099.4" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.02%)</title><rect x="1096.5" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1099.5" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (249 samples, 2.77%)</title><rect x="1096.8" y="531.0" width="32.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1099.8" y="542.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (247 samples, 2.75%)</title><rect x="1096.8" y="515.0" width="32.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1099.8" y="526.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (247 samples, 2.75%)</title><rect x="1096.8" y="499.0" width="32.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1099.8" y="510.0">__..</text>
</g>
<g>
<title>ip_local_out (244 samples, 2.72%)</title><rect x="1096.9" y="483.0" width="32.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1099.9" y="494.0">ip..</text>
</g>
<g>
<title>__ip_local_out (38 samples, 0.42%)</title><rect x="1096.9" y="467.0" width="5.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1099.9" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (35 samples, 0.39%)</title><rect x="1097.1" y="451.0" width="4.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1100.1" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.04%)</title><rect x="1097.4" y="435.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1100.4" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (4 samples, 0.04%)</title><rect x="1097.4" y="419.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1100.4" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (24 samples, 0.27%)</title><rect x="1097.9" y="435.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1100.9" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (22 samples, 0.24%)</title><rect x="1098.1" y="419.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1101.1" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (3 samples, 0.03%)</title><rect x="1098.9" y="403.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1101.9" y="414.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (2 samples, 0.02%)</title><rect x="1099.5" y="403.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1102.5" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (8 samples, 0.09%)</title><rect x="1099.8" y="403.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1102.8" y="414.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (3 samples, 0.03%)</title><rect x="1100.4" y="387.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1103.4" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (4 samples, 0.04%)</title><rect x="1101.2" y="435.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1104.2" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (2 samples, 0.02%)</title><rect x="1101.5" y="419.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1104.5" y="430.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (2 samples, 0.02%)</title><rect x="1101.5" y="403.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1104.5" y="414.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.02%)</title><rect x="1101.9" y="467.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1104.9" y="478.0"></text>
</g>
<g>
<title>ip_output (201 samples, 2.24%)</title><rect x="1102.1" y="467.0" width="26.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1105.1" y="478.0">i..</text>
</g>
<g>
<title>ip_finish_output (195 samples, 2.17%)</title><rect x="1102.7" y="451.0" width="25.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1105.7" y="462.0">i..</text>
</g>
<g>
<title>__ip_finish_output (194 samples, 2.16%)</title><rect x="1102.7" y="435.0" width="25.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1105.7" y="446.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (193 samples, 2.15%)</title><rect x="1102.8" y="419.0" width="25.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1105.8" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (170 samples, 1.89%)</title><rect x="1103.7" y="403.0" width="22.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1106.7" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.20 (170 samples, 1.89%)</title><rect x="1103.7" y="387.0" width="22.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1106.7" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (169 samples, 1.88%)</title><rect x="1103.8" y="371.0" width="22.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1106.8" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (168 samples, 1.87%)</title><rect x="1103.8" y="355.0" width="22.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1106.8" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (164 samples, 1.83%)</title><rect x="1104.4" y="339.0" width="21.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1107.4" y="350.0">n..</text>
</g>
<g>
<title>process_backlog (162 samples, 1.80%)</title><rect x="1104.6" y="323.0" width="21.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1107.6" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (161 samples, 1.79%)</title><rect x="1104.8" y="307.0" width="21.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1107.8" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (160 samples, 1.78%)</title><rect x="1104.9" y="291.0" width="21.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1107.9" y="302.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.06%)</title><rect x="1105.0" y="275.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1108.0" y="286.0"></text>
</g>
<g>
<title>ip_rcv (153 samples, 1.70%)</title><rect x="1105.7" y="275.0" width="20.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1108.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (3 samples, 0.03%)</title><rect x="1105.7" y="259.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1108.7" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (145 samples, 1.61%)</title><rect x="1106.1" y="259.0" width="19.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1109.1" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (143 samples, 1.59%)</title><rect x="1106.3" y="243.0" width="18.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1109.3" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (133 samples, 1.48%)</title><rect x="1106.7" y="227.0" width="17.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1109.7" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (133 samples, 1.48%)</title><rect x="1106.7" y="211.0" width="17.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1109.7" y="222.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.02%)</title><rect x="1107.0" y="195.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1110.0" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (129 samples, 1.44%)</title><rect x="1107.3" y="195.0" width="16.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1110.3" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.08%)</title><rect x="1107.7" y="179.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1110.7" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.04%)</title><rect x="1108.7" y="179.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1111.7" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.02%)</title><rect x="1108.8" y="163.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1111.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (113 samples, 1.26%)</title><rect x="1109.4" y="179.0" width="14.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1112.4" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (109 samples, 1.21%)</title><rect x="1109.9" y="163.0" width="14.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1112.9" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.07%)</title><rect x="1110.4" y="147.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1113.4" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.06%)</title><rect x="1110.5" y="131.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1113.5" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.04%)</title><rect x="1110.7" y="115.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1113.7" y="126.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.04%)</title><rect x="1110.7" y="99.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1113.7" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.03%)</title><rect x="1110.7" y="83.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1113.7" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.02%)</title><rect x="1111.3" y="147.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1114.3" y="158.0"></text>
</g>
<g>
<title>tcp_ack (24 samples, 0.27%)</title><rect x="1111.6" y="147.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1114.6" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (21 samples, 0.23%)</title><rect x="1111.9" y="131.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1114.9" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (15 samples, 0.17%)</title><rect x="1112.3" y="115.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1115.3" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.04%)</title><rect x="1112.3" y="99.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1115.3" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.03%)</title><rect x="1112.4" y="83.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1115.4" y="94.0"></text>
</g>
<g>
<title>skb_release_all (11 samples, 0.12%)</title><rect x="1112.8" y="99.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1115.8" y="110.0"></text>
</g>
<g>
<title>skb_release_data (11 samples, 0.12%)</title><rect x="1112.8" y="83.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1115.8" y="94.0"></text>
</g>
<g>
<title>skb_free_head (6 samples, 0.07%)</title><rect x="1113.4" y="67.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1116.4" y="78.0"></text>
</g>
<g>
<title>kfree (5 samples, 0.06%)</title><rect x="1113.6" y="51.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1116.6" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.02%)</title><rect x="1114.0" y="35.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1117.0" y="46.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.03%)</title><rect x="1114.7" y="147.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1117.7" y="158.0"></text>
</g>
<g>
<title>tcp_data_ready (65 samples, 0.72%)</title><rect x="1115.1" y="147.0" width="8.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1118.1" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (64 samples, 0.71%)</title><rect x="1115.3" y="131.0" width="8.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1118.3" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (62 samples, 0.69%)</title><rect x="1115.5" y="115.0" width="8.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1118.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (62 samples, 0.69%)</title><rect x="1115.5" y="99.0" width="8.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1118.5" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (62 samples, 0.69%)</title><rect x="1115.5" y="83.0" width="8.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1118.5" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.03%)</title><rect x="1123.8" y="147.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1126.8" y="158.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.02%)</title><rect x="1123.8" y="131.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1126.8" y="142.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.06%)</title><rect x="1124.3" y="227.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1127.3" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.03%)</title><rect x="1124.5" y="211.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1127.5" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.02%)</title><rect x="1124.6" y="195.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1127.6" y="206.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (2 samples, 0.02%)</title><rect x="1125.3" y="259.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1128.3" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.02%)</title><rect x="1125.5" y="259.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1128.5" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (16 samples, 0.18%)</title><rect x="1126.0" y="403.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1129.0" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (16 samples, 0.18%)</title><rect x="1126.0" y="387.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1129.0" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.09%)</title><rect x="1126.6" y="371.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1129.6" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.04%)</title><rect x="1127.0" y="355.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1130.0" y="366.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.02%)</title><rect x="1127.1" y="339.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1130.1" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.02%)</title><rect x="1127.1" y="323.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1130.1" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.02%)</title><rect x="1127.1" y="307.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1130.1" y="318.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.02%)</title><rect x="1127.9" y="371.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1130.9" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.02%)</title><rect x="1128.3" y="451.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1131.3" y="462.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.02%)</title><rect x="1128.5" y="467.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1131.5" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.02%)</title><rect x="1128.9" y="483.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1131.9" y="494.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.02%)</title><rect x="1129.6" y="531.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1132.6" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.07%)</title><rect x="1129.9" y="531.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1132.9" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.04%)</title><rect x="1130.1" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1133.1" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.03%)</title><rect x="1130.2" y="499.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1133.2" y="510.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.03%)</title><rect x="1130.2" y="483.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1133.2" y="494.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.02%)</title><rect x="1130.6" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1133.6" y="542.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.02%)</title><rect x="1130.9" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1133.9" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.04%)</title><rect x="1131.2" y="579.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1134.2" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.02%)</title><rect x="1131.2" y="563.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1134.2" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.02%)</title><rect x="1131.4" y="563.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1134.4" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.07%)</title><rect x="1131.8" y="627.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1134.8" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (6 samples, 0.07%)</title><rect x="1131.8" y="611.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1134.8" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.07%)</title><rect x="1131.8" y="595.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1134.8" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.06%)</title><rect x="1132.0" y="579.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1135.0" y="590.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (4 samples, 0.04%)</title><rect x="1132.1" y="563.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1135.1" y="574.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.02%)</title><rect x="1132.3" y="547.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1135.3" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.06%)</title><rect x="1132.6" y="643.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1135.6" y="654.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.06%)</title><rect x="1132.6" y="627.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1135.6" y="638.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.06%)</title><rect x="1132.6" y="611.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1135.6" y="622.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.04%)</title><rect x="1132.7" y="595.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1135.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValidatedParameters.validateParameters (40 samples, 0.45%)</title><rect x="1133.5" y="835.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1136.5" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ValidatedParameters.unpackReplicasParameter (38 samples, 0.42%)</title><rect x="1133.8" y="819.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1136.8" y="830.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (6 samples, 0.07%)</title><rect x="1134.1" y="803.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.1" y="814.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (5 samples, 0.06%)</title><rect x="1134.1" y="787.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1137.1" y="798.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (30 samples, 0.33%)</title><rect x="1134.8" y="803.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1137.8" y="814.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (13 samples, 0.14%)</title><rect x="1135.6" y="787.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1138.6" y="798.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (11 samples, 0.12%)</title><rect x="1135.9" y="771.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1138.9" y="782.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (11 samples, 0.12%)</title><rect x="1135.9" y="755.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1138.9" y="766.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (11 samples, 0.12%)</title><rect x="1135.9" y="739.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1138.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (11 samples, 0.12%)</title><rect x="1135.9" y="723.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1138.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.12%)</title><rect x="1135.9" y="707.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1138.9" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.12%)</title><rect x="1135.9" y="691.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1138.9" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="1137.1" y="675.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1140.1" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.10%)</title><rect x="1137.6" y="787.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1140.6" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.10%)</title><rect x="1137.6" y="771.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1140.6" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (9 samples, 0.10%)</title><rect x="1137.6" y="755.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1140.6" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (9 samples, 0.10%)</title><rect x="1137.6" y="739.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1140.6" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.10%)</title><rect x="1137.6" y="723.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1140.6" y="734.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (11 samples, 0.12%)</title><rect x="1138.8" y="867.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1141.8" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (11 samples, 0.12%)</title><rect x="1138.8" y="851.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1141.8" y="862.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$118/752700863.run (11 samples, 0.12%)</title><rect x="1138.8" y="835.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1141.8" y="846.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (11 samples, 0.12%)</title><rect x="1138.8" y="819.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.8" y="830.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (11 samples, 0.12%)</title><rect x="1138.8" y="803.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1141.8" y="814.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (11 samples, 0.12%)</title><rect x="1138.8" y="787.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1141.8" y="798.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (11 samples, 0.12%)</title><rect x="1138.8" y="771.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1141.8" y="782.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (11 samples, 0.12%)</title><rect x="1138.8" y="755.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1141.8" y="766.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (11 samples, 0.12%)</title><rect x="1138.8" y="739.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1141.8" y="750.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (11 samples, 0.12%)</title><rect x="1138.8" y="723.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1141.8" y="734.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (11 samples, 0.12%)</title><rect x="1138.8" y="707.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1141.8" y="718.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.06%)</title><rect x="1138.8" y="691.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1141.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.06%)</title><rect x="1138.8" y="675.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1141.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (4 samples, 0.04%)</title><rect x="1138.8" y="659.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1141.8" y="670.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (4 samples, 0.04%)</title><rect x="1138.8" y="643.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1141.8" y="654.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (2 samples, 0.02%)</title><rect x="1138.8" y="627.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1141.8" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (2 samples, 0.02%)</title><rect x="1138.8" y="611.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1141.8" y="622.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (2 samples, 0.02%)</title><rect x="1138.8" y="595.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1141.8" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (2 samples, 0.02%)</title><rect x="1138.8" y="579.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1141.8" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (2 samples, 0.02%)</title><rect x="1138.8" y="563.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1141.8" y="574.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (2 samples, 0.02%)</title><rect x="1138.8" y="547.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1141.8" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (2 samples, 0.02%)</title><rect x="1138.8" y="531.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1141.8" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (2 samples, 0.02%)</title><rect x="1138.8" y="515.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1141.8" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (2 samples, 0.02%)</title><rect x="1138.8" y="499.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1141.8" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (2 samples, 0.02%)</title><rect x="1138.8" y="483.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1141.8" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (2 samples, 0.02%)</title><rect x="1138.8" y="467.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1141.8" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (2 samples, 0.02%)</title><rect x="1138.8" y="451.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1141.8" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (2 samples, 0.02%)</title><rect x="1138.8" y="435.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1141.8" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (2 samples, 0.02%)</title><rect x="1138.8" y="419.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1141.8" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (2 samples, 0.02%)</title><rect x="1138.8" y="403.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1141.8" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (2 samples, 0.02%)</title><rect x="1138.8" y="387.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1141.8" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (2 samples, 0.02%)</title><rect x="1138.8" y="371.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1141.8" y="382.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (2 samples, 0.02%)</title><rect x="1139.0" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1142.0" y="638.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (5 samples, 0.06%)</title><rect x="1139.4" y="691.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1142.4" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (5 samples, 0.06%)</title><rect x="1139.4" y="675.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1142.4" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (5 samples, 0.06%)</title><rect x="1139.4" y="659.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.4" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (4 samples, 0.04%)</title><rect x="1139.4" y="643.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1142.4" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.04%)</title><rect x="1139.4" y="627.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1142.4" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.03%)</title><rect x="1139.6" y="611.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1142.6" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.03%)</title><rect x="1139.6" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1142.6" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.03%)</title><rect x="1139.6" y="579.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.6" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.03%)</title><rect x="1139.6" y="563.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1142.6" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.03%)</title><rect x="1139.6" y="547.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1142.6" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.03%)</title><rect x="1139.6" y="531.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1142.6" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (3 samples, 0.03%)</title><rect x="1139.6" y="515.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1142.6" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.02%)</title><rect x="1139.7" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1142.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.02%)</title><rect x="1139.7" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1142.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor32.invoke (2 samples, 0.02%)</title><rect x="1139.7" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.7" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (2 samples, 0.02%)</title><rect x="1139.7" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1142.7" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.02%)</title><rect x="1139.7" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1142.7" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.02%)</title><rect x="1139.7" y="419.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1142.7" y="430.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (318 samples, 3.54%)</title><rect x="1140.4" y="915.0" width="41.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1143.4" y="926.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.02%)</title><rect x="1140.6" y="899.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1143.6" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.02%)</title><rect x="1140.9" y="899.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1143.9" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.02%)</title><rect x="1140.9" y="883.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1143.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.02%)</title><rect x="1140.9" y="867.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1143.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (60 samples, 0.67%)</title><rect x="1141.1" y="899.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.1" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (55 samples, 0.61%)</title><rect x="1141.8" y="883.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1144.8" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.04%)</title><rect x="1143.0" y="867.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1146.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.42%)</title><rect x="1143.5" y="867.0" width="5.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1146.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="1143.5" y="851.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1146.5" y="862.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.03%)</title><rect x="1143.5" y="835.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1146.5" y="846.0"></text>
</g>
<g>
<title>epoll_wait (34 samples, 0.38%)</title><rect x="1144.0" y="851.0" width="4.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1147.0" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.23%)</title><rect x="1145.7" y="835.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1148.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.23%)</title><rect x="1145.7" y="819.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1148.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (16 samples, 0.18%)</title><rect x="1146.4" y="803.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1149.4" y="814.0"></text>
</g>
<g>
<title>do_epoll_wait (14 samples, 0.16%)</title><rect x="1146.5" y="787.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1149.5" y="798.0"></text>
</g>
<g>
<title>ep_poll (12 samples, 0.13%)</title><rect x="1146.8" y="771.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1149.8" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (5 samples, 0.06%)</title><rect x="1147.3" y="755.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1150.3" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.03%)</title><rect x="1147.6" y="739.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1150.6" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (3 samples, 0.03%)</title><rect x="1147.6" y="723.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1150.6" y="734.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.03%)</title><rect x="1147.6" y="707.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1150.6" y="718.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.02%)</title><rect x="1147.6" y="691.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1150.6" y="702.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.02%)</title><rect x="1148.1" y="755.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1151.1" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.02%)</title><rect x="1148.1" y="739.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1151.1" y="750.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="1148.1" y="723.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1151.1" y="734.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.02%)</title><rect x="1148.5" y="867.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1151.5" y="878.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.02%)</title><rect x="1148.8" y="867.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1151.8" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (252 samples, 2.80%)</title><rect x="1149.0" y="899.0" width="33.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1152.0" y="910.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (252 samples, 2.80%)</title><rect x="1149.0" y="883.0" width="33.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1152.0" y="894.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (159 samples, 1.77%)</title><rect x="1149.0" y="867.0" width="20.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1152.0" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (128 samples, 1.42%)</title><rect x="1149.9" y="851.0" width="16.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1152.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (128 samples, 1.42%)</title><rect x="1149.9" y="835.0" width="16.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1152.9" y="846.0"></text>
</g>
<g>
<title>RequestHandler1_handleEntityGet.handleRequest (120 samples, 1.34%)</title><rect x="1150.1" y="819.0" width="15.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1153.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.07%)</title><rect x="1150.1" y="803.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1153.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.02%)</title><rect x="1150.6" y="787.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1153.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="1150.6" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1153.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (12 samples, 0.13%)</title><rect x="1150.9" y="803.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1153.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 0.13%)</title><rect x="1150.9" y="787.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1153.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="1151.3" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1154.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.03%)</title><rect x="1151.3" y="755.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1154.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.03%)</title><rect x="1151.7" y="771.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1154.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.03%)</title><rect x="1151.7" y="755.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1154.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.03%)</title><rect x="1152.0" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.handleEntityGet (102 samples, 1.14%)</title><rect x="1152.4" y="803.0" width="13.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1155.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alexander/marashov/ServiceImpl.executeOrSendError (102 samples, 1.14%)</title><rect x="1152.4" y="787.0" width="13.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1155.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (100 samples, 1.11%)</title><rect x="1152.7" y="771.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1155.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (95 samples, 1.06%)</title><rect x="1153.0" y="755.0" width="12.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1156.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (5 samples, 0.06%)</title><rect x="1153.0" y="739.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1156.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.06%)</title><rect x="1153.0" y="723.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1156.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.06%)</title><rect x="1153.0" y="707.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1156.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.06%)</title><rect x="1153.0" y="691.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1156.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="1153.6" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1156.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="1153.6" y="723.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1156.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (87 samples, 0.97%)</title><rect x="1154.0" y="739.0" width="11.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1157.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (87 samples, 0.97%)</title><rect x="1154.0" y="723.0" width="11.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1157.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (87 samples, 0.97%)</title><rect x="1154.0" y="707.0" width="11.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1157.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (87 samples, 0.97%)</title><rect x="1154.0" y="691.0" width="11.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (87 samples, 0.97%)</title><rect x="1154.0" y="675.0" width="11.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1157.0" y="686.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.11%)</title><rect x="1154.3" y="659.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1157.3" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.06%)</title><rect x="1154.9" y="643.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1157.9" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (72 samples, 0.80%)</title><rect x="1155.6" y="659.0" width="9.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1158.6" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (67 samples, 0.75%)</title><rect x="1156.2" y="643.0" width="8.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1159.2" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (67 samples, 0.75%)</title><rect x="1156.2" y="627.0" width="8.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1159.2" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (65 samples, 0.72%)</title><rect x="1156.5" y="611.0" width="8.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1159.5" y="622.0"></text>
</g>
<g>
<title>do_futex (64 samples, 0.71%)</title><rect x="1156.6" y="595.0" width="8.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1159.6" y="606.0"></text>
</g>
<g>
<title>futex_wake (63 samples, 0.70%)</title><rect x="1156.8" y="579.0" width="8.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1159.8" y="590.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.02%)</title><rect x="1157.4" y="563.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1160.4" y="574.0"></text>
</g>
<g>
<title>wake_up_q (56 samples, 0.62%)</title><rect x="1157.7" y="563.0" width="7.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1160.7" y="574.0"></text>
</g>
<g>
<title>try_to_wake_up (56 samples, 0.62%)</title><rect x="1157.7" y="547.0" width="7.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1160.7" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (56 samples, 0.62%)</title><rect x="1157.7" y="531.0" width="7.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1160.7" y="542.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.03%)</title><rect x="1165.0" y="659.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1168.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (7 samples, 0.08%)</title><rect x="1165.8" y="819.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1168.8" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.08%)</title><rect x="1165.8" y="803.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1168.8" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.03%)</title><rect x="1165.8" y="787.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1168.8" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.04%)</title><rect x="1166.2" y="787.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1169.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.04%)</title><rect x="1166.2" y="771.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1169.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.04%)</title><rect x="1166.2" y="755.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1169.2" y="766.0"></text>
</g>
<g>
<title>RequestHandler1_handleEntityGet.handleRequest (2 samples, 0.02%)</title><rect x="1166.2" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1169.2" y="750.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="1166.5" y="739.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1169.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (18 samples, 0.20%)</title><rect x="1166.8" y="851.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1169.8" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.14%)</title><rect x="1167.0" y="835.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1170.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.14%)</title><rect x="1167.0" y="819.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1170.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1168.5" y="803.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1171.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1168.5" y="787.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1171.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.02%)</title><rect x="1168.5" y="771.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1171.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.03%)</title><rect x="1168.7" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1171.7" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="1169.2" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1172.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="1169.2" y="835.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1172.2" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (93 samples, 1.04%)</title><rect x="1169.9" y="867.0" width="12.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1172.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (87 samples, 0.97%)</title><rect x="1170.7" y="851.0" width="11.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1173.7" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (14 samples, 0.16%)</title><rect x="1170.8" y="835.0" width="1.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1173.8" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.02%)</title><rect x="1171.1" y="819.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.1" y="830.0"></text>
</g>
<g>
<title>__memmove_ssse3 (6 samples, 0.07%)</title><rect x="1171.4" y="819.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1174.4" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.04%)</title><rect x="1172.1" y="819.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1175.1" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.02%)</title><rect x="1172.4" y="803.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1175.4" y="814.0"></text>
</g>
<g>
<title>__GI___recv (66 samples, 0.73%)</title><rect x="1172.7" y="835.0" width="8.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1175.7" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (60 samples, 0.67%)</title><rect x="1173.3" y="819.0" width="7.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1176.3" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (4 samples, 0.04%)</title><rect x="1173.3" y="803.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1176.3" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (56 samples, 0.62%)</title><rect x="1173.8" y="803.0" width="7.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1176.8" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (53 samples, 0.59%)</title><rect x="1174.2" y="787.0" width="7.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1177.2" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (51 samples, 0.57%)</title><rect x="1174.2" y="771.0" width="6.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1177.2" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (45 samples, 0.50%)</title><rect x="1174.5" y="755.0" width="5.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1177.5" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (34 samples, 0.38%)</title><rect x="1174.6" y="739.0" width="4.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1177.6" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (33 samples, 0.37%)</title><rect x="1174.8" y="723.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1177.8" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.02%)</title><rect x="1175.4" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1178.4" y="718.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.02%)</title><rect x="1175.4" y="691.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1178.4" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.02%)</title><rect x="1175.4" y="675.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1178.4" y="686.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.02%)</title><rect x="1175.8" y="707.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1178.8" y="718.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.04%)</title><rect x="1176.2" y="707.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1179.2" y="718.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="1176.5" y="691.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1179.5" y="702.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.02%)</title><rect x="1176.5" y="675.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1179.5" y="686.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.03%)</title><rect x="1176.7" y="707.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1179.7" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (13 samples, 0.14%)</title><rect x="1177.1" y="707.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1180.1" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (12 samples, 0.13%)</title><rect x="1177.3" y="691.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1180.3" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.08%)</title><rect x="1177.9" y="675.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1180.9" y="686.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.02%)</title><rect x="1178.0" y="659.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1181.0" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.03%)</title><rect x="1178.4" y="659.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1181.4" y="670.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.03%)</title><rect x="1178.4" y="643.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1181.4" y="654.0"></text>
</g>
<g>
<title>security_socket_recvmsg (10 samples, 0.11%)</title><rect x="1179.1" y="739.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1182.1" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.08%)</title><rect x="1179.5" y="723.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1182.5" y="734.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.08%)</title><rect x="1179.5" y="707.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1182.5" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.08%)</title><rect x="1179.5" y="691.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1182.5" y="702.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (5 samples, 0.06%)</title><rect x="1179.8" y="675.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1182.8" y="686.0"></text>
</g>
<g>
<title>aa_profile_af_perm (4 samples, 0.04%)</title><rect x="1179.9" y="659.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1182.9" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.04%)</title><rect x="1180.4" y="755.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1183.4" y="766.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.03%)</title><rect x="1180.4" y="739.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1183.4" y="750.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="1180.4" y="723.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1183.4" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.02%)</title><rect x="1180.9" y="771.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1183.9" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.04%)</title><rect x="1181.6" y="835.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1184.6" y="846.0"></text>
</g>
<g>
<title>start_thread (55 samples, 0.61%)</title><rect x="1182.1" y="915.0" width="7.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1185.1" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (55 samples, 0.61%)</title><rect x="1182.1" y="899.0" width="7.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1185.1" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (55 samples, 0.61%)</title><rect x="1182.1" y="883.0" width="7.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.1" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (18 samples, 0.20%)</title><rect x="1182.1" y="867.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.1" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (14 samples, 0.16%)</title><rect x="1182.3" y="851.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.3" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (10 samples, 0.11%)</title><rect x="1182.3" y="835.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.3" y="846.0"></text>
</g>
<g>
<title>SpinPause (8 samples, 0.09%)</title><rect x="1182.5" y="819.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1185.5" y="830.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (3 samples, 0.03%)</title><rect x="1184.1" y="851.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.1" y="862.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (3 samples, 0.03%)</title><rect x="1184.1" y="835.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.1" y="846.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.68] (2 samples, 0.02%)</title><rect x="1184.1" y="819.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.1" y="830.0"></text>
</g>
<g>
<title>JavaThread::run() (35 samples, 0.39%)</title><rect x="1184.5" y="867.0" width="4.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.5" y="878.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (34 samples, 0.38%)</title><rect x="1184.5" y="851.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.5" y="862.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (34 samples, 0.38%)</title><rect x="1184.5" y="835.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.5" y="846.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (33 samples, 0.37%)</title><rect x="1184.5" y="819.0" width="4.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.5" y="830.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (33 samples, 0.37%)</title><rect x="1184.5" y="803.0" width="4.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.5" y="814.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (18 samples, 0.20%)</title><rect x="1184.5" y="787.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.5" y="798.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (2 samples, 0.02%)</title><rect x="1184.6" y="771.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.6" y="782.0"></text>
</g>
<g>
<title>Matcher::match() (3 samples, 0.03%)</title><rect x="1184.9" y="771.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.9" y="782.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (2 samples, 0.02%)</title><rect x="1185.0" y="755.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.0" y="766.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.02%)</title><rect x="1185.3" y="771.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.3" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.02%)</title><rect x="1185.3" y="755.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.3" y="766.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (2 samples, 0.02%)</title><rect x="1185.3" y="739.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.3" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (10 samples, 0.11%)</title><rect x="1185.5" y="771.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.5" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (3 samples, 0.03%)</title><rect x="1185.7" y="755.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.7" y="766.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.02%)</title><rect x="1185.7" y="739.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.7" y="750.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (2 samples, 0.02%)</title><rect x="1186.5" y="755.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.5" y="766.0"></text>
</g>
<g>
<title>Compile::Optimize() (11 samples, 0.12%)</title><rect x="1186.8" y="787.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.8" y="798.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (3 samples, 0.03%)</title><rect x="1186.8" y="771.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.8" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.03%)</title><rect x="1186.8" y="755.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.8" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.02%)</title><rect x="1187.5" y="771.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.5" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.02%)</title><rect x="1187.5" y="755.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.5" y="766.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.04%)</title><rect x="1187.8" y="771.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.8" y="782.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 0.04%)</title><rect x="1187.8" y="755.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.8" y="766.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (2 samples, 0.02%)</title><rect x="1188.0" y="739.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.0" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.04%)</title><rect x="1188.3" y="787.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.3" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.04%)</title><rect x="1188.3" y="771.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.3" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.04%)</title><rect x="1188.3" y="755.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.3" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.04%)</title><rect x="1188.3" y="739.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.3" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.04%)</title><rect x="1188.3" y="723.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.3" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.04%)</title><rect x="1188.3" y="707.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.3" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1188.4" y="691.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.4" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1188.4" y="675.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.4" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1188.4" y="659.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.4" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1188.4" y="643.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.4" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1188.4" y="627.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.4" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1188.4" y="611.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.4" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1188.4" y="595.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.4" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1188.4" y="579.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.4" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1188.4" y="563.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.4" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1188.4" y="547.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.4" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1188.4" y="531.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.4" y="542.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.02%)</title><rect x="1189.1" y="867.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.1" y="878.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.02%)</title><rect x="1189.1" y="851.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.1" y="862.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (2 samples, 0.02%)</title><rect x="1189.1" y="835.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.1" y="846.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.02%)</title><rect x="1189.1" y="819.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.1" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.06%)</title><rect x="1189.3" y="915.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.3" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (5 samples, 0.06%)</title><rect x="1189.3" y="899.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1192.3" y="910.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (5 samples, 0.06%)</title><rect x="1189.3" y="883.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1192.3" y="894.0"></text>
</g>
</g>
</svg>
